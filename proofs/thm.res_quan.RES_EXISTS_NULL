Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.res_quan
% (93464)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 755
% Passive clauses: 8765
% Generated clauses: 21710
% Final active clauses: 700
% Final passive clauses: 7371
% Input formulas: 49
% Initial clauses: 194
% 
% Duplicate literals: 398
% Trivial inequalities: 181
% Fw subsumption resolutions: 2093
% Fw demodulations: 975
% Bw demodulations: 54
% 
% Simple tautologies: 279
% Equational tautologies: 81
% Forward subsumptions: 8675
% 
% Binary resolution: 10747
% Factoring: 1754
% Forward superposition: 2352
% Backward superposition: 2652
% Self superposition: 34
% Equality factoring: 30
% Equality resolution: 48
% 
% Split clauses: 404
% Split components: 810
% SAT solver clauses: 779
% SAT solver unit clauses: 7
% SAT solver binary clauses: 209
% 
% Sat splits: 404
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 777
% TWLsolver calls for satisfiability: 472
% 
% Memory used [KB]: 9466
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.res_quan
% (93486)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 470
% Passive clauses: 3184
% Generated clauses: 14631
% Final active clauses: 428
% Final passive clauses: 2116
% Input formulas: 49
% Initial clauses: 194
% 
% Duplicate literals: 224
% Trivial inequalities: 93
% Fw subsumption resolutions: 1512
% Fw demodulations: 508
% Bw demodulations: 636
% Condensations: 454
% Global subsumptions: 18
% 
% Simple tautologies: 239
% Equational tautologies: 23
% Forward subsumptions: 5245
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 4678
% Factoring: 505
% Forward superposition: 1477
% Backward superposition: 1065
% Self superposition: 28
% Equality factoring: 26
% Equality resolution: 26
% 
% Split clauses: 29
% Split components: 59
% SAT solver clauses: 3103
% SAT solver unit clauses: 206
% SAT solver binary clauses: 81
% SAT solver learnt clauses: 36
% SAT solver learnt literals: 10
% 
% Sat splits: 29
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 3031
% TWLsolver calls for satisfiability: 1878
% 
% Memory used [KB]: 12409
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.res_quan
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.res_quan
% SZS output start Proof for thm.res_quan
fof(f32542,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f273,f480,f478,f476,f272,f479,f271,f477,f475,f1711,f1715,f1713,f1978,f1982,f1980,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f3937,f3876,f3939,f3880,f3941,f3883,f3943,f3886,f3949,f3893,f3951,f3896,f3953,f3899,f3955,f3902,f3957,f3905,f3959,f3908,f4085,f4086,f4087,f4088,f4090,f4092,f4093,f4094,f4095,f4096,f4097,f4098,f4099,f4100,f4101,f4102,f4103,f4104,f4105,f4106,f4107,f4108,f4109,f4110,f4111,f4112,f4113,f4114,f4176,f4178,f4180,f5900,f5903,f5901,f5938,f5941,f5939,f6283,f6286,f6284,f6382,f6385,f6383,f6447,f6450,f6448,f6489,f6492,f6490,f6604,f6605,f6612,f6609,f6606,f6607,f6615,f6608,f6617,f6610,f6614,f6629,f6630,f6646,f6644,f7008,f7011,f7009,f7051,f7054,f7052,f7251,f7254,f7252,f7295,f7298,f7296,f7934,f7937,f7935,f8463,f8465,f8467,f8561,f8563,f8565,f8564,f8567,f8568,f8571,f8572,f8574,f8586,f8587,f8588,f8589,f8590,f8591,f8592,f8593,f8569,f14308,f14311,f14310,f14352,f14354,f14356,f14364,f14366,f14368,f14370,f14372,f14374,f14376,f14378,f14380,f14382,f14386,f14388,f14390,f14392,f14394,f14396,f14398,f14400,f14402,f14404,f14406,f14408,f14434,f14436,f14462,f14464,f14477,f14490,f14522,f14584,f14682,f14684,f14797,f14799,f14801,f14805,f14807,f14816,f14818,f14824,f14826,f14865,f14867,f14870,f14873,f14875,f14881,f14883,f14894,f14896,f14928,f14930,f14932,f14934,f14936,f14940,f14942,f14944,f14947,f14949,f14953,f14956,f14990,f14992,f14994,f15000,f15002,f15004,f15125,f15147,f15170,f15192,f15194,f15213,f15227,f15258,f15260,f15262,f15264,f15266,f15268,f16687,f16688,f16689,f16690,f16691,f15321,f15323,f15325,f15327,f15329,f15332,f15334,f15336,f15338,f15340,f15342,f15344,f15346,f15348,f15351,f15353,f15355,f15357,f15419,f15421,f15423,f15425,f15428,f15430,f15432,f15434,f15453,f15471,f15496,f15498,f15503,f15513,f15515,f15517,f15519,f15529,f15531,f15556,f15558,f15564,f15574,f15576,f15578,f15580,f15590,f15592,f15605,f15615,f15636,f15638,f15640,f15666,f15668,f15684,f15686,f15713,f15715,f15731,f15733,f15762,f15764,f15780,f15782,f15796,f15814,f15828,f15846,f15864,f15882,f15906,f15908,f15910,f15936,f15938,f15940,f15942,f15955,f15957,f15959,f15972,f15974,f15987,f15989,f16002,f16004,f16017,f16019,f16037,f16053,f16081,f16083,f16085,f16099,f16101,f16103,f16105,f16107,f16109,f16111,f16163,f16165,f16167,f16169,f16171,f16173,f16175,f16209,f16212,f16214,f16216,f16250,f16253,f16255,f16257,f16279,f16281,f16302,f16304,f16306,f16321,f16336,f16351,f16353,f16368,f16370,f16384,f16400,f16418,f16434,f16449,f16451,f16453,f16455,f16457,f16459,f16461,f16475,f16477,f16479,f16481,f16483,f16485,f16497,f16500,f16503,f16507,f16515,f16519,f16523,f16529,f16534,f16537,f16544,f16547,f16563,f16565,f16567,f16571,f16573,f16585,f16595,f16601,f16605,f16692,f16693,f16694,f16695,f16696,f16697,f16698,f16699,f16700,f16701,f16702,f16703,f16704,f16705,f16706,f16707,f16708,f16709,f16710,f16711,f16712,f16713,f16714,f16715,f16716,f16717,f16718,f16719,f16720,f16721,f16722,f16723,f16724,f16725,f16726,f16727,f16728,f16729,f16730,f16731,f16732,f16733,f16734,f16735,f16736,f16737,f16738,f16739,f16740,f16741,f16742,f16743,f16744,f16745,f16746,f16747,f16748,f16749,f16750,f16751,f16752,f16753,f16754,f16755,f16756,f16757,f16758,f16759,f16760,f16761,f16762,f16763,f16764,f16765,f16766,f16767,f16768,f16769,f16770,f16771,f16772,f16773,f16774,f16775,f16776,f16777,f16778,f16779,f16780,f16781,f16782,f16783,f16784,f16785,f16786,f16787,f16788,f16789,f16790,f16791,f16792,f16793,f16794,f16795,f16796,f16797,f16798,f16799,f16800,f16801,f16802,f16803,f16804,f16805,f16806,f16807,f16808,f16809,f16810,f16811,f16812,f16813,f16814,f16815,f16816,f16817,f16818,f16819,f16820,f16821,f16822,f16823,f16824,f16825,f16826,f16827,f16828,f16829,f16830,f16831,f16832,f16833,f16834,f16835,f16836,f16837,f16838,f16839,f16840,f16841,f16842,f16843,f16844,f16845,f16846,f16847,f16848,f16849,f16850,f16851,f16852,f16853,f16854,f16855,f16856,f16857,f16858,f16859,f16860,f16861,f16862,f16863,f16864,f16865,f16866,f16867,f16868,f16869,f16870,f16871,f16872,f16873,f16874,f16875,f16876,f16877,f16878,f16879,f16880,f16881,f16882,f16883,f16884,f16885,f16886,f16887,f16888,f16889,f16890,f16891,f16892,f16893,f16894,f16895,f16896,f16897,f16898,f16899,f16900,f16901,f16902,f16903,f16904,f16905,f16906,f16907,f16908,f16909,f16910,f16911,f16912,f16913,f16914,f16915,f16916,f16917,f16918,f16919,f16920,f16921,f16922,f16923,f16924,f16925,f16926,f16927,f16928,f16929,f16930,f16931,f16932,f16933,f16934,f16935,f16936,f16937,f16938,f16939,f16940,f16941,f16942,f16943,f16944,f16945,f16946,f16947,f16948,f16949,f16950,f16951,f16952,f16953,f16954,f16955,f16956,f16957,f16958,f16959,f16960,f16961,f16962,f16963,f16964,f16965,f16966,f16967,f16968,f16969,f16970,f16971,f16972,f16973,f16974,f16975,f16976,f16977,f16978,f16979,f16980,f16981,f16982,f16983,f16984,f16985,f16986,f16987,f16988,f16989,f16990,f16991,f16992,f16993,f16994,f16995,f16996,f16997,f17001,f17002,f17004,f17005,f17008,f17011,f17013,f17016,f17017,f17020,f17021,f17022,f17024,f17026,f17028,f17030,f17032,f17034,f17036,f17037,f17038,f17039,f17040,f17041,f17048,f17049,f17051,f17052,f17053,f17054,f17056,f17057,f17058,f17059,f17060,f17061,f17062,f17063,f17064,f17065,f17066,f17067,f17068,f17069,f17070,f17071,f17080,f17081,f17082,f17083,f17084,f17085,f17086,f17087,f17088,f17089,f17090,f17091,f17092,f17093,f17094,f17095,f17096,f17097,f17098,f17099,f17100,f17101,f17102,f17103,f17104,f17105,f17106,f17107,f17108,f17109,f17110,f17111,f17112,f17113,f17114,f17115,f17116,f17117,f17118,f17119,f17120,f17121,f17122,f17123,f17124,f17125,f17126,f17127,f17128,f17129,f17130,f17131,f17132,f17133,f17134,f17135,f17136,f17137,f17138,f17139,f17140,f17141,f17142,f17143,f17144,f17145,f17146,f17147,f17148,f17149,f17150,f17151,f17152,f17153,f17154,f17155,f17156,f17157,f17158,f17159,f17160,f17161,f17162,f17163,f17164,f17165,f17166,f17167,f17168,f17169,f17170,f17171,f17172,f17173,f17174,f17175,f17176,f17177,f17178,f17179,f17180,f17181,f17182,f17183,f17184,f17185,f17186,f17187,f17188,f17189,f17190,f17191,f17192,f17193,f17194,f17195,f17196,f17197,f17198,f17199,f17200,f17201,f17202,f17203,f17204,f17205,f17206,f17207,f17208,f17209,f17210,f17211,f17212,f17213,f17214,f17215,f17216,f17217,f17218,f17219,f17220,f17221,f17222,f17223,f17224,f17225,f17226,f17227,f17228,f17229,f17230,f17231,f17232,f17233,f17234,f17235,f17236,f17237,f17238,f17239,f17240,f17241,f17242,f17243,f17244,f17245,f17246,f17247,f17248,f17249,f17250,f17251,f17252,f17253,f17254,f17255,f17256,f17257,f17258,f17259,f17260,f17261,f17262,f17263,f17264,f17265,f17266,f17267,f17268,f17269,f17270,f17271,f17272,f17273,f17274,f17275,f17276,f17277,f17278,f17279,f17280,f17281,f17282,f17283,f17284,f17285,f17286,f17287,f17288,f17289,f17290,f17291,f17292,f17293,f17294,f17295,f17296,f17297,f17298,f17299,f17300,f17301,f17302,f17303,f17304,f17305,f17306,f17307,f17308,f17309,f17310,f17311,f17312,f17313,f17314,f17315,f17316,f17317,f17318,f17319,f17320,f17321,f17322,f17323,f17324,f17325,f17326,f17327,f17328,f17329,f17330,f17331,f17332,f17333,f17334,f17335,f17336,f17337,f17338,f17421,f17424,f17422,f17489,f17491,f17490,f14309,f17564,f17567,f3877,f17565,f28525,f28871,f28872,f28876,f28878,f28879,f28880,f28881,f28882,f28883,f28884,f28885,f28886,f28888,f28892,f28894,f28896,f28898,f28899,f28900,f28901,f28902,f28903,f28904,f28905,f28906,f28907,f28908,f28909,f28910,f28911,f28912,f28913,f28914,f28915,f28916,f28917,f28918,f28919,f28920,f28921,f28922,f28923,f28924,f28925,f28926,f28927,f28928,f28929,f28930,f28931,f28932,f28933,f28934,f28935,f28936,f28937,f28938,f28939,f28940,f28941,f28942,f28943,f28944,f28945,f28946,f28947,f29077,f29079,f29081,f29083,f29085,f29087,f32073,f32074,f32078,f32080,f32081,f32082,f32083,f32084,f32085,f32086,f32087,f32088,f32090,f32094,f32096,f32098,f32100,f32101,f32102,f32103,f32104,f32105,f32106,f32107,f32108,f32110,f32112,f32129,f32229,f32231,f32233,f32235,f32237,f32239,f32241,f32243,f32245,f32252,f32253,f32259,f32260,f32261,f32262,f32263,f32264,f32265,f32266,f32268,f32270,f32272,f32274,f32275,f32277,f32279,f32280,f32281,f32282,f32283,f32284,f32285,f32287,f32289,f32291,f32293,f32294,f32295,f32297,f32299,f32300,f32302,f32304,f32306,f32308,f32309,f32310,f32311,f32314,f32315,f32319,f32320,f32321,f32322,f32324,f32325,f32326,f32327,f32328,f32329,f32330,f32331,f32332,f32334,f32336,f32338,f32340,f32342,f32344,f32345,f32347,f32349,f32351,f32353,f32355,f32357,f32358,f32359,f32360,f32361,f32362,f32364,f32365,f32367,f32368,f32369,f32370,f32372,f32373,f32376,f32378,f32380,f32382,f32384,f32386,f32388,f32390,f32392,f32394,f32395,f32396,f32398,f32399,f32400,f32401,f32403,f32404,f32405,f32406,f32407,f32408,f32410,f32412,f32414,f32416,f32418,f32420,f32421,f32423,f32425,f32427,f32428,f32430,f32432,f32434,f32435,f32436,f32437,f32438,f32439,f32440,f32441,f32442,f32443,f32444,f32445,f32446,f32447,f32448,f32449,f32452,f32453,f32454,f32455,f32458,f32459,f32460,f32461,f32464,f32465,f32466,f32467,f32468,f32469,f32471,f32473,f32475,f32477,f32479,f32481,f32482,f32483,f32484,f32486,f32488,f32490,f32493,f32495,f32497,f32499,f32500,f32501,f32502,f32503,f32504,f32505,f32506,f32507,f32508,f32509,f32510,f32511,f32512,f32513,f32514,f32515,f32516,f32517,f32518,f32519,f32520,f32521,f32522,f32523,f32526,f32527,f32528,f32529,f32530,f32531,f32537,f32539,f32541])).
fof(f32541,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32540,f274])).
fof(f274,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.TRUTH')).
fof(f32540,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31778,f31806])).
fof(f31806,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31805,f481])).
fof(f481,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f277,f274])).
fof(f277,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f170])).
fof(f170,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f25])).
fof(f25,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.NOT_CLAUSES|split|1')).
fof(f31805,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,'F_0'))) ) | ($spl0 | $spl2 | $spl4)),
  inference(condensation,[],[f31801])).
fof(f31801,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31800,f30624])).
fof(f30624,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(superposition,[],[f29116,f755])).
fof(f755,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f281,f281])).
fof(f281,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.res_quan.RES_EXISTS_NULL',aHL_BOOL_CASES)).
fof(f29116,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f29115,f478])).
fof(f29115,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f475,f8626])).
fof(f8626,plain,(
  s(bool,'T_0') = s(bool,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f363])).
fof(f363,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X11] : ((p(s(bool,X10)) => p(s(bool,X11))) => ((p(s(bool,X11)) => p(s(bool,X10))) => s(bool,X10) = s(bool,X11)))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.IMP_ANTISYM_AX')).
fof(f31800,plain,(
  ( ! [X2] : (s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(forward_demodulation,[],[f31686,f600])).
fof(f600,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f340,f297])).
fof(f297,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f68])).
fof(f68,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X9] : (s(bool,'F_0') = s(bool,X9) <=> ~p(s(bool,X9)))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.EQ_CLAUSES|split|2')).
fof(f340,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0] : ! [X1] : ~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : ! [X12] : ~p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),'const.pred_set.EMPTY_0'))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.pred_set.NOT_IN_EMPTY')).
fof(f31686,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f599,f30931,f818])).
fof(f818,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f810,f481])).
fof(f810,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f360,f281])).
fof(f360,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f142])).
fof(f30931,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0))))) ) | $spl2),
  inference(subsumption_resolution,[],[f30930,f481])).
fof(f30930,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f30929,f600])).
fof(f30929,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(sK12,sK20(X0,sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0))))) ) | $spl2),
  inference(forward_demodulation,[],[f30920,f478])).
fof(f30920,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) | p(s(bool,'const.bool.IN_2'(s(sK12,sK20(X0,sK13,sK12)),s(fun(sK12,bool),sK13))))) ) | $spl2),
  inference(superposition,[],[f345,f478])).
fof(f345,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK20(X2,X1,X0)),s(fun(X0,bool),X1))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | (p(s(bool,'const.bool.IN_2'(s(X0,sK20(X2,X1,X0)),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK20(X2,X1,X0))))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK20])],[f211])).
fof(f211,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X4] : (p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f210])).
fof(f210,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))) & (! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X6] : ! [X14,X17] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X14),s(fun(X6,bool),X17)))) <=> ? [X12] : (p(s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X14)))) & p(s(bool,happ(s(fun(X6,bool),X17),s(X6,X12))))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.RES_EXISTS_THM')).
fof(f599,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f340,f292])).
fof(f292,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.EQ_CLAUSES|split|0')).
fof(f31778,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))) ) | $spl2),
  inference(superposition,[],[f30931,f389])).
fof(f389,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X21,X22] : ! [X23,X24] : s(X22,X23) = s(X22,happ(s(fun(X21,X22),'_dst_x0_1'(s(X22,X23))),s(X21,X24)))),
  file('thm.res_quan.RES_EXISTS_NULL','_dst_x0_ax')).
fof(f32539,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32538,f274])).
fof(f32538,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31777,f31806])).
fof(f31777,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | $spl2),
  inference(superposition,[],[f30931,f478])).
fof(f32537,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31415,f31806])).
fof(f31415,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f292])).
fof(f32531,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430,f31427,f31424,f31423,f31422,f31421])).
fof(f31421,plain,(
  ( ! [X0] : (~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f379])).
fof(f31422,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f379])).
fof(f31423,plain,(
  ( ! [X0] : (~sP1('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f379])).
fof(f31424,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f379])).
fof(f31427,plain,(
  ( ! [X0] : (~sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f394])).
fof(f31430,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f493,f489,f496,f30931,f396])).
fof(f31431,plain,(
  ( ! [X0] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f492,f489,f496,f30931,f396])).
fof(f31434,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f609,f607,f496,f30931,f396])).
fof(f31435,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f492,f607,f496,f30931,f396])).
fof(f31437,plain,(
  ( ! [X0] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f493,f489,f8669,f30931,f396])).
fof(f31438,plain,(
  ( ! [X0] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8668,f489,f8669,f30931,f396])).
fof(f31441,plain,(
  ( ! [X2,X0,X1] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f609,f607,f8669,f30931,f396])).
fof(f31442,plain,(
  ( ! [X2,X0,X1] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8668,f607,f8669,f30931,f396])).
fof(f31443,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f493,f488,f498,f30931,f397])).
fof(f31445,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f609,f488,f498,f30931,f397])).
fof(f31446,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f493,f489,f498,f30931,f397])).
fof(f31448,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f609,f607,f498,f30931,f397])).
fof(f31449,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,'F_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f493,f8655,f8670,f30931,f397])).
fof(f31451,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f609,f8655,f8670,f30931,f397])).
fof(f31452,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,'F_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f493,f489,f8670,f30931,f397])).
fof(f31454,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f609,f607,f8670,f30931,f397])).
fof(f31463,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f400])).
fof(f31464,plain,(
  ( ! [X2,X0,X1] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f401])).
fof(f31465,plain,(
  ( ! [X0] : (~sP3('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f402])).
fof(f31472,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f404])).
fof(f31473,plain,(
  ( ! [X2,X0,X1] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f405])).
fof(f31474,plain,(
  ( ! [X0] : (~sP2('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f406])).
fof(f31475,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f406])).
fof(f31476,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f406])).
fof(f31477,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f406])).
fof(f31482,plain,(
  ( ! [X0] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f406])).
fof(f31483,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f406])).
fof(f31484,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f406])).
fof(f31485,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f406])).
fof(f31490,plain,(
  ( ! [X0] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f406])).
fof(f31491,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f406])).
fof(f31492,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f406])).
fof(f31493,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f406])).
fof(f31498,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f523,f30931,f410])).
fof(f31499,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f599,f30931,f410])).
fof(f31500,plain,(
  ( ! [X0] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f523,f30931,f410])).
fof(f31501,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f599,f30931,f410])).
fof(f31505,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,'T_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8626,f30931,f413])).
fof(f31506,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X2))),s(X1,X3)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f389,f30931,f413])).
fof(f31510,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',sK14)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8626,f30931,f413])).
fof(f31511,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X1))),s(X2,X3)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f389,f30931,f413])).
fof(f31512,plain,(
  ( ! [X0,X1] : (~sP7('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f415])).
fof(f31516,plain,(
  ( ! [X0,X1] : (~sP7('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f416])).
fof(f31520,plain,(
  ( ! [X0] : (~sP6('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f421])).
fof(f31527,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f423])).
fof(f31528,plain,(
  ( ! [X2,X0,X1] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f424])).
fof(f31529,plain,(
  ( ! [X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f425])).
fof(f31530,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f425])).
fof(f31531,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f425])).
fof(f31532,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f425])).
fof(f31536,plain,(
  ( ! [X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0',X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f426])).
fof(f31537,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f426])).
fof(f31538,plain,(
  ( ! [X0,X1] : (sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f426])).
fof(f31539,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f426])).
fof(f31544,plain,(
  ( ! [X0,X1] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f431])).
fof(f31545,plain,(
  ( ! [X0,X1] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f432])).
fof(f31562,plain,(
  ( ! [X0] : (sP9('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f509,f30931,f437])).
fof(f31563,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f509,f30931,f437])).
fof(f31569,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f613,f30931,f437])).
fof(f31570,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X3)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f613,f30931,f437])).
fof(f31573,plain,(
  ( ! [X0] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f509,f30931,f437])).
fof(f31574,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f509,f30931,f437])).
fof(f31580,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f613,f30931,f437])).
fof(f31581,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X3)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f613,f30931,f437])).
fof(f31582,plain,(
  ( ! [X0] : (~sP8('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f481,f30931,f438])).
fof(f31583,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f30931,f438])).
fof(f31591,plain,(
  ( ! [X0] : (~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f481,f30931,f438])).
fof(f31592,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f30931,f438])).
fof(f31600,plain,(
  ( ! [X2,X0,X1] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f441])).
fof(f31601,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f442])).
fof(f31602,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f442])).
fof(f31603,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f442])).
fof(f31604,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f442])).
fof(f31605,plain,(
  ( ! [X0] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f442])).
fof(f31606,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f442])).
fof(f31607,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f442])).
fof(f31608,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f442])).
fof(f31611,plain,(
  ( ! [X0] : (sP9('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f481,f30931,f442])).
fof(f31612,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f481,f30931,f442])).
fof(f31613,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f30931,f442])).
fof(f31614,plain,(
  ( ! [X2,X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f30931,f442])).
fof(f31625,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f448])).
fof(f31626,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f448])).
fof(f31631,plain,(
  ( ! [X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f448])).
fof(f31632,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f448])).
fof(f31633,plain,(
  ( ! [X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f449])).
fof(f31640,plain,(
  ( ! [X0] : (sP11('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f513,f30931,f454])).
fof(f31643,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f615,f30931,f454])).
fof(f31644,plain,(
  ( ! [X0] : (~sP10('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f455])).
fof(f31649,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f456])).
fof(f31650,plain,(
  ( ! [X2,X0,X1] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,X2)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f458])).
fof(f31651,plain,(
  ( ! [X0] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0','T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f274,f30931,f459])).
fof(f31652,plain,(
  ( ! [X0,X1] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f274,f30931,f459])).
fof(f31653,plain,(
  ( ! [X0] : (sP11('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f274,f30931,f459])).
fof(f31654,plain,(
  ( ! [X0,X1] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f274,f30931,f459])).
fof(f31657,plain,(
  ( ! [X0,X1] : (sP11('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f30931,f460])).
fof(f31663,plain,(
  ( ! [X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f503,f30931,f467])).
fof(f31665,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f611,f30931,f467])).
fof(f31666,plain,(
  ( ! [X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0',X1)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f504,f30931,f467])).
fof(f31668,plain,(
  ( ! [X2,X0,X3,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) ) | $spl2),
  inference(unit_resulting_resolution,[],[f612,f30931,f467])).
fof(f31669,plain,(
  ( ! [X0] : (~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f482])).
fof(f31670,plain,(
  ( ! [X0,X1] : (~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f482])).
fof(f31677,plain,(
  ( ! [X0] : (~sP0('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f30931,f482])).
fof(f31678,plain,(
  ( ! [X0,X1] : (~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f30931,f482])).
fof(f32242,plain,(
  ( ! [X2,X0] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X2)),sK14)) ) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31803,f31806])).
fof(f31803,plain,(
  ( ! [X2,X0] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X2)),sK14)) ) | ($spl2 | $spl4)),
  inference(backward_demodulation,[],[f31800,f31772])).
fof(f32240,plain,(
  ( ! [X2,X0] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X2)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31802,f31806])).
fof(f31802,plain,(
  ( ! [X2,X0] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X2)))) ) | ($spl2 | $spl4)),
  inference(backward_demodulation,[],[f31800,f31771])).
fof(f32238,plain,(
  ( ! [X2,X0,X5] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X5)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32036,f31806])).
fof(f32036,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X5)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7555])).
fof(f32236,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32035,f31806])).
fof(f32035,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X5,X6)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7516])).
fof(f32234,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32034,f31806])).
fof(f32034,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f1776])).
fof(f32232,plain,(
  ( ! [X6,X2,X0,X3,X1] : (s(fun(X0,bool),X6) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32033,f31806])).
fof(f32033,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X4,X5)),X6,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X6) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7567])).
fof(f32230,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32032,f31806])).
fof(f32032,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f1777])).
fof(f32228,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32031,f31806])).
fof(f32031,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f344])).
fof(f32111,plain,(
  ( ! [X0] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31916,f31806])).
fof(f31916,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X0,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f31208])).
fof(f32109,plain,(
  ( ! [X0] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31915,f31806])).
fof(f31915,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X0,sK13,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f31206])).
fof(f31911,plain,(
  ( ! [X68,X66,X67,X65] : (sP4('T_0',happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X67,X68)),'const.bool.IN_2'(s(X65,X66),s(fun(X65,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f24866])).
fof(f31905,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),sK14)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f17438])).
fof(f31902,plain,(
  ( ! [X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f14257])).
fof(f31901,plain,(
  ( ! [X45,X43,X46,X44] : (sP4(sK14,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f11835])).
fof(f31896,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f9763])).
fof(f31893,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)),'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f9722])).
fof(f32099,plain,(
  ( ! [X2,X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31889,f31806])).
fof(f31889,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),'const.pred_set.EMPTY_0',X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7593])).
fof(f32097,plain,(
  ( ! [X0,X3] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X3)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31887,f31806])).
fof(f31887,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X1,X2)),X3,X0)),s(fun(X0,bool),X3))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X3)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7561])).
fof(f32095,plain,(
  ( ! [X2,X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31886,f31806])).
fof(f31886,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19('const.pred_set.EMPTY_0',happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7542])).
fof(f32093,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31884,f31806])).
fof(f31884,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X1,happ(s(fun(X2,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X2,X3)),X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f7510])).
fof(f32089,plain,(
  ( ! [X38] : (s(bool,'F_0') = s(bool,X38)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31841,f31806])).
fof(f31841,plain,(
  ( ! [X39,X37,X38] : (s(bool,'T_0') != s(bool,happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,X38))),s(X37,X39))) | s(bool,'F_0') = s(bool,X38)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f6160])).
fof(f31834,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2319])).
fof(f31832,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2297])).
fof(f31831,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2286])).
fof(f31829,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2279])).
fof(f31828,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2253])).
fof(f31826,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2227])).
fof(f31825,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2217])).
fof(f31823,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2207])).
fof(f32079,plain,(
  ( ! [X8,X7] : (s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31822,f7477])).
fof(f31822,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X7,sK19('const.pred_set.EMPTY_0',X8,X7)),s(fun(X7,bool),X8))) | s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2121])).
fof(f32077,plain,(
  ( ! [X6,X5] : (s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31821,f7502])).
fof(f31821,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X5,sK19(X6,'const.pred_set.EMPTY_0',X5)),s(fun(X5,bool),X6))) | s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f2120])).
fof(f32072,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31807,f31806])).
fof(f31807,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f296])).
fof(f31689,plain,(
  ( ! [X2,X0,X1] : (~sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f1241])).
fof(f31694,plain,(
  ( ! [X2,X0,X1] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f1242])).
fof(f31699,plain,(
  ( ! [X2,X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)),'T_0')) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f274,f30931,f1244])).
fof(f31749,plain,(
  ( ! [X0] : (sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f30931,f9577])).
fof(f31750,plain,(
  ( ! [X0] : (sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f30931,f9578])).
fof(f31751,plain,(
  ( ! [X0] : (~sP4('T_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f30931,f9579])).
fof(f31755,plain,(
  ( ! [X0] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',sK14)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f30931,f9580])).
fof(f31756,plain,(
  ( ! [X0] : (~sP9(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f30931,f9581])).
fof(f31760,plain,(
  ( ! [X0] : (~sP9(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'F_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f30931,f9581])).
fof(f31761,plain,(
  ( ! [X0,X1] : (~sP9(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f30931,f30931,f9581])).
fof(f31764,plain,(
  ( ! [X0] : (~sP11(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0')) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f30931,f9582])).
fof(f31767,plain,(
  ( ! [X2,X0,X1] : (~sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f30931,f9591])).
fof(f31771,plain,(
  ( ! [X2,X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))),s(X0,X2)))) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f30931,f9878])).
fof(f31772,plain,(
  ( ! [X2,X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))),s(X0,X2)),sK14)) ) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f30931,f9913])).
fof(f31208,plain,(
  ( ! [X0] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X0,sK12)),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(forward_demodulation,[],[f31207,f478])).
fof(f31207,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X0,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X0)) ) | $spl2),
  inference(forward_demodulation,[],[f31197,f600])).
fof(f31197,plain,(
  ( ! [X0] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X0,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X0,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X0)) ) | $spl2),
  inference(superposition,[],[f344,f478])).
fof(f31206,plain,(
  ( ! [X0] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X0) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X0,sK13,sK12)),s(fun(sK12,bool),X0)))) ) | $spl2),
  inference(forward_demodulation,[],[f31205,f478])).
fof(f31205,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X0,sK13,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X0)) ) | $spl2),
  inference(forward_demodulation,[],[f31185,f600])).
fof(f31185,plain,(
  ( ! [X0] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(X0,sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(X0,sK13,sK12)),s(fun(sK12,bool),X0))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X0)) ) | $spl2),
  inference(superposition,[],[f344,f478])).
fof(f30922,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,'const.bool.IN_2'(s(sK12,sK20(sK13,X0,sK12)),s(fun(sK12,bool),X0))))) ) | $spl2),
  inference(superposition,[],[f345,f478])).
fof(f30353,plain,(
  s(bool,'T_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f363])).
fof(f30355,plain,(
  ( ! [X0] : (sP0(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f365])).
fof(f30356,plain,(
  ( ! [X0] : (sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f366])).
fof(f30357,plain,(
  ~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f380])).
fof(f30359,plain,(
  ~sP1('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f380])).
fof(f30360,plain,(
  ~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f29116,f380])).
fof(f30361,plain,(
  sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f381])).
fof(f30362,plain,(
  sP1('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f384])).
fof(f30365,plain,(
  ~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f394])).
fof(f30366,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f394])).
fof(f30374,plain,(
  sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f492,f488,f498,f29116,f395])).
fof(f30375,plain,(
  sP5(sK14,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8668,f488,f498,f29116,f395])).
fof(f30376,plain,(
  sP5('T_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f492,f8655,f8670,f29116,f395])).
fof(f30377,plain,(
  sP5(sK14,sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8668,f8655,f8670,f29116,f395])).
fof(f30384,plain,(
  ~sP4('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f398])).
fof(f30385,plain,(
  ~sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f398])).
fof(f30391,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f399])).
fof(f30392,plain,(
  ~sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f402])).
fof(f30398,plain,(
  ~sP3('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f402])).
fof(f30399,plain,(
  ~sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f402])).
fof(f30404,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f403])).
fof(f30405,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f407])).
fof(f30406,plain,(
  ( ! [X0,X1] : (sP2(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f408])).
fof(f30407,plain,(
  ( ! [X0,X1] : (sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f409])).
fof(f30411,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14,'T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8626,f29116,f411])).
fof(f30412,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f389,f29116,f411])).
fof(f30416,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',sK14) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8626,f29116,f411])).
fof(f30417,plain,(
  ( ! [X2,X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f389,f29116,f411])).
fof(f30418,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f523,f29116,f412])).
fof(f30419,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f599,f29116,f412])).
fof(f30420,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f523,f29116,f412])).
fof(f30421,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f599,f29116,f412])).
fof(f30422,plain,(
  ( ! [X0] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f415])).
fof(f30423,plain,(
  ( ! [X0] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0',X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f416])).
fof(f30426,plain,(
  sP7(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8704,f29116,f417])).
fof(f30432,plain,(
  sP7(sK14,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8704,f29116,f417])).
fof(f30433,plain,(
  sP7(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f8704,f29116,f417])).
fof(f30436,plain,(
  ~sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f421])).
fof(f30442,plain,(
  ~sP6('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f421])).
fof(f30443,plain,(
  ~sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f421])).
fof(f30448,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f422])).
fof(f30449,plain,(
  sP7('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f29116,f427])).
fof(f30454,plain,(
  sP7('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f29116,f427])).
fof(f30456,plain,(
  sP7('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f29116,f427])).
fof(f30459,plain,(
  sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f29116,f427])).
fof(f30460,plain,(
  sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f274,f29116,f427])).
fof(f30461,plain,(
  sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f29116,f427])).
fof(f30462,plain,(
  sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f29116,f29116,f427])).
fof(f30467,plain,(
  ~sP7('F_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f430])).
fof(f30468,plain,(
  ~sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f430])).
fof(f30471,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f431])).
fof(f30476,plain,(
  ( ! [X0] : (~sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f432])).
fof(f30485,plain,(
  ~sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f29116,f438])).
fof(f30490,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f439])).
fof(f30491,plain,(
  ( ! [X0,X1] : (sP8(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f440])).
fof(f30492,plain,(
  ( ! [X0] : (sP9('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f443])).
fof(f30497,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f29116,f443])).
fof(f30498,plain,(
  ( ! [X0] : (sP9('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f444])).
fof(f30503,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f29116,f444])).
fof(f30504,plain,(
  ~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f29116,f445])).
fof(f30505,plain,(
  ( ! [X0] : (~sP11('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f449])).
fof(f30528,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f615,f29116,f454])).
fof(f30529,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f274,f29116,f455])).
fof(f30535,plain,(
  ~sP10('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f455])).
fof(f30536,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f455])).
fof(f30541,plain,(
  ( ! [X0,X1] : (sP10(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f457])).
fof(f30542,plain,(
  sP11('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f29116,f459])).
fof(f30546,plain,(
  ( ! [X0] : (sP11('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f29116,f461])).
fof(f30550,plain,(
  ( ! [X0] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f29116,f461])).
fof(f30555,plain,(
  ~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f462])).
fof(f30556,plain,(
  ~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f462])).
fof(f30557,plain,(
  ( ! [X0] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f512,f29116,f465])).
fof(f30558,plain,(
  ( ! [X0] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f510,f29116,f465])).
fof(f30559,plain,(
  ( ! [X2,X0,X1] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f614,f29116,f465])).
fof(f30560,plain,(
  ( ! [X0] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14,X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8773,f29116,f465])).
fof(f30561,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'T_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f506,f29116,f466])).
fof(f30562,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,sK14)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8734,f29116,f466])).
fof(f30563,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f508,f29116,f466])).
fof(f30564,plain,(
  ( ! [X0] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14,X0)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8735,f29116,f466])).
fof(f30565,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X1,X2)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f1237])).
fof(f30566,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),X2)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f1238])).
fof(f30567,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f1239])).
fof(f30568,plain,(
  ( ! [X0,X1] : (sP1('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f1240])).
fof(f30569,plain,(
  ( ! [X0,X1] : (~sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1241])).
fof(f30577,plain,(
  ( ! [X0,X1] : (~sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1241])).
fof(f30578,plain,(
  ( ! [X0,X1] : (~sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f1241])).
fof(f30581,plain,(
  ( ! [X0,X1] : (~sP7('F_0','T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1242])).
fof(f30585,plain,(
  ( ! [X0,X1] : (~sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1242])).
fof(f30586,plain,(
  ( ! [X0,X1] : (~sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f1242])).
fof(f30587,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0','F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f29116,f1243])).
fof(f30588,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0','T_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1244])).
fof(f30590,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f29116,f1244])).
fof(f30591,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f29116,f481,f29116,f1244])).
fof(f30609,plain,(
  ~sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14,'F_0') | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9579])).
fof(f30612,plain,(
  ~sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9580])).
fof(f30613,plain,(
  ~sP11(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9582])).
fof(f30616,plain,(
  ( ! [X0,X1] : (~sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9591])).
fof(f30622,plain,(
  ( ! [X0,X1] : (~sP7('F_0',sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)))) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9592])).
fof(f30623,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0',sK14)) ) | ($spl0 | $spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f29116,f9595])).
fof(f296,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f174])).
fof(f1228,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2))) | s(bool,'F_0') = s(bool,X1)) )),
  inference(superposition,[],[f389,f281])).
fof(f1485,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | s(bool,'T_0') = s(bool,sK15(X0,bool))) )),
  inference(superposition,[],[f334,f281])).
fof(f1501,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(bool,bool),X0),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),X0),s(bool,X1)))) | s(bool,'T_0') = s(bool,sK16(X0,bool))) )),
  inference(superposition,[],[f335,f281])).
fof(f1705,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK28(X0,X1,X2,bool))) )),
  inference(superposition,[],[f390,f281])).
fof(f1706,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(X0,sK28(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,g(s(X0,sK28(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f390,f281])).
fof(f1747,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1)))) | ~p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X0)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X1),s(fun(bool,bool),X2)))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f347,f281])).
fof(f1748,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X5),s(bool,'F_0')))) | ~p(s(bool,'const.bool.IN_2'(s(bool,X3),s(fun(bool,bool),X4)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X4),s(fun(bool,bool),X5)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f347,f281])).
fof(f1769,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X2)))) )),
  inference(superposition,[],[f344,f281])).
fof(f1770,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X0))) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,bool))) )),
  inference(superposition,[],[f344,f281])).
fof(f1772,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f344,f281])).
fof(f2120,plain,(
  ( ! [X6,X5] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X5,sK19(X6,'const.pred_set.EMPTY_0',X5)),s(fun(X5,bool),X6))) | s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) )),
  inference(superposition,[],[f344,f600])).
fof(f2121,plain,(
  ( ! [X8,X7] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X7,sK19('const.pred_set.EMPTY_0',X8,X7)),s(fun(X7,bool),X8))) | s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) )),
  inference(superposition,[],[f344,f600])).
fof(f2207,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f493,f489,f1214,f397])).
fof(f2213,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1214,f281])).
fof(f2217,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f1214,f600])).
fof(f2227,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X2,X3)),'F_0')) )),
  inference(forward_demodulation,[],[f2209,f600])).
fof(f2209,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(X2,X3)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f609,f607,f1214,f397])).
fof(f2249,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1215,f281])).
fof(f2253,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f1215,f600])).
fof(f2279,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f494,f490,f1216,f396])).
fof(f2282,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1216,f281])).
fof(f2286,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X12,X13)))) )),
  inference(superposition,[],[f1216,f600])).
fof(f2297,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(forward_demodulation,[],[f2276,f600])).
fof(f2276,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f610,f490,f1216,f397])).
fof(f2315,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1217,f281])).
fof(f2319,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X12,X13)))) )),
  inference(superposition,[],[f1217,f600])).
fof(f6002,plain,(
  ( ! [X54,X52,X55,X53,X51] : (s(bool,'T_0') = s(bool,happ(s(fun(X54,bool),'_dst_x0_1'(s(bool,X52))),s(X54,X55))) | s(bool,'F_0') = s(bool,happ(s(fun(X51,bool),'_dst_x0_1'(s(bool,X52))),s(X51,X53)))) )),
  inference(superposition,[],[f1228,f389])).
fof(f6008,plain,(
  ( ! [X14,X15,X16] : (s(bool,X14) = s(bool,happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X15))),s(bool,X14))) | s(bool,'F_0') = s(bool,X15) | s(bool,X14) = s(bool,X16) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f1228,f755])).
fof(f6057,plain,(
  ( ! [X142,X140,X143,X141,X139] : (~sP5('F_0',happ(s(fun(X142,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X142,X143)),happ(s(fun(X139,bool),'_dst_x0_1'(s(bool,X140))),s(X139,X141))) | s(bool,'F_0') = s(bool,X140)) )),
  inference(superposition,[],[f1214,f1228])).
fof(f6058,plain,(
  ( ! [X146,X144,X147,X145,X148] : (sP5('T_0',happ(s(fun(X147,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X147,X148)),happ(s(fun(X144,bool),'_dst_x0_1'(s(bool,X145))),s(X144,X146))) | s(bool,'F_0') = s(bool,X145)) )),
  inference(superposition,[],[f1215,f1228])).
fof(f6059,plain,(
  ( ! [X152,X151,X149,X153,X150] : (~sP5('F_0',happ(s(fun(X149,bool),'_dst_x0_1'(s(bool,X150))),s(X149,X151)),happ(s(fun(X152,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X152,X153))) | s(bool,'F_0') = s(bool,X150)) )),
  inference(superposition,[],[f1216,f1228])).
fof(f6060,plain,(
  ( ! [X158,X156,X154,X157,X155] : (sP5('T_0',happ(s(fun(X154,bool),'_dst_x0_1'(s(bool,X155))),s(X154,X156)),happ(s(fun(X157,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X157,X158))) | s(bool,'F_0') = s(bool,X155)) )),
  inference(superposition,[],[f1217,f1228])).
fof(f6160,plain,(
  ( ! [X39,X37,X38] : (s(bool,'F_0') != s(bool,happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,X38))),s(X37,X39))) | s(bool,'F_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f6035,f274])).
fof(f6035,plain,(
  ( ! [X39,X37,X38] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,X38))),s(X37,X39))) | s(bool,'F_0') = s(bool,X38)) )),
  inference(superposition,[],[f296,f1228])).
fof(f6161,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK21(X47,happ(s(fun(X43,bool),'_dst_x0_1'(s(bool,X44))),s(X43,X45)),X46))))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f6037,f274])).
fof(f6037,plain,(
  ( ! [X47,X45,X43,X48,X46,X44] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK21(X47,happ(s(fun(X43,bool),'_dst_x0_1'(s(bool,X44))),s(X43,X45)),X46))))) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f349,f1228])).
fof(f6162,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~p(s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) | p(s(bool,happ(s(fun(X52,bool),X53),s(X52,sK22(X53,happ(s(fun(X49,bool),'_dst_x0_1'(s(bool,X50))),s(X49,X51)),X52))))) | s(bool,'F_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f6038,f274])).
fof(f6038,plain,(
  ( ! [X54,X52,X50,X53,X51,X49] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X52,bool),X53),s(X52,X54)))) | p(s(bool,happ(s(fun(X52,bool),X53),s(X52,sK22(X53,happ(s(fun(X49,bool),'_dst_x0_1'(s(bool,X50))),s(X49,X51)),X52))))) | s(bool,'F_0') = s(bool,X50)) )),
  inference(superposition,[],[f351,f1228])).
fof(f6163,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK23(happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X56))),s(X55,X57)),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60)))) | s(bool,'F_0') = s(bool,X56)) )),
  inference(subsumption_resolution,[],[f6039,f274])).
fof(f6039,plain,(
  ( ! [X59,X57,X60,X58,X56,X55] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X58,bool),X59),s(X58,sK23(happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X56))),s(X55,X57)),X59,X58))))) | ~p(s(bool,happ(s(fun(X58,bool),X59),s(X58,X60)))) | s(bool,'F_0') = s(bool,X56)) )),
  inference(superposition,[],[f352,f1228])).
fof(f6164,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (p(s(bool,happ(s(fun(X64,bool),X65),s(X64,sK24(happ(s(fun(X61,bool),'_dst_x0_1'(s(bool,X62))),s(X61,X63)),X65,X64))))) | ~p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66)))) | s(bool,'F_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f6040,f274])).
fof(f6040,plain,(
  ( ! [X61,X66,X64,X62,X65,X63] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X64,bool),X65),s(X64,sK24(happ(s(fun(X61,bool),'_dst_x0_1'(s(bool,X62))),s(X61,X63)),X65,X64))))) | ~p(s(bool,happ(s(fun(X64,bool),X65),s(X64,X66)))) | s(bool,'F_0') = s(bool,X62)) )),
  inference(superposition,[],[f354,f1228])).
fof(f6166,plain,(
  ( ! [X78,X76] : (s(bool,X76) = s(bool,X78) | ~p(s(bool,X78)) | s(bool,'F_0') = s(bool,X76)) )),
  inference(forward_demodulation,[],[f6165,f389])).
fof(f6165,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,X78)) | s(bool,X78) = s(bool,happ(s(fun(X75,bool),'_dst_x0_1'(s(bool,X76))),s(X75,X77))) | s(bool,'F_0') = s(bool,X76)) )),
  inference(subsumption_resolution,[],[f6043,f274])).
fof(f6043,plain,(
  ( ! [X78,X76,X77,X75] : (~p(s(bool,'T_0')) | ~p(s(bool,X78)) | s(bool,X78) = s(bool,happ(s(fun(X75,bool),'_dst_x0_1'(s(bool,X76))),s(X75,X77))) | s(bool,'F_0') = s(bool,X76)) )),
  inference(superposition,[],[f363,f1228])).
fof(f6167,plain,(
  ( ! [X80,X81,X79,X82] : (sP0(X82,happ(s(fun(X79,bool),'_dst_x0_1'(s(bool,X80))),s(X79,X81))) | s(bool,'F_0') = s(bool,X80)) )),
  inference(subsumption_resolution,[],[f6044,f274])).
fof(f6044,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | sP0(X82,happ(s(fun(X79,bool),'_dst_x0_1'(s(bool,X80))),s(X79,X81))) | s(bool,'F_0') = s(bool,X80)) )),
  inference(superposition,[],[f365,f1228])).
fof(f6168,plain,(
  ( ! [X85,X83,X86,X84] : (sP0(happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X84))),s(X83,X85)),X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(subsumption_resolution,[],[f6045,f274])).
fof(f6045,plain,(
  ( ! [X85,X83,X86,X84] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X84))),s(X83,X85)),X86) | s(bool,'F_0') = s(bool,X84)) )),
  inference(superposition,[],[f366,f1228])).
fof(f6169,plain,(
  ( ! [X90,X88,X87,X89] : (p(s(bool,X90)) | sP1(happ(s(fun(X87,bool),'_dst_x0_1'(s(bool,X88))),s(X87,X89)),X90) | s(bool,'F_0') = s(bool,X88)) )),
  inference(subsumption_resolution,[],[f6046,f274])).
fof(f6046,plain,(
  ( ! [X90,X88,X87,X89] : (~p(s(bool,'T_0')) | p(s(bool,X90)) | sP1(happ(s(fun(X87,bool),'_dst_x0_1'(s(bool,X88))),s(X87,X89)),X90) | s(bool,'F_0') = s(bool,X88)) )),
  inference(superposition,[],[f381,f1228])).
fof(f6170,plain,(
  ( ! [X94,X92,X93,X91] : (p(s(bool,X94)) | sP1(X94,happ(s(fun(X91,bool),'_dst_x0_1'(s(bool,X92))),s(X91,X93))) | s(bool,'F_0') = s(bool,X92)) )),
  inference(subsumption_resolution,[],[f6047,f274])).
fof(f6047,plain,(
  ( ! [X94,X92,X93,X91] : (~p(s(bool,'T_0')) | p(s(bool,X94)) | sP1(X94,happ(s(fun(X91,bool),'_dst_x0_1'(s(bool,X92))),s(X91,X93))) | s(bool,'F_0') = s(bool,X92)) )),
  inference(superposition,[],[f384,f1228])).
fof(f6171,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,X98)) | p(s(bool,X99)) | ~sP4(X98,happ(s(fun(X95,bool),'_dst_x0_1'(s(bool,X96))),s(X95,X97)),X99) | s(bool,'F_0') = s(bool,X96)) )),
  inference(subsumption_resolution,[],[f6048,f274])).
fof(f6048,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,'T_0')) | ~p(s(bool,X98)) | p(s(bool,X99)) | ~sP4(X98,happ(s(fun(X95,bool),'_dst_x0_1'(s(bool,X96))),s(X95,X97)),X99) | s(bool,'F_0') = s(bool,X96)) )),
  inference(superposition,[],[f398,f1228])).
fof(f6172,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,X103)) | p(s(bool,X104)) | ~sP7(X104,X103,happ(s(fun(X100,bool),'_dst_x0_1'(s(bool,X101))),s(X100,X102))) | s(bool,'F_0') = s(bool,X101)) )),
  inference(subsumption_resolution,[],[f6049,f274])).
fof(f6049,plain,(
  ( ! [X103,X101,X102,X100,X104] : (~p(s(bool,'T_0')) | ~p(s(bool,X103)) | p(s(bool,X104)) | ~sP7(X104,X103,happ(s(fun(X100,bool),'_dst_x0_1'(s(bool,X101))),s(X100,X102))) | s(bool,'F_0') = s(bool,X101)) )),
  inference(superposition,[],[f430,f1228])).
fof(f6173,plain,(
  ( ! [X109,X107,X105,X108,X106] : (p(s(bool,X108)) | p(s(bool,X109)) | ~sP9(happ(s(fun(X105,bool),'_dst_x0_1'(s(bool,X106))),s(X105,X107)),X109,X108) | s(bool,'F_0') = s(bool,X106)) )),
  inference(subsumption_resolution,[],[f6050,f274])).
fof(f6050,plain,(
  ( ! [X109,X107,X105,X108,X106] : (~p(s(bool,'T_0')) | p(s(bool,X108)) | p(s(bool,X109)) | ~sP9(happ(s(fun(X105,bool),'_dst_x0_1'(s(bool,X106))),s(X105,X107)),X109,X108) | s(bool,'F_0') = s(bool,X106)) )),
  inference(superposition,[],[f445,f1228])).
fof(f6174,plain,(
  ( ! [X111,X114,X112,X110,X113] : (~p(s(bool,X113)) | p(s(bool,X114)) | ~sP11(happ(s(fun(X110,bool),'_dst_x0_1'(s(bool,X111))),s(X110,X112)),X114,X113) | s(bool,'F_0') = s(bool,X111)) )),
  inference(subsumption_resolution,[],[f6051,f274])).
fof(f6051,plain,(
  ( ! [X111,X114,X112,X110,X113] : (~p(s(bool,'T_0')) | ~p(s(bool,X113)) | p(s(bool,X114)) | ~sP11(happ(s(fun(X110,bool),'_dst_x0_1'(s(bool,X111))),s(X110,X112)),X114,X113) | s(bool,'F_0') = s(bool,X111)) )),
  inference(superposition,[],[f462,f1228])).
fof(f6185,plain,(
  ( ! [X223,X221,X224] : (~p(s(bool,happ(s(fun(bool,bool),X224),s(bool,X221)))) | ~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X223)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X223),s(fun(bool,bool),X224)))) | s(bool,'F_0') = s(bool,X221)) )),
  inference(forward_demodulation,[],[f6074,f389])).
fof(f6074,plain,(
  ( ! [X222,X220,X223,X221,X224] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X223)))) | ~p(s(bool,happ(s(fun(bool,bool),X224),s(bool,happ(s(fun(X220,bool),'_dst_x0_1'(s(bool,X221))),s(X220,X222)))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X223),s(fun(bool,bool),X224)))) | s(bool,'F_0') = s(bool,X221)) )),
  inference(superposition,[],[f347,f1228])).
fof(f6289,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~sP4(happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68)),happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72)),X70) | s(bool,'F_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f6274,f274])).
fof(f6274,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X69)) | p(s(bool,X70)) | ~sP4(happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68)),happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72)),X70) | s(bool,'F_0') = s(bool,X67)) )),
  inference(superposition,[],[f1241,f1228])).
fof(f6388,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~sP7(X70,happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68)),happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72))) | s(bool,'F_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f6375,f274])).
fof(f6375,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X69)) | p(s(bool,X70)) | ~sP7(X70,happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68)),happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72))) | s(bool,'F_0') = s(bool,X67)) )),
  inference(superposition,[],[f1242,f1228])).
fof(f6495,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,X69)) | p(s(bool,X70)) | ~sP11(happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72)),X70,happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68))) | s(bool,'F_0') = s(bool,X67)) )),
  inference(subsumption_resolution,[],[f6483,f274])).
fof(f6483,plain,(
  ( ! [X70,X68,X66,X72,X71,X69,X67] : (~p(s(bool,'T_0')) | ~p(s(bool,X69)) | p(s(bool,X70)) | ~sP11(happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,X69))),s(X71,X72)),X70,happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68))) | s(bool,'F_0') = s(bool,X67)) )),
  inference(superposition,[],[f1244,f1228])).
fof(f6519,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X3)))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK15(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(forward_demodulation,[],[f6505,f389])).
fof(f6505,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2))),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK15(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(superposition,[],[f1485,f389])).
fof(f6522,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK15(X2,bool)) | s(bool,X4) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6513,f274])).
fof(f6513,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK15(X2,bool)) | s(bool,X4) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1485,f755])).
fof(f6573,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X3)))) | ~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,sK16(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(forward_demodulation,[],[f6559,f389])).
fof(f6559,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'F_0')))) | p(s(bool,happ(s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2))),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK16(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(superposition,[],[f1501,f389])).
fof(f6576,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK16(X2,bool)) | s(bool,X4) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f6567,f274])).
fof(f6567,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(bool,bool),X2),s(bool,X3)))) | s(bool,'T_0') = s(bool,sK16(X2,bool)) | s(bool,X4) = s(bool,happ(s(fun(bool,bool),X2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1501,f755])).
fof(f7401,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X0))) | s(fun(bool,bool),'const.pred_set.EMPTY_0') = s(fun(bool,bool),X0) | s(bool,'T_0') = s(bool,sK19('const.pred_set.EMPTY_0',X0,bool))) )),
  inference(superposition,[],[f1770,f600])).
fof(f7402,plain,(
  ( ! [X2,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X2))) | s(fun(bool,bool),X1) = s(fun(bool,bool),X2) | s(bool,'T_0') = s(bool,sK19(X1,X2,bool)) | s(bool,X3) = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1770,f755])).
fof(f7404,plain,(
  ( ! [X8,X7,X9] : (s(bool,X8) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X9))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X9) | s(bool,'T_0') = s(bool,sK19(X7,X9,bool)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1770,f755])).
fof(f7406,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X14))) | s(fun(bool,bool),X13) = s(fun(bool,bool),X14) | s(bool,'T_0') = s(bool,sK19(X13,X14,bool)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X13)))) )),
  inference(superposition,[],[f1770,f281])).
fof(f7414,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X0))) | s(fun(bool,bool),'const.pred_set.EMPTY_0') = s(fun(bool,bool),X0) | s(bool,'T_0') = s(bool,sK19(X0,'const.pred_set.EMPTY_0',bool))) )),
  inference(superposition,[],[f1770,f600])).
fof(f7415,plain,(
  ( ! [X2,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X2))) | s(fun(bool,bool),X1) = s(fun(bool,bool),X2) | s(bool,'T_0') = s(bool,sK19(X2,X1,bool)) | s(bool,X3) = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1770,f755])).
fof(f7417,plain,(
  ( ! [X8,X7,X9] : (s(bool,X8) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X9))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X9) | s(bool,'T_0') = s(bool,sK19(X9,X7,bool)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1770,f755])).
fof(f7419,plain,(
  ( ! [X14,X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X14))) | s(fun(bool,bool),X13) = s(fun(bool,bool),X14) | s(bool,'T_0') = s(bool,sK19(X14,X13,bool)) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X13)))) )),
  inference(superposition,[],[f1770,f281])).
fof(f7421,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(bool,bool),X1) = s(fun(bool,bool),X3) | s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK19(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),X3,bool))) )),
  inference(forward_demodulation,[],[f7400,f389])).
fof(f7400,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X3))) | s(fun(bool,bool),X3) = s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2))) | s(bool,'T_0') = s(bool,sK19(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),X3,bool))) )),
  inference(superposition,[],[f1770,f389])).
fof(f7422,plain,(
  ( ! [X2,X0,X3,X1] : (s(fun(bool,bool),X1) = s(fun(bool,bool),X3) | s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X3))) | s(bool,'T_0') = s(bool,sK19(X3,happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(forward_demodulation,[],[f7413,f389])).
fof(f7413,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X1))) != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X3))) | s(fun(bool,bool),X3) = s(fun(bool,bool),happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2))) | s(bool,'T_0') = s(bool,sK19(X3,happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool))) )),
  inference(superposition,[],[f1770,f389])).
fof(f7438,plain,(
  ( ! [X4,X2,X5,X3] : (~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X2),s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f7432,f274])).
fof(f7432,plain,(
  ( ! [X4,X2,X5,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(bool,bool),X3),s(bool,X4)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X2),s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X5) = s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X2))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1747,f755])).
fof(f7455,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),X2)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X2),s(fun(bool,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f7447,f274])).
fof(f7447,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),X2)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X2),s(fun(bool,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f1748,f1228])).
fof(f7456,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'const.bool.IN_2'(s(bool,X4),s(fun(bool,bool),X5)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X5),s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X6) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f7448,f274])).
fof(f7448,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.bool.IN_2'(s(bool,X4),s(fun(bool,bool),X5)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X5),s(fun(bool,bool),X3)))) | s(bool,'T_0') = s(bool,X4) | s(bool,X6) = s(bool,happ(s(fun(bool,bool),X3),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1748,f755])).
fof(f7463,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X0))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X0,X1,bool)),s(fun(bool,bool),X1))) | s(bool,X2) = s(bool,sK19(X0,X1,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1769,f755])).
fof(f7465,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,X8),s(fun(bool,bool),X6))) | s(fun(bool,bool),X6) = s(fun(bool,bool),X7) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X6,X7,bool)),s(fun(bool,bool),X7))) | s(bool,'T_0') = s(bool,sK19(X6,X7,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1769,f755])).
fof(f7467,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X12))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X12,X13,bool)),s(fun(bool,bool),X13))) | s(bool,'T_0') = s(bool,sK19(X12,X13,bool))) )),
  inference(superposition,[],[f1769,f281])).
fof(f7479,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X4)))) )),
  inference(forward_demodulation,[],[f7468,f389])).
fof(f7468,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X4)))) )),
  inference(superposition,[],[f1769,f389])).
fof(f7488,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X1))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X0,X1,bool)),s(fun(bool,bool),X0))) | s(bool,X2) = s(bool,sK19(X0,X1,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1772,f755])).
fof(f7490,plain,(
  ( ! [X6,X8,X7] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,X8),s(fun(bool,bool),X7))) | s(fun(bool,bool),X6) = s(fun(bool,bool),X7) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X6,X7,bool)),s(fun(bool,bool),X6))) | s(bool,'T_0') = s(bool,sK19(X6,X7,bool)) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f1772,f755])).
fof(f7492,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(bool,'F_0'),s(fun(bool,bool),X13))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(bool,sK19(X12,X13,bool)),s(fun(bool,bool),X12))) | s(bool,'T_0') = s(bool,sK19(X12,X13,bool))) )),
  inference(superposition,[],[f1772,f281])).
fof(f7504,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X4)))) )),
  inference(forward_demodulation,[],[f7493,f389])).
fof(f7493,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X4)))) )),
  inference(superposition,[],[f1772,f389])).
fof(f7510,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X1,happ(s(fun(X2,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X2,X3)),X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) )),
  inference(superposition,[],[f1776,f600])).
fof(f7515,plain,(
  ( ! [X30,X28,X31,X29,X32] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X28,sK19(X29,happ(s(fun(X30,fun(X28,bool)),'_dst_x0_1'(s(fun(X28,bool),X31))),s(X30,X32)),X28)),s(fun(X28,bool),X29))) | s(fun(X28,bool),X29) = s(fun(X28,bool),X31) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X28,sK19(X29,happ(s(fun(X30,fun(X28,bool)),'_dst_x0_1'(s(fun(X28,bool),X31))),s(X30,X32)),X28)),s(fun(X28,bool),X31)))) )),
  inference(superposition,[],[f1776,f281])).
fof(f7542,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19('const.pred_set.EMPTY_0',happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) )),
  inference(superposition,[],[f1776,f600])).
fof(f7561,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X1,X2)),X3,X0)),s(fun(X0,bool),X3))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X3)) )),
  inference(superposition,[],[f1777,f600])).
fof(f7566,plain,(
  ( ! [X30,X28,X31,X29,X32] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X28,sK19(happ(s(fun(X29,fun(X28,bool)),'_dst_x0_1'(s(fun(X28,bool),X30))),s(X29,X31)),X32,X28)),s(fun(X28,bool),X32))) | s(fun(X28,bool),X30) = s(fun(X28,bool),X32) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X28,sK19(happ(s(fun(X29,fun(X28,bool)),'_dst_x0_1'(s(fun(X28,bool),X30))),s(X29,X31)),X32,X28)),s(fun(X28,bool),X30)))) )),
  inference(superposition,[],[f1777,f281])).
fof(f7593,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),'const.pred_set.EMPTY_0',X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) )),
  inference(superposition,[],[f1777,f600])).
fof(f9715,plain,(
  ( ! [X17,X18,X16] : (sP5(sK14,happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18)),X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl4),
  inference(superposition,[],[f8675,f281])).
fof(f9721,plain,(
  ( ! [X37,X35,X38,X36,X34] : (sP5(sK14,happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X35))),s(X34,X36))) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(superposition,[],[f8675,f1228])).
fof(f9722,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X41,X42)),'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(superposition,[],[f8675,f600])).
fof(f9756,plain,(
  ( ! [X17,X18,X16] : (sP5(sK14,X16,happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18))) | s(bool,'T_0') = s(bool,X16)) ) | $spl4),
  inference(superposition,[],[f8679,f281])).
fof(f9762,plain,(
  ( ! [X37,X35,X38,X36,X34] : (sP5(sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X35))),s(X34,X36)),happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38))) | s(bool,'F_0') = s(bool,X35)) ) | $spl4),
  inference(superposition,[],[f8679,f1228])).
fof(f9763,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X41,X42)))) ) | $spl4),
  inference(superposition,[],[f8679,f600])).
fof(f11749,plain,(
  ( ! [X17,X18,X16] : (sP4(sK14,X16,happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18))) | s(bool,'T_0') = s(bool,X16)) ) | $spl4),
  inference(superposition,[],[f9708,f281])).
fof(f11757,plain,(
  ( ! [X39,X41,X38,X42,X40] : (sP4(sK14,happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X39))),s(X38,X40)),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42))) | s(bool,'F_0') = s(bool,X39)) ) | $spl4),
  inference(superposition,[],[f9708,f1228])).
fof(f11826,plain,(
  ( ! [X17,X18,X16] : (sP4(sK14,happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18)),X16) | s(bool,'T_0') = s(bool,X16)) ) | $spl4),
  inference(superposition,[],[f9749,f281])).
fof(f11834,plain,(
  ( ! [X39,X41,X38,X42,X40] : (sP4(sK14,happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X39))),s(X38,X40))) | s(bool,'F_0') = s(bool,X39)) ) | $spl4),
  inference(superposition,[],[f9749,f1228])).
fof(f11835,plain,(
  ( ! [X45,X43,X46,X44] : (sP4(sK14,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X45,X46)),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(superposition,[],[f9749,f600])).
fof(f14257,plain,(
  ( ! [X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f9878])).
fof(f17349,plain,(
  ( ! [X70,X74,X72,X73] : (~sP4(sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,X70))),s(X73,X74)),X72) | p(s(bool,X72)) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(forward_demodulation,[],[f17348,f389])).
fof(f17348,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (p(s(bool,X72)) | ~sP4(sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74)),X72) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(subsumption_resolution,[],[f14346,f274])).
fof(f14346,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (~p(s(bool,'T_0')) | p(s(bool,X72)) | ~sP4(sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74)),X72) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(superposition,[],[f9591,f1228])).
fof(f17430,plain,(
  ( ! [X70,X74,X72,X73] : (~sP7(X72,sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,X70))),s(X73,X74))) | p(s(bool,X72)) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(forward_demodulation,[],[f17429,f389])).
fof(f17429,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (p(s(bool,X72)) | ~sP7(X72,sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74))) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(subsumption_resolution,[],[f17411,f274])).
fof(f17411,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (~p(s(bool,'T_0')) | p(s(bool,X72)) | ~sP7(X72,sK14,happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74))) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(superposition,[],[f9592,f1228])).
fof(f17438,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f9913])).
fof(f17573,plain,(
  ( ! [X70,X74,X72,X73] : (~sP11(happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,X70))),s(X73,X74)),X72,sK14) | p(s(bool,X72)) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(forward_demodulation,[],[f17572,f389])).
fof(f17572,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (p(s(bool,X72)) | ~sP11(happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74)),X72,sK14) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(subsumption_resolution,[],[f17554,f274])).
fof(f17554,plain,(
  ( ! [X70,X74,X72,X71,X69,X73] : (~p(s(bool,'T_0')) | p(s(bool,X72)) | ~sP11(happ(s(fun(X73,bool),'_dst_x0_1'(s(bool,happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,X70))),s(X69,X71))))),s(X73,X74)),X72,sK14) | s(bool,'F_0') = s(bool,X70)) ) | $spl4),
  inference(superposition,[],[f9595,f1228])).
fof(f24382,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2246,f281])).
fof(f24402,plain,(
  ( ! [X61,X64,X62,X60,X63] : (sP4('T_0',happ(s(fun(X60,bool),'_dst_x0_1'(s(bool,X61))),s(X60,X62)),happ(s(fun(X63,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X63,X64))) | s(bool,'F_0') = s(bool,X61)) )),
  inference(superposition,[],[f2246,f1228])).
fof(f24845,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2312,f281])).
fof(f24865,plain,(
  ( ! [X61,X64,X62,X60,X63] : (sP4('T_0',happ(s(fun(X63,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X63,X64)),happ(s(fun(X60,bool),'_dst_x0_1'(s(bool,X61))),s(X60,X62))) | s(bool,'F_0') = s(bool,X61)) )),
  inference(superposition,[],[f2312,f1228])).
fof(f24866,plain,(
  ( ! [X68,X66,X67,X65] : (sP4('T_0',happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X67,X68)),'const.bool.IN_2'(s(X65,X66),s(fun(X65,bool),'const.pred_set.EMPTY_0')))) )),
  inference(superposition,[],[f2312,f600])).
fof(f6648,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK28(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,f(s(X0,sK28(X1,X2,bool,X0))))) )),
  inference(condensation,[],[f6647])).
fof(f6647,plain,(
  ( ! [X10,X8,X11,X9] : (s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK28(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK28(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f6638,f281])).
fof(f6638,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,'F_0') != s(bool,X11) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK28(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,f(s(X8,sK28(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f1706,f755])).
fof(f3192,plain,(
  ( ! [X401,X403,X400,X402] : (s(bool,'T_0') != s(bool,f(s(X400,sK28(X401,X402,bool,X400)))) | s(fun(X400,bool),X401) = s(fun(X400,bool),X402) | s(bool,X403) = s(bool,g(s(X400,sK28(X401,X402,bool,X400)))) | s(bool,'T_0') = s(bool,X403)) )),
  inference(superposition,[],[f390,f755])).
fof(f2783,plain,(
  ( ! [X408,X407,X409,X406] : (s(bool,X409) != s(bool,f(s(X406,sK28(X407,X408,bool,X406)))) | s(fun(X406,bool),X407) = s(fun(X406,bool),X408) | s(bool,'T_0') = s(bool,X409) | s(bool,'T_0') = s(bool,g(s(X406,sK28(X407,X408,bool,X406))))) )),
  inference(superposition,[],[f390,f755])).
fof(f2739,plain,(
  ( ! [X269,X267,X268,X266] : (~p(s(bool,'const.bool.IN_2'(s(bool,X267),s(fun(bool,bool),X268)))) | ~p(s(bool,happ(s(fun(bool,bool),X269),s(bool,X266)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X268),s(fun(bool,bool),X269)))) | s(bool,'T_0') = s(bool,X267) | s(bool,'T_0') = s(bool,X266)) )),
  inference(superposition,[],[f347,f755])).
fof(f3007,plain,(
  ( ! [X218,X220,X219,X221] : (~p(s(bool,'const.bool.IN_2'(s(bool,X218),s(fun(bool,bool),X219)))) | ~p(s(bool,happ(s(fun(bool,bool),X220),s(bool,'T_0')))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X219),s(fun(bool,bool),X220)))) | s(bool,X218) = s(bool,X221) | s(bool,'T_0') = s(bool,X221)) )),
  inference(superposition,[],[f347,f755])).
fof(f3148,plain,(
  ( ! [X261,X263,X262,X264] : (~p(s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X262)))) | ~p(s(bool,happ(s(fun(bool,bool),X263),s(bool,X261)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X262),s(fun(bool,bool),X263)))) | s(bool,X261) = s(bool,X264) | s(bool,'T_0') = s(bool,X264)) )),
  inference(superposition,[],[f347,f755])).
fof(f346,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK20(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f347,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f212])).
fof(f1577,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK20(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X4))))) )),
  inference(superposition,[],[f345,f389])).
fof(f1580,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK20(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f1576,f389])).
fof(f1576,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK20(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))))))) )),
  inference(superposition,[],[f345,f389])).
fof(f1591,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X4)))) | p(s(bool,happ(s(fun(X0,bool),X4),s(X0,sK20(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(superposition,[],[f346,f389])).
fof(f1595,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK20(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)))))) )),
  inference(forward_demodulation,[],[f1592,f389])).
fof(f1592,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK20(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)))))) )),
  inference(superposition,[],[f346,f389])).
fof(f3925,plain,(
  ( ! [X194,X192,X195,X193] : (p(s(bool,happ(s(fun(X192,bool),X194),s(X192,sK20(X194,X193,X192))))) | s(bool,X195) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X192,bool),X193),s(fun(X192,bool),X194))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(subsumption_resolution,[],[f3131,f274])).
fof(f3131,plain,(
  ( ! [X194,X192,X195,X193] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X192,bool),X194),s(X192,sK20(X194,X193,X192))))) | s(bool,X195) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X192,bool),X193),s(fun(X192,bool),X194))) | s(bool,'T_0') = s(bool,X195)) )),
  inference(superposition,[],[f346,f755])).
fof(f3926,plain,(
  ( ! [X198,X196,X199,X197] : (p(s(bool,'const.bool.IN_2'(s(X196,sK20(X198,X197,X196)),s(fun(X196,bool),X197)))) | s(bool,X199) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X196,bool),X197),s(fun(X196,bool),X198))) | s(bool,'T_0') = s(bool,X199)) )),
  inference(subsumption_resolution,[],[f3132,f274])).
fof(f3132,plain,(
  ( ! [X198,X196,X199,X197] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X196,sK20(X198,X197,X196)),s(fun(X196,bool),X197)))) | s(bool,X199) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X196,bool),X197),s(fun(X196,bool),X198))) | s(bool,'T_0') = s(bool,X199)) )),
  inference(superposition,[],[f345,f755])).
fof(f3935,plain,(
  ( ! [X239,X237,X240,X238,X236] : (~p(s(bool,happ(s(fun(X236,bool),X239),s(X236,X237)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X236,bool),X238),s(fun(X236,bool),X239)))) | s(bool,X240) = s(bool,'const.bool.IN_2'(s(X236,X237),s(fun(X236,bool),X238))) | s(bool,'T_0') = s(bool,X240)) )),
  inference(subsumption_resolution,[],[f3141,f274])).
fof(f3141,plain,(
  ( ! [X239,X237,X240,X238,X236] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X236,bool),X239),s(X236,X237)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X236,bool),X238),s(fun(X236,bool),X239)))) | s(bool,X240) = s(bool,'const.bool.IN_2'(s(X236,X237),s(fun(X236,bool),X238))) | s(bool,'T_0') = s(bool,X240)) )),
  inference(superposition,[],[f347,f755])).
fof(f7328,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK20(happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X4))),s(X5,X6)),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X4))))) )),
  inference(forward_demodulation,[],[f7320,f389])).
fof(f7320,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X2),s(fun(X0,bool),X4)))) | p(s(bool,'const.bool.IN_2'(s(X0,sK20(happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X4))),s(X5,X6)),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))))))) )),
  inference(superposition,[],[f1577,f389])).
fof(f7330,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (p(s(bool,'const.bool.IN_2'(s(X2,sK20(happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X4))),s(X5,X6)),X3,X2)),s(fun(X2,bool),X3)))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f7323,f274])).
fof(f7323,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X2,sK20(happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X4))),s(X5,X6)),X3,X2)),s(fun(X2,bool),X3)))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1577,f755])).
fof(f7352,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (p(s(bool,'const.bool.IN_2'(s(X2,sK20(X4,happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X3))),s(X5,X6)),X2)),s(fun(X2,bool),X3)))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f7346,f274])).
fof(f7346,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.IN_2'(s(X2,sK20(X4,happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X3))),s(X5,X6)),X2)),s(fun(X2,bool),X3)))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1580,f755])).
fof(f7370,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK20(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X4))),s(X5,X6)),X0))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2))))) )),
  inference(forward_demodulation,[],[f7362,f389])).
fof(f7362,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X4),s(fun(X0,bool),X2)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK20(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X4))),s(X5,X6)),X0)))))) )),
  inference(superposition,[],[f1591,f389])).
fof(f7371,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (p(s(bool,happ(s(fun(X2,bool),X4),s(X2,sK20(X4,happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X3))),s(X5,X6)),X2))))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f7364,f274])).
fof(f7364,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X2,bool),X4),s(X2,sK20(X4,happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X3))),s(X5,X6)),X2))))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1591,f755])).
fof(f7390,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (p(s(bool,happ(s(fun(X2,bool),X4),s(X2,sK20(happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X4))),s(X5,X6)),X3,X2))))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f7384,f274])).
fof(f7384,plain,(
  ( ! [X6,X4,X2,X7,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X2,bool),X4),s(X2,sK20(happ(s(fun(X5,fun(X2,bool)),'_dst_x0_1'(s(fun(X2,bool),X4))),s(X5,X6)),X3,X2))))) | s(bool,X7) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(X2,bool),X3),s(fun(X2,bool),X4))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1595,f755])).
fof(f7453,plain,(
  ( ! [X24,X23,X22] : (~p(s(bool,X22)) | ~p(s(bool,'const.bool.IN_2'(s(bool,X23),s(fun(bool,bool),X24)))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(bool,bool),X24),s(fun(bool,bool),'_dst_x0_1'(s(bool,X22)))))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f1748,f389])).
fof(f2785,plain,(
  ( ! [X414,X416,X415] : (~p(s(bool,happ(s(fun(bool,bool),X414),s(bool,X415)))) | p(s(bool,happ(s(fun(bool,bool),X414),s(bool,X416)))) | s(bool,'T_0') = s(bool,X415) | s(bool,'T_0') = s(bool,sK15(X414,bool))) )),
  inference(superposition,[],[f334,f755])).
fof(f2786,plain,(
  ( ! [X418,X417,X419] : (~p(s(bool,happ(s(fun(bool,bool),X417),s(bool,X418)))) | p(s(bool,happ(s(fun(bool,bool),X417),s(bool,X419)))) | s(bool,'T_0') = s(bool,X418) | s(bool,'T_0') = s(bool,sK16(X417,bool))) )),
  inference(superposition,[],[f335,f755])).
fof(f3194,plain,(
  ( ! [X408,X410,X409] : (~p(s(bool,happ(s(fun(bool,bool),X408),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X408),s(bool,X409)))) | s(bool,X410) = s(bool,sK15(X408,bool)) | s(bool,'T_0') = s(bool,X410)) )),
  inference(superposition,[],[f334,f755])).
fof(f3195,plain,(
  ( ! [X412,X413,X411] : (~p(s(bool,happ(s(fun(bool,bool),X411),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X411),s(bool,X412)))) | s(bool,X413) = s(bool,sK16(X411,bool)) | s(bool,'T_0') = s(bool,X413)) )),
  inference(superposition,[],[f335,f755])).
fof(f6676,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X3)))) | s(bool,X4) = s(bool,sK15(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1488,f755])).
fof(f6678,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X13)))) | p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X14)))) | s(bool,'T_0') = s(bool,sK15(happ(s(fun(X10,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X11))),s(X10,X12)),bool)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1488,f755])).
fof(f6871,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(bool,bool),X1),s(bool,'T_0')))) | p(s(bool,happ(s(fun(bool,bool),X1),s(bool,X3)))) | s(bool,X4) = s(bool,sK16(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1504,f755])).
fof(f6873,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X13)))) | p(s(bool,happ(s(fun(bool,bool),X11),s(bool,X14)))) | s(bool,'T_0') = s(bool,sK16(happ(s(fun(X10,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X11))),s(X10,X12)),bool)) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1504,f755])).
fof(f334,plain,(
  ( ! [X0,X5,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f200,plain,(
  ! [X0,X1] : ((! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X1,X0)))))) & (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,X0)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f199])).
fof(f199,plain,(
  ! [X0,X1] : ((! [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f198])).
fof(f198,plain,(
  ! [X0,X1] : ((! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (! [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (? [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : (~! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1] : (~! [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X6] : ! [X14] : (~! [X12] : p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) <=> ? [X12] : ~p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.NOT_FORALL_THM')).
fof(f335,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) )),
  inference(cnf_transformation,[],[f200])).
fof(f336,plain,(
  ( ! [X4,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,X0)))))) )),
  inference(cnf_transformation,[],[f203])).
fof(f203,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK17(X1,X0))))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK18(X1,X0))))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18])],[f202])).
fof(f202,plain,(
  ! [X0,X1] : ((? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f201])).
fof(f201,plain,(
  ! [X0,X1] : ((? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0,X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f89])).
fof(f89,plain,(
  ! [X0] : ! [X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X6] : ! [X14] : (~? [X12] : p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) <=> ! [X12] : ~p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.NOT_EXISTS_THM')).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK18(X1,X0)))))) )),
  inference(cnf_transformation,[],[f203])).
fof(f349,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK21(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) | (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK21(X2,X1,X0))))))) & (~p(s(bool,X1)) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK22(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK21,sK22])],[f215])).
fof(f215,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) | (p(s(bool,X1)) & ? [X5] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X5)))))) & (~p(s(bool,X1)) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X3] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f214])).
fof(f214,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (p(s(bool,X1)) & ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & (~p(s(bool,X1)) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | ? [X3] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f213])).
fof(f213,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (p(s(bool,X1)) & ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((~p(s(bool,X1)) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (p(s(bool,X1)) & ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,X1)) & p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (p(s(bool,X1)) & ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X6] : ! [X14,X15] : (? [X12] : (p(s(bool,X14)) & p(s(bool,happ(s(fun(X6,bool),X15),s(X6,X12))))) <=> (p(s(bool,X14)) & ? [X12] : p(s(bool,happ(s(fun(X6,bool),X15),s(X6,X12))))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.RIGHT_EXISTS_AND_THM')).
fof(f351,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK22(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f216])).
fof(f352,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK23(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f220])).
fof(f220,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK23(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK24(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK23,sK24])],[f219])).
fof(f219,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f218])).
fof(f218,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f217])).
fof(f217,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : ! [X14,X15] : (? [X12] : (p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) & p(s(bool,X15))) <=> (? [X12] : p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) & p(s(bool,X15))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f354,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK24(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f220])).
fof(f356,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK25(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK26(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f224,plain,(
  ! [X0,X1,X2] : ((! [X8] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK25(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK26(X2,X1,X0)))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X2,X1,X0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK25,sK26,sK27])],[f223])).
fof(f223,plain,(
  ! [X0,X1,X2] : ((! [X8] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X8)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8))))) | ? [X7] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X7)))) | ? [X6] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X6))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(rectify,[],[f222])).
fof(f222,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | ? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(flattening,[],[f221])).
fof(f221,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))))) & ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3)))))))),
  inference(nnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X3))))) <=> (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ? [X4] : p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X6] : ! [X14,X15] : (? [X12] : (p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) | p(s(bool,happ(s(fun(X6,bool),X15),s(X6,X12))))) <=> (? [X12] : p(s(bool,happ(s(fun(X6,bool),X14),s(X6,X12)))) | ? [X12] : p(s(bool,happ(s(fun(X6,bool),X15),s(X6,X12))))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.bool.EXISTS_OR_THM')).
fof(f357,plain,(
  ( ! [X2,X0,X8,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X8)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK25(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK26(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f358,plain,(
  ( ! [X2,X0,X5,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f359,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK27(X2,X1,X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f224])).
fof(f1488,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK15(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) )),
  inference(forward_demodulation,[],[f1484,f389])).
fof(f1484,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK15(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,X4))))) )),
  inference(superposition,[],[f334,f389])).
fof(f1504,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK16(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) )),
  inference(forward_demodulation,[],[f1500,f389])).
fof(f1500,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK16(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,X4))))) )),
  inference(superposition,[],[f335,f389])).
fof(f1527,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK17(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(forward_demodulation,[],[f1519,f389])).
fof(f1519,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK17(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(superposition,[],[f336,f389])).
fof(f1556,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK18(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(forward_demodulation,[],[f1548,f389])).
fof(f1548,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK18(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(superposition,[],[f337,f389])).
fof(f1609,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (~p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19)))) | p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK21(X18,happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,X15))),s(X14,X16)),X17)))))) )),
  inference(superposition,[],[f349,f389])).
fof(f1626,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (~p(s(bool,X15)) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19)))) | p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK22(X18,happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,X15))),s(X14,X16)),X17)))))) )),
  inference(superposition,[],[f351,f389])).
fof(f1642,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (~p(s(bool,X15)) | p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK23(happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,X15))),s(X14,X16)),X18,X17))))) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19))))) )),
  inference(superposition,[],[f352,f389])).
fof(f1669,plain,(
  ( ! [X14,X19,X17,X15,X18,X16] : (~p(s(bool,X15)) | p(s(bool,happ(s(fun(X17,bool),X18),s(X17,sK24(happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,X15))),s(X14,X16)),X18,X17))))) | ~p(s(bool,happ(s(fun(X17,bool),X18),s(X17,X19))))) )),
  inference(superposition,[],[f354,f389])).
fof(f1794,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK25(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK26(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(forward_demodulation,[],[f1786,f389])).
fof(f1786,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK25(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK26(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(superposition,[],[f356,f389])).
fof(f1824,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK26(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK25(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0)))))) )),
  inference(forward_demodulation,[],[f1816,f389])).
fof(f1816,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK25(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0))))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK26(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0)))))) )),
  inference(superposition,[],[f357,f389])).
fof(f1834,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK27(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(forward_demodulation,[],[f1826,f389])).
fof(f1826,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK27(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK27(X5,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) )),
  inference(superposition,[],[f358,f389])).
fof(f1852,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK27(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0))))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK27(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0)))))) )),
  inference(forward_demodulation,[],[f1844,f389])).
fof(f1844,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),X5),s(X0,sK27(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0))))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK27(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X5,X0)))))) )),
  inference(superposition,[],[f359,f389])).
fof(f3910,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK21(X12,X10,X11))))) | s(bool,X10) = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f3056,f274])).
fof(f3056,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK21(X12,X10,X11))))) | s(bool,X10) = s(bool,X14) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f349,f755])).
fof(f3911,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,happ(s(fun(X16,bool),X17),s(X16,X18)))) | p(s(bool,happ(s(fun(X16,bool),X17),s(X16,sK22(X17,X15,X16))))) | s(bool,X15) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(subsumption_resolution,[],[f3057,f274])).
fof(f3057,plain,(
  ( ! [X19,X17,X15,X18,X16] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X16,bool),X17),s(X16,X18)))) | p(s(bool,happ(s(fun(X16,bool),X17),s(X16,sK22(X17,X15,X16))))) | s(bool,X15) = s(bool,X19) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f351,f755])).
fof(f3912,plain,(
  ( ! [X24,X23,X21,X22,X20] : (p(s(bool,happ(s(fun(X21,bool),X22),s(X21,sK23(X20,X22,X21))))) | ~p(s(bool,happ(s(fun(X21,bool),X22),s(X21,X23)))) | s(bool,X20) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(subsumption_resolution,[],[f3058,f274])).
fof(f3058,plain,(
  ( ! [X24,X23,X21,X22,X20] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X21,bool),X22),s(X21,sK23(X20,X22,X21))))) | ~p(s(bool,happ(s(fun(X21,bool),X22),s(X21,X23)))) | s(bool,X20) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f352,f755])).
fof(f3913,plain,(
  ( ! [X28,X26,X29,X27,X25] : (p(s(bool,happ(s(fun(X26,bool),X27),s(X26,sK24(X25,X27,X26))))) | ~p(s(bool,happ(s(fun(X26,bool),X27),s(X26,X28)))) | s(bool,X25) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) )),
  inference(subsumption_resolution,[],[f3059,f274])).
fof(f3059,plain,(
  ( ! [X28,X26,X29,X27,X25] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X26,bool),X27),s(X26,sK24(X25,X27,X26))))) | ~p(s(bool,happ(s(fun(X26,bool),X27),s(X26,X28)))) | s(bool,X25) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f354,f755])).
fof(f3927,plain,(
  ( ! [X202,X200,X203,X201] : (p(s(bool,happ(s(fun(X200,bool),X201),s(X200,X202)))) | s(bool,X203) = s(bool,happ(s(fun(X200,bool),X201),s(X200,sK15(X201,X200)))) | s(bool,'T_0') = s(bool,X203)) )),
  inference(subsumption_resolution,[],[f3133,f274])).
fof(f3133,plain,(
  ( ! [X202,X200,X203,X201] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X200,bool),X201),s(X200,X202)))) | s(bool,X203) = s(bool,happ(s(fun(X200,bool),X201),s(X200,sK15(X201,X200)))) | s(bool,'T_0') = s(bool,X203)) )),
  inference(superposition,[],[f334,f755])).
fof(f3928,plain,(
  ( ! [X206,X204,X207,X205] : (p(s(bool,happ(s(fun(X204,bool),X205),s(X204,X206)))) | s(bool,X207) = s(bool,happ(s(fun(X204,bool),X205),s(X204,sK16(X205,X204)))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(subsumption_resolution,[],[f3134,f274])).
fof(f3134,plain,(
  ( ! [X206,X204,X207,X205] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X204,bool),X205),s(X204,X206)))) | s(bool,X207) = s(bool,happ(s(fun(X204,bool),X205),s(X204,sK16(X205,X204)))) | s(bool,'T_0') = s(bool,X207)) )),
  inference(superposition,[],[f335,f755])).
fof(f3929,plain,(
  ( ! [X212,X210,X208,X211,X209] : (p(s(bool,happ(s(fun(X208,bool),X211),s(X208,sK27(X209,X211,X208))))) | p(s(bool,happ(s(fun(X208,bool),X209),s(X208,sK27(X209,X211,X208))))) | s(bool,X212) = s(bool,happ(s(fun(X208,bool),X209),s(X208,X210))) | s(bool,'T_0') = s(bool,X212)) )),
  inference(subsumption_resolution,[],[f3135,f274])).
fof(f3135,plain,(
  ( ! [X212,X210,X208,X211,X209] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X208,bool),X211),s(X208,sK27(X209,X211,X208))))) | p(s(bool,happ(s(fun(X208,bool),X209),s(X208,sK27(X209,X211,X208))))) | s(bool,X212) = s(bool,happ(s(fun(X208,bool),X209),s(X208,X210))) | s(bool,'T_0') = s(bool,X212)) )),
  inference(superposition,[],[f359,f755])).
fof(f3930,plain,(
  ( ! [X216,X215,X213,X217,X214] : (p(s(bool,happ(s(fun(X213,bool),X214),s(X213,sK27(X216,X214,X213))))) | p(s(bool,happ(s(fun(X213,bool),X216),s(X213,sK27(X216,X214,X213))))) | s(bool,X217) = s(bool,happ(s(fun(X213,bool),X214),s(X213,X215))) | s(bool,'T_0') = s(bool,X217)) )),
  inference(subsumption_resolution,[],[f3136,f274])).
fof(f3136,plain,(
  ( ! [X216,X215,X213,X217,X214] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X213,bool),X214),s(X213,sK27(X216,X214,X213))))) | p(s(bool,happ(s(fun(X213,bool),X216),s(X213,sK27(X216,X214,X213))))) | s(bool,X217) = s(bool,happ(s(fun(X213,bool),X214),s(X213,X215))) | s(bool,'T_0') = s(bool,X217)) )),
  inference(superposition,[],[f358,f755])).
fof(f3931,plain,(
  ( ! [X218,X222,X220,X219,X221] : (p(s(bool,happ(s(fun(X218,bool),X221),s(X218,sK25(X219,X221,X218))))) | p(s(bool,happ(s(fun(X218,bool),X219),s(X218,sK26(X219,X221,X218))))) | s(bool,X222) = s(bool,happ(s(fun(X218,bool),X219),s(X218,X220))) | s(bool,'T_0') = s(bool,X222)) )),
  inference(subsumption_resolution,[],[f3137,f274])).
fof(f3137,plain,(
  ( ! [X218,X222,X220,X219,X221] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X218,bool),X221),s(X218,sK25(X219,X221,X218))))) | p(s(bool,happ(s(fun(X218,bool),X219),s(X218,sK26(X219,X221,X218))))) | s(bool,X222) = s(bool,happ(s(fun(X218,bool),X219),s(X218,X220))) | s(bool,'T_0') = s(bool,X222)) )),
  inference(superposition,[],[f357,f755])).
fof(f3932,plain,(
  ( ! [X227,X225,X223,X226,X224] : (p(s(bool,happ(s(fun(X223,bool),X224),s(X223,sK25(X226,X224,X223))))) | p(s(bool,happ(s(fun(X223,bool),X226),s(X223,sK26(X226,X224,X223))))) | s(bool,X227) = s(bool,happ(s(fun(X223,bool),X224),s(X223,X225))) | s(bool,'T_0') = s(bool,X227)) )),
  inference(subsumption_resolution,[],[f3138,f274])).
fof(f3138,plain,(
  ( ! [X227,X225,X223,X226,X224] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X223,bool),X224),s(X223,sK25(X226,X224,X223))))) | p(s(bool,happ(s(fun(X223,bool),X226),s(X223,sK26(X226,X224,X223))))) | s(bool,X227) = s(bool,happ(s(fun(X223,bool),X224),s(X223,X225))) | s(bool,'T_0') = s(bool,X227)) )),
  inference(superposition,[],[f356,f755])).
fof(f3933,plain,(
  ( ! [X231,X229,X230,X228] : (p(s(bool,happ(s(fun(X228,bool),X229),s(X228,sK18(X229,X228))))) | s(bool,X231) = s(bool,happ(s(fun(X228,bool),X229),s(X228,X230))) | s(bool,'T_0') = s(bool,X231)) )),
  inference(subsumption_resolution,[],[f3139,f274])).
fof(f3139,plain,(
  ( ! [X231,X229,X230,X228] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X228,bool),X229),s(X228,sK18(X229,X228))))) | s(bool,X231) = s(bool,happ(s(fun(X228,bool),X229),s(X228,X230))) | s(bool,'T_0') = s(bool,X231)) )),
  inference(superposition,[],[f337,f755])).
fof(f3934,plain,(
  ( ! [X235,X233,X234,X232] : (p(s(bool,happ(s(fun(X232,bool),X233),s(X232,sK17(X233,X232))))) | s(bool,X235) = s(bool,happ(s(fun(X232,bool),X233),s(X232,X234))) | s(bool,'T_0') = s(bool,X235)) )),
  inference(subsumption_resolution,[],[f3140,f274])).
fof(f3140,plain,(
  ( ! [X235,X233,X234,X232] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X232,bool),X233),s(X232,sK17(X233,X232))))) | s(bool,X235) = s(bool,happ(s(fun(X232,bool),X233),s(X232,X234))) | s(bool,'T_0') = s(bool,X235)) )),
  inference(superposition,[],[f336,f755])).
fof(f6695,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X9)))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,sK15(happ(s(fun(X7,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X7,X8)),X5)))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f6682,f274])).
fof(f6682,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X9)))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,sK15(happ(s(fun(X7,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X7,X8)),X5)))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1488,f755])).
fof(f6890,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X9)))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,sK16(happ(s(fun(X7,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X7,X8)),X5)))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f6877,f274])).
fof(f6877,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X9)))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,sK16(happ(s(fun(X7,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X7,X8)),X5)))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1504,f755])).
fof(f6931,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK17(happ(s(fun(X8,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X8,X9)),X5))))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f6918,f274])).
fof(f6918,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK17(happ(s(fun(X8,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X8,X9)),X5))))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1527,f755])).
fof(f6974,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK18(happ(s(fun(X8,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X8,X9)),X5))))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f6961,f274])).
fof(f6961,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK18(happ(s(fun(X8,fun(X5,bool)),'_dst_x0_1'(s(fun(X5,bool),X6))),s(X8,X9)),X5))))) | s(bool,X10) = s(bool,happ(s(fun(X5,bool),X6),s(X5,X7))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f1556,f755])).
fof(f7006,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X0))),s(X4,X5)),X1))))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f6988,f274])).
fof(f6988,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X0))),s(X4,X5)),X1))))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1609,f755])).
fof(f7049,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X0))),s(X4,X5)),X1))))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f7031,f274])).
fof(f7031,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X0))),s(X4,X5)),X1))))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1626,f755])).
fof(f7249,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5)))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f7230,f274])).
fof(f7230,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5)))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1642,f755])).
fof(f7293,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5)))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f7274,f274])).
fof(f7274,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5)))) | s(bool,X0) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1669,f755])).
fof(f7643,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK25(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | p(s(bool,happ(s(fun(X6,bool),X9),s(X6,sK26(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f7629,f274])).
fof(f7629,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK25(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | p(s(bool,happ(s(fun(X6,bool),X9),s(X6,sK26(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1794,f755])).
fof(f7681,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK26(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | p(s(bool,happ(s(fun(X6,bool),X11),s(X6,sK25(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f7667,f274])).
fof(f7667,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK26(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | p(s(bool,happ(s(fun(X6,bool),X11),s(X6,sK25(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1824,f755])).
fof(f7782,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK27(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | p(s(bool,happ(s(fun(X6,bool),X9),s(X6,sK27(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f7768,f274])).
fof(f7768,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK27(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | p(s(bool,happ(s(fun(X6,bool),X9),s(X6,sK27(X9,happ(s(fun(X10,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X10,X11)),X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1834,f755])).
fof(f7832,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK27(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | p(s(bool,happ(s(fun(X6,bool),X11),s(X6,sK27(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f7818,f274])).
fof(f7818,plain,(
  ( ! [X6,X12,X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK27(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | p(s(bool,happ(s(fun(X6,bool),X11),s(X6,sK27(happ(s(fun(X9,fun(X6,bool)),'_dst_x0_1'(s(fun(X6,bool),X7))),s(X9,X10)),X11,X6))))) | s(bool,X12) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1852,f755])).
fof(f9571,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK21(X1,sK14,X0)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f9474,f274])).
fof(f9474,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK21(X1,sK14,X0)))))) ) | $spl4),
  inference(superposition,[],[f349,f8626])).
fof(f9572,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,happ(s(fun(X3,bool),X4),s(X3,X5)))) | p(s(bool,happ(s(fun(X3,bool),X4),s(X3,sK22(X4,sK14,X3)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f9475,f274])).
fof(f9475,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X3,bool),X4),s(X3,X5)))) | p(s(bool,happ(s(fun(X3,bool),X4),s(X3,sK22(X4,sK14,X3)))))) ) | $spl4),
  inference(superposition,[],[f351,f8626])).
fof(f9573,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK23(sK14,X7,X6)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f9476,f274])).
fof(f9476,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK23(sK14,X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))))) ) | $spl4),
  inference(superposition,[],[f352,f8626])).
fof(f9574,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11)))) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK24(sK14,X10,X9)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f9477,f274])).
fof(f9477,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK24(sK14,X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11))))) ) | $spl4),
  inference(superposition,[],[f354,f8626])).
fof(f21195,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK21(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),sK14,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f21154,f389])).
fof(f21154,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK21(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),sK14,X0)))))) ) | $spl4),
  inference(superposition,[],[f9571,f389])).
fof(f21198,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK21(X7,sK14,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(subsumption_resolution,[],[f21183,f274])).
fof(f21183,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK21(X7,sK14,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9571,f755])).
fof(f21316,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK22(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),sK14,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f21275,f389])).
fof(f21275,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK22(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),sK14,X0)))))) ) | $spl4),
  inference(superposition,[],[f9572,f389])).
fof(f21319,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK22(X7,sK14,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(subsumption_resolution,[],[f21304,f274])).
fof(f21304,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK22(X7,sK14,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9572,f755])).
fof(f21448,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK23(sK14,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f21407,f389])).
fof(f21407,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK23(sK14,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) ) | $spl4),
  inference(superposition,[],[f9573,f389])).
fof(f21451,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK23(sK14,X7,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(subsumption_resolution,[],[f21436,f274])).
fof(f21436,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK23(sK14,X7,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9573,f755])).
fof(f21580,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X2),s(X0,sK24(sK14,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4))))) ) | $spl4),
  inference(forward_demodulation,[],[f21539,f389])).
fof(f21539,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3))),s(X0,sK24(sK14,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)))))) ) | $spl4),
  inference(superposition,[],[f9574,f389])).
fof(f21583,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK24(sK14,X7,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(subsumption_resolution,[],[f21568,f274])).
fof(f21568,plain,(
  ( ! [X6,X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK24(sK14,X7,X6))))) | s(bool,X9) = s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9574,f755])).
fof(f343,plain,(
  ( ! [X4,X2,X0,X1] : (s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f209])).
fof(f209,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X4] : s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(rectify,[],[f207])).
fof(f207,plain,(
  ! [X0,X1,X2] : ((s(fun(X0,bool),X1) != s(fun(X0,bool),X2) | ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))) & (? [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(flattening,[],[f96])).
fof(f96,plain,(
  ! [X0] : ! [X1,X2] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2) <=> ! [X3] : s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1))) = s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X6] : ! [X16,X9] : (s(fun(X6,bool),X9) = s(fun(X6,bool),X16) <=> ! [X12] : s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X9))) = s(bool,'const.bool.IN_2'(s(X6,X12),s(fun(X6,bool),X16))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.pred_set.EXTENSION')).
fof(f344,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X1))) != s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) )),
  inference(cnf_transformation,[],[f209])).
fof(f1777,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X4))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) )),
  inference(forward_demodulation,[],[f1771,f389])).
fof(f1771,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X4))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f344,f389])).
fof(f7567,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X4,X5)),X6,X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X4,X5)),X6,X0)),s(fun(X0,bool),X6))) | s(fun(X0,bool),X6) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f1777,f389])).
fof(f1776,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X4))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) )),
  inference(forward_demodulation,[],[f1768,f389])).
fof(f1768,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X4))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f344,f389])).
fof(f7516,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X5,X6)),X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X5,X6)),X0)),s(fun(X0,bool),X4))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f1776,f389])).
fof(f7555,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X5) | s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X5)))) )),
  inference(forward_demodulation,[],[f7541,f389])).
fof(f7541,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X2))) != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X5))) | s(fun(X0,bool),X5) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) )),
  inference(superposition,[],[f1776,f389])).
fof(f2787,plain,(
  ( ! [X420,X422,X421] : (s(bool,'const.bool.IN_2'(s(bool,X422),s(fun(bool,bool),X420))) != s(bool,'const.bool.IN_2'(s(bool,X422),s(fun(bool,bool),X421))) | s(fun(bool,bool),X420) = s(fun(bool,bool),X421) | s(bool,'T_0') = s(bool,X422) | s(bool,'T_0') = s(bool,sK19(X420,X421,bool))) )),
  inference(superposition,[],[f344,f755])).
fof(f7538,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),X10))) != s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),X12))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X12) | s(bool,'T_0') = s(bool,sK19(X10,happ(s(fun(X11,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X12))),s(X11,X13)),bool)) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7589,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),X11))) != s(bool,'const.bool.IN_2'(s(bool,X14),s(fun(bool,bool),X13))) | s(fun(bool,bool),X11) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK19(happ(s(fun(X10,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X11))),s(X10,X12)),X13,bool)) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f1777,f755])).
fof(f3196,plain,(
  ( ! [X414,X416,X415] : (s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X414))) != s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X415))) | s(fun(bool,bool),X414) = s(fun(bool,bool),X415) | s(bool,X416) = s(bool,sK19(X414,X415,bool)) | s(bool,'T_0') = s(bool,X416)) )),
  inference(superposition,[],[f344,f755])).
fof(f7536,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X0))) != s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X2))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X2) | s(bool,X4) = s(bool,sK19(X0,happ(s(fun(X1,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X2))),s(X1,X3)),bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7587,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X1))) != s(bool,'const.bool.IN_2'(s(bool,'T_0'),s(fun(bool,bool),X3))) | s(fun(bool,bool),X1) = s(fun(bool,bool),X3) | s(bool,X4) = s(bool,sK19(happ(s(fun(X0,fun(bool,bool)),'_dst_x0_1'(s(fun(bool,bool),X1))),s(X0,X2)),X3,bool)) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1777,f755])).
fof(f28151,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),X3) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f11822,f755])).
fof(f27745,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP4(sK14,X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3))) | s(bool,X1) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f11745,f755])).
fof(f25361,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0','T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f6469,f755])).
fof(f25359,plain,(
  ( ! [X0,X1] : (~sP10(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f6469,f454])).
fof(f25236,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0','F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f6427,f755])).
fof(f25234,plain,(
  ( ! [X0,X1] : (~sP8(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f481,f6427,f437])).
fof(f25112,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('F_0','T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f6359,f755])).
fof(f25109,plain,(
  ( ! [X0,X1] : (~sP6('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f6359,f467])).
fof(f24988,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f6255,f755])).
fof(f24987,plain,(
  ( ! [X0,X1] : (~sP5('T_0','F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f6255,f393])).
fof(f24855,plain,(
  ( ! [X37,X38,X36] : (sP4('T_0',happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,X36))),s(X37,X38)),'F_0') | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f2312,f281])).
fof(f24847,plain,(
  ( ! [X10,X8,X7,X9] : (sP4('T_0',happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10)),X7) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f2312,f755])).
fof(f24846,plain,(
  ( ! [X6,X4,X5,X3] : (sP4('T_0',happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X3) | s(bool,X3) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f2312,f755])).
fof(f24719,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0','F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2279,f281])).
fof(f24593,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f2278,f755])).
fof(f24407,plain,(
  ( ! [X78,X76,X79,X77,X75] : (sP4('T_0',happ(s(fun(X75,bool),'_dst_x0_1'(s(bool,X76))),s(X75,X77)),happ(s(fun(X78,bool),'_dst_x0_1'(s(bool,X76))),s(X78,X79)))) )),
  inference(superposition,[],[f2246,f389])).
fof(f24390,plain,(
  ( ! [X30,X28,X31,X29] : (sP4('T_0','T_0',happ(s(fun(X29,bool),'_dst_x0_1'(s(bool,X28))),s(X29,X30))) | s(bool,X28) = s(bool,X31) | s(bool,'T_0') = s(bool,X31)) )),
  inference(superposition,[],[f2246,f755])).
fof(f24384,plain,(
  ( ! [X10,X8,X7,X9] : (sP4('T_0',X7,happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f2246,f755])).
fof(f24383,plain,(
  ( ! [X6,X4,X5,X3] : (sP4('T_0',X3,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5))) | s(bool,X3) = s(bool,X6) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f2246,f755])).
fof(f24215,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'T_0','F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f2210,f755])).
fof(f24149,plain,(
  ( ! [X2,X0,X1] : (~sP2('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f2207,f281])).
fof(f23411,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5(sK14,X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3))) | s(bool,X1) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f9752,f755])).
fof(f23124,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),X3) | s(bool,X3) = s(bool,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f9711,f755])).
fof(f23076,plain,(
  ( ! [X2,X0,X3,X1] : (sP1('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5919,f755])).
fof(f23028,plain,(
  ( ! [X2,X0,X3,X1] : (sP1(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f5881,f755])).
fof(f22810,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f11835,f281])).
fof(f18615,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f609,f607,f2108,f396])).
fof(f18277,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f493,f489,f2106,f397])).
fof(f18107,plain,(
  ( ! [X0,X1] : (~sP4('T_0','T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f274,f496,f492,f2079,f395])).
fof(f17676,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP5(sK14,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f9763,f281])).
fof(f17662,plain,(
  ( ! [X35,X33,X34] : (sP5(sK14,'const.bool.IN_2'(s(bool,X33),s(fun(bool,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X33))),s(X34,X35))) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(superposition,[],[f9763,f281])).
fof(f17587,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(X3,X4),s(fun(X3,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f9722,f281])).
fof(f17560,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,X5)) | ~sP11(happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,X4))),s(X6,X7)),X5,sK14) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(subsumption_resolution,[],[f17538,f274])).
fof(f17538,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | ~sP11(happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,X4))),s(X6,X7)),X5,sK14) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(superposition,[],[f9595,f755])).
fof(f17496,plain,(
  ( ! [X35,X33,X34] : (sP1(happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X33))),s(X34,X35)),sK14) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(subsumption_resolution,[],[f17448,f481])).
fof(f17448,plain,(
  ( ! [X35,X33,X34] : (sP1(happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X33))),s(X34,X35)),sK14) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(superposition,[],[f9913,f281])).
fof(f17417,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,X5)) | ~sP7(X5,sK14,happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,X4))),s(X6,X7))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(subsumption_resolution,[],[f17395,f274])).
fof(f17395,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | ~sP7(X5,sK14,happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,X4))),s(X6,X7))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(superposition,[],[f9592,f755])).
fof(f17356,plain,(
  ( ! [X23,X21,X19,X22,X20] : (p(s(bool,X20)) | ~sP4(sK14,happ(s(fun(X21,bool),'_dst_x0_1'(s(bool,X19))),s(X21,X22)),X20) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) ) | $spl4),
  inference(subsumption_resolution,[],[f14333,f274])).
fof(f14333,plain,(
  ( ! [X23,X21,X19,X22,X20] : (~p(s(bool,'T_0')) | p(s(bool,X20)) | ~sP4(sK14,happ(s(fun(X21,bool),'_dst_x0_1'(s(bool,X19))),s(X21,X22)),X20) | s(bool,X19) = s(bool,X23) | s(bool,'T_0') = s(bool,X23)) ) | $spl4),
  inference(superposition,[],[f9591,f755])).
fof(f14316,plain,(
  ( ! [X35,X33,X34] : (sP1(sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X33))),s(X34,X35))) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(subsumption_resolution,[],[f14267,f481])).
fof(f14267,plain,(
  ( ! [X35,X33,X34] : (sP1(sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,X33))),s(X34,X35))) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(superposition,[],[f9878,f281])).
fof(f12023,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f11759,f755])).
fof(f11980,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f11599,f755])).
fof(f11949,plain,(
  ( ! [X2,X0,X3,X1] : (~sP6(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f11326,f755])).
fof(f11903,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5(sK14,'F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f11295,f755])).
fof(f11873,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9764,f755])).
fof(f11829,plain,(
  ( ! [X28,X29,X27] : (sP4(sK14,happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X27))),s(X28,X29)),'F_0') | s(bool,'T_0') = s(bool,X27)) ) | $spl4),
  inference(superposition,[],[f9749,f281])).
fof(f11824,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(sK14,happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9749,f755])).
fof(f11822,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)),X0) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9749,f755])).
fof(f11792,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9723,f755])).
fof(f11760,plain,(
  ( ! [X52,X50,X53,X51,X49] : (sP4(sK14,happ(s(fun(X49,bool),'_dst_x0_1'(s(bool,X50))),s(X49,X51)),happ(s(fun(X52,bool),'_dst_x0_1'(s(bool,X50))),s(X52,X53)))) ) | $spl4),
  inference(superposition,[],[f9708,f389])).
fof(f11759,plain,(
  ( ! [X47,X48] : (sP4(sK14,sK14,happ(s(fun(X47,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X47,X48)))) ) | $spl4),
  inference(superposition,[],[f9708,f8626])).
fof(f11750,plain,(
  ( ! [X21,X19,X22,X20] : (sP4(sK14,'T_0',happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X19))),s(X20,X21))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl4),
  inference(superposition,[],[f9708,f755])).
fof(f11747,plain,(
  ( ! [X10,X8,X11,X9] : (sP4(sK14,X8,happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f9708,f755])).
fof(f11745,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9708,f755])).
fof(f11714,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9495,f755])).
fof(f11634,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9494,f755])).
fof(f11602,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9493,f755])).
fof(f11599,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f9493,f393])).
fof(f11522,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9492,f755])).
fof(f11490,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9277,f755])).
fof(f11404,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f9264,f755])).
fof(f11372,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0',sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f8812,f755])).
fof(f11329,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('F_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f8807,f755])).
fof(f11326,plain,(
  ( ! [X0,X1] : (~sP6(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f8807,f467])).
fof(f11296,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f8801,f755])).
fof(f11295,plain,(
  ( ! [X0,X1] : (~sP5(sK14,'F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f8801,f393])).
fof(f10459,plain,(
  ( ! [X0,X1] : (~sP4(sK14,'T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f8669,f8668,f8683,f395])).
fof(f9913,plain,(
  ( ! [X21,X19,X20] : (sP1(happ(s(fun(X19,bool),'_dst_x0_1'(s(bool,X20))),s(X19,X21)),sK14) | p(s(bool,X20))) ) | $spl4),
  inference(superposition,[],[f9578,f389])).
fof(f9918,plain,(
  ( ! [X17,X18] : (sP1('const.bool.IN_2'(s(X17,X18),s(fun(X17,bool),'const.pred_set.EMPTY_0')),sK14)) ) | $spl4),
  inference(subsumption_resolution,[],[f9911,f481])).
fof(f9911,plain,(
  ( ! [X17,X18] : (p(s(bool,'F_0')) | sP1('const.bool.IN_2'(s(X17,X18),s(fun(X17,bool),'const.pred_set.EMPTY_0')),sK14)) ) | $spl4),
  inference(superposition,[],[f9578,f600])).
fof(f9916,plain,(
  ( ! [X4] : (sP1(X4,sK14) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f481,f297,f296,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f6648,f6676,f6678,f6695,f6871,f6873,f6890,f6931,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7249,f7251,f7254,f7293,f7295,f7298,f7328,f7330,f7352,f7370,f7371,f7390,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7463,f7465,f7467,f7479,f7477,f7481,f7488,f7490,f7492,f7504,f7502,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9880,f9881,f9883,f9878,f9915])).
fof(f9915,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,sK14) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f9902,f292])).
fof(f9902,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(X4,sK14) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f9578,f755])).
fof(f9878,plain,(
  ( ! [X21,X19,X20] : (sP1(sK14,happ(s(fun(X19,bool),'_dst_x0_1'(s(bool,X20))),s(X19,X21))) | p(s(bool,X20))) ) | $spl4),
  inference(superposition,[],[f9577,f389])).
fof(f9883,plain,(
  ( ! [X17,X18] : (sP1(sK14,'const.bool.IN_2'(s(X17,X18),s(fun(X17,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(subsumption_resolution,[],[f9876,f481])).
fof(f9876,plain,(
  ( ! [X17,X18] : (p(s(bool,'F_0')) | sP1(sK14,'const.bool.IN_2'(s(X17,X18),s(fun(X17,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(superposition,[],[f9577,f600])).
fof(f9881,plain,(
  ( ! [X4] : (sP1(sK14,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f481,f297,f296,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f6648,f6676,f6678,f6695,f6871,f6873,f6890,f6931,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7249,f7251,f7254,f7293,f7295,f7298,f7328,f7330,f7352,f7370,f7371,f7390,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7463,f7465,f7467,f7479,f7477,f7481,f7488,f7490,f7492,f7504,f7502,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9880])).
fof(f9880,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(sK14,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f9867,f292])).
fof(f9867,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | sP1(sK14,X4) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X5)) ) | $spl4),
  inference(superposition,[],[f9577,f755])).
fof(f9764,plain,(
  ( ! [X43,X44] : (sP5(sK14,sK14,happ(s(fun(X43,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X43,X44)))) ) | $spl4),
  inference(superposition,[],[f8679,f8626])).
fof(f9759,plain,(
  ( ! [X28,X29,X27] : (sP5(sK14,'F_0',happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X27))),s(X28,X29))) | s(bool,'T_0') = s(bool,X27)) ) | $spl4),
  inference(superposition,[],[f8679,f281])).
fof(f9757,plain,(
  ( ! [X21,X19,X22,X20] : (sP5(sK14,'T_0',happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X19))),s(X20,X21))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl4),
  inference(superposition,[],[f8679,f755])).
fof(f9754,plain,(
  ( ! [X10,X8,X11,X9] : (sP5(sK14,X8,happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f8679,f755])).
fof(f9752,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f8679,f755])).
fof(f9749,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f8679,f393])).
fof(f9724,plain,(
  ( ! [X47,X45,X48,X46,X49] : (sP5(sK14,happ(s(fun(X48,bool),'_dst_x0_1'(s(bool,X46))),s(X48,X49)),happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,X46))),s(X45,X47)))) ) | $spl4),
  inference(superposition,[],[f8675,f389])).
fof(f9723,plain,(
  ( ! [X43,X44] : (sP5(sK14,happ(s(fun(X43,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X43,X44)),sK14)) ) | $spl4),
  inference(superposition,[],[f8675,f8626])).
fof(f9718,plain,(
  ( ! [X28,X29,X27] : (sP5(sK14,happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X27))),s(X28,X29)),'F_0') | s(bool,'T_0') = s(bool,X27)) ) | $spl4),
  inference(superposition,[],[f8675,f281])).
fof(f9716,plain,(
  ( ! [X21,X19,X22,X20] : (sP5(sK14,happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X19))),s(X20,X21)),'T_0') | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | $spl4),
  inference(superposition,[],[f8675,f755])).
fof(f9713,plain,(
  ( ! [X10,X8,X11,X9] : (sP5(sK14,happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f8675,f755])).
fof(f9711,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)),X0) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f8675,f755])).
fof(f9708,plain,(
  ( ! [X2,X0,X1] : (sP4(sK14,X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f8675,f393])).
fof(f9595,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11(happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X64))),s(X66,X67)),X65,sK14)) ) | $spl4),
  inference(subsumption_resolution,[],[f9504,f274])).
fof(f9504,plain,(
  ( ! [X66,X64,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11(happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X64))),s(X66,X67)),X65,sK14)) ) | $spl4),
  inference(superposition,[],[f1244,f8626])).
fof(f9592,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,X56)) | p(s(bool,X57)) | ~sP7(X57,sK14,happ(s(fun(X58,bool),'_dst_x0_1'(s(bool,X56))),s(X58,X59)))) ) | $spl4),
  inference(subsumption_resolution,[],[f9502,f274])).
fof(f9502,plain,(
  ( ! [X59,X57,X58,X56] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | p(s(bool,X57)) | ~sP7(X57,sK14,happ(s(fun(X58,bool),'_dst_x0_1'(s(bool,X56))),s(X58,X59)))) ) | $spl4),
  inference(superposition,[],[f1242,f8626])).
fof(f9591,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,X52)) | p(s(bool,X53)) | ~sP4(sK14,happ(s(fun(X54,bool),'_dst_x0_1'(s(bool,X52))),s(X54,X55)),X53)) ) | $spl4),
  inference(subsumption_resolution,[],[f9501,f274])).
fof(f9501,plain,(
  ( ! [X54,X52,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | p(s(bool,X53)) | ~sP4(sK14,happ(s(fun(X54,bool),'_dst_x0_1'(s(bool,X52))),s(X54,X55)),X53)) ) | $spl4),
  inference(superposition,[],[f1241,f8626])).
fof(f9495,plain,(
  ( ! [X37,X36] : (sP5('T_0',sK14,happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)))) ) | $spl4),
  inference(superposition,[],[f1217,f8626])).
fof(f9494,plain,(
  ( ! [X35,X34] : (~sP5('F_0',sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)))) ) | $spl4),
  inference(superposition,[],[f1216,f8626])).
fof(f9493,plain,(
  ( ! [X33,X32] : (sP5('T_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)),sK14)) ) | $spl4),
  inference(superposition,[],[f1215,f8626])).
fof(f9492,plain,(
  ( ! [X30,X31] : (~sP5('F_0',happ(s(fun(X30,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X30,X31)),sK14)) ) | $spl4),
  inference(superposition,[],[f1214,f8626])).
fof(f9582,plain,(
  ( ! [X26,X25] : (~sP11(sK14,X26,X25) | p(s(bool,X26)) | ~p(s(bool,X25))) ) | $spl4),
  inference(subsumption_resolution,[],[f9488,f274])).
fof(f9488,plain,(
  ( ! [X26,X25] : (~p(s(bool,'T_0')) | ~p(s(bool,X25)) | p(s(bool,X26)) | ~sP11(sK14,X26,X25)) ) | $spl4),
  inference(superposition,[],[f462,f8626])).
fof(f9581,plain,(
  ( ! [X24,X23] : (~sP9(sK14,X24,X23) | p(s(bool,X24)) | p(s(bool,X23))) ) | $spl4),
  inference(subsumption_resolution,[],[f9487,f274])).
fof(f9487,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | p(s(bool,X23)) | p(s(bool,X24)) | ~sP9(sK14,X24,X23)) ) | $spl4),
  inference(superposition,[],[f445,f8626])).
fof(f9580,plain,(
  ( ! [X21,X22] : (~sP7(X22,X21,sK14) | p(s(bool,X22)) | ~p(s(bool,X21))) ) | $spl4),
  inference(subsumption_resolution,[],[f9486,f274])).
fof(f9486,plain,(
  ( ! [X21,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X21)) | p(s(bool,X22)) | ~sP7(X22,X21,sK14)) ) | $spl4),
  inference(superposition,[],[f430,f8626])).
fof(f9579,plain,(
  ( ! [X19,X20] : (~sP4(X19,sK14,X20) | p(s(bool,X20)) | ~p(s(bool,X19))) ) | $spl4),
  inference(subsumption_resolution,[],[f9485,f274])).
fof(f9485,plain,(
  ( ! [X19,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X19)) | p(s(bool,X20)) | ~sP4(X19,sK14,X20)) ) | $spl4),
  inference(superposition,[],[f398,f8626])).
fof(f9578,plain,(
  ( ! [X18] : (p(s(bool,X18)) | sP1(X18,sK14)) ) | $spl4),
  inference(subsumption_resolution,[],[f9484,f274])).
fof(f9484,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1(X18,sK14)) ) | $spl4),
  inference(superposition,[],[f384,f8626])).
fof(f9577,plain,(
  ( ! [X17] : (p(s(bool,X17)) | sP1(sK14,X17)) ) | $spl4),
  inference(subsumption_resolution,[],[f9483,f274])).
fof(f9483,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | p(s(bool,X17)) | sP1(sK14,X17)) ) | $spl4),
  inference(superposition,[],[f381,f8626])).
fof(f9277,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),sK14,'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f9270,f8626])).
fof(f9270,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),sK14,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1214,f490,f481,f8671,f397])).
fof(f9272,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f610,f490,f481,f8671,f397])).
fof(f9273,plain,(
  sP5('F_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f494,f490,f481,f8671,f396])).
fof(f9274,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f494,f608,f481,f8671,f396])).
fof(f9264,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f9237,f8626])).
fof(f9237,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f1216,f8655,f481,f8670,f397])).
fof(f9240,plain,(
  sP5('F_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f493,f489,f481,f8670,f397])).
fof(f9241,plain,(
  ( ! [X0,X1] : (sP5('F_0',sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f609,f607,f481,f8670,f397])).
fof(f9206,plain,(
  sP5(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f494,f489,f481,f8669,f396])).
fof(f9194,plain,(
  sP5(sK14,'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f500,f488,f274,f8668,f395])).
fof(f9195,plain,(
  sP5(sK14,sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f500,f8655,f274,f8668,f395])).
fof(f9191,plain,(
  ~sP5('F_0',sK14,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f8665,f392])).
fof(f9186,plain,(
  ~sP5('F_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f8664,f392])).
fof(f9181,plain,(
  ~sP5('F_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f8659,f392])).
fof(f9169,plain,(
  sP5('T_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f492,f496,f274,f8655,f395])).
fof(f9159,plain,(
  ~sP5(sK14,'F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f8654,f393])).
fof(f9154,plain,(
  ~sP5('T_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f8652,f393])).
fof(f8628,plain,(
  ( ! [X0] : (sP0(X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f365])).
fof(f8629,plain,(
  ( ! [X0] : (sP0(sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f366])).
fof(f8630,plain,(
  ~sP1(sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f380])).
fof(f8632,plain,(
  ~sP1('T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f380])).
fof(f8633,plain,(
  ~sP1(sK14,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f479,f380])).
fof(f8634,plain,(
  sP1(sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f381])).
fof(f8635,plain,(
  sP1('F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f384])).
fof(f8639,plain,(
  ~sP5('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f394])).
fof(f8640,plain,(
  ~sP5(sK14,sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f394])).
fof(f8642,plain,(
  sP5('T_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f492,f488,f498,f479,f395])).
fof(f8646,plain,(
  ~sP4(sK14,'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f398])).
fof(f8652,plain,(
  ~sP4('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f398])).
fof(f8654,plain,(
  ~sP4(sK14,sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f479,f398])).
fof(f8655,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f399])).
fof(f8659,plain,(
  ~sP3(sK14,'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f402])).
fof(f8664,plain,(
  ~sP3('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f402])).
fof(f8665,plain,(
  ~sP3(sK14,sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f402])).
fof(f8668,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f403])).
fof(f8669,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f407])).
fof(f8670,plain,(
  ( ! [X0,X1] : (sP2(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f408])).
fof(f8671,plain,(
  ( ! [X0,X1] : (sP2(sK14,X0,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f409])).
fof(f8674,plain,(
  ( ! [X0,X1] : (sP5(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f600,f479,f411])).
fof(f8675,plain,(
  ( ! [X2,X0,X1] : (sP5(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f389,f479,f411])).
fof(f8678,plain,(
  ( ! [X0,X1] : (sP5(sK14,'F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f600,f479,f411])).
fof(f8679,plain,(
  ( ! [X2,X0,X1] : (sP5(sK14,X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f389,f479,f411])).
fof(f8680,plain,(
  ~sP5(sK14,'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f523,f479,f412])).
fof(f8681,plain,(
  ( ! [X0,X1] : (~sP5(sK14,'T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f599,f479,f412])).
fof(f8682,plain,(
  ~sP5(sK14,'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f523,f479,f412])).
fof(f8683,plain,(
  ( ! [X0,X1] : (~sP5(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f599,f479,f412])).
fof(f8684,plain,(
  ( ! [X0] : (~sP7(sK14,X0,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f415])).
fof(f8685,plain,(
  ( ! [X0] : (~sP7(sK14,'F_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f416])).
fof(f8695,plain,(
  ~sP6(sK14,'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f421])).
fof(f8700,plain,(
  ~sP6('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f421])).
fof(f8701,plain,(
  ~sP6(sK14,sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f421])).
fof(f8704,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f422])).
fof(f8706,plain,(
  sP7('T_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f274,f479,f427])).
fof(f8711,plain,(
  sP7('T_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f274,f479,f427])).
fof(f8713,plain,(
  sP7('T_0',sK14,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f479,f427])).
fof(f8715,plain,(
  sP7(sK14,'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f274,f479,f427])).
fof(f8716,plain,(
  sP7(sK14,'T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f274,f479,f427])).
fof(f8717,plain,(
  sP7(sK14,sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f479,f427])).
fof(f8718,plain,(
  sP7(sK14,sK14,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f479,f479,f427])).
fof(f8720,plain,(
  ~sP7('F_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f430])).
fof(f8723,plain,(
  ~sP7('F_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f430])).
fof(f8724,plain,(
  ~sP7('F_0',sK14,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f479,f430])).
fof(f8726,plain,(
  ( ! [X0] : (~sP9('F_0',X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f431])).
fof(f8728,plain,(
  ( ! [X0] : (~sP9('F_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f432])).
fof(f8733,plain,(
  ~sP8(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f479,f438])).
fof(f8734,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f439])).
fof(f8735,plain,(
  ( ! [X0,X1] : (sP8(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f440])).
fof(f8737,plain,(
  ( ! [X0] : (sP9('T_0',X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f443])).
fof(f8740,plain,(
  ( ! [X0] : (sP9(sK14,X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f479,f443])).
fof(f8742,plain,(
  ( ! [X0] : (sP9('T_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f444])).
fof(f8745,plain,(
  ( ! [X0] : (sP9(sK14,sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f479,f444])).
fof(f8746,plain,(
  ~sP9(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f479,f445])).
fof(f8748,plain,(
  ( ! [X0] : (~sP11('F_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f449])).
fof(f8760,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f615,f481,f479,f454])).
fof(f8765,plain,(
  ~sP10(sK14,'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f455])).
fof(f8769,plain,(
  ~sP10('T_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f455])).
fof(f8770,plain,(
  ~sP10(sK14,'F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f455])).
fof(f8773,plain,(
  ( ! [X0,X1] : (sP10(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f457])).
fof(f8775,plain,(
  sP11('F_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f479,f459])).
fof(f8778,plain,(
  ( ! [X0] : (sP11('T_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f479,f461])).
fof(f8781,plain,(
  ( ! [X0] : (sP11(sK14,sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f479,f461])).
fof(f8783,plain,(
  ~sP11('T_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f462])).
fof(f8785,plain,(
  ~sP11(sK14,'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f274,f479,f462])).
fof(f8786,plain,(
  ~sP11(sK14,'F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f479,f462])).
fof(f8787,plain,(
  ( ! [X0] : (sP11(sK14,'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f512,f479,f465])).
fof(f8788,plain,(
  ( ! [X0] : (sP11(sK14,X0,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f510,f479,f465])).
fof(f8789,plain,(
  ( ! [X2,X0,X1] : (sP11(sK14,X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f614,f479,f465])).
fof(f8790,plain,(
  ( ! [X0] : (sP9(sK14,X0,'T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f506,f479,f466])).
fof(f8791,plain,(
  ( ! [X0] : (sP9(sK14,'T_0',X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f508,f479,f466])).
fof(f8792,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,sK14))),s(X1,X2)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f1237])).
fof(f8793,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),X2)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f1238])).
fof(f8794,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f1239])).
fof(f8795,plain,(
  ( ! [X0,X1] : (sP1('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f479,f1240])).
fof(f8796,plain,(
  ( ! [X0,X1] : (~sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1241])).
fof(f8801,plain,(
  ( ! [X0,X1] : (~sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1241])).
fof(f8802,plain,(
  ( ! [X0,X1] : (~sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f1241])).
fof(f8804,plain,(
  ( ! [X0,X1] : (~sP7('F_0','T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1242])).
fof(f8807,plain,(
  ( ! [X0,X1] : (~sP7('F_0',sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1242])).
fof(f8808,plain,(
  ( ! [X0,X1] : (~sP7('F_0',sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f1242])).
fof(f8809,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0','F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f479,f1243])).
fof(f8810,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0','T_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1244])).
fof(f8812,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0',sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f479,f1244])).
fof(f8813,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0',sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f481,f479,f1244])).
fof(f8612,plain,(
  ( ! [X72,X71,X73] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X72) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X71,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X72))),s(X71,X73)),sK13,sK12)),s(fun(sK12,bool),X72)))) ) | $spl2),
  inference(forward_demodulation,[],[f8611,f478])).
fof(f8611,plain,(
  ( ! [X72,X71,X73] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X71,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X72))),s(X71,X73)),sK13,sK12)),s(fun(sK12,bool),X72))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X72)) ) | $spl2),
  inference(forward_demodulation,[],[f8509,f600])).
fof(f8509,plain,(
  ( ! [X72,X71,X73] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X71,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X72))),s(X71,X73)),sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X71,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X72))),s(X71,X73)),sK13,sK12)),s(fun(sK12,bool),X72))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X72)) ) | $spl2),
  inference(superposition,[],[f1777,f478])).
fof(f8608,plain,(
  ( ! [X66,X67,X65] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X66) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X65,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X66))),s(X65,X67)),sK12)),s(fun(sK12,bool),X66)))) ) | $spl2),
  inference(forward_demodulation,[],[f8607,f478])).
fof(f8607,plain,(
  ( ! [X66,X67,X65] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X65,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X66))),s(X65,X67)),sK12)),s(fun(sK12,bool),X66))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X66)) ) | $spl2),
  inference(forward_demodulation,[],[f8507,f600])).
fof(f8507,plain,(
  ( ! [X66,X67,X65] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X65,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X66))),s(X65,X67)),sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X65,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X66))),s(X65,X67)),sK12)),s(fun(sK12,bool),X66))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X66)) ) | $spl2),
  inference(superposition,[],[f1776,f478])).
fof(f8604,plain,(
  ( ! [X61] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X61) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(X61,sK13,sK12)),s(fun(sK12,bool),X61)))) ) | $spl2),
  inference(forward_demodulation,[],[f8603,f478])).
fof(f8603,plain,(
  ( ! [X61] : (s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X61) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(X61,sK13,sK12)),s(fun(sK12,bool),X61)))) ) | $spl2),
  inference(subsumption_resolution,[],[f8505,f600])).
fof(f8505,plain,(
  ( ! [X61] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X61,sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X61) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(X61,sK13,sK12)),s(fun(sK12,bool),X61)))) ) | $spl2),
  inference(superposition,[],[f1772,f478])).
fof(f8602,plain,(
  ( ! [X60] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X60) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X60,sK12)),s(fun(sK12,bool),X60)))) ) | $spl2),
  inference(forward_demodulation,[],[f8601,f478])).
fof(f8601,plain,(
  ( ! [X60] : (s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X60) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X60,sK12)),s(fun(sK12,bool),X60)))) ) | $spl2),
  inference(subsumption_resolution,[],[f8504,f600])).
fof(f8504,plain,(
  ( ! [X60] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X60,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X60) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X60,sK12)),s(fun(sK12,bool),X60)))) ) | $spl2),
  inference(superposition,[],[f1769,f478])).
fof(f8599,plain,(
  ( ! [X52,X53,X51] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK20(sK13,happ(s(fun(X52,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X51))),s(X52,X53)),sK12))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X51),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f8501,f478])).
fof(f8501,plain,(
  ( ! [X52,X53,X51] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X51),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK20(sK13,happ(s(fun(X52,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X51))),s(X52,X53)),sK12)))))) ) | $spl2),
  inference(superposition,[],[f1591,f478])).
fof(f8499,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X45),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,'const.bool.IN_2'(s(sK12,sK20(sK13,happ(s(fun(X46,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),X45))),s(X46,X47)),sK12)),s(fun(sK12,bool),X45))))) ) | $spl2),
  inference(superposition,[],[f1580,f478])).
fof(f8584,plain,(
  ( ! [X13] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK20(sK13,X13,sK12))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X13),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f8486,f478])).
fof(f8486,plain,(
  ( ! [X13] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X13),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK20(sK13,X13,sK12)))))) ) | $spl2),
  inference(superposition,[],[f346,f478])).
fof(f8484,plain,(
  ( ! [X11] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X11),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,'const.bool.IN_2'(s(sK12,sK20(sK13,X11,sK12)),s(fun(sK12,bool),X11))))) ) | $spl2),
  inference(superposition,[],[f345,f478])).
fof(f8583,plain,(
  ( ! [X10] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X10))))) ) | $spl2),
  inference(subsumption_resolution,[],[f8582,f481])).
fof(f8582,plain,(
  ( ! [X10] : (p(s(bool,'F_0')) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f8581,f600])).
fof(f8581,plain,(
  ( ! [X10] : (p(s(bool,'const.bool.IN_2'(s(sK12,sK20(X10,sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X10))))) ) | $spl2),
  inference(forward_demodulation,[],[f8483,f478])).
fof(f8483,plain,(
  ( ! [X10] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X10)))) | p(s(bool,'const.bool.IN_2'(s(sK12,sK20(X10,sK13,sK12)),s(fun(sK12,bool),sK13))))) ) | $spl2),
  inference(superposition,[],[f345,f478])).
fof(f8580,plain,(
  ( ! [X9] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X9) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X9,sK12)),s(fun(sK12,bool),X9)))) ) | $spl2),
  inference(forward_demodulation,[],[f8579,f478])).
fof(f8579,plain,(
  ( ! [X9] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X9,sK12)),s(fun(sK12,bool),X9))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X9)) ) | $spl2),
  inference(forward_demodulation,[],[f8482,f600])).
fof(f8482,plain,(
  ( ! [X9] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X9,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,X9,sK12)),s(fun(sK12,bool),X9))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X9)) ) | $spl2),
  inference(superposition,[],[f344,f478])).
fof(f8578,plain,(
  ( ! [X8] : (s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),X8) | s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X8,sK13,sK12)),s(fun(sK12,bool),X8)))) ) | $spl2),
  inference(forward_demodulation,[],[f8577,f478])).
fof(f8577,plain,(
  ( ! [X8] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(X8,sK13,sK12)),s(fun(sK12,bool),X8))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X8)) ) | $spl2),
  inference(forward_demodulation,[],[f8481,f600])).
fof(f8481,plain,(
  ( ! [X8] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(X8,sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(X8,sK13,sK12)),s(fun(sK12,bool),X8))) | s(fun(sK12,bool),sK13) = s(fun(sK12,bool),X8)) ) | $spl2),
  inference(superposition,[],[f344,f478])).
fof(f8472,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) | ($spl0 | $spl2)),
  inference(backward_demodulation,[],[f478,f475])).
fof(f7943,plain,(
  ( ! [X57,X54,X58,X56] : (~sP4(sK14,happ(s(fun(X57,bool),'_dst_x0_1'(s(bool,X54))),s(X57,X58)),X56) | p(s(bool,X56)) | s(bool,'F_0') = s(bool,X54)) ) | $spl4),
  inference(forward_demodulation,[],[f7942,f389])).
fof(f7942,plain,(
  ( ! [X57,X54,X58,X56,X55,X53] : (p(s(bool,X56)) | ~sP4(sK14,happ(s(fun(X57,bool),'_dst_x0_1'(s(bool,happ(s(fun(X53,bool),'_dst_x0_1'(s(bool,X54))),s(X53,X55))))),s(X57,X58)),X56) | s(bool,'F_0') = s(bool,X54)) ) | $spl4),
  inference(subsumption_resolution,[],[f7925,f274])).
fof(f7925,plain,(
  ( ! [X57,X54,X58,X56,X55,X53] : (~p(s(bool,'T_0')) | p(s(bool,X56)) | ~sP4(sK14,happ(s(fun(X57,bool),'_dst_x0_1'(s(bool,happ(s(fun(X53,bool),'_dst_x0_1'(s(bool,X54))),s(X53,X55))))),s(X57,X58)),X56) | s(bool,'F_0') = s(bool,X54)) ) | $spl4),
  inference(superposition,[],[f6290,f1228])).
fof(f7932,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | ~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3)),X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f7912,f274])).
fof(f7912,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | ~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3)),X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | $spl4),
  inference(superposition,[],[f6290,f755])).
fof(f7909,plain,(
  ( ! [X0,X1] : (~sP4(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f6290])).
fof(f7596,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X21) != s(bool,'const.bool.IN_2'(s(X16,sK19(happ(s(fun(X17,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X18))),s(X17,X19)),X20,X16)),s(fun(X16,bool),X18))) | s(fun(X16,bool),X18) = s(fun(X16,bool),X20) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X16,sK19(happ(s(fun(X17,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X18))),s(X17,X19)),X20,X16)),s(fun(X16,bool),X20))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f1777,f755])).
fof(f7594,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X4,sK19(happ(s(fun(X5,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X6))),s(X5,X7)),X8,X4)),s(fun(X4,bool),X6))) | s(fun(X4,bool),X6) = s(fun(X4,bool),X8) | s(bool,X9) = s(bool,'const.bool.IN_2'(s(X4,sK19(happ(s(fun(X5,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X6))),s(X5,X7)),X8,X4)),s(fun(X4,bool),X8))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1777,f755])).
fof(f7564,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X21) != s(bool,'const.bool.IN_2'(s(X16,sK19(happ(s(fun(X17,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X18))),s(X17,X19)),X20,X16)),s(fun(X16,bool),X20))) | s(fun(X16,bool),X18) = s(fun(X16,bool),X20) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X16,sK19(happ(s(fun(X17,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X18))),s(X17,X19)),X20,X16)),s(fun(X16,bool),X18))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f1777,f755])).
fof(f7562,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X4,sK19(happ(s(fun(X5,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X6))),s(X5,X7)),X8,X4)),s(fun(X4,bool),X8))) | s(fun(X4,bool),X6) = s(fun(X4,bool),X8) | s(bool,X9) = s(bool,'const.bool.IN_2'(s(X4,sK19(happ(s(fun(X5,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X6))),s(X5,X7)),X8,X4)),s(fun(X4,bool),X6))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1777,f755])).
fof(f7545,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X21) != s(bool,'const.bool.IN_2'(s(X16,sK19(X17,happ(s(fun(X18,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X19))),s(X18,X20)),X16)),s(fun(X16,bool),X19))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X19) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X16,sK19(X17,happ(s(fun(X18,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X19))),s(X18,X20)),X16)),s(fun(X16,bool),X17))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7543,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X4,sK19(X5,happ(s(fun(X6,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X7))),s(X6,X8)),X4)),s(fun(X4,bool),X7))) | s(fun(X4,bool),X5) = s(fun(X4,bool),X7) | s(bool,X9) = s(bool,'const.bool.IN_2'(s(X4,sK19(X5,happ(s(fun(X6,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X7))),s(X6,X8)),X4)),s(fun(X4,bool),X5))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7513,plain,(
  ( ! [X21,X19,X17,X20,X18,X16] : (s(bool,X21) != s(bool,'const.bool.IN_2'(s(X16,sK19(X17,happ(s(fun(X18,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X19))),s(X18,X20)),X16)),s(fun(X16,bool),X17))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X19) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X16,sK19(X17,happ(s(fun(X18,fun(X16,bool)),'_dst_x0_1'(s(fun(X16,bool),X19))),s(X18,X20)),X16)),s(fun(X16,bool),X19))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7511,plain,(
  ( ! [X6,X4,X8,X7,X5,X9] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X4,sK19(X5,happ(s(fun(X6,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X7))),s(X6,X8)),X4)),s(fun(X4,bool),X5))) | s(fun(X4,bool),X5) = s(fun(X4,bool),X7) | s(bool,X9) = s(bool,'const.bool.IN_2'(s(X4,sK19(X5,happ(s(fun(X6,fun(X4,bool)),'_dst_x0_1'(s(fun(X4,bool),X7))),s(X6,X8)),X4)),s(fun(X4,bool),X7))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f1776,f755])).
fof(f7502,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,'const.pred_set.EMPTY_0',X0)),s(fun(X0,bool),X1)))) )),
  inference(trivial_inequality_removal,[],[f7494])).
fof(f7494,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'F_0') | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,'const.pred_set.EMPTY_0',X0)),s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f1772,f600])).
fof(f7481,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19(X1,X2,X0)),s(fun(X0,bool),X1)))) )),
  inference(condensation,[],[f7480])).
fof(f7480,plain,(
  ( ! [X12,X10,X13,X11] : (s(fun(X10,bool),X11) = s(fun(X10,bool),X12) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X10,sK19(X11,X12,X10)),s(fun(X10,bool),X12))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X10,sK19(X11,X12,X10)),s(fun(X10,bool),X11))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(subsumption_resolution,[],[f7473,f281])).
fof(f7473,plain,(
  ( ! [X12,X10,X13,X11] : (s(bool,'F_0') != s(bool,X13) | s(fun(X10,bool),X11) = s(fun(X10,bool),X12) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X10,sK19(X11,X12,X10)),s(fun(X10,bool),X12))) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X10,sK19(X11,X12,X10)),s(fun(X10,bool),X11))) | s(bool,'T_0') = s(bool,X13)) )),
  inference(superposition,[],[f1769,f755])).
fof(f7477,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19('const.pred_set.EMPTY_0',X1,X0)),s(fun(X0,bool),X1)))) )),
  inference(trivial_inequality_removal,[],[f7469])).
fof(f7469,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'F_0') | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X0,sK19('const.pred_set.EMPTY_0',X1,X0)),s(fun(X0,bool),X1)))) )),
  inference(superposition,[],[f1769,f600])).
fof(f6529,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f6222,f755])).
fof(f6486,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,X84)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP11(happ(s(fun(X88,bool),'_dst_x0_1'(s(bool,X86))),s(X88,X89)),X87,happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X84))),s(X83,X85)))) )),
  inference(superposition,[],[f1244,f389])).
fof(f6496,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP11(happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)),X80,sK14)) ) | $spl4),
  inference(subsumption_resolution,[],[f6485,f274])).
fof(f6485,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP11(happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)),X80,sK14)) ) | $spl4),
  inference(superposition,[],[f1244,f526])).
fof(f6487,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,X0) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f6470,f274])).
fof(f6470,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,X0) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1244,f755])).
fof(f6469,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f274,f1244])).
fof(f6445,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f6428,f274])).
fof(f6428,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X0))),s(X3,X4)),X2,X1) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1243,f755])).
fof(f6427,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f481,f1243])).
fof(f6394,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2320,f755])).
fof(f6378,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,X84)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP7(X87,happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X84))),s(X83,X85)),happ(s(fun(X88,bool),'_dst_x0_1'(s(bool,X86))),s(X88,X89)))) )),
  inference(superposition,[],[f1242,f389])).
fof(f6389,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,sK14,happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)))) ) | $spl4),
  inference(subsumption_resolution,[],[f6377,f274])).
fof(f6377,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP7(X80,sK14,happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)))) ) | $spl4),
  inference(superposition,[],[f1242,f526])).
fof(f6380,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f6362,f274])).
fof(f6362,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X0,happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4))) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1242,f755])).
fof(f6359,plain,(
  ( ! [X0,X1] : (~sP7('F_0','T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f274,f481,f274,f1242])).
fof(f6328,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2296,f755])).
fof(f6294,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2287,f755])).
fof(f6277,plain,(
  ( ! [X88,X87,X85,X83,X89,X86,X84] : (~p(s(bool,X84)) | ~p(s(bool,X86)) | p(s(bool,X87)) | ~sP4(happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X84))),s(X83,X85)),happ(s(fun(X88,bool),'_dst_x0_1'(s(bool,X86))),s(X88,X89)),X87)) )),
  inference(superposition,[],[f1241,f389])).
fof(f6290,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,X79)) | p(s(bool,X80)) | ~sP4(sK14,happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)),X80)) ) | $spl4),
  inference(subsumption_resolution,[],[f6276,f274])).
fof(f6276,plain,(
  ( ! [X80,X81,X79,X82] : (~p(s(bool,'T_0')) | ~p(s(bool,X79)) | p(s(bool,X80)) | ~sP4(sK14,happ(s(fun(X81,bool),'_dst_x0_1'(s(bool,X79))),s(X81,X82)),X80)) ) | $spl4),
  inference(superposition,[],[f1241,f526])).
fof(f6281,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(subsumption_resolution,[],[f6261,f274])).
fof(f6261,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2) | s(bool,X0) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1241,f755])).
fof(f6255,plain,(
  ( ! [X0,X1] : (~sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f274,f1241])).
fof(f6225,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2254,f755])).
fof(f6222,plain,(
  ( ! [X0,X1] : (sP4('T_0',sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f2254,f393])).
fof(f6190,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14,'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2231,f755])).
fof(f5956,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f2218,f755])).
fof(f5936,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5920,f274])).
fof(f5920,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1240,f755])).
fof(f5919,plain,(
  ( ! [X0,X1] : (sP1('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f274,f481,f1240])).
fof(f5898,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3)),X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f5882,f274])).
fof(f5882,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X0))),s(X2,X3)),X1) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1239,f755])).
fof(f5881,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f1239])).
fof(f1275,plain,(
  ( ! [X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f1245])).
fof(f1644,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f1246])).
fof(f1610,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK21(X12,sK14,X11)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1608,f274])).
fof(f1608,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK21(X12,sK14,X11)))))) ) | $spl4),
  inference(superposition,[],[f349,f526])).
fof(f1627,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK22(X12,sK14,X11)))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1625,f274])).
fof(f1625,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13)))) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK22(X12,sK14,X11)))))) ) | $spl4),
  inference(superposition,[],[f351,f526])).
fof(f1643,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK23(sK14,X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1641,f274])).
fof(f1641,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK23(sK14,X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13))))) ) | $spl4),
  inference(superposition,[],[f352,f526])).
fof(f1670,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK24(sK14,X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13))))) ) | $spl4),
  inference(subsumption_resolution,[],[f1668,f274])).
fof(f1668,plain,(
  ( ! [X12,X13,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X11,bool),X12),s(X11,sK24(sK14,X12,X11))))) | ~p(s(bool,happ(s(fun(X11,bool),X12),s(X11,X13))))) ) | $spl4),
  inference(superposition,[],[f354,f526])).
fof(f3197,plain,(
  ( ! [X420,X418,X417,X419] : (s(X419,f(s(bool,'T_0'))) != s(X419,g(s(bool,'T_0'))) | s(fun(bool,X419),X417) = s(fun(bool,X419),X418) | s(bool,X420) = s(bool,sK28(X417,X418,X419,bool)) | s(bool,'T_0') = s(bool,X420)) )),
  inference(superposition,[],[f390,f755])).
fof(f3143,plain,(
  ( ! [X246,X248,X247,X245] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X245,sK19(X246,X247,X245)),s(fun(X245,bool),X247))) | s(fun(X245,bool),X246) = s(fun(X245,bool),X247) | s(bool,X248) = s(bool,'const.bool.IN_2'(s(X245,sK19(X246,X247,X245)),s(fun(X245,bool),X246))) | s(bool,'T_0') = s(bool,X248)) )),
  inference(superposition,[],[f344,f755])).
fof(f3142,plain,(
  ( ! [X243,X241,X244,X242] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X241,sK19(X242,X243,X241)),s(fun(X241,bool),X242))) | s(fun(X241,bool),X242) = s(fun(X241,bool),X243) | s(bool,X244) = s(bool,'const.bool.IN_2'(s(X241,sK19(X242,X243,X241)),s(fun(X241,bool),X243))) | s(bool,'T_0') = s(bool,X244)) )),
  inference(superposition,[],[f344,f755])).
fof(f3924,plain,(
  ( ! [X99,X97,X95,X98,X96] : (sP0(happ(s(fun(X96,bool),'_dst_x0_1'(s(bool,X95))),s(X96,X97)),X98) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(subsumption_resolution,[],[f3079,f274])).
fof(f3079,plain,(
  ( ! [X99,X97,X95,X98,X96] : (~p(s(bool,'T_0')) | sP0(happ(s(fun(X96,bool),'_dst_x0_1'(s(bool,X95))),s(X96,X97)),X98) | s(bool,X95) = s(bool,X99) | s(bool,'T_0') = s(bool,X99)) )),
  inference(superposition,[],[f1238,f755])).
fof(f3923,plain,(
  ( ! [X94,X92,X90,X93,X91] : (sP0(X91,happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,X90))),s(X92,X93))) | s(bool,X90) = s(bool,X94) | s(bool,'T_0') = s(bool,X94)) )),
  inference(subsumption_resolution,[],[f3078,f274])).
fof(f3078,plain,(
  ( ! [X94,X92,X90,X93,X91] : (~p(s(bool,'T_0')) | sP0(X91,happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,X90))),s(X92,X93))) | s(bool,X90) = s(bool,X94) | s(bool,'T_0') = s(bool,X94)) )),
  inference(superposition,[],[f1237,f755])).
fof(f3077,plain,(
  ( ! [X88,X87,X89,X86] : (sP5('T_0',X86,happ(s(fun(X87,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X87,X88))) | s(bool,X86) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f1217,f755])).
fof(f3076,plain,(
  ( ! [X85,X83,X84,X82] : (~sP5('F_0',X82,happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X83,X84))) | s(bool,X82) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) )),
  inference(superposition,[],[f1216,f755])).
fof(f3075,plain,(
  ( ! [X80,X78,X81,X79] : (sP5('T_0',happ(s(fun(X79,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X79,X80)),X78) | s(bool,X78) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) )),
  inference(superposition,[],[f1215,f755])).
fof(f3074,plain,(
  ( ! [X76,X74,X77,X75] : (~sP5('F_0',happ(s(fun(X75,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X75,X76)),X74) | s(bool,X74) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) )),
  inference(superposition,[],[f1214,f755])).
fof(f3922,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(subsumption_resolution,[],[f3070,f274])).
fof(f3070,plain,(
  ( ! [X66,X64,X65,X63] : (~p(s(bool,'T_0')) | ~p(s(bool,X64)) | p(s(bool,X65)) | ~sP11(X63,X65,X64) | s(bool,X63) = s(bool,X66) | s(bool,'T_0') = s(bool,X66)) )),
  inference(superposition,[],[f462,f755])).
fof(f3921,plain,(
  ( ! [X61,X59,X62,X60] : (p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(subsumption_resolution,[],[f3069,f274])).
fof(f3069,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'T_0')) | p(s(bool,X60)) | p(s(bool,X61)) | ~sP9(X59,X61,X60) | s(bool,X59) = s(bool,X62) | s(bool,'T_0') = s(bool,X62)) )),
  inference(superposition,[],[f445,f755])).
fof(f3920,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,X56)) | p(s(bool,X57)) | ~sP7(X57,X56,X55) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(subsumption_resolution,[],[f3068,f274])).
fof(f3068,plain,(
  ( ! [X57,X58,X56,X55] : (~p(s(bool,'T_0')) | ~p(s(bool,X56)) | p(s(bool,X57)) | ~sP7(X57,X56,X55) | s(bool,X55) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) )),
  inference(superposition,[],[f430,f755])).
fof(f3919,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,X52)) | p(s(bool,X53)) | ~sP4(X52,X51,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(subsumption_resolution,[],[f3067,f274])).
fof(f3067,plain,(
  ( ! [X54,X52,X53,X51] : (~p(s(bool,'T_0')) | ~p(s(bool,X52)) | p(s(bool,X53)) | ~sP4(X52,X51,X53) | s(bool,X51) = s(bool,X54) | s(bool,'T_0') = s(bool,X54)) )),
  inference(superposition,[],[f398,f755])).
fof(f3918,plain,(
  ( ! [X50,X48,X49] : (p(s(bool,X49)) | sP1(X49,X48) | s(bool,X48) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(subsumption_resolution,[],[f3066,f274])).
fof(f3066,plain,(
  ( ! [X50,X48,X49] : (~p(s(bool,'T_0')) | p(s(bool,X49)) | sP1(X49,X48) | s(bool,X48) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) )),
  inference(superposition,[],[f384,f755])).
fof(f3917,plain,(
  ( ! [X47,X45,X46] : (p(s(bool,X46)) | sP1(X45,X46) | s(bool,X45) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f3065,f274])).
fof(f3065,plain,(
  ( ! [X47,X45,X46] : (~p(s(bool,'T_0')) | p(s(bool,X46)) | sP1(X45,X46) | s(bool,X45) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f381,f755])).
fof(f3916,plain,(
  ( ! [X43,X44,X42] : (sP0(X42,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f3064,f274])).
fof(f3064,plain,(
  ( ! [X43,X44,X42] : (~p(s(bool,'T_0')) | sP0(X42,X43) | s(bool,X42) = s(bool,X44) | s(bool,'T_0') = s(bool,X44)) )),
  inference(superposition,[],[f366,f755])).
fof(f3915,plain,(
  ( ! [X39,X41,X40] : (sP0(X40,X39) | s(bool,X39) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(subsumption_resolution,[],[f3063,f274])).
fof(f3063,plain,(
  ( ! [X39,X41,X40] : (~p(s(bool,'T_0')) | sP0(X40,X39) | s(bool,X39) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f365,f755])).
fof(f3914,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,X37)) | s(bool,X36) = s(bool,X37) | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(subsumption_resolution,[],[f3062,f274])).
fof(f3062,plain,(
  ( ! [X37,X38,X36] : (~p(s(bool,'T_0')) | ~p(s(bool,X37)) | s(bool,X36) = s(bool,X37) | s(bool,X36) = s(bool,X38) | s(bool,'T_0') = s(bool,X38)) )),
  inference(superposition,[],[f363,f755])).
fof(f3909,plain,(
  ( ! [X6,X7] : (s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f3054,f274])).
fof(f3054,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | s(bool,'F_0') != s(bool,X6) | s(bool,X6) = s(bool,X7) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f296,f755])).
fof(f3014,plain,(
  ( ! [X246,X247] : (s(bool,X246) != s(bool,'const.bool.IN_2'(s(bool,X246),s(fun(bool,bool),'const.pred_set.EMPTY_0'))) | s(bool,X246) = s(bool,X247) | s(bool,'T_0') = s(bool,X247)) )),
  inference(superposition,[],[f599,f755])).
fof(f2998,plain,(
  ( ! [X187,X185,X186,X184] : (sP5('T_0','T_0',happ(s(fun(X185,bool),'_dst_x0_1'(s(bool,X184))),s(X185,X186))) | s(bool,X184) = s(bool,X187) | s(bool,'T_0') = s(bool,X187)) )),
  inference(superposition,[],[f1217,f755])).
fof(f2997,plain,(
  ( ! [X182,X180,X183,X181] : (~sP5('F_0','T_0',happ(s(fun(X181,bool),'_dst_x0_1'(s(bool,X180))),s(X181,X182))) | s(bool,X180) = s(bool,X183) | s(bool,'T_0') = s(bool,X183)) )),
  inference(superposition,[],[f1216,f755])).
fof(f2996,plain,(
  ( ! [X177,X178,X176,X179] : (sP5('T_0',happ(s(fun(X177,bool),'_dst_x0_1'(s(bool,X176))),s(X177,X178)),'T_0') | s(bool,X176) = s(bool,X179) | s(bool,'T_0') = s(bool,X179)) )),
  inference(superposition,[],[f1215,f755])).
fof(f2995,plain,(
  ( ! [X175,X173,X174,X172] : (~sP5('F_0',happ(s(fun(X173,bool),'_dst_x0_1'(s(bool,X172))),s(X173,X174)),'T_0') | s(bool,X172) = s(bool,X175) | s(bool,'T_0') = s(bool,X175)) )),
  inference(superposition,[],[f1214,f755])).
fof(f2938,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) != s(bool,X3) | p(s(bool,X3)) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f292,f755])).
fof(f2788,plain,(
  ( ! [X424,X426,X423,X425] : (s(X425,f(s(bool,X426))) != s(X425,g(s(bool,X426))) | s(fun(bool,X425),X423) = s(fun(bool,X425),X424) | s(bool,'T_0') = s(bool,X426) | s(bool,'T_0') = s(bool,sK28(X423,X424,X425,bool))) )),
  inference(superposition,[],[f390,f755])).
fof(f2733,plain,(
  ( ! [X251,X249,X252,X250] : (s(bool,X252) != s(bool,'const.bool.IN_2'(s(X249,sK19(X250,X251,X249)),s(fun(X249,bool),X251))) | s(fun(X249,bool),X250) = s(fun(X249,bool),X251) | s(bool,'T_0') = s(bool,X252) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X249,sK19(X250,X251,X249)),s(fun(X249,bool),X250)))) )),
  inference(superposition,[],[f344,f755])).
fof(f2732,plain,(
  ( ! [X246,X248,X247,X245] : (s(bool,X248) != s(bool,'const.bool.IN_2'(s(X245,sK19(X246,X247,X245)),s(fun(X245,bool),X246))) | s(fun(X245,bool),X246) = s(fun(X245,bool),X247) | s(bool,'T_0') = s(bool,X248) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(X245,sK19(X246,X247,X245)),s(fun(X245,bool),X247)))) )),
  inference(superposition,[],[f344,f755])).
fof(f2667,plain,(
  ( ! [X88,X87,X89,X86] : (sP5('T_0',X86,happ(s(fun(X88,bool),'_dst_x0_1'(s(bool,X87))),s(X88,X89))) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f1217,f755])).
fof(f2666,plain,(
  ( ! [X85,X83,X84,X82] : (~sP5('F_0',X82,happ(s(fun(X84,bool),'_dst_x0_1'(s(bool,X83))),s(X84,X85))) | s(bool,'T_0') = s(bool,X83) | s(bool,'T_0') = s(bool,X82)) )),
  inference(superposition,[],[f1216,f755])).
fof(f2665,plain,(
  ( ! [X80,X78,X81,X79] : (sP5('T_0',happ(s(fun(X80,bool),'_dst_x0_1'(s(bool,X79))),s(X80,X81)),X78) | s(bool,'T_0') = s(bool,X79) | s(bool,'T_0') = s(bool,X78)) )),
  inference(superposition,[],[f1215,f755])).
fof(f2664,plain,(
  ( ! [X76,X74,X77,X75] : (~sP5('F_0',happ(s(fun(X76,bool),'_dst_x0_1'(s(bool,X75))),s(X76,X77)),X74) | s(bool,'T_0') = s(bool,X75) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1214,f755])).
fof(f2625,plain,(
  ( ! [X23,X21,X22,X20] : (s(bool,'T_0') = s(bool,X21) | s(bool,X23) = s(bool,happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X21))),s(X20,X22))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f755,f389])).
fof(f2611,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f755,f755])).
fof(f2596,plain,(
  ( ! [X30,X28,X29,X27] : (s(bool,X28) = s(bool,X30) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,happ(s(fun(X27,bool),'_dst_x0_1'(s(bool,X28))),s(X27,X29)))) )),
  inference(superposition,[],[f755,f389])).
fof(f2471,plain,(
  ( ! [X2,X0,X1] : (sP0(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),X2)) )),
  inference(unit_resulting_resolution,[],[f274,f1238])).
fof(f2368,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f274,f1237])).
fof(f2357,plain,(
  ( ! [X6,X8,X7] : (s(bool,X8) = s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f2351,f481])).
fof(f2351,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,'F_0')) | s(bool,X8) = s(bool,'const.bool.IN_2'(s(X6,X7),s(fun(X6,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f818,f600])).
fof(f2320,plain,(
  ( ! [X14,X15] : (sP5('T_0',sK14,happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X14,X15)))) ) | $spl4),
  inference(superposition,[],[f1217,f526])).
fof(f2316,plain,(
  ( ! [X4,X5,X3] : (sP5('T_0','F_0',happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1217,f281])).
fof(f2312,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) )),
  inference(unit_resulting_resolution,[],[f1217,f393])).
fof(f2287,plain,(
  ( ! [X14,X15] : (~sP5('F_0',sK14,happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X14,X15)))) ) | $spl4),
  inference(superposition,[],[f1216,f526])).
fof(f2283,plain,(
  ( ! [X4,X5,X3] : (~sP5('F_0','F_0',happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1216,f281])).
fof(f2296,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f2277,f526])).
fof(f2277,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f497,f487,f1216,f397])).
fof(f2278,plain,(
  ( ! [X0,X1] : (~sP3('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f498,f488,f1216,f397])).
fof(f2255,plain,(
  ( ! [X19,X17,X20,X18,X16] : (sP5('T_0',happ(s(fun(X19,bool),'_dst_x0_1'(s(bool,X17))),s(X19,X20)),happ(s(fun(X16,bool),'_dst_x0_1'(s(bool,X17))),s(X16,X18)))) )),
  inference(superposition,[],[f1215,f389])).
fof(f2254,plain,(
  ( ! [X14,X15] : (sP5('T_0',happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X14,X15)),sK14)) ) | $spl4),
  inference(superposition,[],[f1215,f526])).
fof(f2250,plain,(
  ( ! [X4,X5,X3] : (sP5('T_0',happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1215,f281])).
fof(f2246,plain,(
  ( ! [X2,X0,X1] : (sP4('T_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f1215,f393])).
fof(f2219,plain,(
  ( ! [X19,X17,X20,X18,X16] : (~sP5('F_0',happ(s(fun(X19,bool),'_dst_x0_1'(s(bool,X17))),s(X19,X20)),happ(s(fun(X16,bool),'_dst_x0_1'(s(bool,X17))),s(X16,X18)))) )),
  inference(superposition,[],[f1214,f389])).
fof(f2218,plain,(
  ( ! [X14,X15] : (~sP5('F_0',happ(s(fun(X14,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X14,X15)),sK14)) ) | $spl4),
  inference(superposition,[],[f1214,f526])).
fof(f2214,plain,(
  ( ! [X4,X5,X3] : (~sP5('F_0',happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5)),'F_0') | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f1214,f281])).
fof(f2231,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),sK14,'F_0')) ) | $spl4),
  inference(forward_demodulation,[],[f2203,f526])).
fof(f2203,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),sK14,'F_0')) ) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f499,f490,f1214,f397])).
fof(f2210,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'T_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f1214,f395])).
fof(f2112,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.bool.IN_2'(s(bool,X1),s(fun(bool,bool),'const.pred_set.EMPTY_0'))) | s(bool,'T_0') = s(bool,X1)) )),
  inference(superposition,[],[f600,f281])).
fof(f2106,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f600,f413])).
fof(f2107,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f600,f411])).
fof(f2108,plain,(
  ( ! [X0,X1] : (~sP5('F_0','F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f481,f600,f413])).
fof(f2079,plain,(
  ( ! [X0,X1] : (~sP5('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f599,f412])).
fof(f2082,plain,(
  ( ! [X0,X1] : (~sP5('T_0','T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f274,f599,f412])).
fof(f2033,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f615,f454])).
fof(f2013,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0',X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f274,f614,f465])).
fof(f1994,plain,(
  ( ! [X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f481,f613,f437])).
fof(f1655,plain,(
  ( ! [X4,X5,X3] : (sP1(happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5)),sK14) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f1646,f481])).
fof(f1646,plain,(
  ( ! [X4,X5,X3] : (sP1(happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5)),sK14) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f1246,f281])).
fof(f1446,plain,(
  sP5('F_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f493,f489,f497,f481,f397])).
fof(f1448,plain,(
  ( ! [X0,X1] : (sP5('F_0',sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f609,f607,f497,f481,f397])).
fof(f1461,plain,(
  ( ! [X0,X1] : (sP5('F_0','T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f609,f607,f498,f481,f397])).
fof(f1465,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f610,f490,f499,f481,f397])).
fof(f1466,plain,(
  ~sP3('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f897,f488,f499,f481,f397])).
fof(f1380,plain,(
  sP5(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f494,f489,f495,f481,f396])).
fof(f1384,plain,(
  ( ! [X0,X1] : (sP5(sK14,'F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f491,f607,f495,f481,f396])).
fof(f1389,plain,(
  sP5('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f494,f489,f496,f481,f396])).
fof(f1393,plain,(
  ( ! [X0,X1] : (sP5('T_0','F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f492,f607,f496,f481,f396])).
fof(f1396,plain,(
  sP5('F_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f494,f490,f499,f481,f396])).
fof(f1398,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0',sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f494,f608,f499,f481,f396])).
fof(f1319,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f610,f490,f500,f274,f395])).
fof(f1323,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','T_0')) )),
  inference(unit_resulting_resolution,[],[f494,f608,f500,f274,f395])).
fof(f1325,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f610,f608,f500,f274,f395])).
fof(f1335,plain,(
  sP5(sK14,sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f491,f487,f497,f274,f395])).
fof(f1337,plain,(
  ~sP3(sK14,'T_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f894,f490,f497,f274,f395])).
fof(f1339,plain,(
  sP5(sK14,'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f491,f488,f498,f274,f395])).
fof(f1340,plain,(
  sP5('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f492,f488,f498,f274,f395])).
fof(f1286,plain,(
  ( ! [X4,X5,X3] : (sP1(sK14,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5))) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(subsumption_resolution,[],[f1277,f481])).
fof(f1277,plain,(
  ( ! [X4,X5,X3] : (sP1(sK14,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,X3))),s(X4,X5))) | p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,X3)) ) | $spl4),
  inference(superposition,[],[f1245,f281])).
fof(f1246,plain,(
  ( ! [X68,X66,X67] : (sP1(happ(s(fun(X66,bool),'_dst_x0_1'(s(bool,X67))),s(X66,X68)),sK14) | p(s(bool,X67))) ) | $spl4),
  inference(superposition,[],[f583,f389])).
fof(f1245,plain,(
  ( ! [X64,X65,X63] : (sP1(sK14,happ(s(fun(X63,bool),'_dst_x0_1'(s(bool,X64))),s(X63,X65))) | p(s(bool,X64))) ) | $spl4),
  inference(superposition,[],[f574,f389])).
fof(f1244,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,X61)) | ~p(s(bool,X59)) | p(s(bool,X62)) | ~sP11(happ(s(fun(X58,bool),'_dst_x0_1'(s(bool,X59))),s(X58,X60)),X62,X61)) )),
  inference(superposition,[],[f462,f389])).
fof(f1243,plain,(
  ( ! [X57,X54,X56,X55,X53] : (~p(s(bool,X54)) | p(s(bool,X56)) | p(s(bool,X57)) | ~sP9(happ(s(fun(X53,bool),'_dst_x0_1'(s(bool,X54))),s(X53,X55)),X57,X56)) )),
  inference(superposition,[],[f445,f389])).
fof(f1242,plain,(
  ( ! [X52,X50,X48,X51,X49] : (~p(s(bool,X51)) | ~p(s(bool,X49)) | p(s(bool,X52)) | ~sP7(X52,X51,happ(s(fun(X48,bool),'_dst_x0_1'(s(bool,X49))),s(X48,X50)))) )),
  inference(superposition,[],[f430,f389])).
fof(f1241,plain,(
  ( ! [X47,X45,X43,X46,X44] : (~p(s(bool,X46)) | ~p(s(bool,X44)) | p(s(bool,X47)) | ~sP4(X46,happ(s(fun(X43,bool),'_dst_x0_1'(s(bool,X44))),s(X43,X45)),X47)) )),
  inference(superposition,[],[f398,f389])).
fof(f1240,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,X40)) | p(s(bool,X42)) | sP1(X42,happ(s(fun(X39,bool),'_dst_x0_1'(s(bool,X40))),s(X39,X41)))) )),
  inference(superposition,[],[f384,f389])).
fof(f1239,plain,(
  ( ! [X37,X35,X38,X36] : (~p(s(bool,X36)) | p(s(bool,X38)) | sP1(happ(s(fun(X35,bool),'_dst_x0_1'(s(bool,X36))),s(X35,X37)),X38)) )),
  inference(superposition,[],[f381,f389])).
fof(f1238,plain,(
  ( ! [X33,X31,X34,X32] : (~p(s(bool,X32)) | sP0(happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,X32))),s(X31,X33)),X34)) )),
  inference(superposition,[],[f366,f389])).
fof(f1237,plain,(
  ( ! [X30,X28,X29,X27] : (~p(s(bool,X28)) | sP0(X30,happ(s(fun(X27,bool),'_dst_x0_1'(s(bool,X28))),s(X27,X29)))) )),
  inference(superposition,[],[f365,f389])).
fof(f1214,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) )),
  inference(unit_resulting_resolution,[],[f481,f389,f413])).
fof(f1215,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) )),
  inference(unit_resulting_resolution,[],[f274,f389,f411])).
fof(f1216,plain,(
  ( ! [X2,X0,X1] : (~sP5('F_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f481,f389,f413])).
fof(f1217,plain,(
  ( ! [X2,X0,X1] : (sP5('T_0',X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) )),
  inference(unit_resulting_resolution,[],[f274,f389,f411])).
fof(f1209,plain,(
  ~sP10(sK14,'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f1208,f454])).
fof(f1208,plain,(
  ~sP11(sK14,'F_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f1207])).
fof(f1207,plain,(
  ( ! [X8,X9] : (~sP11(sK14,X9,X8) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | $spl4),
  inference(subsumption_resolution,[],[f1203,f274])).
fof(f1203,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP11(sK14,X9,X8)) ) | $spl4),
  inference(superposition,[],[f462,f526])).
fof(f1186,plain,(
  ( ! [X2,X0,X1] : (sP7('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) )),
  inference(unit_resulting_resolution,[],[f481,f612,f467])).
fof(f1178,plain,(
  ( ! [X2,X0,X1] : (sP7('F_0',X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f481,f611,f467])).
fof(f1166,plain,(
  ~sP11('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f1157,f450])).
fof(f1157,plain,(
  ~sP10('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f274,f274,f481,f455])).
fof(f1147,plain,(
  sP11('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f513,f274,f481,f454])).
fof(f1116,plain,(
  ~sP8(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f1115,f437])).
fof(f1115,plain,(
  ~sP9(sK14,'F_0','F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f481,f1114])).
fof(f1114,plain,(
  ( ! [X8,X9] : (~sP9(sK14,X9,X8) | p(s(bool,X9)) | p(s(bool,X8))) ) | $spl4),
  inference(subsumption_resolution,[],[f1111,f274])).
fof(f1111,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | p(s(bool,X9)) | ~sP9(sK14,X9,X8)) ) | $spl4),
  inference(superposition,[],[f445,f526])).
fof(f1087,plain,(
  ~sP9('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f1078,f433])).
fof(f1078,plain,(
  ~sP8('T_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f274,f481,f481,f438])).
fof(f1067,plain,(
  sP9('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f509,f481,f481,f437])).
fof(f1036,plain,(
  ~sP6('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f1032,f467])).
fof(f1032,plain,(
  ~sP7('F_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f1031])).
fof(f1031,plain,(
  ( ! [X8,X9] : (~sP7(X9,X8,sK14) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | $spl4),
  inference(subsumption_resolution,[],[f1027,f274])).
fof(f1027,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP7(X9,X8,sK14)) ) | $spl4),
  inference(superposition,[],[f430,f526])).
fof(f1004,plain,(
  ~sP7('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f995,f414])).
fof(f995,plain,(
  ~sP6('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f274,f481,f274,f421])).
fof(f987,plain,(
  sP7(sK14,'T_0','T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f501,f274,f274,f417])).
fof(f988,plain,(
  sP7('T_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f502,f274,f274,f417])).
fof(f984,plain,(
  ~sP5('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f971,f391])).
fof(f980,plain,(
  ~sP5('F_0','T_0','T_0')),
  inference(unit_resulting_resolution,[],[f954,f392])).
fof(f971,plain,(
  ~sP2('F_0','F_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f481,f481,f406])).
fof(f963,plain,(
  ~sP5('T_0','F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f943,f393])).
fof(f954,plain,(
  ~sP3('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f274,f481,f274,f402])).
fof(f943,plain,(
  ~sP4('T_0',sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f481,f936])).
fof(f936,plain,(
  ( ! [X8,X9] : (~sP4(X8,sK14,X9) | p(s(bool,X9)) | ~p(s(bool,X8))) ) | $spl4),
  inference(subsumption_resolution,[],[f930,f274])).
fof(f930,plain,(
  ( ! [X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | p(s(bool,X9)) | ~sP4(X8,sK14,X9)) ) | $spl4),
  inference(superposition,[],[f398,f526])).
fof(f926,plain,(
  ~sP4('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f274,f274,f398])).
fof(f894,plain,(
  ~sP5('F_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f526,f413])).
fof(f897,plain,(
  ~sP5('F_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f526,f413])).
fof(f883,plain,(
  ~sP5('T_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f274,f523,f412])).
fof(f886,plain,(
  ~sP5('T_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f274,f523,f412])).
fof(f870,plain,(
  sP5('T_0',sK14,'T_0') | $spl4),
  inference(unit_resulting_resolution,[],[f274,f526,f411])).
fof(f872,plain,(
  sP5('T_0','T_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f274,f526,f411])).
fof(f860,plain,(
  sP5('F_0','F_0','T_0')),
  inference(unit_resulting_resolution,[],[f481,f523,f410])).
fof(f862,plain,(
  sP5('F_0','T_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f523,f410])).
fof(f801,plain,(
  ( ! [X13] : (sP1(X13,sK14) | s(bool,'T_0') = s(bool,X13)) ) | $spl4),
  inference(subsumption_resolution,[],[f785,f481])).
fof(f785,plain,(
  ( ! [X13] : (p(s(bool,'F_0')) | sP1(X13,sK14) | s(bool,'T_0') = s(bool,X13)) ) | $spl4),
  inference(superposition,[],[f583,f281])).
fof(f800,plain,(
  ( ! [X12] : (sP1(sK14,X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f784,f481])).
fof(f784,plain,(
  ( ! [X12] : (p(s(bool,'F_0')) | sP1(sK14,X12) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(superposition,[],[f574,f281])).
fof(f734,plain,(
  ( ! [X0] : (sP9('T_0',X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f505,f274,f466])).
fof(f736,plain,(
  ( ! [X0] : (sP9('T_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f507,f274,f466])).
fof(f719,plain,(
  ( ! [X0] : (sP11('T_0',sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f511,f274,f465])).
fof(f704,plain,(
  ( ! [X0] : (sP11('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f274,f461])).
fof(f694,plain,(
  ( ! [X0] : (sP11('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f460])).
fof(f687,plain,(
  ( ! [X0] : (~sP11('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f481,f449])).
fof(f682,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f481,f448])).
fof(f678,plain,(
  ( ! [X0] : (sP9('T_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f274,f444])).
fof(f672,plain,(
  ( ! [X0] : (sP9('T_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f274,f443])).
fof(f652,plain,(
  ( ! [X0] : (~sP9('F_0','T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f481,f432])).
fof(f649,plain,(
  ( ! [X0] : (~sP9('F_0',X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f431])).
fof(f645,plain,(
  ( ! [X0] : (sP7('F_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f481,f481,f426])).
fof(f639,plain,(
  ( ! [X0] : (sP7('F_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f481,f425])).
fof(f636,plain,(
  ( ! [X0] : (~sP7('T_0','F_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f481,f416])).
fof(f634,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'F_0')) )),
  inference(unit_resulting_resolution,[],[f274,f481,f415])).
fof(f601,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f340,f379])).
fof(f603,plain,(
  ( ! [X0,X1] : (~sP1('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f481,f340,f379])).
fof(f604,plain,(
  ( ! [X2,X0,X3,X1] : (~sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f340,f340,f379])).
fof(f605,plain,(
  ( ! [X0,X1] : (sP1('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f274,f340,f381])).
fof(f606,plain,(
  ( ! [X0,X1] : (sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f340,f384])).
fof(f607,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f340,f400])).
fof(f608,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f340,f401])).
fof(f609,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f340,f404])).
fof(f610,plain,(
  ( ! [X2,X0,X3,X1] : (sP3('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f340,f405])).
fof(f611,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3)) )),
  inference(unit_resulting_resolution,[],[f340,f423])).
fof(f612,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f340,f424])).
fof(f613,plain,(
  ( ! [X2,X0,X3,X1] : (sP8('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f340,f441])).
fof(f614,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X0,X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f340,f456])).
fof(f615,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2,X3)) )),
  inference(unit_resulting_resolution,[],[f340,f458])).
fof(f616,plain,(
  ( ! [X0,X1] : (~sP0('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f340,f482])).
fof(f620,plain,(
  ( ! [X0,X1] : (~sP0('F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f481,f340,f482])).
fof(f621,plain,(
  ( ! [X2,X0,X3,X1] : (~sP0('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) )),
  inference(unit_resulting_resolution,[],[f340,f340,f482])).
fof(f624,plain,(
  ( ! [X0,X1] : (sP1(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl4),
  inference(unit_resulting_resolution,[],[f340,f574])).
fof(f625,plain,(
  ( ! [X0,X1] : (sP1('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f340,f583])).
fof(f597,plain,(
  sP1('F_0',sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f481,f583])).
fof(f592,plain,(
  ~sP0('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f481,f482])).
fof(f583,plain,(
  ( ! [X0] : (p(s(bool,X0)) | sP1(X0,sK14)) ) | $spl4),
  inference(subsumption_resolution,[],[f582,f274])).
fof(f582,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(X0,sK14)) ) | $spl4),
  inference(superposition,[],[f384,f526])).
fof(f581,plain,(
  sP1('F_0','T_0')),
  inference(unit_resulting_resolution,[],[f481,f274,f384])).
fof(f577,plain,(
  sP1(sK14,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f481,f574])).
fof(f574,plain,(
  ( ! [X0] : (p(s(bool,X0)) | sP1(sK14,X0)) ) | $spl4),
  inference(subsumption_resolution,[],[f573,f274])).
fof(f573,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0)) | sP1(sK14,X0)) ) | $spl4),
  inference(superposition,[],[f381,f526])).
fof(f572,plain,(
  sP1('T_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f274,f381])).
fof(f569,plain,(
  ~sP1('T_0','T_0')),
  inference(unit_resulting_resolution,[],[f274,f274,f380])).
fof(f568,plain,(
  ~sP1('F_0','F_0')),
  inference(unit_resulting_resolution,[],[f481,f481,f379])).
fof(f526,plain,(
  s(bool,'T_0') = s(bool,sK14) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f293])).
fof(f523,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f481,f292])).
fof(f513,plain,(
  ( ! [X0,X1] : (sP10('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f481,f458])).
fof(f511,plain,(
  ( ! [X0,X1] : (sP10(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f457])).
fof(f512,plain,(
  ( ! [X0,X1] : (sP10(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f274,f457])).
fof(f510,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'F_0')) )),
  inference(unit_resulting_resolution,[],[f481,f456])).
fof(f509,plain,(
  ( ! [X0,X1] : (sP8('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f481,f441])).
fof(f507,plain,(
  ( ! [X0,X1] : (sP8(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f440])).
fof(f508,plain,(
  ( ! [X0,X1] : (sP8(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f274,f440])).
fof(f505,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f439])).
fof(f506,plain,(
  ( ! [X0,X1] : (sP8(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f439])).
fof(f504,plain,(
  ( ! [X0,X1] : (sP6('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f481,f424])).
fof(f503,plain,(
  ( ! [X0,X1] : (sP6(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f481,f423])).
fof(f501,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f422])).
fof(f502,plain,(
  ( ! [X0,X1] : (sP6(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f422])).
fof(f499,plain,(
  ( ! [X0,X1] : (sP2(sK14,X0,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f409])).
fof(f500,plain,(
  ( ! [X0,X1] : (sP2('T_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f274,f409])).
fof(f497,plain,(
  ( ! [X0,X1] : (sP2(X0,sK14,X1)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f408])).
fof(f498,plain,(
  ( ! [X0,X1] : (sP2(X0,'T_0',X1)) )),
  inference(unit_resulting_resolution,[],[f274,f408])).
fof(f495,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f407])).
fof(f496,plain,(
  ( ! [X0,X1] : (sP2(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f407])).
fof(f494,plain,(
  ( ! [X0,X1] : (sP3('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f481,f405])).
fof(f493,plain,(
  ( ! [X0,X1] : (sP3(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f481,f404])).
fof(f491,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f403])).
fof(f492,plain,(
  ( ! [X0,X1] : (sP3(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f403])).
fof(f490,plain,(
  ( ! [X0,X1] : (sP4('F_0',X0,X1)) )),
  inference(unit_resulting_resolution,[],[f481,f401])).
fof(f489,plain,(
  ( ! [X0,X1] : (sP4(X0,'F_0',X1)) )),
  inference(unit_resulting_resolution,[],[f481,f400])).
fof(f487,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f399])).
fof(f488,plain,(
  ( ! [X0,X1] : (sP4(X0,X1,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f399])).
fof(f485,plain,(
  ( ! [X0] : (sP0(sK14,X0)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f366])).
fof(f486,plain,(
  ( ! [X0] : (sP0('T_0',X0)) )),
  inference(unit_resulting_resolution,[],[f274,f366])).
fof(f483,plain,(
  ( ! [X0] : (sP0(X0,sK14)) ) | $spl4),
  inference(unit_resulting_resolution,[],[f479,f365])).
fof(f484,plain,(
  ( ! [X0] : (sP0(X0,'T_0')) )),
  inference(unit_resulting_resolution,[],[f274,f365])).
fof(f459,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (p(s(bool,X1)) & ~p(s(bool,X0))))) | sP11(X2,X0,X1)) & (~sP11(X2,X0,X1) | ((~p(s(bool,X2)) | (~p(s(bool,X1)) | p(s(bool,X0)))) & ((p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> sP11(X2,X0,X1))),
  inference(definition_folding,[],[f148,f165,f164])).
fof(f164,plain,(
  ! [X2,X0,X1] : (sP10(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP10])])).
fof(f165,plain,(
  ! [X2,X0,X1] : (sP11(X2,X0,X1) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP11])])).
fof(f148,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (~p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(ennf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) => p(s(bool,X0)))) <=> ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X19,X20,X7] : ((p(s(bool,X7)) <=> (p(s(bool,X20)) => p(s(bool,X19)))) <=> ((p(s(bool,X7)) | p(s(bool,X20))) & (p(s(bool,X7)) | ~p(s(bool,X19))) & (~p(s(bool,X20)) | p(s(bool,X19)) | ~p(s(bool,X7)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.sat.sat_27_prove_ltb')).
fof(f460,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f270])).
fof(f461,plain,(
  ( ! [X2,X0,X1] : (sP11(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f270])).
fof(f462,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~sP11(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f270])).
fof(f455,plain,(
  ( ! [X2,X0,X1] : (~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : ((~sP10(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP10(X0,X1,X2)))),
  inference(rectify,[],[f267])).
fof(f267,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(flattening,[],[f266])).
fof(f266,plain,(
  ! [X2,X0,X1] : ((~sP10(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP10(X2,X0,X1)))),
  inference(nnf_transformation,[],[f164])).
fof(f456,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f268])).
fof(f457,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f268])).
fof(f458,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f268])).
fof(f448,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0,X1,X2] : ((~sP11(X0,X1,X2) | ((p(s(bool,X0)) | p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP10(X0,X1,X2))) & ((~p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP10(X0,X1,X2) | sP11(X0,X1,X2)))),
  inference(rectify,[],[f264])).
fof(f264,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & ((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1) | sP11(X2,X0,X1)))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ! [X2,X0,X1] : ((~sP11(X2,X0,X1) | ((p(s(bool,X2)) | p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP10(X2,X0,X1))) & (((~p(s(bool,X2)) & ~p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP10(X2,X0,X1)) | sP11(X2,X0,X1)))),
  inference(nnf_transformation,[],[f165])).
fof(f449,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f265])).
fof(f450,plain,(
  ( ! [X2,X0,X1] : (~sP11(X0,X1,X2) | sP10(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f265])).
fof(f465,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f451])).
fof(f451,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f265])).
fof(f452,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f265])).
fof(f453,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f265])).
fof(f454,plain,(
  ( ! [X2,X0,X1] : (sP11(X0,X1,X2) | ~sP10(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f265])).
fof(f442,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(flattening,[],[f261])).
fof(f261,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) & ~p(s(bool,X0))))) | sP9(X2,X0,X1)) & (~sP9(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> sP9(X2,X0,X1))),
  inference(definition_folding,[],[f122,f162,f161])).
fof(f161,plain,(
  ! [X2,X0,X1] : (sP8(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP8])])).
fof(f162,plain,(
  ! [X2,X0,X1] : (sP9(X2,X0,X1) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1)))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP9])])).
fof(f122,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) | p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X19,X20,X7] : ((p(s(bool,X7)) <=> (p(s(bool,X20)) | p(s(bool,X19)))) <=> ((p(s(bool,X7)) | ~p(s(bool,X20))) & (p(s(bool,X7)) | ~p(s(bool,X19))) & (p(s(bool,X20)) | p(s(bool,X19)) | ~p(s(bool,X7)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.sat.sat_25_prove_ltb')).
fof(f443,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f262])).
fof(f444,plain,(
  ( ! [X2,X0,X1] : (sP9(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f262])).
fof(f445,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)) | ~sP9(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f262])).
fof(f438,plain,(
  ( ! [X2,X0,X1] : (~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f260])).
fof(f260,plain,(
  ! [X0,X1,X2] : ((~sP8(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP8(X0,X1,X2)))),
  inference(rectify,[],[f259])).
fof(f259,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(flattening,[],[f258])).
fof(f258,plain,(
  ! [X2,X0,X1] : ((~sP8(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP8(X2,X0,X1)))),
  inference(nnf_transformation,[],[f161])).
fof(f439,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f260])).
fof(f440,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f260])).
fof(f441,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f260])).
fof(f431,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f257])).
fof(f257,plain,(
  ! [X0,X1,X2] : ((~sP9(X0,X1,X2) | ((p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1))) & sP8(X0,X1,X2))) & ((~p(s(bool,X0)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X1))) | ~sP8(X0,X1,X2) | sP9(X0,X1,X2)))),
  inference(rectify,[],[f256])).
fof(f256,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & ((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1) | sP9(X2,X0,X1)))),
  inference(flattening,[],[f255])).
fof(f255,plain,(
  ! [X2,X0,X1] : ((~sP9(X2,X0,X1) | ((p(s(bool,X2)) | ~p(s(bool,X1))) & (p(s(bool,X2)) | ~p(s(bool,X0))) & sP8(X2,X0,X1))) & (((~p(s(bool,X2)) & p(s(bool,X1))) | (~p(s(bool,X2)) & p(s(bool,X0))) | ~sP8(X2,X0,X1)) | sP9(X2,X0,X1)))),
  inference(nnf_transformation,[],[f162])).
fof(f432,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | p(s(bool,X0)) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f257])).
fof(f433,plain,(
  ( ! [X2,X0,X1] : (~sP9(X0,X1,X2) | sP8(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f257])).
fof(f466,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(duplicate_literal_removal,[],[f434])).
fof(f434,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f257])).
fof(f435,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | ~p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f257])).
fof(f436,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f257])).
fof(f437,plain,(
  ( ! [X2,X0,X1] : (sP9(X0,X1,X2) | ~sP8(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f257])).
fof(f425,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f254])).
fof(f254,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(flattening,[],[f253])).
fof(f253,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & (~p(s(bool,X2)) | (~p(s(bool,X1)) | ~p(s(bool,X0))))) | sP7(X2,X0,X1)) & (~sP7(X2,X0,X1) | ((~p(s(bool,X2)) | (p(s(bool,X1)) & p(s(bool,X0)))) & ((~p(s(bool,X1)) | ~p(s(bool,X0))) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> sP7(X2,X0,X1))),
  inference(definition_folding,[],[f120,f159,f158])).
fof(f158,plain,(
  ! [X0,X1,X2] : (sP6(X0,X1,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f159,plain,(
  ! [X2,X0,X1] : (sP7(X2,X0,X1) <=> (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP7])])).
fof(f120,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> (p(s(bool,X1)) & p(s(bool,X0)))) <=> ((p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X19,X20,X7] : ((p(s(bool,X7)) <=> (p(s(bool,X20)) & p(s(bool,X19)))) <=> ((p(s(bool,X7)) | ~p(s(bool,X20)) | ~p(s(bool,X19))) & (p(s(bool,X20)) | ~p(s(bool,X7))) & (p(s(bool,X19)) | ~p(s(bool,X7)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.sat.sat_23_prove_ltb')).
fof(f426,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | p(s(bool,X0)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f254])).
fof(f427,plain,(
  ( ! [X2,X0,X1] : (sP7(X2,X0,X1) | ~p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f254])).
fof(f430,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP7(X2,X0,X1)) )),
  inference(cnf_transformation,[],[f254])).
fof(f421,plain,(
  ( ! [X2,X0,X1] : (~sP6(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f252])).
fof(f252,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(flattening,[],[f251])).
fof(f251,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0)))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(nnf_transformation,[],[f158])).
fof(f422,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f252])).
fof(f423,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f252])).
fof(f424,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f252])).
fof(f414,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f250])).
fof(f250,plain,(
  ! [X0,X1,X2] : ((~sP7(X0,X1,X2) | (sP6(X1,X2,X0) & (p(s(bool,X2)) | ~p(s(bool,X0))) & (p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP6(X1,X2,X0) | (~p(s(bool,X2)) & p(s(bool,X0))) | (~p(s(bool,X1)) & p(s(bool,X0))) | sP7(X0,X1,X2)))),
  inference(rectify,[],[f249])).
fof(f249,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & (~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2))) | sP7(X2,X0,X1)))),
  inference(flattening,[],[f248])).
fof(f248,plain,(
  ! [X2,X0,X1] : ((~sP7(X2,X0,X1) | (sP6(X0,X1,X2) & (p(s(bool,X1)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X2))))) & ((~sP6(X0,X1,X2) | (~p(s(bool,X1)) & p(s(bool,X2))) | (~p(s(bool,X0)) & p(s(bool,X2)))) | sP7(X2,X0,X1)))),
  inference(nnf_transformation,[],[f159])).
fof(f415,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f250])).
fof(f416,plain,(
  ( ! [X2,X0,X1] : (~sP7(X0,X1,X2) | p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f250])).
fof(f417,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f250])).
fof(f467,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(duplicate_literal_removal,[],[f420])).
fof(f420,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2) | p(s(bool,X0)) | p(s(bool,X0)) | ~sP6(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f250])).
fof(f410,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f247])).
fof(f247,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP5(X2,X1,X0)) & (~sP5(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP5(X2,X1,X0))),
  inference(definition_folding,[],[f118,f156,f155,f154,f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : (sP2(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f154,plain,(
  ! [X1,X0,X2] : (sP3(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f155,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f156,plain,(
  ! [X2,X1,X0] : (sP5(X2,X1,X0) <=> (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP5])])).
fof(f118,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X19,X20,X7] : ((p(s(bool,X7)) <=> s(bool,X19) = s(bool,X20)) <=> ((p(s(bool,X7)) | p(s(bool,X20)) | p(s(bool,X19))) & (p(s(bool,X7)) | ~p(s(bool,X19)) | ~p(s(bool,X20))) & (p(s(bool,X20)) | ~p(s(bool,X19)) | ~p(s(bool,X7))) & (p(s(bool,X19)) | ~p(s(bool,X20)) | ~p(s(bool,X7)))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.sat.sat_2|49|_prove_ltb')).
fof(f411,plain,(
  ( ! [X2,X0,X1] : (sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f247])).
fof(f412,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | ~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f247])).
fof(f413,plain,(
  ( ! [X2,X0,X1] : (~sP5(X2,X1,X0) | s(bool,X0) != s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f247])).
fof(f406,plain,(
  ( ! [X2,X0,X1] : (~sP2(X0,X1,X2) | p(s(bool,X1)) | p(s(bool,X2)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f246])).
fof(f246,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(flattening,[],[f245])).
fof(f245,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(nnf_transformation,[],[f153])).
fof(f407,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f246])).
fof(f408,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f246])).
fof(f409,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f246])).
fof(f402,plain,(
  ( ! [X2,X0,X1] : (~sP3(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f244])).
fof(f244,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f243])).
fof(f243,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(flattening,[],[f242])).
fof(f242,plain,(
  ! [X1,X0,X2] : ((~sP3(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP3(X1,X0,X2)))),
  inference(nnf_transformation,[],[f154])).
fof(f403,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f244])).
fof(f404,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f244])).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f244])).
fof(f398,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f241])).
fof(f241,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f240])).
fof(f240,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f239])).
fof(f239,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f155])).
fof(f399,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f241])).
fof(f400,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f241])).
fof(f401,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f241])).
fof(f391,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP2(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f238])).
fof(f238,plain,(
  ! [X0,X1,X2] : ((~sP5(X0,X1,X2) | (sP2(X2,X1,X0) & sP3(X1,X2,X0) & sP4(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP2(X2,X1,X0) | ~sP3(X1,X2,X0) | ~sP4(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP5(X0,X1,X2)))),
  inference(rectify,[],[f237])).
fof(f237,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP5(X2,X1,X0)))),
  inference(flattening,[],[f236])).
fof(f236,plain,(
  ! [X2,X1,X0] : ((~sP5(X2,X1,X0) | (sP2(X0,X1,X2) & sP3(X1,X0,X2) & sP4(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP2(X0,X1,X2) | ~sP3(X1,X0,X2) | ~sP4(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP5(X2,X1,X0)))),
  inference(nnf_transformation,[],[f156])).
fof(f392,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP3(X1,X2,X0)) )),
  inference(cnf_transformation,[],[f238])).
fof(f393,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | sP4(X0,X2,X1)) )),
  inference(cnf_transformation,[],[f238])).
fof(f394,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,X1,X2) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f238])).
fof(f395,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | ~p(s(bool,X2)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f238])).
fof(f396,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X1)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f238])).
fof(f397,plain,(
  ( ! [X2,X0,X1] : (~sP2(X2,X1,X0) | p(s(bool,X0)) | ~sP4(X0,X2,X1) | ~sP3(X1,X2,X0) | sP5(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f238])).
fof(f390,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK28(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK28(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f235])).
fof(f235,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK28(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK28(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK28])],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.res_quan.RES_EXISTS_NULL',aHL_EXT)).
fof(f379,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | p(s(bool,X0)) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f233])).
fof(f233,plain,(
  ! [X0,X1] : ((~sP1(X0,X1) | ((p(s(bool,X0)) | p(s(bool,X1))) & (~p(s(bool,X1)) | ~p(s(bool,X0))))) & ((~p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1)))),
  inference(rectify,[],[f232])).
fof(f232,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & ((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0)))),
  inference(flattening,[],[f231])).
fof(f231,plain,(
  ! [X1,X0] : ((~sP1(X1,X0) | ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1))))) & (((~p(s(bool,X1)) & ~p(s(bool,X0))) | (p(s(bool,X0)) & p(s(bool,X1)))) | sP1(X1,X0)))),
  inference(nnf_transformation,[],[f151])).
fof(f151,plain,(
  ! [X1,X0] : (sP1(X1,X0) <=> ((p(s(bool,X1)) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,X1)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f380,plain,(
  ( ! [X0,X1] : (~sP1(X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f233])).
fof(f381,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,X1)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f233])).
fof(f384,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | p(s(bool,X0)) | sP1(X0,X1)) )),
  inference(cnf_transformation,[],[f233])).
fof(f482,plain,(
  ( ! [X0,X1] : (~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(subsumption_resolution,[],[f364,f481])).
fof(f364,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(flattening,[],[f225])).
fof(f225,plain,(
  ! [X0,X1] : ((~sP0(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP0(X0,X1)))),
  inference(nnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : (sP0(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f365,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f226])).
fof(f366,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | sP0(X0,X1)) )),
  inference(cnf_transformation,[],[f226])).
fof(f293,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f172])).
fof(f32530,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430,f31427,f31424,f31423,f31422])).
fof(f32529,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430,f31427,f31424,f31423])).
fof(f32528,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430,f31427,f31424])).
fof(f32527,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430,f31427])).
fof(f32526,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32525,f274])).
fof(f32525,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f32524,f31806])).
fof(f32524,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))) ) | $spl2),
  inference(forward_demodulation,[],[f31428,f389])).
fof(f31428,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))),s(X0,X2))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f1215,f30931,f394])).
fof(f32523,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431,f31430])).
fof(f32522,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434,f31431])).
fof(f32521,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31432,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434])).
fof(f31432,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f29993,f496,f30931,f396])).
fof(f29993,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f400])).
fof(f30000,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f404])).
fof(f32520,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31433,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434])).
fof(f31433,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f492,f29993,f496,f30931,f396])).
fof(f32519,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435,f31434])).
fof(f32518,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437,f31435])).
fof(f32517,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438,f31437])).
fof(f32516,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441,f31438])).
fof(f32515,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31439,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441])).
fof(f31439,plain,(
  ( ! [X0,X1] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl4 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f29993,f8669,f30931,f396])).
fof(f32514,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31440,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441])).
fof(f31440,plain,(
  ( ! [X0,X1] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl4 | $spl80)),
  inference(unit_resulting_resolution,[],[f8668,f29993,f8669,f30931,f396])).
fof(f32513,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442,f31441])).
fof(f32512,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443,f31442])).
fof(f32511,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445,f31443])).
fof(f32510,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31444,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445])).
fof(f31444,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f488,f498,f30931,f397])).
fof(f32509,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446,f31445])).
fof(f32508,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448,f31446])).
fof(f32507,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31447,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448])).
fof(f31447,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f29993,f498,f30931,f397])).
fof(f32506,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449,f31448])).
fof(f32505,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451,f31449])).
fof(f32504,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31450,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451])).
fof(f31450,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl4 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f8655,f8670,f30931,f397])).
fof(f32503,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452,f31451])).
fof(f32502,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454,f31452])).
fof(f32501,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31453,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454])).
fof(f31453,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),sK14,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | ($spl2 | $spl4 | $spl80)),
  inference(unit_resulting_resolution,[],[f30000,f29993,f8670,f30931,f397])).
fof(f32500,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463,f31454])).
fof(f32499,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32498,f274])).
fof(f32498,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31456,f31806])).
fof(f31456,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f489,f30931,f398])).
fof(f32497,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32496,f274])).
fof(f32496,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31457,f31806])).
fof(f31457,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f29993,f30931,f398])).
fof(f32495,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32494,f274])).
fof(f32494,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31458,f31806])).
fof(f31458,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f607,f30931,f398])).
fof(f32493,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32492,f274])).
fof(f32492,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f32491,f31806])).
fof(f32491,plain,(
  ( ! [X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))) ) | $spl2),
  inference(forward_demodulation,[],[f31459,f389])).
fof(f31459,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1))))),s(X0,X2))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f2312,f30931,f398])).
fof(f32490,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32489,f274])).
fof(f32489,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31460,f31806])).
fof(f31460,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f490,f30931,f398])).
fof(f32488,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32487,f274])).
fof(f32487,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31461,f31806])).
fof(f31461,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f29994,f30931,f398])).
fof(f29994,plain,(
  ( ! [X2,X0,X1] : (sP4(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f401])).
fof(f32486,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32485,f274])).
fof(f32485,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31462,f31806])).
fof(f31462,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f608,f30931,f398])).
fof(f32484,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464,f31463])).
fof(f32483,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465,f31464])).
fof(f32482,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472,f31465])).
fof(f32481,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32480,f274])).
fof(f32480,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31466,f31806])).
fof(f31466,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f493,f30931,f402])).
fof(f32479,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32478,f274])).
fof(f32478,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31467,f31806])).
fof(f31467,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f30000,f30931,f402])).
fof(f32477,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32476,f274])).
fof(f32476,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31468,f31806])).
fof(f31468,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f609,f30931,f402])).
fof(f32475,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32474,f274])).
fof(f32474,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31469,f31806])).
fof(f31469,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f494,f30931,f402])).
fof(f32473,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32472,f274])).
fof(f32472,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31470,f31806])).
fof(f31470,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f30001,f30931,f402])).
fof(f30001,plain,(
  ( ! [X2,X0,X1] : (sP3(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f405])).
fof(f32471,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32470,f274])).
fof(f32470,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31471,f31806])).
fof(f31471,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f610,f30931,f402])).
fof(f32469,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473,f31472])).
fof(f32468,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474,f31473])).
fof(f32467,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475,f31474])).
fof(f32466,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476,f31475])).
fof(f32465,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477,f31476])).
fof(f32464,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482,f31477])).
fof(f32461,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483,f31482])).
fof(f32460,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484,f31483])).
fof(f32459,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485,f31484])).
fof(f32458,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490,f31485])).
fof(f32455,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491,f31490])).
fof(f32454,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492,f31491])).
fof(f32453,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493,f31492])).
fof(f32452,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498,f31493])).
fof(f32449,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499,f31498])).
fof(f32448,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500,f31499])).
fof(f32447,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501,f31500])).
fof(f32446,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505,f31501])).
fof(f32445,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f31502,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505])).
fof(f31502,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0')) ) | ($spl2 | $spl9)),
  inference(unit_resulting_resolution,[],[f1716,f30931,f413])).
fof(f1716,plain,(
  s(bool,'T_0') = s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(unit_resulting_resolution,[],[f1715,f281])).
fof(f32444,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f31503,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505])).
fof(f31503,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0')) ) | ($spl2 | $spl13)),
  inference(unit_resulting_resolution,[],[f2044,f30931,f413])).
fof(f2044,plain,(
  s(bool,'T_0') = s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl13),
  inference(unit_resulting_resolution,[],[f1982,f281])).
fof(f32443,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl63)),
  inference(global_subsumption,[],[f31504,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505])).
fof(f31504,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),f(s(bool,'T_0')),'T_0')) ) | ($spl2 | $spl63)),
  inference(unit_resulting_resolution,[],[f7852,f30931,f413])).
fof(f7852,plain,(
  s(bool,'T_0') = s(bool,f(s(bool,'T_0'))) | $spl63),
  inference(unit_resulting_resolution,[],[f481,f6646,f818])).
fof(f32442,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506,f31505])).
fof(f32441,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510,f31506])).
fof(f32440,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f31507,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510])).
fof(f31507,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl2 | $spl9)),
  inference(unit_resulting_resolution,[],[f1716,f30931,f413])).
fof(f32439,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f31508,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510])).
fof(f31508,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl2 | $spl13)),
  inference(unit_resulting_resolution,[],[f2044,f30931,f413])).
fof(f32438,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl63)),
  inference(global_subsumption,[],[f31509,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510])).
fof(f31509,plain,(
  ( ! [X0] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),'T_0',f(s(bool,'T_0')))) ) | ($spl2 | $spl63)),
  inference(unit_resulting_resolution,[],[f7852,f30931,f413])).
fof(f32437,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511,f31510])).
fof(f32436,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512,f31511])).
fof(f32435,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516,f31512])).
fof(f32434,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32433,f274])).
fof(f32433,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31513,f31806])).
fof(f31513,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f645,f30931,f415])).
fof(f32432,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32431,f274])).
fof(f32431,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31514,f31806])).
fof(f31514,plain,(
  ~p(s(bool,'F_0')) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30061,f30931,f415])).
fof(f30061,plain,(
  ( ! [X0,X1] : (sP7('F_0',happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f8569,f426])).
fof(f32430,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32429,f274])).
fof(f32429,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31515,f31806])).
fof(f31515,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f1186,f30931,f415])).
fof(f32428,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520,f31516])).
fof(f32427,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32426,f274])).
fof(f32426,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31517,f31806])).
fof(f31517,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f639,f30931,f416])).
fof(f32425,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32424,f274])).
fof(f32424,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31518,f31806])).
fof(f31518,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f1178,f30931,f416])).
fof(f32423,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32422,f274])).
fof(f32422,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31519,f31806])).
fof(f31519,plain,(
  ~p(s(bool,'F_0')) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30055,f30931,f416])).
fof(f30055,plain,(
  ( ! [X0,X1] : (sP7('F_0',X0,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f8569,f425])).
fof(f32421,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527,f31520])).
fof(f32420,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32419,f274])).
fof(f32419,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31521,f31806])).
fof(f31521,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f503,f30931,f421])).
fof(f32418,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32417,f274])).
fof(f32417,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31522,f31806])).
fof(f31522,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f30051,f30931,f421])).
fof(f30051,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f423])).
fof(f32416,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32415,f274])).
fof(f32415,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31523,f31806])).
fof(f31523,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f611,f30931,f421])).
fof(f32414,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32413,f274])).
fof(f32413,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31524,f31806])).
fof(f31524,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f504,f30931,f421])).
fof(f32412,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32411,f274])).
fof(f32411,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31525,f31806])).
fof(f31525,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f274,f30052,f30931,f421])).
fof(f30052,plain,(
  ( ! [X2,X0,X1] : (sP6(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f424])).
fof(f32410,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32409,f274])).
fof(f32409,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31526,f31806])).
fof(f31526,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f612,f30931,f421])).
fof(f32408,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528,f31527])).
fof(f32407,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529,f31528])).
fof(f32406,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530,f31529])).
fof(f32405,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531,f31530])).
fof(f32404,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532,f31531])).
fof(f32403,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536,f31532])).
fof(f32401,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537,f31536])).
fof(f32400,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538,f31537])).
fof(f32399,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539,f31538])).
fof(f32398,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544,f31539])).
fof(f32396,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545,f31544])).
fof(f32395,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562,f31545])).
fof(f32394,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32393,f274])).
fof(f32393,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31547,f31806])).
fof(f31547,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f652,f508,f30931,f435])).
fof(f32392,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32391,f274])).
fof(f32391,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31548,f31806])).
fof(f31548,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30067,f508,f30931,f435])).
fof(f30067,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),'T_0',X1)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f274,f8569,f432])).
fof(f32390,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32389,f274])).
fof(f32389,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31550,f31806])).
fof(f31550,plain,(
  ~p(s(bool,'F_0')) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8728,f8735,f30931,f435])).
fof(f32388,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32387,f274])).
fof(f32387,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31551,f31806])).
fof(f31551,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f652,f509,f30931,f435])).
fof(f32386,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32385,f274])).
fof(f32385,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31552,f31806])).
fof(f31552,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30067,f30108,f30931,f435])).
fof(f30108,plain,(
  ( ! [X2,X0,X1] : (sP8(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,X2)) ) | $spl80),
  inference(unit_resulting_resolution,[],[f8569,f441])).
fof(f32384,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32383,f274])).
fof(f32383,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31554,f31806])).
fof(f31554,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f649,f506,f30931,f436])).
fof(f32382,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32381,f274])).
fof(f32381,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31555,f31806])).
fof(f31555,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30066,f506,f30931,f436])).
fof(f30066,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,'T_0')) ) | $spl80),
  inference(unit_resulting_resolution,[],[f274,f8569,f431])).
fof(f32380,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32379,f274])).
fof(f32379,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31557,f31806])).
fof(f31557,plain,(
  ~p(s(bool,'F_0')) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8726,f8734,f30931,f436])).
fof(f32378,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32377,f274])).
fof(f32377,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31558,f31806])).
fof(f31558,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f649,f509,f30931,f436])).
fof(f32376,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32375,f274])).
fof(f32375,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31559,f31806])).
fof(f31559,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30066,f30108,f30931,f436])).
fof(f32373,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563,f31562])).
fof(f32372,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569,f31563])).
fof(f32370,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31566,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569])).
fof(f31566,plain,(
  ( ! [X0,X1] : (sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f481,f30108,f30931,f437])).
fof(f32369,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31567,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569])).
fof(f31567,plain,(
  ( ! [X2,X0,X1] : (sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30931,f30108,f30931,f437])).
fof(f32368,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570,f31569])).
fof(f32367,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573,f31570])).
fof(f32365,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574,f31573])).
fof(f32364,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580,f31574])).
fof(f32362,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31577,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580])).
fof(f31577,plain,(
  ( ! [X0,X1] : (sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'F_0')) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f481,f30108,f30931,f437])).
fof(f32361,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31578,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580])).
fof(f31578,plain,(
  ( ! [X2,X0,X1] : (sP9(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X2)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30931,f30108,f30931,f437])).
fof(f32360,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581,f31580])).
fof(f32359,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582,f31581])).
fof(f32358,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583,f31582])).
fof(f32357,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591,f31583])).
fof(f32355,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32354,f274])).
fof(f32354,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31586,f31806])).
fof(f31586,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f509,f30931,f438])).
fof(f32353,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32352,f274])).
fof(f32352,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31587,f31806])).
fof(f31587,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f481,f30108,f30931,f438])).
fof(f32351,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32350,f274])).
fof(f32350,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31588,f31806])).
fof(f31588,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30931,f30108,f30931,f438])).
fof(f32349,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32348,f274])).
fof(f32348,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31589,f31806])).
fof(f31589,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f613,f30931,f438])).
fof(f32347,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32346,f274])).
fof(f32346,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31590,f31806])).
fof(f31590,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f613,f30931,f438])).
fof(f32345,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592,f31591])).
fof(f32344,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600,f31592])).
fof(f32342,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32341,f274])).
fof(f32341,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31595,f31806])).
fof(f31595,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f509,f30931,f438])).
fof(f32340,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32339,f274])).
fof(f32339,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31596,f31806])).
fof(f31596,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f481,f30108,f30931,f438])).
fof(f32338,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32337,f274])).
fof(f32337,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31597,f31806])).
fof(f31597,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30931,f30108,f30931,f438])).
fof(f32336,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32335,f274])).
fof(f32335,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31598,f31806])).
fof(f31598,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f613,f30931,f438])).
fof(f32334,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32333,f274])).
fof(f32333,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31599,f31806])).
fof(f31599,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f30931,f613,f30931,f438])).
fof(f32332,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601,f31600])).
fof(f32331,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602,f31601])).
fof(f32330,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603,f31602])).
fof(f32329,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604,f31603])).
fof(f32328,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605,f31604])).
fof(f32327,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606,f31605])).
fof(f32326,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607,f31606])).
fof(f32325,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608,f31607])).
fof(f32324,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611,f31608])).
fof(f32322,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612,f31611])).
fof(f32321,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613,f31612])).
fof(f32320,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614,f31613])).
fof(f32319,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625,f31614])).
fof(f32315,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626,f31625])).
fof(f32314,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631,f31626])).
fof(f32311,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632,f31631])).
fof(f32310,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633,f31632])).
fof(f32309,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640,f31633])).
fof(f32308,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32307,f274])).
fof(f32307,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31635,f31806])).
fof(f31635,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f682,f510,f30931,f453])).
fof(f32306,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32305,f274])).
fof(f32305,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31636,f31806])).
fof(f31636,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30139,f510,f30931,f453])).
fof(f30139,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),X1,'F_0')) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f8569,f448])).
fof(f32304,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32303,f274])).
fof(f32303,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31638,f31806])).
fof(f31638,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f682,f513,f30931,f453])).
fof(f32302,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32301,f274])).
fof(f32301,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31639,f31806])).
fof(f31639,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f682,f510,f30931,f454])).
fof(f32300,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643,f31640])).
fof(f32299,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32298,f274])).
fof(f32298,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31641,f31806])).
fof(f31641,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f682,f513,f30931,f454])).
fof(f32297,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32296,f274])).
fof(f32296,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31642,f31806])).
fof(f31642,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30133,f513,f30931,f454])).
fof(f30133,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f8569,f448])).
fof(f32295,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644,f31643])).
fof(f32294,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649,f31644])).
fof(f32293,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32292,f274])).
fof(f32292,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31645,f31806])).
fof(f31645,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f510,f30931,f455])).
fof(f32291,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32290,f274])).
fof(f32290,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31646,f31806])).
fof(f31646,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f614,f30931,f455])).
fof(f32289,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32288,f274])).
fof(f32288,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31647,f31806])).
fof(f31647,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f513,f30931,f455])).
fof(f32287,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32286,f274])).
fof(f32286,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31648,f31806])).
fof(f31648,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f615,f30931,f455])).
fof(f32285,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650,f31649])).
fof(f32284,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651,f31650])).
fof(f32283,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652,f31651])).
fof(f32282,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653,f31652])).
fof(f32281,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654,f31653])).
fof(f32280,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657,f31654])).
fof(f32279,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32278,f274])).
fof(f32278,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31655,f31806])).
fof(f31655,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f481,f682,f30931,f459])).
fof(f32277,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f32276,f274])).
fof(f32276,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(forward_demodulation,[],[f31656,f31806])).
fof(f31656,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f481,f30133,f30931,f459])).
fof(f32275,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663,f31657])).
fof(f32274,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32273,f274])).
fof(f32273,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31658,f31806])).
fof(f31658,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f687,f30931,f460])).
fof(f32272,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32271,f274])).
fof(f32271,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31659,f31806])).
fof(f31659,plain,(
  ~p(s(bool,'F_0')) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f8748,f30931,f460])).
fof(f32270,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32269,f274])).
fof(f32269,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31661,f31806])).
fof(f31661,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f694,f30931,f462])).
fof(f32268,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32267,f274])).
fof(f32267,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31662,f31806])).
fof(f31662,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(unit_resulting_resolution,[],[f274,f2013,f30931,f462])).
fof(f32266,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665,f31663])).
fof(f32265,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31664,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665])).
fof(f31664,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),X1,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X2)))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30051,f30931,f467])).
fof(f32264,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666,f31665])).
fof(f32263,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668,f31666])).
fof(f32262,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31667,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668])).
fof(f31667,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(fun(sK12,bool),X0)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),X2)) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f30052,f30931,f467])).
fof(f32261,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669,f31668])).
fof(f32260,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670,f31669])).
fof(f32259,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677,f31670])).
fof(f32253,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678,f31677])).
fof(f32252,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242,f31678])).
fof(f32245,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f32244,f274])).
fof(f32244,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(forward_demodulation,[],[f31804,f31806])).
fof(f31804,plain,(
  ~p(s(bool,'F_0')) | $spl2),
  inference(backward_demodulation,[],[f31800,f30931])).
fof(f32243,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240,f32242])).
fof(f32241,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238,f32240])).
fof(f32239,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236,f32238])).
fof(f32237,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234,f32236])).
fof(f32235,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232,f32234])).
fof(f32233,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230,f32232])).
fof(f32231,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228,f32230])).
fof(f32229,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111,f32228])).
fof(f32129,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(subsumption_resolution,[],[f31940,f274])).
fof(f31940,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(backward_demodulation,[],[f31806,f30985])).
fof(f30985,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl2 | $spl80)),
  inference(subsumption_resolution,[],[f30984,f481])).
fof(f30984,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f30983,f30292])).
fof(f30292,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)))) ) | $spl80),
  inference(forward_demodulation,[],[f30189,f600])).
fof(f30189,plain,(
  ( ! [X2,X0,X1] : (s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))) = s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f599,f8569,f818])).
fof(f30983,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK20(sK13,X0,sK12))))) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))))) ) | $spl2),
  inference(forward_demodulation,[],[f30976,f478])).
fof(f30976,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),X0),s(fun(sK12,bool),'const.pred_set.EMPTY_0')))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK20(sK13,X0,sK12)))))) ) | $spl2),
  inference(superposition,[],[f346,f478])).
fof(f32112,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109,f32111])).
fof(f32110,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911,f32109])).
fof(f32108,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31914,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911])).
fof(f31914,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X2)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),'F_0')) ) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(backward_demodulation,[],[f31806,f30973])).
fof(f30973,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X2)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),'F_0')) ) | $spl80),
  inference(forward_demodulation,[],[f30964,f30292])).
fof(f30964,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1))))),s(X0,X2)),happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)),'F_0')) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f1216,f490,f30001,f397])).
fof(f32107,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(global_subsumption,[],[f31913,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911])).
fof(f31913,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)),'F_0')) ) | ($spl0 | $spl2 | $spl4 | $spl80)),
  inference(backward_demodulation,[],[f31806,f30962])).
fof(f30962,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'F_0')) ) | $spl80),
  inference(forward_demodulation,[],[f30942,f30292])).
fof(f30942,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))),s(X1,X2)),'F_0')) ) | $spl80),
  inference(unit_resulting_resolution,[],[f481,f1214,f490,f30000,f397])).
fof(f32106,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905,f31911])).
fof(f32105,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902,f31905])).
fof(f32104,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901,f31902])).
fof(f32103,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896,f31901])).
fof(f32102,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893,f31896])).
fof(f32101,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099,f31893])).
fof(f32100,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097,f32099])).
fof(f32098,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095,f32097])).
fof(f32096,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093,f32095])).
fof(f32094,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089,f32093])).
fof(f32090,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834,f32089])).
fof(f32088,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832,f31834])).
fof(f32087,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831,f31832])).
fof(f32086,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829,f31831])).
fof(f32085,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828,f31829])).
fof(f32084,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826,f31828])).
fof(f32083,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825,f31826])).
fof(f32082,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823,f31825])).
fof(f32081,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079,f31823])).
fof(f32080,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077,f32079])).
fof(f32078,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072,f32077])).
fof(f32074,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(subsumption_resolution,[],[f31809,f274])).
fof(f31809,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl2 | $spl4)),
  inference(backward_demodulation,[],[f31806,f481])).
fof(f32073,plain,(
  $false | ($spl0 | $spl2 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f523,f526,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f719,f736,f734,f755,f800,f801,f818,f862,f860,f872,f870,f886,f883,f897,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1067,f1078,f1087,f1114,f1115,f1116,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1325,f1323,f1319,f1398,f1396,f1393,f1389,f1384,f1380,f1466,f1465,f1461,f1448,f1446,f1655,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f1670,f1643,f1627,f1610,f1644,f1275,f5881,f5898,f5900,f5903,f5919,f5936,f5938,f5941,f5956,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6496,f6486,f6529,f6604,f6605,f6606,f6607,f6608,f6629,f6630,f7008,f7011,f7051,f7054,f7251,f7254,f7295,f7298,f7477,f7481,f7502,f7511,f7513,f7543,f7545,f7562,f7564,f7594,f7596,f7909,f7932,f7934,f7937,f7943,f475,f8472,f8561,f8565,f8568,f8572,f8578,f8580,f8583,f8484,f8584,f8586,f8588,f8590,f8592,f8499,f8599,f8602,f8604,f8608,f8612,f479,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9716,f9718,f9723,f9724,f9749,f9752,f9754,f9757,f9759,f9764,f9880,f9881,f9883,f9878,f9915,f9916,f9918,f9913,f10459,f11295,f11296,f11326,f11329,f11372,f11404,f11490,f11522,f11599,f11602,f11634,f11714,f11745,f11747,f11750,f11759,f11760,f11792,f11822,f11824,f11829,f11873,f11903,f11949,f11980,f12023,f14308,f14311,f14316,f17356,f17417,f17421,f17424,f17489,f17491,f17496,f17560,f17564,f17567,f17587,f17662,f17676,f18107,f18277,f18615,f22810,f23028,f23076,f23124,f23411,f24149,f24215,f24383,f24384,f24390,f24407,f24593,f24719,f24846,f24847,f24855,f24987,f24988,f25109,f25112,f25234,f25236,f25359,f25361,f27745,f28151,f7587,f7536,f3196,f7589,f7538,f2787,f7555,f7516,f1776,f7567,f1777,f344,f343,f21583,f21580,f21451,f21448,f21319,f21316,f21198,f21195,f9574,f9573,f9572,f9571,f7832,f7782,f7681,f7643,f7293,f7249,f7049,f7006,f6974,f6931,f6890,f6695,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1669,f1642,f1626,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f6873,f6871,f6678,f6676,f3195,f3194,f2786,f2785,f7453,f7390,f7371,f7370,f7352,f7330,f7328,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f3148,f3007,f2739,f2783,f3192,f6648,f24866,f24865,f24845,f24402,f24382,f17573,f17438,f17430,f17349,f14257,f11835,f11834,f11826,f11757,f11749,f9763,f9762,f9756,f9722,f9721,f9715,f7593,f7566,f7561,f7542,f7515,f7510,f7504,f7492,f7490,f7488,f7479,f7467,f7465,f7463,f7456,f7455,f7438,f7422,f7421,f7419,f7417,f7415,f7414,f7406,f7404,f7402,f7401,f6576,f6573,f6522,f6519,f6495,f6388,f6289,f6185,f6174,f6173,f6172,f6171,f6170,f6169,f6168,f6167,f6166,f6164,f6163,f6162,f6161,f6160,f6060,f6059,f6058,f6057,f6008,f6002,f2319,f2315,f2297,f2286,f2282,f2279,f2253,f2249,f2227,f2217,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1501,f1485,f1228,f600,f481,f297,f296,f478,f29116,f30623,f30622,f30616,f30613,f30612,f30609,f30591,f30590,f30588,f30587,f30586,f30585,f30581,f30578,f30577,f30569,f30568,f30567,f30566,f30565,f30564,f30563,f30562,f30561,f30560,f30559,f30558,f30557,f30556,f30555,f30550,f30546,f30542,f30541,f30536,f30535,f30529,f30528,f30505,f30504,f30503,f30498,f30497,f30492,f30491,f30490,f30485,f30476,f30471,f30468,f30467,f30462,f30461,f30460,f30459,f30456,f30454,f30449,f30448,f30443,f30442,f30436,f30433,f30432,f30426,f30423,f30422,f30421,f30420,f30419,f30418,f30417,f30416,f30412,f30411,f30407,f30406,f30405,f30404,f30399,f30398,f30392,f30391,f30385,f30384,f30377,f30376,f30375,f30374,f30366,f30365,f30362,f30361,f30360,f30359,f30357,f30356,f30355,f30353,f30624,f30931,f30922,f31206,f31208,f31772,f31771,f31767,f31764,f31761,f31760,f31756,f31755,f31751,f31750,f31749,f31699,f31694,f31689,f31800,f31806,f32072])).
fof(f29087,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076,f29078,f29080,f29082,f29084,f29086])).
fof(f29086,plain,(
  ( ! [X2,X0,X5] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X5)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28833,f28528])).
fof(f28833,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X5))),s(X4,X6)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X5)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7555])).
fof(f29084,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28832,f28528])).
fof(f28832,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X5,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X5,X6)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X4) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7516])).
fof(f29082,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28831,f28528])).
fof(f28831,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f1776])).
fof(f29080,plain,(
  ( ! [X6,X2,X0,X3,X1] : (s(fun(X0,bool),X6) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28830,f28528])).
fof(f28830,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X4,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X4,X5)),X6,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X6) = s(fun(X0,bool),happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7567])).
fof(f29078,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28829,f28528])).
fof(f28829,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f1777])).
fof(f29076,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28828,f28528])).
fof(f28828,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f344])).
fof(f28689,plain,(
  ( ! [X68,X66,X67,X65] : (sP4('T_0',happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X67,X68)),'const.bool.IN_2'(s(X65,X66),s(fun(X65,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f24866])).
fof(f28673,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),sK14)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f17438])).
fof(f28670,plain,(
  ( ! [X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f14257])).
fof(f28669,plain,(
  ( ! [X109,X108] : (sP4(sK14,happ(s(fun(X108,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X108,X109)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12911])).
fof(f28668,plain,(
  ( ! [X105,X104] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X104,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X104,X105)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12907])).
fof(f28667,plain,(
  ( ! [X103,X102] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X102,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X102,X103)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12906])).
fof(f28666,plain,(
  ( ! [X101,X100] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X100,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X100,X101)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12905])).
fof(f28665,plain,(
  ( ! [X99,X98] : (sP5(sK14,happ(s(fun(X98,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X98,X99)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12904])).
fof(f28663,plain,(
  ( ! [X45,X44] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X44,X45)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12887])).
fof(f28662,plain,(
  ( ! [X43,X42] : (sP5('T_0',happ(s(fun(X42,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X42,X43)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12886])).
fof(f28661,plain,(
  ( ! [X41,X40] : (~sP5('F_0',happ(s(fun(X40,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X40,X41)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12885])).
fof(f28659,plain,(
  ( ! [X45,X43,X46,X44] : (sP4(sK14,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f11835])).
fof(f28650,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f11684])).
fof(f28645,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f11663])).
fof(f28644,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f11572])).
fof(f28627,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f10073])).
fof(f28626,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f10047])).
fof(f28625,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f9763])).
fof(f28622,plain,(
  ( ! [X39,X41,X42,X40] : (sP5(sK14,happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)),'const.bool.IN_2'(s(X39,X40),s(fun(X39,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f9722])).
fof(f28897,plain,(
  ( ! [X2,X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28611,f28528])).
fof(f28611,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),'const.pred_set.EMPTY_0',X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7593])).
fof(f28895,plain,(
  ( ! [X0,X3] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X3)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28609,f28528])).
fof(f28609,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X1,X2)),X3,X0)),s(fun(X0,bool),X3))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X3)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7561])).
fof(f28893,plain,(
  ( ! [X2,X0] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28608,f28528])).
fof(f28608,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19('const.pred_set.EMPTY_0',happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7542])).
fof(f28891,plain,(
  ( ! [X0,X1] : (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28606,f28528])).
fof(f28606,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X1,happ(s(fun(X2,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),'const.pred_set.EMPTY_0'))),s(X2,X3)),X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f7510])).
fof(f28887,plain,(
  ( ! [X38] : (s(bool,'F_0') = s(bool,X38)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28563,f28528])).
fof(f28563,plain,(
  ( ! [X39,X37,X38] : (s(bool,'T_0') != s(bool,happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,X38))),s(X37,X39))) | s(bool,'F_0') = s(bool,X38)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f6160])).
fof(f28556,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2319])).
fof(f28554,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2297])).
fof(f28553,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2286])).
fof(f28551,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2279])).
fof(f28550,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2253])).
fof(f28548,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),'F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2227])).
fof(f28547,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2217])).
fof(f28545,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2207])).
fof(f28877,plain,(
  ( ! [X8,X7] : (s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28544,f7477])).
fof(f28544,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X7,sK19('const.pred_set.EMPTY_0',X8,X7)),s(fun(X7,bool),X8))) | s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2121])).
fof(f28875,plain,(
  ( ! [X6,X5] : (s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28543,f7502])).
fof(f28543,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X5,sK19(X6,'const.pred_set.EMPTY_0',X5)),s(fun(X5,bool),X6))) | s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f2120])).
fof(f28870,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28529,f28528])).
fof(f28529,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f296])).
fof(f28528,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28527,f274])).
fof(f28527,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'T_0'))) ) | ($spl1 | $spl3 | $spl4)),
  inference(condensation,[],[f28526])).
fof(f28526,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28499,f9088])).
fof(f28499,plain,(
  ( ! [X2,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X1)))))) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | $spl3),
  inference(superposition,[],[f28448,f755])).
fof(f28448,plain,(
  ( ! [X13] : (~p(s(bool,X13)) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X13))))))) ) | $spl3),
  inference(superposition,[],[f12582,f389])).
fof(f28451,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X2)))) | s(bool,X3) = s(bool,happ(s(fun(sK12,bool),X2),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(subsumption_resolution,[],[f28441,f274])).
fof(f28441,plain,(
  ( ! [X2,X3] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X2)))) | s(bool,X3) = s(bool,happ(s(fun(sK12,bool),X2),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)))) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12582,f755])).
fof(f28450,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,'F_0') = s(bool,X0)) ) | $spl3),
  inference(subsumption_resolution,[],[f28439,f274])).
fof(f28439,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,'F_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f12582,f1228])).
fof(f26810,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f24864,f755])).
fof(f26792,plain,(
  ( ! [X12,X13] : (sP4('T_0',happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f24864,f755])).
fof(f26696,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f21674,f755])).
fof(f26683,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12911,f755])).
fof(f26665,plain,(
  ( ! [X12,X13] : (sP4(sK14,happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12911,f755])).
fof(f26565,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12905,f755])).
fof(f26550,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12904,f755])).
fof(f26532,plain,(
  ( ! [X12,X13] : (sP5(sK14,happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12904,f755])).
fof(f26428,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12888,f755])).
fof(f26379,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12887,f755])).
fof(f26322,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12886,f755])).
fof(f26304,plain,(
  ( ! [X12,X13] : (sP5('T_0',happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12886,f755])).
fof(f26273,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12885,f755])).
fof(f26255,plain,(
  ( ! [X12,X13] : (~sP5('F_0',happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12885,f755])).
fof(f26039,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f24757,f755])).
fof(f25999,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f24868,f755])).
fof(f25917,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f24405,f755])).
fof(f25877,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f24404,f755])).
fof(f25555,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12699,f755])).
fof(f25441,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12698,f755])).
fof(f25403,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12693,f755])).
fof(f25321,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12692,f755])).
fof(f25279,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12676,f755])).
fof(f25195,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12675,f755])).
fof(f25155,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12674,f755])).
fof(f25070,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12673,f755])).
fof(f25029,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12491,f755])).
fof(f24946,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(sK14,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12490,f755])).
fof(f24908,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12485,f755])).
fof(f24868,plain,(
  ( ! [X72,X71] : (sP4('T_0',happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X71,X72)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f2312,f8859])).
fof(f24864,plain,(
  ( ! [X59,X58] : (sP4('T_0',happ(s(fun(X58,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X58,X59)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f2312,f9103])).
fof(f24863,plain,(
  ( ! [X57,X56,X55] : (sP4('T_0',happ(s(fun(X56,bool),'_dst_x0_1'(s(bool,X55))),s(X56,X57)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X55)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f2312,f9127])).
fof(f24802,plain,(
  ( ! [X2,X0,X3,X1] : (sP5(sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f12484,f755])).
fof(f24760,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12468,f755])).
fof(f24757,plain,(
  ( ! [X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f12468,f393])).
fof(f24676,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12467,f755])).
fof(f24636,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12466,f755])).
fof(f24550,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('F_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | $spl3),
  inference(superposition,[],[f12465,f755])).
fof(f24405,plain,(
  ( ! [X72,X71] : (sP4('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X71,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X71,X72)))) ) | $spl3),
  inference(superposition,[],[f2246,f8859])).
fof(f24404,plain,(
  ( ! [X70,X69] : (sP4('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X69,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X69,X70)))) ) | $spl3),
  inference(superposition,[],[f2246,f8854])).
fof(f24284,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f19355,f755])).
fof(f24266,plain,(
  ( ! [X12,X13] : (~sP2('const.bool.IN_2'(s(bool,X12),s(fun(bool,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f19355,f755])).
fof(f24114,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12064,f755])).
fof(f24081,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f12012,f755])).
fof(f24049,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11934,f755])).
fof(f23992,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10061,f755])).
fof(f23671,plain,(
  ~sP10('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f23670,f454])).
fof(f23670,plain,(
  ~sP11('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12807])).
fof(f23584,plain,(
  ~sP8('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f481,f23462,f437])).
fof(f23462,plain,(
  ~sP9('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f481,f12806])).
fof(f23396,plain,(
  ~sP6('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f23390,f467])).
fof(f23390,plain,(
  ~sP7('F_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12805])).
fof(f23307,plain,(
  ~sP5('T_0','F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f23175,f393])).
fof(f23175,plain,(
  ~sP4('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12804])).
fof(f23116,plain,(
  ~sP10('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f23115,f454])).
fof(f23115,plain,(
  ~sP11('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0','T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12599])).
fof(f23067,plain,(
  ~sP8('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f481,f23026,f437])).
fof(f23026,plain,(
  ~sP9('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f481,f12598])).
fof(f22977,plain,(
  ~sP6('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f22971,f467])).
fof(f22971,plain,(
  ~sP7('F_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12597])).
fof(f22926,plain,(
  ~sP5('T_0','F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f22876,f393])).
fof(f22885,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),sK14,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11685,f755])).
fof(f22876,plain,(
  ~sP4('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f481,f12596])).
fof(f22796,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11663,f755])).
fof(f22778,plain,(
  ( ! [X12,X13] : (~sP2(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11663,f755])).
fof(f22764,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11663,f281])).
fof(f22642,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),sK14) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11573,f755])).
fof(f22548,plain,(
  ( ! [X2,X0,X3,X1] : (~sP3(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11551,f755])).
fof(f22530,plain,(
  ( ! [X12,X13] : (~sP3(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X12))),s(bool,X12)),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11551,f755])).
fof(f22432,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10073,f755])).
fof(f22414,plain,(
  ( ! [X12,X13] : (~sP2(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,'F_0'))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12)))),'F_0') | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10073,f755])).
fof(f22400,plain,(
  ( ! [X2,X0,X1] : (~sP2(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10073,f281])).
fof(f22284,plain,(
  ( ! [X2,X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0') | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10047,f281])).
fof(f22278,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X1,X2)),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10047,f755])).
fof(f22178,plain,(
  ( ! [X2,X0,X3,X1] : (~sP11(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9075,f755])).
fof(f22160,plain,(
  ( ! [X12,X13] : (~sP11(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X12))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12)))),'T_0') | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9075,f755])).
fof(f22064,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9073,f755])).
fof(f22046,plain,(
  ( ! [X12,X13] : (~sP9(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X12))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12)))),'F_0') | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9073,f755])).
fof(f21944,plain,(
  ( ! [X2,X0,X3,X1] : (~sP9(happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9071,f755])).
fof(f21926,plain,(
  ( ! [X12,X13] : (~sP9(happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X12))),s(bool,X12)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9071,f755])).
fof(f21798,plain,(
  ( ! [X2,X0,X3,X1] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9070,f755])).
fof(f21701,plain,(
  ( ! [X2,X0,X3,X1] : (~sP4('T_0',happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9067,f755])).
fof(f21683,plain,(
  ( ! [X12,X13] : (~sP4('T_0',happ(s(fun(bool,bool),'_dst_x0_1'(s(bool,X12))),s(bool,X12)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X12))))) | s(bool,X12) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9067,f755])).
fof(f21674,plain,(
  ( ! [X0,X1] : (~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f9067,f393])).
fof(f20712,plain,(
  ( ! [X191,X189,X190] : (sP4(sK14,happ(s(fun(X190,bool),'_dst_x0_1'(s(bool,X189))),s(X190,X191)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X189)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9749,f9127])).
fof(f20701,plain,(
  ( ! [X161,X159,X160] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X160,bool),'_dst_x0_1'(s(bool,X159))),s(X160,X161))) | s(bool,'T_0') = s(bool,X159)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f9127])).
fof(f20700,plain,(
  ( ! [X158,X156,X157] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X157,bool),'_dst_x0_1'(s(bool,X156))),s(X157,X158)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X156)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f9127])).
fof(f20699,plain,(
  ( ! [X154,X155,X153] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X154,bool),'_dst_x0_1'(s(bool,X153))),s(X154,X155))) | s(bool,'T_0') = s(bool,X153)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8679,f9127])).
fof(f20698,plain,(
  ( ! [X152,X151,X150] : (sP5(sK14,happ(s(fun(X151,bool),'_dst_x0_1'(s(bool,X150))),s(X151,X152)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X150)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8675,f9127])).
fof(f20682,plain,(
  ( ! [X83,X84,X82] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X83,bool),'_dst_x0_1'(s(bool,X82))),s(X83,X84))) | s(bool,'T_0') = s(bool,X82)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1217,f9127])).
fof(f20681,plain,(
  ( ! [X80,X81,X79] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X80,bool),'_dst_x0_1'(s(bool,X79))),s(X80,X81))) | s(bool,'T_0') = s(bool,X79)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1216,f9127])).
fof(f20680,plain,(
  ( ! [X78,X76,X77] : (sP5('T_0',happ(s(fun(X77,bool),'_dst_x0_1'(s(bool,X76))),s(X77,X78)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X76)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1215,f9127])).
fof(f20679,plain,(
  ( ! [X74,X75,X73] : (~sP5('F_0',happ(s(fun(X74,bool),'_dst_x0_1'(s(bool,X73))),s(X74,X75)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X73)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1214,f9127])).
fof(f20365,plain,(
  ( ! [X2,X0,X1] : (s(bool,X1) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,'T_0') = s(bool,X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9127,f755])).
fof(f20364,plain,(
  ( ! [X24,X23,X25] : (s(bool,X24) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,happ(s(fun(X23,bool),'_dst_x0_1'(s(bool,X24))),s(X23,X25)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9127,f389])).
fof(f20098,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10062,f755])).
fof(f20081,plain,(
  ( ! [X12,X11] : (sP5('const.bool.IN_2'(s(bool,X11),s(fun(bool,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X11)))),'T_0') | s(bool,X11) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10062,f755])).
fof(f19957,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),X3) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9050,f755])).
fof(f19843,plain,(
  ( ! [X4,X2,X0,X3,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0'))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9048,f755])).
fof(f19756,plain,(
  ( ! [X2,X0,X3,X1] : (sP11('const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9030,f755])).
fof(f19739,plain,(
  ( ! [X12,X11] : (sP11('const.bool.IN_2'(s(bool,X11),s(fun(bool,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X11)))),'T_0') | s(bool,X11) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9030,f755])).
fof(f19643,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8982,f755])).
fof(f19626,plain,(
  ( ! [X12,X11] : (sP9('const.bool.IN_2'(s(bool,X11),s(fun(bool,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X11)))),'F_0') | s(bool,X11) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8982,f755])).
fof(f19531,plain,(
  ( ! [X2,X0,X3,X1] : (sP9('const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8976,f755])).
fof(f19514,plain,(
  ( ! [X12,X11] : (sP9('const.bool.IN_2'(s(bool,X11),s(fun(bool,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X11))))) | s(bool,X11) = s(bool,X12) | s(bool,'T_0') = s(bool,X12)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8976,f755])).
fof(f19357,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8940,f755])).
fof(f19355,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f609,f607,f8940,f396])).
fof(f19167,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8936,f755])).
fof(f19046,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8933,f755])).
fof(f18986,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'T_0') | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8931,f755])).
fof(f18896,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8893,f755])).
fof(f17747,plain,(
  sP1('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f12803])).
fof(f17713,plain,(
  sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f12802])).
fof(f17647,plain,(
  sP1('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f12595])).
fof(f17581,plain,(
  sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f12594])).
fof(f13986,plain,(
  ~sP3('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f498,f490,f12642,f397])).
fof(f13983,plain,(
  sP4('T_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f12641,f393])).
fof(f13495,plain,(
  ~sP3('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f12640,f395])).
fof(f13006,plain,(
  ~sP3('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f498,f490,f12434,f397])).
fof(f13003,plain,(
  sP4('T_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f12433,f393])).
fof(f12911,plain,(
  ( ! [X109,X108] : (sP4(sK14,happ(s(fun(X108,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X108,X109)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9749,f9103])).
fof(f12907,plain,(
  ( ! [X105,X104] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X104,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X104,X105)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f9103])).
fof(f12906,plain,(
  ( ! [X103,X102] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X102,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X102,X103)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f9103])).
fof(f12905,plain,(
  ( ! [X101,X100] : (sP5(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X100,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X100,X101)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8679,f9103])).
fof(f12904,plain,(
  ( ! [X99,X98] : (sP5(sK14,happ(s(fun(X98,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X98,X99)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8675,f9103])).
fof(f12888,plain,(
  ( ! [X47,X46] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X46,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X46,X47)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1217,f9103])).
fof(f12887,plain,(
  ( ! [X45,X44] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X44,X45)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1216,f9103])).
fof(f12886,plain,(
  ( ! [X43,X42] : (sP5('T_0',happ(s(fun(X42,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X42,X43)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1215,f9103])).
fof(f12885,plain,(
  ( ! [X41,X40] : (~sP5('F_0',happ(s(fun(X40,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X40,X41)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1214,f9103])).
fof(f12844,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9103,f755])).
fof(f12699,plain,(
  ( ! [X99,X100] : (sP4(sK14,happ(s(fun(X99,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X99,X100)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f9749,f8859])).
fof(f12698,plain,(
  ( ! [X97,X98] : (sP4(sK14,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X97,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X97,X98)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f9708,f8859])).
fof(f12695,plain,(
  ( ! [X95,X96] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X95,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X95,X96)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(superposition,[],[f8941,f8859])).
fof(f12694,plain,(
  ( ! [X94,X93] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X93,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X93,X94)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(superposition,[],[f8937,f8859])).
fof(f12693,plain,(
  ( ! [X92,X91] : (sP5(sK14,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X91,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X91,X92)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f8679,f8859])).
fof(f12692,plain,(
  ( ! [X90,X89] : (sP5(sK14,happ(s(fun(X89,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X89,X90)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f8675,f8859])).
fof(f12820,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12685,f274])).
fof(f12685,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1244,f8859])).
fof(f12817,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12683,f274])).
fof(f12683,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(superposition,[],[f1242,f8859])).
fof(f12816,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(subsumption_resolution,[],[f12682,f274])).
fof(f12682,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(superposition,[],[f1241,f8859])).
fof(f12676,plain,(
  ( ! [X37,X38] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)))) ) | $spl3),
  inference(superposition,[],[f1217,f8859])).
fof(f12675,plain,(
  ( ! [X35,X36] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X35,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X35,X36)))) ) | $spl3),
  inference(superposition,[],[f1216,f8859])).
fof(f12674,plain,(
  ( ! [X33,X34] : (sP5('T_0',happ(s(fun(X33,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X33,X34)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1215,f8859])).
fof(f12673,plain,(
  ( ! [X31,X32] : (~sP5('F_0',happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1214,f8859])).
fof(f12807,plain,(
  ( ! [X26,X27] : (~sP11('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X27,X26) | p(s(bool,X27)) | ~p(s(bool,X26))) ) | $spl3),
  inference(subsumption_resolution,[],[f12669,f274])).
fof(f12669,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(superposition,[],[f462,f8859])).
fof(f12806,plain,(
  ( ! [X24,X25] : (~sP9('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X25,X24) | p(s(bool,X25)) | p(s(bool,X24))) ) | $spl3),
  inference(subsumption_resolution,[],[f12668,f274])).
fof(f12668,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(superposition,[],[f445,f8859])).
fof(f12805,plain,(
  ( ! [X23,X22] : (~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl3),
  inference(subsumption_resolution,[],[f12667,f274])).
fof(f12667,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f430,f8859])).
fof(f12804,plain,(
  ( ! [X21,X20] : (~sP4(X20,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X21) | p(s(bool,X21)) | ~p(s(bool,X20))) ) | $spl3),
  inference(subsumption_resolution,[],[f12666,f274])).
fof(f12666,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(superposition,[],[f398,f8859])).
fof(f12803,plain,(
  ( ! [X19] : (sP1(X19,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X19))) ) | $spl3),
  inference(subsumption_resolution,[],[f12665,f274])).
fof(f12665,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | sP1(X19,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f384,f8859])).
fof(f12802,plain,(
  ( ! [X18] : (sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X18) | p(s(bool,X18))) ) | $spl3),
  inference(subsumption_resolution,[],[f12664,f274])).
fof(f12664,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X18)) ) | $spl3),
  inference(superposition,[],[f381,f8859])).
fof(f12801,plain,(
  ( ! [X17] : (sP0('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(subsumption_resolution,[],[f12663,f274])).
fof(f12663,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | sP0('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(superposition,[],[f366,f8859])).
fof(f12800,plain,(
  ( ! [X16] : (sP0(X16,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12662,f274])).
fof(f12662,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | sP0(X16,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f365,f8859])).
fof(f12797,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12658,f274])).
fof(f12658,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(superposition,[],[f354,f8859])).
fof(f12796,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12657,f274])).
fof(f12657,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(superposition,[],[f352,f8859])).
fof(f12795,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12656,f274])).
fof(f12656,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(superposition,[],[f351,f8859])).
fof(f12794,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12655,f274])).
fof(f12655,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(superposition,[],[f349,f8859])).
fof(f12790,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12649,f274])).
fof(f12649,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(superposition,[],[f347,f8859])).
fof(f12640,plain,(
  ~sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f8859,f413])).
fof(f12641,plain,(
  sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f8859,f411])).
fof(f12642,plain,(
  ~sP5('F_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f8859,f413])).
fof(f12643,plain,(
  sP5('T_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f8859,f411])).
fof(f12636,plain,(
  ~sP3('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f12432,f395])).
fof(f12625,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9009,f755])).
fof(f12491,plain,(
  ( ! [X99,X100] : (sP4(sK14,happ(s(fun(X99,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X99,X100)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f9749,f8854])).
fof(f12490,plain,(
  ( ! [X97,X98] : (sP4(sK14,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X97,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X97,X98)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f9708,f8854])).
fof(f12487,plain,(
  ( ! [X95,X96] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X95,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X95,X96)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(superposition,[],[f8941,f8854])).
fof(f12486,plain,(
  ( ! [X94,X93] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X93,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X93,X94)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(superposition,[],[f8937,f8854])).
fof(f12485,plain,(
  ( ! [X92,X91] : (sP5(sK14,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X91,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X91,X92)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f8679,f8854])).
fof(f12484,plain,(
  ( ! [X90,X89] : (sP5(sK14,happ(s(fun(X89,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X89,X90)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl3 | $spl4)),
  inference(superposition,[],[f8675,f8854])).
fof(f12612,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12477,f274])).
fof(f12477,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1244,f8854])).
fof(f12609,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12475,f274])).
fof(f12475,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(superposition,[],[f1242,f8854])).
fof(f12608,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(subsumption_resolution,[],[f12474,f274])).
fof(f12474,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(superposition,[],[f1241,f8854])).
fof(f12468,plain,(
  ( ! [X37,X38] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)))) ) | $spl3),
  inference(superposition,[],[f1217,f8854])).
fof(f12467,plain,(
  ( ! [X35,X36] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X35,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X35,X36)))) ) | $spl3),
  inference(superposition,[],[f1216,f8854])).
fof(f12466,plain,(
  ( ! [X33,X34] : (sP5('T_0',happ(s(fun(X33,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X33,X34)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1215,f8854])).
fof(f12465,plain,(
  ( ! [X31,X32] : (~sP5('F_0',happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1214,f8854])).
fof(f12599,plain,(
  ( ! [X26,X27] : (~sP11('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X27,X26) | p(s(bool,X27)) | ~p(s(bool,X26))) ) | $spl3),
  inference(subsumption_resolution,[],[f12461,f274])).
fof(f12461,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(superposition,[],[f462,f8854])).
fof(f12598,plain,(
  ( ! [X24,X25] : (~sP9('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X25,X24) | p(s(bool,X25)) | p(s(bool,X24))) ) | $spl3),
  inference(subsumption_resolution,[],[f12460,f274])).
fof(f12460,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(superposition,[],[f445,f8854])).
fof(f12597,plain,(
  ( ! [X23,X22] : (~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X23)) | ~p(s(bool,X22))) ) | $spl3),
  inference(subsumption_resolution,[],[f12459,f274])).
fof(f12459,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f430,f8854])).
fof(f12596,plain,(
  ( ! [X21,X20] : (~sP4(X20,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X21) | p(s(bool,X21)) | ~p(s(bool,X20))) ) | $spl3),
  inference(subsumption_resolution,[],[f12458,f274])).
fof(f12458,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(superposition,[],[f398,f8854])).
fof(f12595,plain,(
  ( ! [X19] : (sP1(X19,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X19))) ) | $spl3),
  inference(subsumption_resolution,[],[f12457,f274])).
fof(f12457,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | sP1(X19,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f384,f8854])).
fof(f12594,plain,(
  ( ! [X18] : (sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X18) | p(s(bool,X18))) ) | $spl3),
  inference(subsumption_resolution,[],[f12456,f274])).
fof(f12456,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X18)) ) | $spl3),
  inference(superposition,[],[f381,f8854])).
fof(f12593,plain,(
  ( ! [X17] : (sP0('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(subsumption_resolution,[],[f12455,f274])).
fof(f12455,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | sP0('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(superposition,[],[f366,f8854])).
fof(f12592,plain,(
  ( ! [X16] : (sP0(X16,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f12454,f274])).
fof(f12454,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | sP0(X16,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f365,f8854])).
fof(f12589,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12450,f274])).
fof(f12450,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(superposition,[],[f354,f8854])).
fof(f12588,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12449,f274])).
fof(f12449,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(superposition,[],[f352,f8854])).
fof(f12587,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12448,f274])).
fof(f12448,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(superposition,[],[f351,f8854])).
fof(f12586,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12447,f274])).
fof(f12447,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(superposition,[],[f349,f8854])).
fof(f12582,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(subsumption_resolution,[],[f12441,f274])).
fof(f12441,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(superposition,[],[f347,f8854])).
fof(f12432,plain,(
  ~sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f8854,f413])).
fof(f12433,plain,(
  sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f8854,f411])).
fof(f12434,plain,(
  ~sP5('F_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f8854,f413])).
fof(f12435,plain,(
  sP5('T_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f8854,f411])).
fof(f12420,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8927,f755])).
fof(f12419,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8927,f391])).
fof(f12408,plain,(
  ( ! [X0,X1] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10160,f755])).
fof(f12398,plain,(
  ( ! [X0,X1] : (~sP5('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10124,f755])).
fof(f12387,plain,(
  ( ! [X0,X1] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9041,f755])).
fof(f12378,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10088,f755])).
fof(f12369,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10060,f755])).
fof(f12350,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9021,f755])).
fof(f12334,plain,(
  ( ! [X0,X1] : (sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),sK14) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10059,f755])).
fof(f12320,plain,(
  ( ! [X0,X1] : (sP5('F_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10022,f755])).
fof(f12306,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9015,f755])).
fof(f12295,plain,(
  ( ! [X0,X1] : (sP5('F_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f10021,f755])).
fof(f12282,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0','T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9990,f755])).
fof(f12271,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9008,f755])).
fof(f12260,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0',sK14) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9967,f755])).
fof(f12249,plain,(
  ( ! [X0,X1] : (sP5(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9950,f755])).
fof(f12238,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9007,f755])).
fof(f12229,plain,(
  ( ! [X0,X1] : (sP5('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9948,f755])).
fof(f12217,plain,(
  ( ! [X0,X1] : (~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9928,f755])).
fof(f12206,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9002,f755])).
fof(f12195,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0',X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9049,f755])).
fof(f12182,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9047,f755])).
fof(f12169,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8991,f755])).
fof(f12155,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0','F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8932,f755])).
fof(f12141,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8930,f755])).
fof(f12128,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8961,f755])).
fof(f12117,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8891,f755])).
fof(f12104,plain,(
  ( ! [X0,X1] : (sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),sK14) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11451,f755])).
fof(f12095,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8956,f755])).
fof(f12085,plain,(
  ( ! [X0,X1] : (sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f11450,f755])).
fof(f12065,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8926,f755])).
fof(f12064,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8926,f391])).
fof(f12013,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8925,f755])).
fof(f12012,plain,(
  ~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8925,f391])).
fof(f11935,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8920,f755])).
fof(f11934,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8920,f391])).
fof(f11860,plain,(
  ( ! [X0,X1] : (~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9058,f755])).
fof(f11781,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8886,f755])).
fof(f11685,plain,(
  ( ! [X47,X48] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14,happ(s(fun(X47,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X47,X48)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f8626])).
fof(f11684,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X45,X46)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f600])).
fof(f11683,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X39))),s(X38,X40)),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42))) | s(bool,'F_0') = s(bool,X39)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f1228])).
fof(f11678,plain,(
  ( ! [X28,X29,X27] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0',happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X27))),s(X28,X29))) | s(bool,'T_0') = s(bool,X27)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f281])).
fof(f11676,plain,(
  ( ! [X21,X19,X22,X20] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X19)))),'T_0',happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X19))),s(X20,X21))) | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f755])).
fof(f11675,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X16,happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18))) | s(bool,'T_0') = s(bool,X16)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f281])).
fof(f11673,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X8,happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11))) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f755])).
fof(f11671,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f755])).
fof(f11665,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,X1))),s(X2,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8941,f755])).
fof(f11663,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f494,f8904,f8941,f396])).
fof(f11574,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X52,bool),'_dst_x0_1'(s(bool,X50))),s(X52,X53)),happ(s(fun(X49,bool),'_dst_x0_1'(s(bool,X50))),s(X49,X51)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f389])).
fof(f11573,plain,(
  ( ! [X47,X48] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X47,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X47,X48)),sK14)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f8626])).
fof(f11572,plain,(
  ( ! [X45,X43,X46,X44] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X45,X46)),'const.bool.IN_2'(s(X43,X44),s(fun(X43,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f600])).
fof(f11571,plain,(
  ( ! [X39,X41,X38,X42,X40] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X41,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X41,X42)),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X39))),s(X38,X40))) | s(bool,'F_0') = s(bool,X39)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f1228])).
fof(f11566,plain,(
  ( ! [X28,X29,X27] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,X27))),s(X28,X29)),'F_0') | s(bool,'T_0') = s(bool,X27)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f281])).
fof(f11564,plain,(
  ( ! [X21,X19,X22,X20] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X19)))),happ(s(fun(X20,bool),'_dst_x0_1'(s(bool,X19))),s(X20,X21)),'T_0') | s(bool,X19) = s(bool,X22) | s(bool,'T_0') = s(bool,X22)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f755])).
fof(f11563,plain,(
  ( ! [X17,X18,X16] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X17,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X17,X18)),X16) | s(bool,'T_0') = s(bool,X16)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f281])).
fof(f11561,plain,(
  ( ! [X10,X8,X11,X9] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X10,bool),'_dst_x0_1'(s(bool,X9))),s(X10,X11)),X8) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f755])).
fof(f11559,plain,(
  ( ! [X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X1,X2)),X0) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f755])).
fof(f11553,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X2))),s(X1,X3)),X2) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8937,f755])).
fof(f11551,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f500,f8904,f8937,f395])).
fof(f11462,plain,(
  ( ! [X0,X1] : (s(bool,X0) != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8877,f755])).
fof(f11450,plain,(
  sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8877,f9881])).
fof(f11451,plain,(
  sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8877,f9916])).
fof(f11363,plain,(
  ( ! [X0,X1] : (~sP11('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9045,f755])).
fof(f11283,plain,(
  ( ! [X2,X0,X1] : (sP11('T_0',X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9043,f755])).
fof(f11246,plain,(
  ( ! [X0,X1] : (sP11('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9040,f755])).
fof(f11210,plain,(
  ( ! [X0,X1] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9038,f755])).
fof(f11182,plain,(
  ( ! [X2,X0,X3,X1] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9037,f755])).
fof(f11154,plain,(
  ( ! [X2,X0,X3,X1] : (sP10(X1,X2,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9036,f755])).
fof(f11127,plain,(
  ( ! [X0,X1] : (~sP10('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9031,f755])).
fof(f11101,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0',X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9022,f755])).
fof(f11080,plain,(
  ( ! [X2,X0,X1] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'F_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9020,f755])).
fof(f10933,plain,(
  ( ! [X2,X0,X1] : (~sP11('F_0',X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9017,f755])).
fof(f10909,plain,(
  ( ! [X0,X1] : (~sP9('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9014,f755])).
fof(f10887,plain,(
  ( ! [X0,X1] : (~sP9('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9011,f755])).
fof(f10864,plain,(
  ( ! [X0,X1] : (sP9('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9006,f755])).
fof(f10848,plain,(
  ( ! [X0,X1] : (sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9001,f755])).
fof(f10683,plain,(
  ( ! [X0,X1] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8997,f755])).
fof(f10655,plain,(
  ( ! [X2,X0,X3,X1] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8996,f755])).
fof(f10623,plain,(
  ( ! [X0,X1] : (~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8990,f755])).
fof(f10565,plain,(
  ( ! [X0,X1] : (~sP8('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8984,f755])).
fof(f10504,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0',X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8965,f755])).
fof(f10444,plain,(
  ( ! [X2,X0,X1] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,'T_0') | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8964,f755])).
fof(f10359,plain,(
  ( ! [X0,X1] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'T_0','T_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8963,f755])).
fof(f10317,plain,(
  ( ! [X2,X0,X1] : (sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8960,f755])).
fof(f10301,plain,(
  ( ! [X2,X0,X1] : (sP7('F_0',X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8955,f755])).
fof(f10281,plain,(
  ( ! [X2,X0,X3,X1] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8952,f755])).
fof(f10252,plain,(
  ( ! [X2,X0,X3,X1] : (sP6(X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8951,f755])).
fof(f10226,plain,(
  ( ! [X0,X1] : (~sP6('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8946,f755])).
fof(f10204,plain,(
  ( ! [X2,X0,X1] : (~sP7('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8944,f755])).
fof(f10181,plain,(
  ( ! [X2,X0,X1] : (~sP7('T_0',X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8942,f755])).
fof(f10161,plain,(
  ( ! [X0,X1] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8924,f755])).
fof(f10160,plain,(
  ~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8924,f391])).
fof(f10125,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0','F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8918,f755])).
fof(f10124,plain,(
  ~sP5('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8918,f391])).
fof(f10089,plain,(
  ( ! [X0,X1] : (~sP2('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8912,f755])).
fof(f10088,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8912,f391])).
fof(f10064,plain,(
  ( ! [X2,X0,X3,X1] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8911,f755])).
fof(f10073,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f10057,f9103])).
fof(f10057,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f1216,f490,f8911,f397])).
fof(f10059,plain,(
  sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8671,f490,f8911,f397])).
fof(f10060,plain,(
  sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f8911,f395])).
fof(f10061,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f500,f8904,f8911,f395])).
fof(f10062,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f500,f608,f8911,f395])).
fof(f10034,plain,(
  ( ! [X2,X0,X3,X1] : (sP3(X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8910,f755])).
fof(f10047,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f10020,f9103])).
fof(f10020,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f1214,f490,f8910,f397])).
fof(f10021,plain,(
  sP5('F_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f498,f490,f8910,f397])).
fof(f10022,plain,(
  sP5('F_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8670,f490,f8910,f397])).
fof(f9991,plain,(
  ( ! [X0,X1] : (~sP3('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8905,f755])).
fof(f9990,plain,(
  ~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8905,f392])).
fof(f9973,plain,(
  ( ! [X2,X0,X3,X1] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X1,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8904,f755])).
fof(f9967,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0',sK14) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f494,f8671,f8904,f396])).
fof(f9955,plain,(
  ( ! [X2,X0,X3,X1] : (sP4(X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8903,f755])).
fof(f9948,plain,(
  sP5('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f494,f496,f8903,f396])).
fof(f9950,plain,(
  sP5(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f494,f8669,f8903,f396])).
fof(f9929,plain,(
  ( ! [X0,X1] : (~sP4('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8898,f755])).
fof(f9928,plain,(
  ~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8898,f393])).
fof(f9888,plain,(
  ( ! [X0,X1] : (~sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8889,f755])).
fof(f9848,plain,(
  ( ! [X0,X1] : (~sP0('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9057,f755])).
fof(f9829,plain,(
  ( ! [X0,X1] : (~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f9051,f755])).
fof(f9810,plain,(
  ( ! [X0,X1] : (~sP1('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8885,f755])).
fof(f9795,plain,(
  ( ! [X0,X1] : (~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))),'F_0') | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8883,f755])).
fof(f9127,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f9094,f274])).
fof(f9094,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8832,f755])).
fof(f9088,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X0)))))) | s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f8832,f755])).
fof(f8877,plain,(
  s(bool,'T_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f292])).
fof(f8883,plain,(
  ~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f379])).
fof(f8885,plain,(
  ~sP1('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f379])).
fof(f8886,plain,(
  ~sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f379])).
fof(f8889,plain,(
  ~sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f394])).
fof(f8891,plain,(
  sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f493,f489,f496,f8832,f396])).
fof(f8893,plain,(
  ( ! [X0,X1] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f492,f607,f496,f8832,f396])).
fof(f8898,plain,(
  ~sP4('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f398])).
fof(f8903,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f400])).
fof(f8904,plain,(
  ( ! [X0,X1] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f401])).
fof(f8905,plain,(
  ~sP3('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f402])).
fof(f8910,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f404])).
fof(f8911,plain,(
  ( ! [X0,X1] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f405])).
fof(f8912,plain,(
  ~sP2('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f406])).
fof(f8918,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f406])).
fof(f8920,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f8832,f406])).
fof(f8924,plain,(
  ~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f406])).
fof(f8925,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f481,f8832,f406])).
fof(f8926,plain,(
  ~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f8832,f406])).
fof(f8927,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f8832,f406])).
fof(f8930,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f523,f8832,f410])).
fof(f8931,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f599,f8832,f410])).
fof(f8932,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f523,f8832,f410])).
fof(f8933,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f599,f8832,f410])).
fof(f8936,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f600,f8832,f413])).
fof(f8937,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,X1))),s(X0,X2)),X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f389,f8832,f413])).
fof(f8940,plain,(
  ( ! [X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f600,f8832,f413])).
fof(f8941,plain,(
  ( ! [X2,X0,X1] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f389,f8832,f413])).
fof(f8942,plain,(
  ( ! [X0] : (~sP7('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f415])).
fof(f8944,plain,(
  ( ! [X0] : (~sP7('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f416])).
fof(f8946,plain,(
  ~sP6('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f421])).
fof(f8951,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f423])).
fof(f8952,plain,(
  ( ! [X0,X1] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f424])).
fof(f8955,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f425])).
fof(f8956,plain,(
  ( ! [X0] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f425])).
fof(f8960,plain,(
  ( ! [X0] : (sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f426])).
fof(f8961,plain,(
  ( ! [X0] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f426])).
fof(f8963,plain,(
  ~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f430])).
fof(f8964,plain,(
  ( ! [X0] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f431])).
fof(f8965,plain,(
  ( ! [X0] : (~sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f432])).
fof(f8976,plain,(
  ( ! [X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f613,f8832,f437])).
fof(f8982,plain,(
  ( ! [X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f613,f8832,f437])).
fof(f8983,plain,(
  ( ! [X0,X1] : (sP9('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f613,f8832,f437])).
fof(f8984,plain,(
  ~sP8('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f8832,f438])).
fof(f8990,plain,(
  ~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f8832,f438])).
fof(f8991,plain,(
  ~sP8('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f8832,f438])).
fof(f8996,plain,(
  ( ! [X0,X1] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f441])).
fof(f8997,plain,(
  sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f442])).
fof(f9001,plain,(
  sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f442])).
fof(f9002,plain,(
  sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f481,f8832,f442])).
fof(f9006,plain,(
  sP9('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f481,f8832,f442])).
fof(f9007,plain,(
  sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f481,f8832,f442])).
fof(f9008,plain,(
  sP9('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f8832,f442])).
fof(f9009,plain,(
  sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f8832,f442])).
fof(f9011,plain,(
  ~sP9('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f274,f8832,f445])).
fof(f9014,plain,(
  ~sP9('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f8832,f445])).
fof(f9015,plain,(
  ~sP9('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f8832,f445])).
fof(f9017,plain,(
  ( ! [X0] : (~sP11('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f448])).
fof(f9020,plain,(
  ( ! [X0] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f448])).
fof(f9021,plain,(
  ( ! [X0] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f448])).
fof(f9022,plain,(
  ( ! [X0] : (~sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f449])).
fof(f9030,plain,(
  ( ! [X0,X1] : (sP11('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f615,f8832,f454])).
fof(f9031,plain,(
  ~sP10('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f455])).
fof(f9036,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f456])).
fof(f9037,plain,(
  ( ! [X0,X1] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f458])).
fof(f9038,plain,(
  sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f274,f8832,f459])).
fof(f9040,plain,(
  sP11('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f274,f8832,f459])).
fof(f9041,plain,(
  sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f274,f8832,f459])).
fof(f9043,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f8832,f460])).
fof(f9045,plain,(
  ~sP11('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f462])).
fof(f9047,plain,(
  ( ! [X0] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f503,f8832,f467])).
fof(f9048,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f611,f8832,f467])).
fof(f9049,plain,(
  ( ! [X0] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0',X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f504,f8832,f467])).
fof(f9050,plain,(
  ( ! [X2,X0,X1] : (sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),X2)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f612,f8832,f467])).
fof(f9051,plain,(
  ~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f482])).
fof(f9057,plain,(
  ~sP0('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f8832,f482])).
fof(f9058,plain,(
  ~sP0('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f8832,f482])).
fof(f9103,plain,(
  s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f9064,f600])).
fof(f9064,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f599,f8832,f818])).
fof(f9067,plain,(
  ( ! [X0,X1] : (~sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f1241])).
fof(f9070,plain,(
  ( ! [X0,X1] : (~sP7('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f1242])).
fof(f9071,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f481,f8832,f1243])).
fof(f9073,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f274,f8832,f1243])).
fof(f9074,plain,(
  ( ! [X0,X1] : (~sP9(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f8832,f274,f8832,f1243])).
fof(f9075,plain,(
  ( ! [X0,X1] : (~sP11(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f274,f8832,f1244])).
fof(f8871,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f8851,f600])).
fof(f8851,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1777])).
fof(f8870,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f8852,f600])).
fof(f8852,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1776])).
fof(f8854,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f600,f477,f1769])).
fof(f8865,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f8857,f600])).
fof(f8857,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1777])).
fof(f8864,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f8858,f600])).
fof(f8858,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1776])).
fof(f8859,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f600,f477,f1772])).
fof(f8860,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f599,f477,f1769])).
fof(f8862,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(forward_demodulation,[],[f8861,f600])).
fof(f8861,plain,(
  s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f344])).
fof(f8832,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f8626,f476])).
fof(f7605,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f7559,f600])).
fof(f7559,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1777])).
fof(f7604,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f7560,f600])).
fof(f7560,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1777])).
fof(f7556,plain,(
  sP1('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f7203])).
fof(f7554,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f7508,f600])).
fof(f7508,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1776])).
fof(f7553,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(forward_demodulation,[],[f7509,f600])).
fof(f7509,plain,(
  ( ! [X0,X1] : (s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f1776])).
fof(f7505,plain,(
  sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f7202])).
fof(f7482,plain,(
  sP1('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f6829])).
fof(f7457,plain,(
  sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f6828])).
fof(f7396,plain,(
  sP3(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1977,f392])).
fof(f7397,plain,(
  sP2(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1977,f391])).
fof(f7377,plain,(
  sP3(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1975,f392])).
fof(f7378,plain,(
  sP2(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1975,f391])).
fof(f7317,plain,(
  ~sP3('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f498,f490,f7069,f397])).
fof(f7314,plain,(
  sP4('T_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f7068,f393])).
fof(f7271,plain,(
  ~sP3('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f7067,f395])).
fof(f7220,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f7113,f274])).
fof(f7113,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1244,f1886])).
fof(f7217,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(subsumption_resolution,[],[f7111,f274])).
fof(f7111,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(superposition,[],[f1242,f1886])).
fof(f7216,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(subsumption_resolution,[],[f7110,f274])).
fof(f7110,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(superposition,[],[f1241,f1886])).
fof(f7104,plain,(
  ( ! [X37,X38] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)))) ) | $spl3),
  inference(superposition,[],[f1217,f1886])).
fof(f7103,plain,(
  ( ! [X35,X36] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X35,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X35,X36)))) ) | $spl3),
  inference(superposition,[],[f1216,f1886])).
fof(f7102,plain,(
  ( ! [X33,X34] : (sP5('T_0',happ(s(fun(X33,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X33,X34)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1215,f1886])).
fof(f7101,plain,(
  ( ! [X31,X32] : (~sP5('F_0',happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1214,f1886])).
fof(f7207,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(subsumption_resolution,[],[f7095,f274])).
fof(f7095,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(superposition,[],[f462,f1886])).
fof(f7206,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(subsumption_resolution,[],[f7094,f274])).
fof(f7094,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(superposition,[],[f445,f1886])).
fof(f7205,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f7093,f274])).
fof(f7093,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f430,f1886])).
fof(f7204,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(subsumption_resolution,[],[f7092,f274])).
fof(f7092,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(superposition,[],[f398,f1886])).
fof(f7203,plain,(
  ( ! [X19] : (sP1(X19,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X19))) ) | $spl3),
  inference(subsumption_resolution,[],[f7091,f274])).
fof(f7091,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | sP1(X19,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f384,f1886])).
fof(f7202,plain,(
  ( ! [X18] : (sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X18) | p(s(bool,X18))) ) | $spl3),
  inference(subsumption_resolution,[],[f7090,f274])).
fof(f7090,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X18)) ) | $spl3),
  inference(superposition,[],[f381,f1886])).
fof(f7201,plain,(
  ( ! [X17] : (sP0('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(subsumption_resolution,[],[f7089,f274])).
fof(f7089,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | sP0('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(superposition,[],[f366,f1886])).
fof(f7200,plain,(
  ( ! [X16] : (sP0(X16,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f7088,f274])).
fof(f7088,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | sP0(X16,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f365,f1886])).
fof(f7197,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(subsumption_resolution,[],[f7084,f274])).
fof(f7084,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(superposition,[],[f354,f1886])).
fof(f7196,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(subsumption_resolution,[],[f7083,f274])).
fof(f7083,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(superposition,[],[f352,f1886])).
fof(f7195,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f7082,f274])).
fof(f7082,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(superposition,[],[f351,f1886])).
fof(f7194,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f7081,f274])).
fof(f7081,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(superposition,[],[f349,f1886])).
fof(f7190,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(subsumption_resolution,[],[f7075,f274])).
fof(f7075,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(superposition,[],[f347,f1886])).
fof(f7067,plain,(
  ~sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1886,f413])).
fof(f7068,plain,(
  sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1886,f411])).
fof(f7069,plain,(
  ~sP5('F_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1886,f413])).
fof(f7070,plain,(
  sP5('T_0','T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1886,f411])).
fof(f6938,plain,(
  ~sP3('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f498,f490,f6700,f397])).
fof(f6935,plain,(
  sP4('T_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f6699,f393])).
fof(f6895,plain,(
  ~sP3('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f500,f490,f6698,f395])).
fof(f6846,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f6744,f274])).
fof(f6744,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'T_0')) | ~p(s(bool,X65)) | p(s(bool,X66)) | ~sP11(happ(s(fun(X67,bool),'_dst_x0_1'(s(bool,X65))),s(X67,X68)),X66,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1244,f1865])).
fof(f6843,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(subsumption_resolution,[],[f6742,f274])).
fof(f6742,plain,(
  ( ! [X59,X57,X60,X58] : (~p(s(bool,'T_0')) | ~p(s(bool,X57)) | p(s(bool,X58)) | ~sP7(X58,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X59,bool),'_dst_x0_1'(s(bool,X57))),s(X59,X60)))) ) | $spl3),
  inference(superposition,[],[f1242,f1865])).
fof(f6842,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(subsumption_resolution,[],[f6741,f274])).
fof(f6741,plain,(
  ( ! [X54,X56,X55,X53] : (~p(s(bool,'T_0')) | ~p(s(bool,X53)) | p(s(bool,X54)) | ~sP4('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X55,bool),'_dst_x0_1'(s(bool,X53))),s(X55,X56)),X54)) ) | $spl3),
  inference(superposition,[],[f1241,f1865])).
fof(f6735,plain,(
  ( ! [X37,X38] : (sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)))) ) | $spl3),
  inference(superposition,[],[f1217,f1865])).
fof(f6734,plain,(
  ( ! [X35,X36] : (~sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),happ(s(fun(X35,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X35,X36)))) ) | $spl3),
  inference(superposition,[],[f1216,f1865])).
fof(f6733,plain,(
  ( ! [X33,X34] : (sP5('T_0',happ(s(fun(X33,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X33,X34)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1215,f1865])).
fof(f6732,plain,(
  ( ! [X31,X32] : (~sP5('F_0',happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f1214,f1865])).
fof(f6833,plain,(
  ( ! [X26,X27] : (~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(subsumption_resolution,[],[f6726,f274])).
fof(f6726,plain,(
  ( ! [X26,X27] : (~p(s(bool,'T_0')) | ~p(s(bool,X26)) | p(s(bool,X27)) | ~sP11('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X27,X26)) ) | $spl3),
  inference(superposition,[],[f462,f1865])).
fof(f6832,plain,(
  ( ! [X24,X25] : (p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(subsumption_resolution,[],[f6725,f274])).
fof(f6725,plain,(
  ( ! [X24,X25] : (~p(s(bool,'T_0')) | p(s(bool,X24)) | p(s(bool,X25)) | ~sP9('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X25,X24)) ) | $spl3),
  inference(superposition,[],[f445,f1865])).
fof(f6831,plain,(
  ( ! [X23,X22] : (~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f6724,f274])).
fof(f6724,plain,(
  ( ! [X23,X22] : (~p(s(bool,'T_0')) | ~p(s(bool,X22)) | p(s(bool,X23)) | ~sP7(X23,X22,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f430,f1865])).
fof(f6830,plain,(
  ( ! [X21,X20] : (~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(subsumption_resolution,[],[f6723,f274])).
fof(f6723,plain,(
  ( ! [X21,X20] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | p(s(bool,X21)) | ~sP4(X20,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X21)) ) | $spl3),
  inference(superposition,[],[f398,f1865])).
fof(f6829,plain,(
  ( ! [X19] : (sP1(X19,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | p(s(bool,X19))) ) | $spl3),
  inference(subsumption_resolution,[],[f6722,f274])).
fof(f6722,plain,(
  ( ! [X19] : (~p(s(bool,'T_0')) | p(s(bool,X19)) | sP1(X19,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f384,f1865])).
fof(f6828,plain,(
  ( ! [X18] : (sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X18) | p(s(bool,X18))) ) | $spl3),
  inference(subsumption_resolution,[],[f6721,f274])).
fof(f6721,plain,(
  ( ! [X18] : (~p(s(bool,'T_0')) | p(s(bool,X18)) | sP1('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X18)) ) | $spl3),
  inference(superposition,[],[f381,f1865])).
fof(f6827,plain,(
  ( ! [X17] : (sP0('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(subsumption_resolution,[],[f6720,f274])).
fof(f6720,plain,(
  ( ! [X17] : (~p(s(bool,'T_0')) | sP0('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X17)) ) | $spl3),
  inference(superposition,[],[f366,f1865])).
fof(f6826,plain,(
  ( ! [X16] : (sP0(X16,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(subsumption_resolution,[],[f6719,f274])).
fof(f6719,plain,(
  ( ! [X16] : (~p(s(bool,'T_0')) | sP0(X16,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | $spl3),
  inference(superposition,[],[f365,f1865])).
fof(f6823,plain,(
  ( ! [X12,X10,X11] : (p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6715,f274])).
fof(f6715,plain,(
  ( ! [X12,X10,X11] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X10,bool),X11),s(X10,sK24('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X11,X10))))) | ~p(s(bool,happ(s(fun(X10,bool),X11),s(X10,X12))))) ) | $spl3),
  inference(superposition,[],[f354,f1865])).
fof(f6822,plain,(
  ( ! [X8,X7,X9] : (p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6714,f274])).
fof(f6714,plain,(
  ( ! [X8,X7,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X7,bool),X8),s(X7,sK23('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X8,X7))))) | ~p(s(bool,happ(s(fun(X7,bool),X8),s(X7,X9))))) ) | $spl3),
  inference(superposition,[],[f352,f1865])).
fof(f6821,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6713,f274])).
fof(f6713,plain,(
  ( ! [X6,X4,X5] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK22(X5,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X4)))))) ) | $spl3),
  inference(superposition,[],[f351,f1865])).
fof(f6820,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6712,f274])).
fof(f6712,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),X1)))))) ) | $spl3),
  inference(superposition,[],[f349,f1865])).
fof(f6816,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6706,f274])).
fof(f6706,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(sK12,bool),X0),s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12))))) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),X0))))) ) | $spl3),
  inference(superposition,[],[f347,f1865])).
fof(f6698,plain,(
  ~sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1865,f413])).
fof(f6699,plain,(
  sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'T_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1865,f411])).
fof(f6700,plain,(
  ~sP5('F_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1865,f413])).
fof(f6701,plain,(
  sP5('T_0','T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1865,f411])).
fof(f6654,plain,(
  sP3(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1710,f392])).
fof(f6655,plain,(
  sP2(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1710,f391])).
fof(f6623,plain,(
  sP3(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1708,f392])).
fof(f6624,plain,(
  sP2(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1708,f391])).
fof(f5952,plain,(
  sP2('const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1892,f391])).
fof(f5916,plain,(
  ~sP4('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f496,f494,f1891,f396])).
fof(f5914,plain,(
  sP2('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1889,f391])).
fof(f5873,plain,(
  sP2('const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0','F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1871,f391])).
fof(f5743,plain,(
  ~sP4('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f496,f494,f1870,f396])).
fof(f5741,plain,(
  sP2('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f1868,f391])).
fof(f564,plain,(
  s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f529,f297])).
fof(f2216,plain,(
  ( ! [X8,X9] : (~sP5('F_0',happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X8,X9)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1214,f564])).
fof(f2228,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f2208,f564])).
fof(f2208,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f533,f531,f1214,f397])).
fof(f2252,plain,(
  ( ! [X8,X9] : (sP5('T_0',happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X8,X9)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1215,f564])).
fof(f2285,plain,(
  ( ! [X8,X9] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X8,X9)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1216,f564])).
fof(f2298,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f2275,f564])).
fof(f2275,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f534,f490,f1216,f397])).
fof(f2318,plain,(
  ( ! [X8,X9] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X8,X9)))) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1217,f564])).
fof(f2949,plain,(
  ( ! [X45,X44] : (s(bool,'F_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X44))))) | s(bool,X44) = s(bool,X45) | s(bool,'T_0') = s(bool,X45)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f564,f755])).
fof(f2972,plain,(
  ( ! [X97,X96] : (sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X96)))),sK14) | s(bool,X96) = s(bool,X97) | s(bool,'T_0') = s(bool,X97)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1464,f755])).
fof(f2971,plain,(
  ( ! [X94,X95] : (sP5('F_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X94))))) | s(bool,X94) = s(bool,X95) | s(bool,'T_0') = s(bool,X95)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1447,f755])).
fof(f2970,plain,(
  ( ! [X92,X93] : (~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X92)))),'F_0') | s(bool,X92) = s(bool,X93) | s(bool,'T_0') = s(bool,X93)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1435,f755])).
fof(f2969,plain,(
  ( ! [X90,X91] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X90)))),'F_0',sK14) | s(bool,X90) = s(bool,X91) | s(bool,'T_0') = s(bool,X91)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1397,f755])).
fof(f2968,plain,(
  ( ! [X88,X89] : (sP5(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X88))))) | s(bool,X88) = s(bool,X89) | s(bool,'T_0') = s(bool,X89)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1381,f755])).
fof(f2967,plain,(
  ( ! [X87,X86] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X86)))),'F_0','F_0') | s(bool,X86) = s(bool,X87) | s(bool,'T_0') = s(bool,X87)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1379,f755])).
fof(f2966,plain,(
  ( ! [X85,X84] : (~sP4('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X84))))) | s(bool,X84) = s(bool,X85) | s(bool,'T_0') = s(bool,X85)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1331,f755])).
fof(f2965,plain,(
  ( ! [X83,X82] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X82)))),'F_0','T_0') | s(bool,X82) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1320,f755])).
fof(f2964,plain,(
  ( ! [X80,X81] : (sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X80)))),'F_0','T_0') | s(bool,X80) = s(bool,X81) | s(bool,'T_0') = s(bool,X81)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1148,f755])).
fof(f2963,plain,(
  ( ! [X78,X79] : (sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X78)))),'F_0','F_0') | s(bool,X78) = s(bool,X79) | s(bool,'T_0') = s(bool,X79)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f1068,f755])).
fof(f2962,plain,(
  ( ! [X76,X77] : (~sP5('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X76))))) | s(bool,X76) = s(bool,X77) | s(bool,'T_0') = s(bool,X77)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f899,f755])).
fof(f2961,plain,(
  ( ! [X74,X75] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X74)))),'F_0') | s(bool,X74) = s(bool,X75) | s(bool,'T_0') = s(bool,X75)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f896,f755])).
fof(f2960,plain,(
  ( ! [X72,X73] : (~sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X72))))) | s(bool,X72) = s(bool,X73) | s(bool,'T_0') = s(bool,X73)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f887,f755])).
fof(f2959,plain,(
  ( ! [X70,X71] : (~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X70)))),'T_0') | s(bool,X70) = s(bool,X71) | s(bool,'T_0') = s(bool,X71)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f884,f755])).
fof(f2958,plain,(
  ( ! [X68,X69] : (sP5('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X68))))) | s(bool,X68) = s(bool,X69) | s(bool,'T_0') = s(bool,X69)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f873,f755])).
fof(f2957,plain,(
  ( ! [X66,X67] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X66)))),'F_0') | s(bool,X66) = s(bool,X67) | s(bool,'T_0') = s(bool,X67)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f871,f755])).
fof(f2956,plain,(
  ( ! [X64,X65] : (sP5('F_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X64))))) | s(bool,X64) = s(bool,X65) | s(bool,'T_0') = s(bool,X65)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f863,f755])).
fof(f2955,plain,(
  ( ! [X62,X63] : (sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X62)))),'T_0') | s(bool,X62) = s(bool,X63) | s(bool,'T_0') = s(bool,X63)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f861,f755])).
fof(f2954,plain,(
  ( ! [X61,X59,X60] : (sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X59)))),X60) | s(bool,X59) = s(bool,X61) | s(bool,'T_0') = s(bool,X61)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f747,f755])).
fof(f2953,plain,(
  ( ! [X57,X58,X56] : (sP7('F_0',X57,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X56))))) | s(bool,X56) = s(bool,X58) | s(bool,'T_0') = s(bool,X58)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f745,f755])).
fof(f2952,plain,(
  ( ! [X54,X55,X53] : (sP11('T_0',X54,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X53))))) | s(bool,X53) = s(bool,X55) | s(bool,'T_0') = s(bool,X55)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f721,f755])).
fof(f2951,plain,(
  ( ! [X52,X51] : (sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X51)))),sK14) | s(bool,X51) = s(bool,X52) | s(bool,'T_0') = s(bool,X52)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f669,f755])).
fof(f2950,plain,(
  ( ! [X50,X49] : (sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X49))))) | s(bool,X49) = s(bool,X50) | s(bool,'T_0') = s(bool,X50)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f668,f755])).
fof(f2948,plain,(
  ( ! [X43,X42] : (s(bool,X42) != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X42))))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f540,f755])).
fof(f2947,plain,(
  ( ! [X39,X41,X38,X40] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X38)))),X39,X40) | s(bool,X38) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f539,f755])).
fof(f2946,plain,(
  ( ! [X37,X35,X36,X34] : (sP10(X35,X36,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X34))))) | s(bool,X34) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f538,f755])).
fof(f2945,plain,(
  ( ! [X30,X33,X31,X32] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X30)))),X31,X32) | s(bool,X30) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f537,f755])).
fof(f2944,plain,(
  ( ! [X28,X26,X29,X27] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X26)))),X27,X28) | s(bool,X26) = s(bool,X29) | s(bool,'T_0') = s(bool,X29)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f536,f755])).
fof(f2943,plain,(
  ( ! [X24,X23,X25,X22] : (sP6(X23,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X22)))),X24) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f535,f755])).
fof(f2942,plain,(
  ( ! [X21,X19,X20,X18] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X18)))),X19,X20) | s(bool,X18) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f534,f755])).
fof(f2941,plain,(
  ( ! [X14,X17,X15,X16] : (sP3(X15,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X14)))),X16) | s(bool,X14) = s(bool,X17) | s(bool,'T_0') = s(bool,X17)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f533,f755])).
fof(f2940,plain,(
  ( ! [X12,X10,X13,X11] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X10)))),X11,X12) | s(bool,X10) = s(bool,X13) | s(bool,'T_0') = s(bool,X13)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f532,f755])).
fof(f2939,plain,(
  ( ! [X6,X8,X7,X9] : (sP4(X7,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,X6)))),X8) | s(bool,X6) = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f531,f755])).
fof(f2356,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f2350,f481])).
fof(f2350,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | s(bool,'T_0') = s(bool,X5)) ) | ($spl1 | $spl4)),
  inference(superposition,[],[f818,f564])).
fof(f1974,plain,(
  ~sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1704,f412])).
fof(f1975,plain,(
  sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1704,f410])).
fof(f1976,plain,(
  ~sP5('T_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1704,f412])).
fof(f1977,plain,(
  sP5('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1704,f410])).
fof(f1886,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f1775,f281])).
fof(f1888,plain,(
  ~sP5('T_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1775,f412])).
fof(f1889,plain,(
  sP5('F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1775,f410])).
fof(f1891,plain,(
  ~sP5('T_0','F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1775,f412])).
fof(f1892,plain,(
  sP5('F_0','F_0','const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1775,f410])).
fof(f1893,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1775,f360])).
fof(f1865,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f1774,f281])).
fof(f1867,plain,(
  ~sP5('T_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1774,f412])).
fof(f1868,plain,(
  sP5('F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)),'F_0') | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1774,f410])).
fof(f1870,plain,(
  ~sP5('T_0','F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1774,f412])).
fof(f1871,plain,(
  sP5('F_0','F_0','const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1774,f410])).
fof(f1872,plain,(
  p(s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1774,f360])).
fof(f1775,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(forward_demodulation,[],[f1766,f600])).
fof(f1766,plain,(
  s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f344])).
fof(f1774,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(forward_demodulation,[],[f1767,f600])).
fof(f1767,plain,(
  s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),'const.pred_set.EMPTY_0'))) != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f344])).
fof(f1707,plain,(
  ~sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1703,f412])).
fof(f1708,plain,(
  sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1703,f410])).
fof(f1709,plain,(
  ~sP5('T_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f1703,f412])).
fof(f1710,plain,(
  sP5('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f481,f1703,f410])).
fof(f1703,plain,(
  s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f390])).
fof(f1704,plain,(
  s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f390])).
fof(f1435,plain,(
  ~sP2('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f896,f534,f489,f481,f397])).
fof(f1447,plain,(
  sP5('F_0',sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f533,f531,f497,f481,f397])).
fof(f1464,plain,(
  sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f534,f490,f499,f481,f397])).
fof(f1379,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f899,f533,f490,f481,f396])).
fof(f1381,plain,(
  sP5(sK14,'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f494,f531,f495,f481,f396])).
fof(f1397,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0',sK14) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f494,f532,f499,f481,f396])).
fof(f1320,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f494,f532,f500,f274,f395])).
fof(f1321,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f534,f532,f500,f274,f395])).
fof(f1322,plain,(
  ( ! [X0,X1] : (sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f610,f532,f500,f274,f395])).
fof(f1324,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f534,f608,f500,f274,f395])).
fof(f1331,plain,(
  ~sP4('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f884,f534,f496,f274,f395])).
fof(f1148,plain,(
  sP11('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f539,f274,f481,f454])).
fof(f1068,plain,(
  sP9('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f537,f481,f481,f437])).
fof(f896,plain,(
  ~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f564,f413])).
fof(f899,plain,(
  ~sP5('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f564,f413])).
fof(f884,plain,(
  ~sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f540,f412])).
fof(f887,plain,(
  ~sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f540,f412])).
fof(f871,plain,(
  sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f564,f411])).
fof(f873,plain,(
  sP5('T_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f274,f564,f411])).
fof(f861,plain,(
  sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f540,f410])).
fof(f863,plain,(
  sP5('F_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f481,f540,f410])).
fof(f745,plain,(
  ( ! [X0] : (sP7('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f535,f481,f467])).
fof(f747,plain,(
  ( ! [X0] : (sP7('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0)) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f536,f481,f467])).
fof(f721,plain,(
  ( ! [X0] : (sP11('T_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f538,f274,f465])).
fof(f669,plain,(
  sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f664,f481])).
fof(f664,plain,(
  p(s(bool,'F_0')) | sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),sK14) | ($spl1 | $spl4)),
  inference(superposition,[],[f583,f564])).
fof(f668,plain,(
  sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f663,f481])).
fof(f663,plain,(
  p(s(bool,'F_0')) | sP1(sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(superposition,[],[f574,f564])).
fof(f540,plain,(
  s(bool,'T_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f524])).
fof(f539,plain,(
  ( ! [X0,X1] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f522])).
fof(f538,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f521])).
fof(f537,plain,(
  ( ! [X0,X1] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f520])).
fof(f536,plain,(
  ( ! [X0,X1] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f519])).
fof(f535,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f518])).
fof(f534,plain,(
  ( ! [X0,X1] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f517])).
fof(f533,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f516])).
fof(f532,plain,(
  ( ! [X0,X1] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f515])).
fof(f531,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X1)) ) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f514])).
fof(f529,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4)),
  inference(backward_demodulation,[],[f526,f476])).
fof(f524,plain,(
  s(bool,'T_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14))))) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f292])).
fof(f514,plain,(
  ( ! [X0,X1] : (sP4(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f400])).
fof(f515,plain,(
  ( ! [X0,X1] : (sP4('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f401])).
fof(f516,plain,(
  ( ! [X0,X1] : (sP3(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f404])).
fof(f517,plain,(
  ( ! [X0,X1] : (sP3('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f405])).
fof(f518,plain,(
  ( ! [X0,X1] : (sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f423])).
fof(f519,plain,(
  ( ! [X0,X1] : (sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f424])).
fof(f520,plain,(
  ( ! [X0,X1] : (sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f441])).
fof(f521,plain,(
  ( ! [X0,X1] : (sP10(X0,X1,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f456])).
fof(f522,plain,(
  ( ! [X0,X1] : (sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))),X0,X1)) ) | $spl1),
  inference(unit_resulting_resolution,[],[f476,f458])).
fof(f29085,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076,f29078,f29080,f29082,f29084])).
fof(f29083,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076,f29078,f29080,f29082])).
fof(f29081,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076,f29078,f29080])).
fof(f29079,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076,f29078])).
fof(f29077,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689,f29076])).
fof(f28947,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673,f28689])).
fof(f28946,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28687,f9067])).
fof(f28687,plain,(
  ( ! [X59,X58] : (sP4('T_0',happ(s(fun(X58,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X58,X59)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f24864])).
fof(f28945,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28678,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673])).
fof(f28678,plain,(
  ( ! [X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f19995])).
fof(f19995,plain,(
  ( ! [X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f10983,f393])).
fof(f10983,plain,(
  ( ! [X39,X38] : (sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X38,X39)))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1217,f9672])).
fof(f9672,plain,(
  s(bool,'F_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f8872,f818])).
fof(f8872,plain,(
  s(bool,'T_0') != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(forward_demodulation,[],[f8850,f1716])).
fof(f8850,plain,(
  s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f390])).
fof(f28944,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28677,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673])).
fof(f28677,plain,(
  ( ! [X0,X1] : (sP4('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f19881])).
fof(f19881,plain,(
  ( ! [X0,X1] : (sP4('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)))) ) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f10981,f393])).
fof(f10981,plain,(
  ( ! [X35,X34] : (sP5('T_0',happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1215,f9672])).
fof(f28943,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28676,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673])).
fof(f28676,plain,(
  ( ! [X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f19656])).
fof(f19656,plain,(
  ( ! [X0,X1] : (sP4('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f10753,f393])).
fof(f10753,plain,(
  ( ! [X39,X38] : (sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X38,X39)))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1217,f9626])).
fof(f9626,plain,(
  s(bool,'F_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f481,f8866,f818])).
fof(f8866,plain,(
  s(bool,'T_0') != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(forward_demodulation,[],[f8856,f2044])).
fof(f8856,plain,(
  s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(unit_resulting_resolution,[],[f477,f390])).
fof(f28942,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28675,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673])).
fof(f28675,plain,(
  ( ! [X0,X1] : (sP4('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f19544])).
fof(f19544,plain,(
  ( ! [X0,X1] : (sP4('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)))) ) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f10751,f393])).
fof(f10751,plain,(
  ( ! [X35,X34] : (sP5('T_0',happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1215,f9626])).
fof(f28941,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670,f28673])).
fof(f28940,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669,f28670])).
fof(f28939,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668,f28669])).
fof(f28938,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667,f28668])).
fof(f28937,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666,f28667])).
fof(f28936,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665,f28666])).
fof(f28935,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663,f28665])).
fof(f28934,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28664,f21674])).
fof(f28664,plain,(
  ( ! [X47,X46] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X46,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X46,X47)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f12888])).
fof(f28933,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662,f28663])).
fof(f28932,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661,f28662])).
fof(f28931,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659,f28661])).
fof(f28930,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650,f28659])).
fof(f28929,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28657,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650])).
fof(f28657,plain,(
  ( ! [X37,X36] : (sP4(sK14,happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f11833])).
fof(f11833,plain,(
  ( ! [X37,X36] : (sP4(sK14,happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f9749,f9672])).
fof(f28928,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28656,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650])).
fof(f28656,plain,(
  ( ! [X35,X34] : (sP4(sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f11832])).
fof(f11832,plain,(
  ( ! [X35,X34] : (sP4(sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f9749,f9626])).
fof(f28927,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28653,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650])).
fof(f28653,plain,(
  ( ! [X37,X36] : (sP4(sK14,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f11756])).
fof(f11756,plain,(
  ( ! [X37,X36] : (sP4(sK14,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)))) ) | ($spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f9708,f9672])).
fof(f28926,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28652,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650])).
fof(f28652,plain,(
  ( ! [X35,X34] : (sP4(sK14,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f11755])).
fof(f11755,plain,(
  ( ! [X35,X34] : (sP4(sK14,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)))) ) | ($spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f9708,f9626])).
fof(f28925,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645,f28650])).
fof(f28924,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28648,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645])).
fof(f28648,plain,(
  ( ! [X37,X36] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f11682])).
fof(f11682,plain,(
  ( ! [X37,X36] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f8941,f9672])).
fof(f28923,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28647,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645])).
fof(f28647,plain,(
  ( ! [X35,X34] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f11681])).
fof(f11681,plain,(
  ( ! [X35,X34] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f8941,f9626])).
fof(f28922,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644,f28645])).
fof(f28921,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627,f28644])).
fof(f28920,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28642,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28642,plain,(
  ( ! [X37,X36] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f11570])).
fof(f11570,plain,(
  ( ! [X37,X36] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f8937,f9672])).
fof(f28919,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28641,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28641,plain,(
  ( ! [X35,X34] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f11569])).
fof(f11569,plain,(
  ( ! [X35,X34] : (~sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f8937,f9626])).
fof(f28918,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28639,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28639,plain,(
  ( ! [X92,X93] : (sP5(sK14,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X92,X93)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f11000])).
fof(f11000,plain,(
  ( ! [X92,X93] : (sP5(sK14,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X92,X93)))) ) | ($spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f8679,f9672])).
fof(f28917,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28638,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28638,plain,(
  ( ! [X90,X91] : (sP5(sK14,happ(s(fun(X90,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X90,X91)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f10999])).
fof(f10999,plain,(
  ( ! [X90,X91] : (sP5(sK14,happ(s(fun(X90,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X90,X91)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl4 | $spl9)),
  inference(superposition,[],[f8675,f9672])).
fof(f28916,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28637,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28637,plain,(
  ( ! [X39,X38] : (sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f10983])).
fof(f28915,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28636,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28636,plain,(
  ( ! [X37,X36] : (~sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f10982])).
fof(f10982,plain,(
  ( ! [X37,X36] : (~sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1216,f9672])).
fof(f28914,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28635,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28635,plain,(
  ( ! [X35,X34] : (sP5('T_0',happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f10981])).
fof(f28913,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(global_subsumption,[],[f28634,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28634,plain,(
  ( ! [X33,X32] : (~sP5('F_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl9)),
  inference(backward_demodulation,[],[f28528,f10980])).
fof(f10980,plain,(
  ( ! [X33,X32] : (~sP5('F_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X32,X33)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1214,f9672])).
fof(f28912,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28633,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28633,plain,(
  ( ! [X92,X93] : (sP5(sK14,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X92,X93)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10770])).
fof(f10770,plain,(
  ( ! [X92,X93] : (sP5(sK14,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X92,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X92,X93)))) ) | ($spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f8679,f9626])).
fof(f28911,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28632,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28632,plain,(
  ( ! [X90,X91] : (sP5(sK14,happ(s(fun(X90,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X90,X91)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10769])).
fof(f10769,plain,(
  ( ! [X90,X91] : (sP5(sK14,happ(s(fun(X90,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X90,X91)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl4 | $spl13)),
  inference(superposition,[],[f8675,f9626])).
fof(f28910,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28631,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28631,plain,(
  ( ! [X39,X38] : (sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10753])).
fof(f28909,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28630,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28630,plain,(
  ( ! [X37,X36] : (~sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X36,X37)))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10752])).
fof(f10752,plain,(
  ( ! [X37,X36] : (~sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X36,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X36,X37)))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1216,f9626])).
fof(f28908,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28629,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28629,plain,(
  ( ! [X35,X34] : (sP5('T_0',happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10751])).
fof(f28907,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(global_subsumption,[],[f28628,f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28628,plain,(
  ( ! [X33,X32] : (~sP5('F_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl1 | $spl3 | $spl4 | $spl13)),
  inference(backward_demodulation,[],[f28528,f10750])).
fof(f10750,plain,(
  ( ! [X33,X32] : (~sP5('F_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X32,X33)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1214,f9626])).
fof(f28906,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626,f28627])).
fof(f28905,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625,f28626])).
fof(f28904,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622,f28625])).
fof(f28903,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897,f28622])).
fof(f28902,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28616,f28528])).
fof(f28616,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK13,sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f8871])).
fof(f28901,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28615,f28528])).
fof(f28615,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'const.pred_set.EMPTY_0'))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f8870])).
fof(f28900,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28614,f28528])).
fof(f28614,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f8865])).
fof(f28899,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28613,f28528])).
fof(f28613,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)),s(fun(sK12,bool),sK13)))) ) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f8864])).
fof(f28898,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895,f28897])).
fof(f28896,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893,f28895])).
fof(f28894,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891,f28893])).
fof(f28892,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887,f28891])).
fof(f28888,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556,f28887])).
fof(f28886,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554,f28556])).
fof(f28885,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553,f28554])).
fof(f28884,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551,f28553])).
fof(f28883,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550,f28551])).
fof(f28882,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548,f28550])).
fof(f28881,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547,f28548])).
fof(f28880,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545,f28547])).
fof(f28879,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877,f28545])).
fof(f28878,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875,f28877])).
fof(f28876,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870,f28875])).
fof(f28872,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28531,f274])).
fof(f28531,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl3 | $spl4)),
  inference(backward_demodulation,[],[f28528,f481])).
fof(f28871,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(global_subsumption,[],[f273,f272,f271,f274,f281,f293,f292,f340,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f483,f486,f485,f488,f487,f489,f490,f492,f491,f493,f494,f496,f495,f498,f497,f500,f499,f502,f501,f503,f504,f506,f505,f508,f507,f509,f510,f512,f511,f513,f522,f521,f520,f519,f518,f517,f516,f515,f514,f524,f523,f526,f529,f531,f532,f533,f534,f535,f536,f537,f538,f539,f540,f568,f569,f572,f574,f577,f581,f583,f592,f597,f625,f624,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f599,f634,f636,f639,f645,f649,f652,f668,f669,f672,f678,f682,f687,f694,f704,f721,f719,f736,f734,f747,f745,f755,f800,f801,f818,f863,f862,f861,f860,f873,f872,f871,f870,f887,f886,f884,f883,f899,f897,f896,f894,f926,f936,f943,f954,f963,f971,f980,f984,f988,f987,f995,f1004,f1031,f1032,f1036,f1068,f1067,f1078,f1087,f1114,f1115,f1116,f1148,f1147,f1157,f1166,f1178,f1186,f1207,f1208,f1209,f1217,f1216,f1215,f1214,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1245,f1246,f1286,f1340,f1339,f1337,f1335,f1331,f1325,f1324,f1323,f1322,f1321,f1320,f1319,f1398,f1397,f1396,f1393,f1389,f1384,f1381,f1380,f1379,f1466,f1465,f1464,f1461,f1448,f1447,f1446,f1435,f1655,f1704,f1703,f1710,f1709,f1708,f1707,f1711,f1774,f1775,f1872,f1871,f1870,f1868,f1867,f1865,f1893,f1892,f1891,f1889,f1888,f1886,f1977,f1976,f1975,f1974,f1978,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2210,f2231,f2214,f2218,f2219,f2246,f2250,f2254,f2255,f2278,f2296,f2283,f2287,f2312,f2316,f2320,f2356,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2788,f2938,f2939,f2940,f2941,f2942,f2943,f2944,f2945,f2946,f2947,f2948,f2950,f2951,f2952,f2953,f2954,f2955,f2956,f2957,f2958,f2959,f2960,f2961,f2962,f2963,f2964,f2965,f2966,f2967,f2968,f2969,f2970,f2971,f2972,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3014,f3909,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3142,f3143,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3196,f2787,f1777,f1776,f344,f343,f3195,f3194,f2786,f2785,f3934,f3933,f3932,f3931,f3930,f3929,f3928,f3927,f3913,f3912,f3911,f3910,f1852,f1834,f1824,f1794,f1670,f1669,f1643,f1642,f1627,f1626,f1610,f1609,f1556,f1527,f1504,f1488,f359,f358,f357,f356,f354,f352,f351,f349,f337,f336,f335,f334,f2739,f3007,f3148,f3935,f3926,f3925,f1595,f1591,f1580,f1577,f347,f346,f345,f2783,f3192,f2949,f2319,f2318,f2315,f2298,f2297,f2286,f2285,f2282,f2279,f2253,f2252,f2249,f2228,f2227,f2217,f2216,f2213,f2207,f2121,f2120,f1772,f1770,f1769,f1748,f1747,f1706,f1705,f1644,f1501,f1485,f1275,f1228,f600,f564,f481,f297,f296,f5741,f5743,f5873,f5881,f5898,f5900,f5903,f5914,f5916,f5919,f5936,f5938,f5941,f5952,f5956,f6002,f6008,f6160,f6161,f6162,f6163,f6164,f6166,f6167,f6168,f6169,f6170,f6171,f6172,f6173,f6174,f6057,f6058,f6059,f6060,f6185,f6190,f6222,f6225,f6255,f6281,f6283,f6286,f6289,f6290,f6277,f6294,f6328,f6359,f6380,f6382,f6385,f6388,f6389,f6378,f6394,f6427,f6445,f6447,f6450,f6469,f6487,f6489,f6492,f6495,f6496,f6486,f6519,f6522,f6529,f6573,f6576,f6604,f6605,f6606,f6607,f6608,f6624,f6623,f6629,f6630,f6648,f6655,f6654,f6676,f6678,f6695,f6701,f6700,f6699,f6698,f6816,f6820,f6821,f6822,f6823,f6826,f6827,f6828,f6829,f6830,f6831,f6832,f6833,f6732,f6733,f6734,f6735,f6842,f6843,f6846,f6871,f6873,f6890,f6895,f6931,f6935,f6938,f6974,f7006,f7008,f7011,f7049,f7051,f7054,f7070,f7069,f7068,f7067,f7190,f7194,f7195,f7196,f7197,f7200,f7201,f7202,f7203,f7204,f7205,f7206,f7207,f7101,f7102,f7103,f7104,f7216,f7217,f7220,f7249,f7251,f7254,f7271,f7293,f7295,f7298,f7314,f7317,f7328,f7330,f7352,f7370,f7371,f7378,f7377,f7390,f7397,f7396,f7421,f7401,f7402,f7404,f7406,f7422,f7414,f7415,f7417,f7419,f7438,f7455,f7456,f7453,f7457,f7463,f7465,f7467,f7479,f7477,f7481,f7482,f7488,f7490,f7492,f7504,f7502,f7505,f7553,f7554,f7510,f7511,f7513,f7515,f7516,f7536,f7538,f7555,f7542,f7543,f7545,f7556,f7604,f7605,f7561,f7562,f7564,f7566,f7567,f7587,f7589,f7593,f7594,f7596,f7643,f7681,f7782,f7832,f7909,f7932,f7934,f7937,f7943,f479,f477,f476,f8813,f8812,f8810,f8809,f8808,f8807,f8804,f8802,f8801,f8796,f8795,f8794,f8793,f8792,f8791,f8790,f8789,f8788,f8787,f8786,f8785,f8783,f8781,f8778,f8775,f8773,f8770,f8769,f8765,f8760,f8748,f8746,f8745,f8742,f8740,f8737,f8735,f8734,f8733,f8728,f8726,f8724,f8723,f8720,f8718,f8717,f8716,f8715,f8713,f8711,f8706,f8704,f8701,f8700,f8695,f8685,f8684,f8683,f8682,f8681,f8680,f8679,f8678,f8675,f8674,f8671,f8670,f8669,f8668,f8665,f8664,f8659,f8655,f8654,f8652,f8646,f8642,f8640,f8639,f8635,f8634,f8633,f8632,f8630,f8629,f8628,f8626,f8832,f8862,f8860,f8859,f8864,f8865,f8854,f8870,f8871,f9075,f9074,f9073,f9071,f9070,f9067,f9103,f9058,f9057,f9051,f9050,f9049,f9048,f9047,f9045,f9043,f9041,f9040,f9038,f9037,f9036,f9031,f9030,f9022,f9021,f9020,f9017,f9015,f9014,f9011,f9009,f9008,f9007,f9006,f9002,f9001,f8997,f8996,f8991,f8990,f8984,f8983,f8982,f8976,f8965,f8964,f8963,f8961,f8960,f8956,f8955,f8952,f8951,f8946,f8944,f8942,f8941,f8940,f8937,f8936,f8933,f8932,f8931,f8930,f8927,f8926,f8925,f8924,f8920,f8918,f8912,f8911,f8910,f8905,f8904,f8903,f8898,f8893,f8891,f8889,f8886,f8885,f8883,f8877,f9088,f9127,f9154,f9159,f9169,f9181,f9186,f9191,f9195,f9194,f9206,f9241,f9240,f9264,f9274,f9273,f9272,f9277,f9571,f9572,f9573,f9574,f9577,f9578,f9579,f9580,f9581,f9582,f9492,f9493,f9494,f9495,f9591,f9592,f9595,f9708,f9711,f9713,f9715,f9716,f9718,f9721,f9722,f9723,f9724,f9749,f9752,f9754,f9756,f9757,f9759,f9762,f9763,f9764,f9795,f9810,f9829,f9848,f9880,f9881,f9883,f9878,f9888,f9915,f9916,f9918,f9913,f9928,f9929,f9950,f9948,f9955,f9967,f9973,f9990,f9991,f10022,f10021,f10047,f10034,f10062,f10061,f10060,f10059,f10073,f10064,f10088,f10089,f10124,f10125,f10160,f10161,f10181,f10204,f10226,f10252,f10281,f10301,f10317,f10359,f10444,f10459,f10504,f10565,f10623,f10655,f10683,f10848,f10864,f10887,f10909,f10933,f11080,f11101,f11127,f11154,f11182,f11210,f11246,f11283,f11295,f11296,f11326,f11329,f11363,f11372,f11404,f11451,f11450,f11462,f11490,f11522,f11551,f11553,f11559,f11561,f11563,f11564,f11566,f11571,f11572,f11573,f11574,f11599,f11602,f11634,f11663,f11665,f11671,f11673,f11675,f11676,f11678,f11683,f11684,f11685,f11714,f11745,f11747,f11749,f11750,f11757,f11759,f11760,f11781,f11792,f11822,f11824,f11826,f11829,f11834,f11835,f11860,f11873,f11903,f11934,f11935,f11949,f11980,f12012,f12013,f12023,f12064,f12065,f12085,f12095,f12104,f12117,f12128,f12141,f12155,f12169,f12182,f12195,f12206,f12217,f12229,f12238,f12249,f12260,f12271,f12282,f12295,f12306,f12320,f12334,f12350,f12369,f12378,f12387,f12398,f12408,f12419,f12420,f12435,f12434,f12433,f12432,f12582,f12586,f12587,f12588,f12589,f12592,f12593,f12594,f12595,f12596,f12597,f12598,f12599,f12465,f12466,f12467,f12468,f12608,f12609,f12612,f12484,f12485,f12486,f12487,f12490,f12491,f12625,f12636,f12643,f12642,f12641,f12640,f12790,f12794,f12795,f12796,f12797,f12800,f12801,f12802,f12803,f12804,f12805,f12806,f12807,f12673,f12674,f12675,f12676,f12816,f12817,f12820,f12692,f12693,f12694,f12695,f12698,f12699,f12844,f12885,f12886,f12887,f12888,f12904,f12905,f12906,f12907,f12911,f13003,f13006,f13495,f13983,f13986,f14257,f14308,f14311,f14316,f17349,f17356,f17417,f17421,f17424,f17430,f17438,f17489,f17491,f17496,f17560,f17564,f17567,f17573,f17581,f17587,f17647,f17662,f17676,f17713,f17747,f18107,f18277,f18615,f18896,f18986,f19046,f19167,f19355,f19357,f19514,f19531,f19626,f19643,f19739,f19756,f19843,f19957,f20081,f20098,f20364,f20365,f20679,f20680,f20681,f20682,f20698,f20699,f20700,f20701,f20712,f21195,f21198,f21316,f21319,f21448,f21451,f21580,f21583,f21674,f21683,f21701,f21798,f21926,f21944,f22046,f22064,f22160,f22178,f22278,f22284,f22400,f22414,f22432,f22530,f22548,f22642,f22764,f22778,f22796,f22810,f22876,f22885,f22926,f22971,f22977,f23026,f23028,f23067,f23076,f23115,f23116,f23124,f23175,f23307,f23390,f23396,f23411,f23462,f23584,f23670,f23671,f23992,f24049,f24081,f24114,f24149,f24215,f24266,f24284,f24382,f24383,f24384,f24390,f24402,f24404,f24405,f24407,f24550,f24593,f24636,f24676,f24719,f24757,f24760,f24802,f24845,f24846,f24847,f24855,f24863,f24864,f24865,f24866,f24868,f24908,f24946,f24987,f24988,f25029,f25070,f25109,f25112,f25155,f25195,f25234,f25236,f25279,f25321,f25359,f25361,f25403,f25441,f25555,f25877,f25917,f25999,f26039,f26255,f26273,f26304,f26322,f26379,f26428,f26532,f26550,f26565,f26665,f26683,f26696,f26792,f26810,f27745,f28151,f28450,f28451,f28448,f28528,f28870])).
fof(f28525,plain,(
  $false | ($spl1 | $spl3 | $spl4)),
  inference(subsumption_resolution,[],[f28524,f481])).
fof(f28524,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl3 | $spl4)),
  inference(forward_demodulation,[],[f28497,f9103])).
fof(f28497,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | $spl3),
  inference(unit_resulting_resolution,[],[f274,f28448])).
fof(f17565,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP11(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1,sK14)) ) | $spl102),
  inference(cnf_transformation,[],[f17565_D])).
fof(f17565_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP11(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1,sK14)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f3877,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f3877_D])).
fof(f3877_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f17567,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP11(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1,sK14)) ) | $spl4),
  inference(condensation,[],[f17566])).
fof(f17566,plain,(
  ( ! [X39,X37,X41,X38,X40] : (p(s(bool,X38)) | ~sP11(happ(s(fun(X39,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X39,X40)),X38,sK14) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl4),
  inference(subsumption_resolution,[],[f17545,f818])).
fof(f17545,plain,(
  ( ! [X39,X37,X41,X38,X40] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP11(happ(s(fun(X39,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X39,X40)),X38,sK14) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl4),
  inference(superposition,[],[f9595,f755])).
fof(f17564,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP11(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1,sK14)) ) | $spl4),
  inference(condensation,[],[f17563])).
fof(f17563,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,X33)) | ~sP11(happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),X33,sK14) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) ) | $spl4),
  inference(subsumption_resolution,[],[f17544,f818])).
fof(f17544,plain,(
  ( ! [X35,X33,X36,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP11(happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)),X33,sK14) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) ) | $spl4),
  inference(superposition,[],[f9595,f755])).
fof(f14309,plain,(
  ( ! [X7] : (p(s(bool,X7))) ) | $spl94),
  inference(cnf_transformation,[],[f14309_D])).
fof(f14309_D,plain,(
  ( ! [X7] : (p(s(bool,X7))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f17490,plain,(
  ( ! [X10,X8,X9] : (sP1(happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10)),sK14) | s(bool,'T_0') = s(bool,X8)) ) | $spl100),
  inference(cnf_transformation,[],[f17490_D])).
fof(f17490_D,plain,(
  ( ! [X10,X8,X9] : (sP1(happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10)),sK14) | s(bool,'T_0') = s(bool,X8)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f17491,plain,(
  ( ! [X14,X12,X13,X11] : (sP1(happ(s(fun(X13,bool),'_dst_x0_1'(s(bool,X12))),s(X13,X14)),sK14) | p(s(bool,X11)) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f17442,f292])).
fof(f17442,plain,(
  ( ! [X14,X12,X13,X11] : (sP1(happ(s(fun(X13,bool),'_dst_x0_1'(s(bool,X12))),s(X13,X14)),sK14) | p(s(bool,X11)) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(superposition,[],[f9913,f755])).
fof(f17489,plain,(
  ( ! [X10,X8,X7,X9] : (sP1(happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10)),sK14) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(subsumption_resolution,[],[f17441,f292])).
fof(f17441,plain,(
  ( ! [X10,X8,X7,X9] : (sP1(happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10)),sK14) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7)) ) | $spl4),
  inference(superposition,[],[f9913,f755])).
fof(f17422,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP7(X1,sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) | $spl98),
  inference(cnf_transformation,[],[f17422_D])).
fof(f17422_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | ~sP7(X1,sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f17424,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP7(X1,sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) | $spl4),
  inference(condensation,[],[f17423])).
fof(f17423,plain,(
  ( ! [X39,X37,X41,X38,X40] : (p(s(bool,X38)) | ~sP7(X38,sK14,happ(s(fun(X39,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X39,X40))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl4),
  inference(subsumption_resolution,[],[f17402,f818])).
fof(f17402,plain,(
  ( ! [X39,X37,X41,X38,X40] : (~p(s(bool,X37)) | p(s(bool,X38)) | ~sP7(X38,sK14,happ(s(fun(X39,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X39,X40))) | s(bool,X37) = s(bool,X41) | s(bool,'T_0') = s(bool,X41)) ) | $spl4),
  inference(superposition,[],[f9592,f755])).
fof(f17421,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP7(X1,sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) | $spl4),
  inference(condensation,[],[f17420])).
fof(f17420,plain,(
  ( ! [X35,X33,X36,X34,X32] : (p(s(bool,X33)) | ~sP7(X33,sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) ) | $spl4),
  inference(subsumption_resolution,[],[f17401,f818])).
fof(f17401,plain,(
  ( ! [X35,X33,X36,X34,X32] : (~p(s(bool,X32)) | p(s(bool,X33)) | ~sP7(X33,sK14,happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35))) | s(bool,X32) = s(bool,X36) | s(bool,'T_0') = s(bool,X36)) ) | $spl4),
  inference(superposition,[],[f9592,f755])).
fof(f17338,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14355,f14384])).
fof(f14384,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f14309,f363])).
fof(f14355,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f296])).
fof(f17337,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14363,f274])).
fof(f14363,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f523,f14309,f363])).
fof(f17336,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14365,f274])).
fof(f14365,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f8866,f14309,f363])).
fof(f17335,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14367,f274])).
fof(f14367,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8872,f14309,f363])).
fof(f17334,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14369,f274])).
fof(f14369,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8877,f14309,f363])).
fof(f17333,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14371,f274])).
fof(f14371,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f599,f14309,f363])).
fof(f17332,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14375,f14309])).
fof(f14375,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f8866,f14309,f363])).
fof(f17331,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14377,f14309])).
fof(f14377,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8872,f14309,f363])).
fof(f17330,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14379,f14309])).
fof(f14379,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8877,f14309,f363])).
fof(f17329,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14381,f14309])).
fof(f14381,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f599,f14309,f363])).
fof(f17328,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14385,f274])).
fof(f14385,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f523,f14309,f363])).
fof(f17327,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14387,f274])).
fof(f14387,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f8866,f14309,f363])).
fof(f17326,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14389,f274])).
fof(f14389,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8872,f14309,f363])).
fof(f17325,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14391,f274])).
fof(f14391,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8877,f14309,f363])).
fof(f17324,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14393,f274])).
fof(f14393,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f599,f14309,f363])).
fof(f17323,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14397,f14309])).
fof(f14397,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f8866,f14309,f363])).
fof(f17322,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14399,f14309])).
fof(f14399,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8872,f14309,f363])).
fof(f17321,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14401,f14309])).
fof(f14401,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8877,f14309,f363])).
fof(f17320,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14403,f14309])).
fof(f14403,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f599,f14309,f363])).
fof(f17319,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14409,f274])).
fof(f14409,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f581,f14309,f380])).
fof(f17318,plain,(
  $false | ($spl3 | $spl13 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14410,f274])).
fof(f14410,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f10841,f14309,f380])).
fof(f10841,plain,(
  sP1(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl26)),
  inference(subsumption_resolution,[],[f10768,f481])).
fof(f10768,plain,(
  p(s(bool,'F_0')) | sP1(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl26)),
  inference(superposition,[],[f3896,f9626])).
fof(f17317,plain,(
  $false | ($spl3 | $spl9 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14411,f274])).
fof(f14411,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f11071,f14309,f380])).
fof(f11071,plain,(
  sP1(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl26)),
  inference(subsumption_resolution,[],[f10998,f481])).
fof(f10998,plain,(
  p(s(bool,'F_0')) | sP1(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl26)),
  inference(superposition,[],[f3896,f9672])).
fof(f17316,plain,(
  $false | ($spl1 | $spl4 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14412,f274])).
fof(f14412,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f9077,f14309,f380])).
fof(f9077,plain,(
  sP1('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl26)),
  inference(unit_resulting_resolution,[],[f8832,f3896])).
fof(f17315,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14413,f274])).
fof(f14413,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f606,f14309,f380])).
fof(f17314,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14418,f14309])).
fof(f14418,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f5525,f14309,f380])).
fof(f5525,plain,(
  sP1('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(unit_resulting_resolution,[],[f481,f5066])).
fof(f5066,plain,(
  ( ! [X6] : (sP1(X6,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | p(s(bool,X6))) ) | $spl9),
  inference(subsumption_resolution,[],[f4990,f274])).
fof(f4990,plain,(
  ( ! [X6] : (~p(s(bool,'T_0')) | p(s(bool,X6)) | sP1(X6,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | $spl9),
  inference(superposition,[],[f384,f1716])).
fof(f17313,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14419,f14309])).
fof(f14419,plain,(
  ~p(s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5585,f14309,f380])).
fof(f5585,plain,(
  sP1('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl13),
  inference(unit_resulting_resolution,[],[f481,f5294])).
fof(f5294,plain,(
  ( ! [X9] : (sP1(X9,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | p(s(bool,X9))) ) | $spl13),
  inference(subsumption_resolution,[],[f5215,f274])).
fof(f5215,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | p(s(bool,X9)) | sP1(X9,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | $spl13),
  inference(superposition,[],[f384,f2044])).
fof(f17312,plain,(
  $false | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14420,f14309])).
fof(f14420,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9922,f14309,f380])).
fof(f9922,plain,(
  sP1(sK14,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl4 | $spl13)),
  inference(unit_resulting_resolution,[],[f8866,f9881])).
fof(f17311,plain,(
  $false | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14421,f14309])).
fof(f14421,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9923,f14309,f380])).
fof(f9923,plain,(
  sP1(sK14,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl4 | $spl9)),
  inference(unit_resulting_resolution,[],[f8872,f9881])).
fof(f17310,plain,(
  $false | ($spl3 | $spl13 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14422,f14309])).
fof(f14422,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f10840,f14309,f380])).
fof(f10840,plain,(
  sP1('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl24)),
  inference(subsumption_resolution,[],[f10767,f481])).
fof(f10767,plain,(
  p(s(bool,'F_0')) | sP1('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl24)),
  inference(superposition,[],[f3893,f9626])).
fof(f17309,plain,(
  $false | ($spl3 | $spl9 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14423,f14309])).
fof(f14423,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f11070,f14309,f380])).
fof(f11070,plain,(
  sP1('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl24)),
  inference(subsumption_resolution,[],[f10997,f481])).
fof(f10997,plain,(
  p(s(bool,'F_0')) | sP1('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl24)),
  inference(superposition,[],[f3893,f9672])).
fof(f17308,plain,(
  $false | ($spl1 | $spl4 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14424,f14309])).
fof(f14424,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f9076,f14309,f380])).
fof(f9076,plain,(
  sP1('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl24)),
  inference(unit_resulting_resolution,[],[f8832,f3893])).
fof(f17307,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14425,f14309])).
fof(f14425,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f11450,f14309,f380])).
fof(f17306,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14426,f14309])).
fof(f14426,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f605,f14309,f380])).
fof(f17305,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14427,f14309])).
fof(f14427,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9883,f14309,f380])).
fof(f17304,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14428,f14309])).
fof(f14428,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8635,f14309,f380])).
fof(f17303,plain,(
  $false | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14429,f14309])).
fof(f14429,plain,(
  ~p(s(bool,sK14)) | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9941,f14309,f380])).
fof(f9941,plain,(
  sP1(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),sK14) | ($spl3 | $spl4 | $spl13)),
  inference(unit_resulting_resolution,[],[f8866,f9916])).
fof(f17302,plain,(
  $false | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14430,f14309])).
fof(f14430,plain,(
  ~p(s(bool,sK14)) | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9942,f14309,f380])).
fof(f9942,plain,(
  sP1(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),sK14) | ($spl3 | $spl4 | $spl9)),
  inference(unit_resulting_resolution,[],[f8872,f9916])).
fof(f17301,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14431,f14309])).
fof(f14431,plain,(
  ~p(s(bool,sK14)) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f11451,f14309,f380])).
fof(f17300,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14432,f14309])).
fof(f14432,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9918,f14309,f380])).
fof(f17299,plain,(
  $false | ($spl3 | $spl13 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14438,f14309])).
fof(f14438,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f10841,f14309,f380])).
fof(f17298,plain,(
  $false | ($spl3 | $spl9 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14439,f14309])).
fof(f14439,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f11071,f14309,f380])).
fof(f17297,plain,(
  $false | ($spl1 | $spl4 | $spl26 | $spl94)),
  inference(subsumption_resolution,[],[f14440,f14309])).
fof(f14440,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl26 | $spl94)),
  inference(unit_resulting_resolution,[],[f9077,f14309,f380])).
fof(f17296,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14441,f14309])).
fof(f14441,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f606,f14309,f380])).
fof(f17295,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14442,f274])).
fof(f14442,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f572,f14309,f380])).
fof(f17294,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14443,f14309])).
fof(f14443,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f5495,f14309,f380])).
fof(f5495,plain,(
  sP1(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl9),
  inference(unit_resulting_resolution,[],[f481,f5065])).
fof(f5065,plain,(
  ( ! [X5] : (sP1(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),X5) | p(s(bool,X5))) ) | $spl9),
  inference(subsumption_resolution,[],[f4989,f274])).
fof(f4989,plain,(
  ( ! [X5] : (~p(s(bool,'T_0')) | p(s(bool,X5)) | sP1(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),X5)) ) | $spl9),
  inference(superposition,[],[f381,f1716])).
fof(f17293,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14444,f14309])).
fof(f14444,plain,(
  ~p(s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5555,f14309,f380])).
fof(f5555,plain,(
  sP1(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl13),
  inference(unit_resulting_resolution,[],[f481,f5293])).
fof(f5293,plain,(
  ( ! [X8] : (sP1(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),X8) | p(s(bool,X8))) ) | $spl13),
  inference(subsumption_resolution,[],[f5214,f274])).
fof(f5214,plain,(
  ( ! [X8] : (~p(s(bool,'T_0')) | p(s(bool,X8)) | sP1(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),X8)) ) | $spl13),
  inference(superposition,[],[f381,f2044])).
fof(f17292,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14445,f14309])).
fof(f14445,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8634,f14309,f380])).
fof(f17291,plain,(
  $false | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14448,f14309])).
fof(f14448,plain,(
  ~p(s(bool,sK14)) | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9922,f14309,f380])).
fof(f17290,plain,(
  $false | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14449,f14309])).
fof(f14449,plain,(
  ~p(s(bool,sK14)) | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9923,f14309,f380])).
fof(f17289,plain,(
  $false | ($spl3 | $spl13 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14450,f274])).
fof(f14450,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f10840,f14309,f380])).
fof(f17288,plain,(
  $false | ($spl3 | $spl9 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14451,f274])).
fof(f14451,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f11070,f14309,f380])).
fof(f17287,plain,(
  $false | ($spl1 | $spl4 | $spl24 | $spl94)),
  inference(subsumption_resolution,[],[f14452,f274])).
fof(f14452,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl24 | $spl94)),
  inference(unit_resulting_resolution,[],[f9076,f14309,f380])).
fof(f17286,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14453,f14309])).
fof(f14453,plain,(
  ~p(s(bool,sK14)) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f11450,f14309,f380])).
fof(f17285,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14454,f274])).
fof(f14454,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f605,f14309,f380])).
fof(f17284,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14455,f14309])).
fof(f14455,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9883,f14309,f380])).
fof(f17283,plain,(
  $false | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14457,f14309])).
fof(f14457,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl4 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9941,f14309,f380])).
fof(f17282,plain,(
  $false | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14458,f14309])).
fof(f14458,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9942,f14309,f380])).
fof(f17281,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14459,f14309])).
fof(f14459,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f11451,f14309,f380])).
fof(f17280,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14460,f14309])).
fof(f14460,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9918,f14309,f380])).
fof(f17279,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14492,f14309])).
fof(f14492,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10718,f481,f14309,f394])).
fof(f10718,plain,(
  sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f274,f9626,f411])).
fof(f17278,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14493,f14309])).
fof(f14493,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10948,f481,f14309,f394])).
fof(f10948,plain,(
  sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f274,f9672,f411])).
fof(f17277,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14494,f14309])).
fof(f14494,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8891,f481,f14309,f394])).
fof(f17276,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14495,f14309])).
fof(f14495,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1215,f481,f14309,f394])).
fof(f17275,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14496,f274])).
fof(f14496,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f862,f481,f14309,f394])).
fof(f17274,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14497,f14309])).
fof(f14497,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1719,f481,f14309,f394])).
fof(f1719,plain,(
  sP5('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl9),
  inference(unit_resulting_resolution,[],[f481,f1715,f410])).
fof(f17273,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14498,f14309])).
fof(f14498,plain,(
  ~p(s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2047,f481,f14309,f394])).
fof(f2047,plain,(
  sP5('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl13),
  inference(unit_resulting_resolution,[],[f481,f1982,f410])).
fof(f17272,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14499,f14309])).
fof(f14499,plain,(
  ~p(s(bool,f(s(bool,'T_0')))) | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7849,f481,f14309,f394])).
fof(f7849,plain,(
  sP5('F_0',f(s(bool,'T_0')),'F_0') | $spl63),
  inference(unit_resulting_resolution,[],[f481,f6646,f410])).
fof(f17271,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14500,f14309])).
fof(f14500,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9240,f481,f14309,f394])).
fof(f17270,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14501,f274])).
fof(f14501,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8932,f481,f14309,f394])).
fof(f17269,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14503,f14309])).
fof(f14503,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8675,f481,f14309,f394])).
fof(f17268,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14504,f14309])).
fof(f14504,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8674,f481,f14309,f394])).
fof(f17267,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14667,f274])).
fof(f14667,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1389,f481,f14309,f394])).
fof(f17266,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14668,f274])).
fof(f14668,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10718,f481,f14309,f394])).
fof(f17265,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14669,f274])).
fof(f14669,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10948,f481,f14309,f394])).
fof(f17264,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14670,f274])).
fof(f14670,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8891,f481,f14309,f394])).
fof(f17263,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14671,f274])).
fof(f14671,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1215,f481,f14309,f394])).
fof(f17262,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14677,f14309])).
fof(f14677,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8932,f481,f14309,f394])).
fof(f17261,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14678,f14309])).
fof(f14678,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9206,f481,f14309,f394])).
fof(f17260,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14679,f14309])).
fof(f14679,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8675,f481,f14309,f394])).
fof(f17259,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14680,f14309])).
fof(f14680,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8674,f481,f14309,f394])).
fof(f17258,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14685,f15267])).
fof(f15267,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f409])).
fof(f14685,plain,(
  ~sP2('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f488,f14309,f395])).
fof(f17257,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14686,f15267])).
fof(f14686,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f488,f14309,f395])).
fof(f17256,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14687,f15267])).
fof(f14687,plain,(
  ~sP2(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0','T_0') | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9634,f492,f488,f14309,f395])).
fof(f9634,plain,(
  ~sP5('T_0','T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f274,f8866,f412])).
fof(f17255,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14688,f15267])).
fof(f14688,plain,(
  ~sP2(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0','T_0') | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9680,f492,f488,f14309,f395])).
fof(f9680,plain,(
  ~sP5('T_0','T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f274,f8872,f412])).
fof(f17254,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14689,f15267])).
fof(f14689,plain,(
  ~sP2('F_0','T_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f488,f14309,f395])).
fof(f17253,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14690,f15267])).
fof(f14690,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f488,f14309,f395])).
fof(f17252,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14691,f15267])).
fof(f14691,plain,(
  ~sP2('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f488,f14309,f395])).
fof(f17251,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14692,f15267])).
fof(f14692,plain,(
  ~sP2('F_0','T_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f493,f488,f14309,f395])).
fof(f17250,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14693,f15267])).
fof(f14693,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f488,f14309,f395])).
fof(f17249,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14694,f15267])).
fof(f14694,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f488,f14309,f395])).
fof(f17248,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14695,f15267])).
fof(f14695,plain,(
  ~sP2('F_0',sK14,'T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f8655,f14309,f395])).
fof(f17247,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14696,f15267])).
fof(f14696,plain,(
  ~sP2('F_0',sK14,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f8655,f14309,f395])).
fof(f17246,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14697,f15267])).
fof(f14697,plain,(
  ~sP2('F_0',sK14,'T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f8655,f14309,f395])).
fof(f17245,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14698,f15267])).
fof(f14698,plain,(
  ~sP2('F_0',sK14,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f8655,f14309,f395])).
fof(f17244,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14699,f15267])).
fof(f14699,plain,(
  ~sP2('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f489,f14309,f395])).
fof(f17243,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14700,f15267])).
fof(f14700,plain,(
  ~sP2('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1718,f493,f489,f14309,f395])).
fof(f1718,plain,(
  ~sP5('T_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | $spl9),
  inference(unit_resulting_resolution,[],[f274,f1715,f412])).
fof(f17242,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14701,f15267])).
fof(f14701,plain,(
  ~sP2('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2046,f493,f489,f14309,f395])).
fof(f2046,plain,(
  ~sP5('T_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | $spl13),
  inference(unit_resulting_resolution,[],[f274,f1982,f412])).
fof(f17241,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14702,f15267])).
fof(f14702,plain,(
  ~sP2('F_0',f(s(bool,'T_0')),'T_0') | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7848,f493,f489,f14309,f395])).
fof(f7848,plain,(
  ~sP5('T_0',f(s(bool,'T_0')),'F_0') | $spl63),
  inference(unit_resulting_resolution,[],[f274,f6646,f412])).
fof(f17240,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14703,f15267])).
fof(f14703,plain,(
  ~sP2('F_0',sK14,'T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f489,f14309,f395])).
fof(f17239,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14710,f15267])).
fof(f14710,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f493,f489,f14309,f395])).
fof(f17238,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14711,f15267])).
fof(f14711,plain,(
  ~sP2('F_0',sK14,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f489,f14309,f395])).
fof(f17237,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14712,f15267])).
fof(f14712,plain,(
  ~sP2('F_0','T_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f493,f489,f14309,f395])).
fof(f17236,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14713,f15267])).
fof(f14713,plain,(
  ~sP2('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f489,f14309,f395])).
fof(f17235,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14714,f15267])).
fof(f14714,plain,(
  ~sP2('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1718,f492,f489,f14309,f395])).
fof(f17234,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14715,f15267])).
fof(f14715,plain,(
  ~sP2('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2046,f492,f489,f14309,f395])).
fof(f17233,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14716,f15267])).
fof(f14716,plain,(
  ~sP2('F_0',f(s(bool,'T_0')),'T_0') | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7848,f492,f489,f14309,f395])).
fof(f17232,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14717,f15267])).
fof(f14717,plain,(
  ~sP2('F_0',sK14,'T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f489,f14309,f395])).
fof(f17231,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14718,f15267])).
fof(f14718,plain,(
  ~sP2('F_0',sK14,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f489,f14309,f395])).
fof(f17230,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14719,f15267])).
fof(f14719,plain,(
  ~sP2('F_0','T_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f489,f14309,f395])).
fof(f17229,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14723,f15267])).
fof(f14723,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f8903,f14309,f395])).
fof(f17228,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14725,f15267])).
fof(f14725,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1214,f8910,f8903,f14309,f395])).
fof(f17227,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14726,f15267])).
fof(f14726,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f8910,f8903,f14309,f395])).
fof(f17226,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14727,f15267])).
fof(f14727,plain,(
  ~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f8903,f14309,f395])).
fof(f17225,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14729,f15267])).
fof(f14729,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(X2,X3)),'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1214,f609,f607,f14309,f395])).
fof(f17224,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14730,f15267])).
fof(f14730,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(X2,X3)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f609,f607,f14309,f395])).
fof(f17223,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14731,f15267])).
fof(f14731,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f607,f14309,f395])).
fof(f17222,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14732,f15267])).
fof(f14732,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f607,f14309,f395])).
fof(f17221,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14739,f15267])).
fof(f14739,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1214,f8910,f490,f14309,f395])).
fof(f17220,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14740,f15267])).
fof(f14740,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(X2,X3)),'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1214,f609,f490,f14309,f395])).
fof(f17219,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14747,f15267])).
fof(f14747,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1216,f8911,f490,f14309,f395])).
fof(f17218,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14748,f15267])).
fof(f14748,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1216,f610,f490,f14309,f395])).
fof(f17217,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14750,f15267])).
fof(f14750,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f493,f8904,f14309,f395])).
fof(f17216,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14751,f15267])).
fof(f14751,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f8910,f8904,f14309,f395])).
fof(f17215,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14752,f15267])).
fof(f14752,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))),s(X2,X3)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f609,f8904,f14309,f395])).
fof(f17214,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14755,f15267])).
fof(f14755,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f8911,f8904,f14309,f395])).
fof(f17213,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14756,f15267])).
fof(f14756,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0'))))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f610,f8904,f14309,f395])).
fof(f17212,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14757,f15193])).
fof(f15193,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f399])).
fof(f14757,plain,(
  ~sP4('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f496,f14309,f395])).
fof(f17211,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14758,f15193])).
fof(f14758,plain,(
  ~sP4('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f496,f14309,f395])).
fof(f17210,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14759,f15193])).
fof(f14759,plain,(
  ~sP4('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9634,f492,f496,f14309,f395])).
fof(f17209,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14760,f15193])).
fof(f14760,plain,(
  ~sP4('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9680,f492,f496,f14309,f395])).
fof(f17208,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14766,f15193])).
fof(f14766,plain,(
  ~sP4('T_0','F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1718,f492,f496,f14309,f395])).
fof(f17207,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14767,f15193])).
fof(f14767,plain,(
  ~sP4('T_0','F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2046,f492,f496,f14309,f395])).
fof(f17206,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14768,f15193])).
fof(f14768,plain,(
  ~sP4('T_0','F_0',f(s(bool,'T_0'))) | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7848,f492,f496,f14309,f395])).
fof(f17205,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14772,f15193])).
fof(f14772,plain,(
  ~sP4('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f496,f14309,f395])).
fof(f17204,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14773,f15193])).
fof(f14773,plain,(
  ~sP4('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f496,f14309,f395])).
fof(f17203,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14774,f15193])).
fof(f14774,plain,(
  ~sP4('T_0','F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1718,f493,f496,f14309,f395])).
fof(f17202,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14775,f15193])).
fof(f14775,plain,(
  ~sP4('T_0','F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2046,f493,f496,f14309,f395])).
fof(f17201,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14776,f15193])).
fof(f14776,plain,(
  ~sP4('T_0','F_0',f(s(bool,'T_0'))) | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7848,f493,f496,f14309,f395])).
fof(f17200,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14777,f15193])).
fof(f14777,plain,(
  ~sP4('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f496,f14309,f395])).
fof(f17199,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14778,f15193])).
fof(f14778,plain,(
  ~sP4('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f496,f14309,f395])).
fof(f17198,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14792,f15261])).
fof(f15261,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f403])).
fof(f14792,plain,(
  ~sP3('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f488,f496,f14309,f395])).
fof(f17197,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14793,f15261])).
fof(f14793,plain,(
  ~sP3('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f488,f496,f14309,f395])).
fof(f17196,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14794,f15261])).
fof(f14794,plain,(
  ~sP3('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9634,f488,f496,f14309,f395])).
fof(f17195,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14795,f15261])).
fof(f14795,plain,(
  ~sP3('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9680,f488,f496,f14309,f395])).
fof(f17194,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14803,f15261])).
fof(f14803,plain,(
  ~sP3(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f8655,f496,f14309,f395])).
fof(f17193,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14810,f15261])).
fof(f14810,plain,(
  ~sP3('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f489,f496,f14309,f395])).
fof(f17192,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14811,f15261])).
fof(f14811,plain,(
  ~sP3(f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0','T_0') | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1718,f489,f496,f14309,f395])).
fof(f17191,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14812,f15261])).
fof(f14812,plain,(
  ~sP3(f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0','T_0') | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2046,f489,f496,f14309,f395])).
fof(f17190,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f14813,f15261])).
fof(f14813,plain,(
  ~sP3(f(s(bool,'T_0')),'F_0','T_0') | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7848,f489,f496,f14309,f395])).
fof(f17189,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14814,f15261])).
fof(f14814,plain,(
  ~sP3(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f489,f496,f14309,f395])).
fof(f17188,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14822,f15261])).
fof(f14822,plain,(
  ~sP3('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8903,f496,f14309,f395])).
fof(f17187,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14837,f15193])).
fof(f14837,plain,(
  ~sP4(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f8669,f14309,f395])).
fof(f17186,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14838,f15193])).
fof(f14838,plain,(
  ~sP4(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f8669,f14309,f395])).
fof(f17185,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14841,f15193])).
fof(f14841,plain,(
  ( ! [X0,X1] : (~sP4(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f8669,f14309,f395])).
fof(f17184,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14843,f15193])).
fof(f14843,plain,(
  ~sP4(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f8669,f14309,f395])).
fof(f17183,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14844,f15193])).
fof(f14844,plain,(
  ~sP4(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f493,f8669,f14309,f395])).
fof(f17182,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14845,f15193])).
fof(f14845,plain,(
  ( ! [X0,X1] : (~sP4(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f8669,f14309,f395])).
fof(f17181,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14862,f15261])).
fof(f14862,plain,(
  ~sP3('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f488,f8669,f14309,f395])).
fof(f17180,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14863,f15261])).
fof(f14863,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f488,f8669,f14309,f395])).
fof(f17179,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14871,f15261])).
fof(f14871,plain,(
  ~sP3(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8655,f8669,f14309,f395])).
fof(f17178,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14878,f15261])).
fof(f14878,plain,(
  ~sP3(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f489,f8669,f14309,f395])).
fof(f17177,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14879,f15261])).
fof(f14879,plain,(
  ~sP3('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f489,f8669,f14309,f395])).
fof(f17176,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14892,f15261])).
fof(f14892,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f607,f8669,f14309,f395])).
fof(f17175,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14900,f15193])).
fof(f14900,plain,(
  ~sP4('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f498,f14309,f395])).
fof(f17174,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14901,f15193])).
fof(f14901,plain,(
  ~sP4('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f498,f14309,f395])).
fof(f17173,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14902,f15193])).
fof(f14902,plain,(
  ~sP4('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9634,f492,f498,f14309,f395])).
fof(f17172,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14903,f15193])).
fof(f14903,plain,(
  ~sP4('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9680,f492,f498,f14309,f395])).
fof(f17171,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14904,f15193])).
fof(f14904,plain,(
  ~sP4(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f498,f14309,f395])).
fof(f17170,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14905,f15193])).
fof(f14905,plain,(
  ( ! [X0,X1] : (~sP4(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f498,f14309,f395])).
fof(f17169,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14906,f15193])).
fof(f14906,plain,(
  ~sP4('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f498,f14309,f395])).
fof(f17168,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14907,f15193])).
fof(f14907,plain,(
  ~sP4(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f493,f498,f14309,f395])).
fof(f17167,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14908,f15193])).
fof(f14908,plain,(
  ~sP4('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f498,f14309,f395])).
fof(f17166,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14909,f15193])).
fof(f14909,plain,(
  ( ! [X0,X1] : (~sP4(sK14,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f498,f14309,f395])).
fof(f17165,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14910,f15261])).
fof(f14910,plain,(
  ~sP3('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f488,f498,f14309,f395])).
fof(f17164,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14911,f15261])).
fof(f14911,plain,(
  ~sP3('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f488,f498,f14309,f395])).
fof(f17163,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f14912,f15261])).
fof(f14912,plain,(
  ~sP3('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9634,f488,f498,f14309,f395])).
fof(f17162,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f14913,f15261])).
fof(f14913,plain,(
  ~sP3('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9680,f488,f498,f14309,f395])).
fof(f17161,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14922,f15261])).
fof(f14922,plain,(
  ( ! [X0,X1] : (~sP3('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f488,f498,f14309,f395])).
fof(f17160,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14923,f15261])).
fof(f14923,plain,(
  ~sP3('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f488,f498,f14309,f395])).
fof(f17159,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14924,f15261])).
fof(f14924,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f488,f498,f14309,f395])).
fof(f17158,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14931,f15418])).
fof(f15418,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f523,f14309,f412])).
fof(f14931,plain,(
  ( ! [X0] : (sP5(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f493,f488,f498,f14309,f395])).
fof(f17157,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14933,f15424])).
fof(f15424,plain,(
  ( ! [X0] : (~sP5(X0,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8877,f14309,f412])).
fof(f14933,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f488,f498,f14309,f395])).
fof(f17156,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14935,f15426])).
fof(f15426,plain,(
  ( ! [X2,X0,X1] : (~sP5(X0,'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f599,f14309,f412])).
fof(f14935,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f609,f488,f498,f14309,f395])).
fof(f17155,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14937,f15261])).
fof(f14937,plain,(
  ~sP3('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f886,f489,f498,f14309,f395])).
fof(f17154,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14938,f15261])).
fof(f14938,plain,(
  ~sP3('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f489,f498,f14309,f395])).
fof(f17153,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14939,f15418])).
fof(f14939,plain,(
  ( ! [X0] : (sP5(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f493,f489,f498,f14309,f395])).
fof(f17152,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14941,f886])).
fof(f14941,plain,(
  sP5('T_0','T_0','F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f492,f489,f498,f14309,f395])).
fof(f17151,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14943,f8680])).
fof(f14943,plain,(
  sP5(sK14,'T_0','F_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8668,f489,f498,f14309,f395])).
fof(f17150,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14945,f15261])).
fof(f14945,plain,(
  ~sP3('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8903,f498,f14309,f395])).
fof(f17149,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14946,f15424])).
fof(f14946,plain,(
  ( ! [X0] : (sP5(X0,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f8903,f498,f14309,f395])).
fof(f17148,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14948,f8889])).
fof(f14948,plain,(
  sP5('T_0','T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f492,f8903,f498,f14309,f395])).
fof(f17147,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14950,f15424])).
fof(f14950,plain,(
  sP5(sK14,'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8668,f8903,f498,f14309,f395])).
fof(f17146,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14951,f15261])).
fof(f14951,plain,(
  ( ! [X0,X1] : (~sP3('T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f607,f498,f14309,f395])).
fof(f17145,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14952,f15426])).
fof(f14952,plain,(
  ( ! [X2,X0,X1] : (sP5(X0,'T_0','const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f609,f607,f498,f14309,f395])).
fof(f17144,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14954,f2082])).
fof(f14954,plain,(
  ( ! [X0,X1] : (sP5('T_0','T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f492,f607,f498,f14309,f395])).
fof(f17143,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14955,f8681])).
fof(f14955,plain,(
  ( ! [X0,X1] : (sP5(sK14,'T_0','const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8668,f607,f498,f14309,f395])).
fof(f17142,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14970,f15261])).
fof(f14970,plain,(
  ( ! [X0,X1] : (~sP3('T_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f8904,f498,f14309,f395])).
fof(f17141,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14972,f15424])).
fof(f14972,plain,(
  sP5('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f8904,f498,f14309,f395])).
fof(f17140,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14974,f15418])).
fof(f14974,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f493,f608,f498,f14309,f395])).
fof(f17139,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14975,f15424])).
fof(f14975,plain,(
  ( ! [X0,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f608,f498,f14309,f395])).
fof(f17138,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f14976,f15426])).
fof(f14976,plain,(
  ( ! [X2,X0,X3,X1] : (sP5('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),'T_0','const.bool.IN_2'(s(X2,X3),s(fun(X2,bool),'const.pred_set.EMPTY_0')))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f609,f608,f498,f14309,f395])).
fof(f17137,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14978,f15193])).
fof(f14978,plain,(
  ~sP4('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f8670,f14309,f395])).
fof(f17136,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14979,f15193])).
fof(f14979,plain,(
  ~sP4(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f8670,f14309,f395])).
fof(f17135,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14980,f15193])).
fof(f14980,plain,(
  ~sP4('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f8670,f14309,f395])).
fof(f17134,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14981,f15193])).
fof(f14981,plain,(
  ~sP4(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f8670,f14309,f395])).
fof(f17133,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14982,f15261])).
fof(f14982,plain,(
  ~sP3(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f8655,f8670,f14309,f395])).
fof(f17132,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14986,f15261])).
fof(f14986,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1216,f8655,f8670,f14309,f395])).
fof(f17131,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14987,f15261])).
fof(f14987,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f8655,f8670,f14309,f395])).
fof(f17130,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14988,f15261])).
fof(f14988,plain,(
  ~sP3(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8655,f8670,f14309,f395])).
fof(f17129,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14997,f15261])).
fof(f14997,plain,(
  ~sP3(sK14,'F_0','T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f489,f8670,f14309,f395])).
fof(f17128,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f14998,f15261])).
fof(f14998,plain,(
  ~sP3(sK14,'F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f489,f8670,f14309,f395])).
fof(f17127,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15001,f8639])).
fof(f15001,plain,(
  sP5('T_0',sK14,'F_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f492,f489,f8670,f14309,f395])).
fof(f17126,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15003,f8640])).
fof(f15003,plain,(
  sP5(sK14,sK14,'F_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8668,f489,f8670,f14309,f395])).
fof(f17125,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15014,f15261])).
fof(f15014,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'F_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1216,f490,f8670,f14309,f395])).
fof(f17124,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15018,f15261])).
fof(f15018,plain,(
  ( ! [X0,X1] : (~sP3(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f8904,f8670,f14309,f395])).
fof(f17123,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15089,f15261])).
fof(f15089,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),sK14,'F_0')) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f1214,f490,f8671,f14309,f395])).
fof(f17122,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15094,f15261])).
fof(f15094,plain,(
  ( ! [X0,X1] : (~sP3(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,sK14))),s(X0,X1)),sK14,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f8904,f8671,f14309,f395])).
fof(f17121,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15104,f14309])).
fof(f15104,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8903,f481,f14309,f398])).
fof(f17120,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15105,f14309])).
fof(f15105,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f607,f481,f14309,f398])).
fof(f17119,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15106,f14309])).
fof(f15106,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10902,f481,f14309,f398])).
fof(f10902,plain,(
  sP4('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f10720,f393])).
fof(f10720,plain,(
  sP5('T_0','F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f274,f9626,f411])).
fof(f17118,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15107,f14309])).
fof(f15107,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f11142,f481,f14309,f398])).
fof(f11142,plain,(
  sP4('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f10950,f393])).
fof(f10950,plain,(
  sP5('T_0','F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f274,f9672,f411])).
fof(f17117,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15108,f14309])).
fof(f15108,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f490,f481,f14309,f398])).
fof(f17116,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15109,f14309])).
fof(f15109,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8904,f481,f14309,f398])).
fof(f17115,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15110,f14309])).
fof(f15110,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f608,f481,f14309,f398])).
fof(f17114,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15111,f14309])).
fof(f15111,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X0,X1))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9749,f481,f14309,f398])).
fof(f17113,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15124,f15193])).
fof(f15124,plain,(
  ( ! [X0] : (~sP4(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f274,f14309,f398])).
fof(f17112,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15146,f15193])).
fof(f15146,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f14309,f398])).
fof(f17111,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15148,f14309])).
fof(f15148,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f489,f481,f14309,f398])).
fof(f17110,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15149,f14309])).
fof(f15149,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8903,f481,f14309,f398])).
fof(f17109,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15150,f14309])).
fof(f15150,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f607,f481,f14309,f398])).
fof(f17108,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15151,f274])).
fof(f15151,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10902,f481,f14309,f398])).
fof(f17107,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15152,f274])).
fof(f15152,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f11142,f481,f14309,f398])).
fof(f17106,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15154,f14309])).
fof(f15154,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8904,f481,f14309,f398])).
fof(f17105,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15155,f14309])).
fof(f15155,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f608,f481,f14309,f398])).
fof(f17104,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15156,f14309])).
fof(f15156,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9749,f481,f14309,f398])).
fof(f17103,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15169,f15193])).
fof(f15169,plain,(
  ( ! [X0] : (~sP4('T_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f274,f14309,f398])).
fof(f17102,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15191,f15193])).
fof(f15191,plain,(
  ( ! [X0,X1] : (~sP4(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f14309,f398])).
fof(f17101,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15196,f14309])).
fof(f15196,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f481,f14309,f402])).
fof(f17100,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15197,f14309])).
fof(f15197,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f609,f481,f14309,f402])).
fof(f17099,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15198,f14309])).
fof(f15198,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10052,f481,f14309,f402])).
fof(f10052,plain,(
  sP3('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f9635,f392])).
fof(f9635,plain,(
  sP5('F_0','T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f481,f8866,f410])).
fof(f17098,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15199,f14309])).
fof(f15199,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10101,f481,f14309,f402])).
fof(f10101,plain,(
  sP3('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f9681,f392])).
fof(f9681,plain,(
  sP5('F_0','T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f8872,f410])).
fof(f17097,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15200,f14309])).
fof(f15200,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f494,f481,f14309,f402])).
fof(f17096,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15201,f274])).
fof(f15201,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10003,f481,f14309,f402])).
fof(f10003,plain,(
  sP3(g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0','F_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f9630,f392])).
fof(f9630,plain,(
  sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f481,f8866,f410])).
fof(f17095,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15202,f274])).
fof(f15202,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10077,f481,f14309,f402])).
fof(f10077,plain,(
  sP3(g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0','F_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f9676,f392])).
fof(f9676,plain,(
  sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f8872,f410])).
fof(f17094,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15203,f14309])).
fof(f15203,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8911,f481,f14309,f402])).
fof(f17093,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15204,f14309])).
fof(f15204,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f610,f481,f14309,f402])).
fof(f17092,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15212,f15261])).
fof(f15212,plain,(
  ( ! [X0] : (~sP3(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f274,f14309,f402])).
fof(f17091,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15226,f15261])).
fof(f15226,plain,(
  ( ! [X0,X1] : (~sP3(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f14309,f402])).
fof(f17090,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15247,f14309])).
fof(f15247,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f493,f481,f14309,f402])).
fof(f17089,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15248,f14309])).
fof(f15248,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8910,f481,f14309,f402])).
fof(f17088,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15249,f14309])).
fof(f15249,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f609,f481,f14309,f402])).
fof(f17087,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15250,f274])).
fof(f15250,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10052,f481,f14309,f402])).
fof(f17086,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15251,f274])).
fof(f15251,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10101,f481,f14309,f402])).
fof(f17085,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15253,f14309])).
fof(f15253,plain,(
  ~p(s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10003,f481,f14309,f402])).
fof(f17084,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15254,f14309])).
fof(f15254,plain,(
  ~p(s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10077,f481,f14309,f402])).
fof(f17083,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15255,f14309])).
fof(f15255,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8911,f481,f14309,f402])).
fof(f17082,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15256,f14309])).
fof(f15256,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f610,f481,f14309,f402])).
fof(f17081,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15257,f15261])).
fof(f15257,plain,(
  ( ! [X0] : (~sP3('T_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f14309,f402])).
fof(f17080,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15259,f15261])).
fof(f15259,plain,(
  ( ! [X0,X1] : (~sP3(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f481,f14309,f402])).
fof(f17071,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15285,f389])).
fof(f15285,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1216,f14309,f411])).
fof(f17070,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15287,f1716])).
fof(f15287,plain,(
  s(bool,'T_0') != s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f4974,f14309,f411])).
fof(f4974,plain,(
  ~sP5('F_0','T_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(unit_resulting_resolution,[],[f481,f1716,f413])).
fof(f17069,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15288,f2044])).
fof(f15288,plain,(
  s(bool,'T_0') != s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5198,f14309,f411])).
fof(f5198,plain,(
  ~sP5('F_0','T_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl13),
  inference(unit_resulting_resolution,[],[f481,f2044,f413])).
fof(f17068,plain,(
  $false | ($spl3 | $spl94)),
  inference(subsumption_resolution,[],[f15289,f8854])).
fof(f15289,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12434,f14309,f411])).
fof(f17067,plain,(
  $false | ($spl3 | $spl94)),
  inference(subsumption_resolution,[],[f15290,f8859])).
fof(f15290,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12642,f14309,f411])).
fof(f17066,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15291,f8626])).
fof(f15291,plain,(
  s(bool,'T_0') != s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9186,f14309,f411])).
fof(f17065,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15293,f9626])).
fof(f15293,plain,(
  s(bool,'F_0') != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10719,f14309,f411])).
fof(f10719,plain,(
  ~sP5('F_0','F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f481,f9626,f413])).
fof(f17064,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15294,f9672])).
fof(f15294,plain,(
  s(bool,'F_0') != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10949,f14309,f411])).
fof(f10949,plain,(
  ~sP5('F_0','F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f9672,f413])).
fof(f17063,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15295,f9103])).
fof(f15295,plain,(
  s(bool,'F_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10124,f14309,f411])).
fof(f17062,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15296,f1716])).
fof(f15296,plain,(
  s(bool,'T_0') != s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f4972,f14309,f411])).
fof(f4972,plain,(
  ~sP5('F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'T_0') | $spl9),
  inference(unit_resulting_resolution,[],[f481,f1716,f413])).
fof(f17061,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15297,f2044])).
fof(f15297,plain,(
  s(bool,'T_0') != s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5196,f14309,f411])).
fof(f5196,plain,(
  ~sP5('F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'T_0') | $spl13),
  inference(unit_resulting_resolution,[],[f481,f2044,f413])).
fof(f17060,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15298,f9626])).
fof(f15298,plain,(
  s(bool,'F_0') != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10717,f14309,f411])).
fof(f10717,plain,(
  ~sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),'F_0') | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f481,f9626,f413])).
fof(f17059,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15299,f9672])).
fof(f15299,plain,(
  s(bool,'F_0') != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10947,f14309,f411])).
fof(f10947,plain,(
  ~sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),'F_0') | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f9672,f413])).
fof(f17058,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15300,f9103])).
fof(f15300,plain,(
  s(bool,'F_0') != s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10160,f14309,f411])).
fof(f17057,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15301,f389])).
fof(f15301,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f1214,f14309,f411])).
fof(f17056,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17055,f8626])).
fof(f17055,plain,(
  s(bool,'T_0') != s(bool,sK14) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15302,f389])).
fof(f15302,plain,(
  ( ! [X0,X1] : (s(bool,sK14) != s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9492,f14309,f411])).
fof(f17054,plain,(
  $false | ($spl3 | $spl94)),
  inference(subsumption_resolution,[],[f15303,f8854])).
fof(f15303,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19('const.pred_set.EMPTY_0',sK13,sK12)),s(fun(sK12,bool),sK13))) | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12432,f14309,f411])).
fof(f17053,plain,(
  $false | ($spl3 | $spl94)),
  inference(subsumption_resolution,[],[f15304,f8859])).
fof(f15304,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(sK12,sK19(sK13,'const.pred_set.EMPTY_0',sK12)),s(fun(sK12,bool),sK13))) | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12640,f14309,f411])).
fof(f17052,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15305,f8626])).
fof(f15305,plain,(
  s(bool,'T_0') != s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9181,f14309,f411])).
fof(f17051,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17050,f8626])).
fof(f17050,plain,(
  s(bool,'T_0') != s(bool,sK14) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15307,f389])).
fof(f15307,plain,(
  ( ! [X0,X1] : (s(bool,sK14) != s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9494,f14309,f411])).
fof(f17049,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15308,f389])).
fof(f15308,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8941,f14309,f411])).
fof(f17048,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15311,f389])).
fof(f15311,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,happ(s(fun(X1,bool),'_dst_x0_1'(s(bool,X0))),s(X1,X2)))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8937,f14309,f411])).
fof(f17041,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15380,f523])).
fof(f15380,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f862,f14309,f412])).
fof(f17040,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15381,f8866])).
fof(f15381,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9635,f14309,f412])).
fof(f17039,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15382,f8872])).
fof(f15382,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9681,f14309,f412])).
fof(f17038,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15383,f8877])).
fof(f15383,plain,(
  s(bool,'T_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10021,f14309,f412])).
fof(f17037,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15384,f523])).
fof(f15384,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f860,f14309,f412])).
fof(f17036,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f17035,f523])).
fof(f17035,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl9 | $spl94)),
  inference(forward_demodulation,[],[f15385,f1716])).
fof(f15385,plain,(
  s(bool,'F_0') = s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1722,f14309,f412])).
fof(f1722,plain,(
  sP5('F_0','F_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(unit_resulting_resolution,[],[f481,f1715,f410])).
fof(f17034,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f17033,f523])).
fof(f17033,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl13 | $spl94)),
  inference(forward_demodulation,[],[f15386,f2044])).
fof(f15386,plain,(
  s(bool,'F_0') = s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2050,f14309,f412])).
fof(f2050,plain,(
  sP5('F_0','F_0',f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl13),
  inference(unit_resulting_resolution,[],[f481,f1982,f410])).
fof(f17032,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f17031,f523])).
fof(f17031,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl63 | $spl94)),
  inference(forward_demodulation,[],[f15387,f7852])).
fof(f15387,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7854,f14309,f412])).
fof(f7854,plain,(
  sP5('F_0','F_0',f(s(bool,'T_0'))) | $spl63),
  inference(unit_resulting_resolution,[],[f481,f6646,f410])).
fof(f17030,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17029,f523])).
fof(f17029,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15388,f8626])).
fof(f15388,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9273,f14309,f412])).
fof(f17028,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f17027,f523])).
fof(f17027,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl9 | $spl94)),
  inference(forward_demodulation,[],[f15389,f1716])).
fof(f15389,plain,(
  s(bool,'F_0') = s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f1719,f14309,f412])).
fof(f17026,plain,(
  $false | ($spl13 | $spl94)),
  inference(subsumption_resolution,[],[f17025,f523])).
fof(f17025,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl13 | $spl94)),
  inference(forward_demodulation,[],[f15390,f2044])).
fof(f15390,plain,(
  s(bool,'F_0') = s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f2047,f14309,f412])).
fof(f17024,plain,(
  $false | ($spl63 | $spl94)),
  inference(subsumption_resolution,[],[f17023,f523])).
fof(f17023,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl63 | $spl94)),
  inference(forward_demodulation,[],[f15391,f7852])).
fof(f15391,plain,(
  s(bool,'F_0') = s(bool,f(s(bool,'T_0'))) | ($spl63 | $spl94)),
  inference(unit_resulting_resolution,[],[f7849,f14309,f412])).
fof(f17022,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(subsumption_resolution,[],[f15392,f8866])).
fof(f15392,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9630,f14309,f412])).
fof(f17021,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15393,f8872])).
fof(f15393,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9676,f14309,f412])).
fof(f17020,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17019,f523])).
fof(f17019,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(forward_demodulation,[],[f17018,f8626])).
fof(f17018,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl1 | $spl4 | $spl94)),
  inference(forward_demodulation,[],[f15394,f9103])).
fof(f15394,plain,(
  s(bool,sK14) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10059,f14309,f412])).
fof(f17017,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15395,f8877])).
fof(f15395,plain,(
  s(bool,'T_0') = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10060,f14309,f412])).
fof(f17016,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17015,f523])).
fof(f17015,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f17014,f8626])).
fof(f17014,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15396,f600])).
fof(f15396,plain,(
  ( ! [X0,X1] : (s(bool,sK14) = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9272,f14309,f412])).
fof(f17013,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17012,f523])).
fof(f17012,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15397,f8626])).
fof(f15397,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9240,f14309,f412])).
fof(f17011,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17010,f523])).
fof(f17010,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f17009,f8626])).
fof(f17009,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15398,f600])).
fof(f15398,plain,(
  ( ! [X0,X1] : (s(bool,sK14) = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9241,f14309,f412])).
fof(f17008,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17007,f523])).
fof(f17007,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(forward_demodulation,[],[f17006,f8626])).
fof(f17006,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl1 | $spl4 | $spl94)),
  inference(forward_demodulation,[],[f15399,f9103])).
fof(f15399,plain,(
  s(bool,sK14) = s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10022,f14309,f412])).
fof(f17005,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15400,f523])).
fof(f15400,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8930,f14309,f412])).
fof(f17004,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17003,f523])).
fof(f17003,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(forward_demodulation,[],[f15401,f8626])).
fof(f15401,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9967,f14309,f412])).
fof(f17002,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15402,f523])).
fof(f15402,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8932,f14309,f412])).
fof(f17001,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f17000,f523])).
fof(f17000,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl4 | $spl94)),
  inference(forward_demodulation,[],[f15403,f8626])).
fof(f15403,plain,(
  s(bool,'F_0') = s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9274,f14309,f412])).
fof(f16997,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15452,f15781])).
fof(f15781,plain,(
  ( ! [X2,X0,X1] : (sP7(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f14309,f14309,f427])).
fof(f15452,plain,(
  ( ! [X0,X1] : (~sP7(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f415])).
fof(f16996,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15470,f15781])).
fof(f15470,plain,(
  ( ! [X0,X1] : (~sP7(X0,'F_0',X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f416])).
fof(f16995,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15473,f14309])).
fof(f15473,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8942,f14309,f417])).
fof(f16994,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15474,f14309])).
fof(f15474,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f504,f636,f14309,f417])).
fof(f16993,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15475,f14309])).
fof(f15475,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f502,f636,f14309,f417])).
fof(f16992,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15477,f14309])).
fof(f15477,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f636,f14309,f417])).
fof(f16991,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15478,f14309])).
fof(f15478,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f611,f636,f14309,f417])).
fof(f16990,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15479,f14309])).
fof(f15479,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8944,f14309,f417])).
fof(f16989,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15480,f14309])).
fof(f15480,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f502,f8944,f14309,f417])).
fof(f16988,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15482,f14309])).
fof(f15482,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8944,f14309,f417])).
fof(f16987,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15483,f14309])).
fof(f15483,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f611,f8944,f14309,f417])).
fof(f16986,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15485,f14309])).
fof(f15485,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f504,f8685,f14309,f417])).
fof(f16985,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15486,f14309])).
fof(f15486,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8704,f8685,f14309,f417])).
fof(f16984,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15488,f14309])).
fof(f15488,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8685,f14309,f417])).
fof(f16983,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15489,f14309])).
fof(f15489,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f611,f8685,f14309,f417])).
fof(f16982,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15495,f15639])).
fof(f15639,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f422])).
fof(f15495,plain,(
  ~sP6('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f636,f274,f14309,f417])).
fof(f16981,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15497,f15639])).
fof(f15497,plain,(
  ~sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f274,f14309,f417])).
fof(f16980,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15502,f15639])).
fof(f15502,plain,(
  ~sP6('F_0','T_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f274,f14309,f417])).
fof(f16979,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15512,f15639])).
fof(f15512,plain,(
  ( ! [X0] : (~sP6(X0,'F_0','T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f417])).
fof(f16978,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15514,f15639])).
fof(f15514,plain,(
  ( ! [X0] : (~sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f417])).
fof(f16977,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15516,f15639])).
fof(f15516,plain,(
  ( ! [X0] : (~sP6('F_0',X0,'T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f417])).
fof(f16976,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15518,f15639])).
fof(f15518,plain,(
  ( ! [X0] : (~sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'T_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f417])).
fof(f16975,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15528,f15639])).
fof(f15528,plain,(
  ( ! [X0] : (~sP6(X0,'F_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f417])).
fof(f16974,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15530,f15639])).
fof(f15530,plain,(
  ( ! [X0] : (~sP6('F_0',X0,sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f417])).
fof(f16973,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15532,f14309])).
fof(f15532,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f503,f634,f14309,f417])).
fof(f16972,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15533,f14309])).
fof(f15533,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f502,f634,f14309,f417])).
fof(f16971,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15535,f14309])).
fof(f15535,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f634,f14309,f417])).
fof(f16970,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15536,f14309])).
fof(f15536,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f612,f634,f14309,f417])).
fof(f16969,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15537,f14309])).
fof(f15537,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8942,f14309,f417])).
fof(f16968,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15538,f14309])).
fof(f15538,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f502,f8942,f14309,f417])).
fof(f16967,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15540,f14309])).
fof(f15540,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8942,f14309,f417])).
fof(f16966,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15541,f14309])).
fof(f15541,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f612,f8942,f14309,f417])).
fof(f16965,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15543,f14309])).
fof(f15543,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8944,f14309,f417])).
fof(f16964,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15544,f14309])).
fof(f15544,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f503,f8684,f14309,f417])).
fof(f16963,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15545,f14309])).
fof(f15545,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8704,f8684,f14309,f417])).
fof(f16962,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15547,f14309])).
fof(f15547,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8684,f14309,f417])).
fof(f16961,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15548,f14309])).
fof(f15548,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f612,f8684,f14309,f417])).
fof(f16960,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15555,f15639])).
fof(f15555,plain,(
  ~sP6('T_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f14309,f417])).
fof(f16959,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15557,f15639])).
fof(f15557,plain,(
  ~sP6('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f274,f14309,f417])).
fof(f16958,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15563,f15639])).
fof(f15563,plain,(
  ~sP6('T_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f274,f14309,f417])).
fof(f16957,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15573,f15639])).
fof(f15573,plain,(
  ( ! [X0] : (~sP6(X0,'F_0','T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f417])).
fof(f16956,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15575,f15639])).
fof(f15575,plain,(
  ( ! [X0] : (~sP6(X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f417])).
fof(f16955,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15577,f15639])).
fof(f15577,plain,(
  ( ! [X0] : (~sP6('F_0',X0,'T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f417])).
fof(f16954,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15579,f15639])).
fof(f15579,plain,(
  ( ! [X0] : (~sP6('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'T_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f417])).
fof(f16953,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15589,f15639])).
fof(f15589,plain,(
  ( ! [X0] : (~sP6(X0,'F_0',sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f417])).
fof(f16952,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15591,f15639])).
fof(f15591,plain,(
  ( ! [X0] : (~sP6('F_0',X0,sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f417])).
fof(f16951,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15594,f14309])).
fof(f15594,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f481,f14309,f421])).
fof(f16950,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15595,f14309])).
fof(f15595,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f611,f481,f14309,f421])).
fof(f16949,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15596,f14309])).
fof(f15596,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f504,f481,f14309,f421])).
fof(f16948,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15597,f14309])).
fof(f15597,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f481,f14309,f421])).
fof(f16947,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15598,f14309])).
fof(f15598,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f612,f481,f14309,f421])).
fof(f16946,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15604,f15639])).
fof(f15604,plain,(
  ( ! [X0] : (~sP6(X0,'T_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f274,f14309,f421])).
fof(f16945,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15614,f15639])).
fof(f15614,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f14309,f421])).
fof(f16944,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15629,f14309])).
fof(f15629,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f503,f481,f14309,f421])).
fof(f16943,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15630,f14309])).
fof(f15630,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f481,f14309,f421])).
fof(f16942,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15631,f14309])).
fof(f15631,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f611,f481,f14309,f421])).
fof(f16941,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15633,f14309])).
fof(f15633,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f481,f14309,f421])).
fof(f16940,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15634,f14309])).
fof(f15634,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f612,f481,f14309,f421])).
fof(f16939,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15635,f15639])).
fof(f15635,plain,(
  ( ! [X0] : (~sP6('T_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f14309,f421])).
fof(f16938,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15637,f15639])).
fof(f15637,plain,(
  ( ! [X0,X1] : (~sP6(X0,X1,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f481,f14309,f421])).
fof(f16937,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15642,f14309])).
fof(f15642,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f274,f14309,f427])).
fof(f16936,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15643,f14309])).
fof(f15643,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f274,f14309,f427])).
fof(f16935,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15644,f14309])).
fof(f15644,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f274,f14309,f427])).
fof(f16934,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15646,f14309])).
fof(f15646,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16933,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15647,f14309])).
fof(f15647,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f427])).
fof(f16932,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15648,f14309])).
fof(f15648,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16931,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15649,f274])).
fof(f15649,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f14309,f14309,f427])).
fof(f16930,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15650,f14309])).
fof(f15650,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f7793,f14309,f14309,f427])).
fof(f7793,plain,(
  ~sP7('F_0','T_0',f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(unit_resulting_resolution,[],[f274,f481,f5068])).
fof(f5068,plain,(
  ( ! [X10,X9] : (~sP7(X10,X9,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | p(s(bool,X10)) | ~p(s(bool,X9))) ) | $spl9),
  inference(subsumption_resolution,[],[f4992,f274])).
fof(f4992,plain,(
  ( ! [X10,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | p(s(bool,X10)) | ~sP7(X10,X9,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | $spl9),
  inference(superposition,[],[f430,f1716])).
fof(f16929,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15651,f14309])).
fof(f15651,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8723,f14309,f14309,f427])).
fof(f16928,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15652,f274])).
fof(f15652,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8720,f14309,f14309,f427])).
fof(f16927,plain,(
  $false | ($spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15653,f14309])).
fof(f15653,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8816,f14309,f14309,f427])).
fof(f8816,plain,(
  ~sP7('F_0',sK14,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl4 | $spl9)),
  inference(unit_resulting_resolution,[],[f481,f479,f5068])).
fof(f16926,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15654,f14309])).
fof(f15654,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8807,f14309,f14309,f427])).
fof(f16925,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15655,f14309])).
fof(f15655,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8724,f14309,f14309,f427])).
fof(f16924,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15656,f274])).
fof(f15656,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16923,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15658,f14309])).
fof(f15658,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f427])).
fof(f16922,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15659,f274])).
fof(f15659,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f274,f14309,f427])).
fof(f16921,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15660,f274])).
fof(f15660,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f274,f14309,f427])).
fof(f16920,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15663,f14309])).
fof(f15663,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f274,f14309,f427])).
fof(f16919,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15664,f14309])).
fof(f15664,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f274,f14309,f427])).
fof(f16918,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15669,f274])).
fof(f15669,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f427])).
fof(f16917,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15670,f274])).
fof(f15670,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16916,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15671,f274])).
fof(f15671,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f427])).
fof(f16915,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15672,f274])).
fof(f15672,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16914,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15680,f14309])).
fof(f15680,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16913,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15681,f14309])).
fof(f15681,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f427])).
fof(f16912,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15682,f14309])).
fof(f15682,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f427])).
fof(f16911,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15687,f14309])).
fof(f15687,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f14309,f427])).
fof(f16910,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15688,f14309])).
fof(f15688,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f274,f14309,f427])).
fof(f16909,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15690,f14309])).
fof(f15690,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f274,f14309,f427])).
fof(f16908,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15691,f14309])).
fof(f15691,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f427])).
fof(f16907,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15692,f14309])).
fof(f15692,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16906,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15694,f14309])).
fof(f15694,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16905,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15695,f274])).
fof(f15695,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f14309,f14309,f427])).
fof(f16904,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15696,f274])).
fof(f15696,plain,(
  ~p(s(bool,'T_0')) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f7793,f14309,f14309,f427])).
fof(f16903,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15697,f274])).
fof(f15697,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8723,f14309,f14309,f427])).
fof(f16902,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15698,f14309])).
fof(f15698,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8720,f14309,f14309,f427])).
fof(f16901,plain,(
  $false | ($spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15699,f14309])).
fof(f15699,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8816,f14309,f14309,f427])).
fof(f16900,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15700,f14309])).
fof(f15700,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8807,f14309,f14309,f427])).
fof(f16899,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15701,f14309])).
fof(f15701,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8724,f14309,f14309,f427])).
fof(f16898,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15702,f274])).
fof(f15702,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16897,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15703,f14309])).
fof(f15703,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f427])).
fof(f16896,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15705,f274])).
fof(f15705,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f14309,f427])).
fof(f16895,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15706,f274])).
fof(f15706,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f274,f14309,f427])).
fof(f16894,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15710,f14309])).
fof(f15710,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f274,f14309,f427])).
fof(f16893,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15711,f14309])).
fof(f15711,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f274,f14309,f427])).
fof(f16892,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15716,f274])).
fof(f15716,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f427])).
fof(f16891,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15717,f274])).
fof(f15717,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16890,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15718,f274])).
fof(f15718,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f427])).
fof(f16889,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15719,f274])).
fof(f15719,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16888,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15727,f14309])).
fof(f15727,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16887,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15728,f14309])).
fof(f15728,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f427])).
fof(f16886,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15729,f14309])).
fof(f15729,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f427])).
fof(f16885,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15735,f14309])).
fof(f15735,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f274,f14309,f427])).
fof(f16884,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15736,f274])).
fof(f15736,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f274,f14309,f427])).
fof(f16883,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15737,f14309])).
fof(f15737,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8720,f274,f14309,f427])).
fof(f16882,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15738,f274])).
fof(f15738,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f274,f14309,f427])).
fof(f16881,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15740,f14309])).
fof(f15740,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f427])).
fof(f16880,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15741,f14309])).
fof(f15741,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16879,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15743,f14309])).
fof(f15743,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16878,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15744,f274])).
fof(f15744,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f14309,f14309,f427])).
fof(f16877,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15745,f274])).
fof(f15745,plain,(
  ~p(s(bool,'T_0')) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f7793,f14309,f14309,f427])).
fof(f16876,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15746,f274])).
fof(f15746,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8723,f14309,f14309,f427])).
fof(f16875,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15747,f14309])).
fof(f15747,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8720,f14309,f14309,f427])).
fof(f16874,plain,(
  $false | ($spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15748,f14309])).
fof(f15748,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8816,f14309,f14309,f427])).
fof(f16873,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15749,f14309])).
fof(f15749,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8807,f14309,f14309,f427])).
fof(f16872,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15750,f14309])).
fof(f15750,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8724,f14309,f14309,f427])).
fof(f16871,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15751,f274])).
fof(f15751,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16870,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15752,f14309])).
fof(f15752,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8684,f14309,f14309,f427])).
fof(f16869,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15755,f14309])).
fof(f15755,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f274,f14309,f427])).
fof(f16868,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15756,f274])).
fof(f15756,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f274,f14309,f427])).
fof(f16867,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15757,f14309])).
fof(f15757,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f7793,f274,f14309,f427])).
fof(f16866,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15758,f14309])).
fof(f15758,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8723,f274,f14309,f427])).
fof(f16865,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15759,f274])).
fof(f15759,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f274,f14309,f427])).
fof(f16864,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15766,f14309])).
fof(f15766,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8942,f14309,f14309,f427])).
fof(f16863,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15767,f14309])).
fof(f15767,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f14309,f427])).
fof(f16862,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15768,f14309])).
fof(f15768,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8944,f14309,f14309,f427])).
fof(f16861,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15769,f274])).
fof(f15769,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f14309,f14309,f427])).
fof(f16860,plain,(
  $false | ($spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15770,f14309])).
fof(f15770,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f7793,f14309,f14309,f427])).
fof(f16859,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15771,f14309])).
fof(f15771,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8723,f14309,f14309,f427])).
fof(f16858,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15772,f274])).
fof(f15772,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8720,f14309,f14309,f427])).
fof(f16857,plain,(
  $false | ($spl4 | $spl9 | $spl94)),
  inference(subsumption_resolution,[],[f15773,f14309])).
fof(f15773,plain,(
  ~p(s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) | ($spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f8816,f14309,f14309,f427])).
fof(f16856,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15774,f14309])).
fof(f15774,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8807,f14309,f14309,f427])).
fof(f16855,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15775,f14309])).
fof(f15775,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8724,f14309,f14309,f427])).
fof(f16854,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15776,f274])).
fof(f15776,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8963,f14309,f14309,f427])).
fof(f16853,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15778,f14309])).
fof(f15778,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8685,f14309,f14309,f427])).
fof(f16852,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15784,f14309])).
fof(f15784,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8955,f481,f14309,f430])).
fof(f16851,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15785,f14309])).
fof(f15785,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f645,f481,f14309,f430])).
fof(f16850,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15786,f14309])).
fof(f15786,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8960,f481,f14309,f430])).
fof(f16849,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15815,f14309])).
fof(f15815,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f639,f481,f14309,f430])).
fof(f16848,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15816,f14309])).
fof(f15816,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8955,f481,f14309,f430])).
fof(f16847,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15818,f14309])).
fof(f15818,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8960,f481,f14309,f430])).
fof(f16846,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15863,f16482])).
fof(f16482,plain,(
  ( ! [X0,X1] : (sP9('F_0',X0,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f509,f14309,f466])).
fof(f15863,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f431])).
fof(f16845,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15881,f16482])).
fof(f15881,plain,(
  ( ! [X0,X1] : (~sP9('F_0',X0,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f432])).
fof(f16844,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15905,f15958])).
fof(f15958,plain,(
  ( ! [X2,X0,X1] : (sP8(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f440])).
fof(f15905,plain,(
  ~sP8('F_0','T_0','F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f652,f481,f14309,f435])).
fof(f16843,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15907,f15958])).
fof(f15907,plain,(
  ~sP8('F_0',sK14,'F_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8728,f481,f14309,f435])).
fof(f16842,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15909,f15958])).
fof(f15909,plain,(
  ~sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f481,f14309,f435])).
fof(f16841,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15931,f15958])).
fof(f15931,plain,(
  ~sP8('F_0','F_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f649,f481,f14309,f436])).
fof(f16840,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15932,f15958])).
fof(f15932,plain,(
  ~sP8('F_0','F_0',sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f481,f14309,f436])).
fof(f16839,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15933,f15958])).
fof(f15933,plain,(
  ~sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f481,f14309,f436])).
fof(f16838,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15954,f15958])).
fof(f15954,plain,(
  ( ! [X0] : (~sP8(X0,'F_0','F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f481,f14309,f438])).
fof(f16837,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15960,f274])).
fof(f15960,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f443])).
fof(f16836,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15961,f274])).
fof(f15961,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9011,f14309,f443])).
fof(f16835,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15962,f274])).
fof(f15962,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9014,f14309,f443])).
fof(f16834,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15963,f274])).
fof(f15963,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9015,f14309,f443])).
fof(f16833,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15968,f14309])).
fof(f15968,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f14309,f443])).
fof(f16832,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15969,f14309])).
fof(f15969,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f14309,f443])).
fof(f16831,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15970,f14309])).
fof(f15970,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8746,f14309,f443])).
fof(f16830,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15977,f14309])).
fof(f15977,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9014,f14309,f443])).
fof(f16829,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15978,f14309])).
fof(f15978,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9015,f14309,f443])).
fof(f16828,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15979,f274])).
fof(f15979,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f649,f14309,f443])).
fof(f16827,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15980,f14309])).
fof(f15980,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f14309,f443])).
fof(f16826,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15981,f14309])).
fof(f15981,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f652,f14309,f443])).
fof(f16825,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15982,f14309])).
fof(f15982,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8728,f14309,f443])).
fof(f16824,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15983,f274])).
fof(f15983,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f14309,f443])).
fof(f16823,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15984,f14309])).
fof(f15984,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f14309,f443])).
fof(f16822,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f15990,f274])).
fof(f15990,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f444])).
fof(f16821,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15991,f274])).
fof(f15991,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9011,f14309,f444])).
fof(f16820,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15992,f274])).
fof(f15992,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9014,f14309,f444])).
fof(f16819,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15993,f274])).
fof(f15993,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9015,f14309,f444])).
fof(f16818,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15998,f14309])).
fof(f15998,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f14309,f444])).
fof(f16817,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f15999,f14309])).
fof(f15999,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f14309,f444])).
fof(f16816,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16000,f14309])).
fof(f16000,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8746,f14309,f444])).
fof(f16815,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16006,f14309])).
fof(f16006,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9011,f14309,f444])).
fof(f16814,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16008,f14309])).
fof(f16008,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9015,f14309,f444])).
fof(f16813,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16009,f14309])).
fof(f16009,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f649,f14309,f444])).
fof(f16812,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16010,f14309])).
fof(f16010,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f14309,f444])).
fof(f16811,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16011,f274])).
fof(f16011,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f652,f14309,f444])).
fof(f16810,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16012,f14309])).
fof(f16012,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8728,f14309,f444])).
fof(f16809,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16013,f14309])).
fof(f16013,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f14309,f444])).
fof(f16808,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16014,f274])).
fof(f16014,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f14309,f444])).
fof(f16807,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16052,f16458])).
fof(f16458,plain,(
  ( ! [X0,X1] : (sP11('F_0',X0,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f513,f14309,f465])).
fof(f16052,plain,(
  ( ! [X0,X1] : (~sP11('F_0',X0,X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f449])).
fof(f16806,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16055,f14309])).
fof(f16055,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f513,f9017,f14309,f452])).
fof(f16805,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16056,f14309])).
fof(f16056,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f513,f687,f14309,f452])).
fof(f16804,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16057,f14309])).
fof(f16057,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f512,f687,f14309,f452])).
fof(f16803,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16059,f14309])).
fof(f16059,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f614,f687,f14309,f452])).
fof(f16802,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16060,f14309])).
fof(f16060,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9036,f687,f14309,f452])).
fof(f16801,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16061,f14309])).
fof(f16061,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f513,f8748,f14309,f452])).
fof(f16800,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16062,f14309])).
fof(f16062,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8773,f8748,f14309,f452])).
fof(f16799,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16064,f14309])).
fof(f16064,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f614,f8748,f14309,f452])).
fof(f16798,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16065,f14309])).
fof(f16065,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9036,f8748,f14309,f452])).
fof(f16797,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16067,f14309])).
fof(f16067,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9021,f14309,f452])).
fof(f16796,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16068,f14309])).
fof(f16068,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9022,f14309,f452])).
fof(f16795,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16069,f14309])).
fof(f16069,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f512,f9022,f14309,f452])).
fof(f16794,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16071,f14309])).
fof(f16071,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f614,f9022,f14309,f452])).
fof(f16793,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16072,f14309])).
fof(f16072,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9036,f9022,f14309,f452])).
fof(f16792,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16080,f16305])).
fof(f16305,plain,(
  ( ! [X2,X0,X1] : (sP10(X0,X1,X2)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f457])).
fof(f16080,plain,(
  ~sP10('F_0','T_0','T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f687,f274,f14309,f452])).
fof(f16791,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16082,f16305])).
fof(f16082,plain,(
  ~sP10('F_0',sK14,'T_0') | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f274,f14309,f452])).
fof(f16790,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16084,f16305])).
fof(f16084,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0','T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f274,f14309,f452])).
fof(f16789,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16098,f16305])).
fof(f16098,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f682,f14309,f14309,f452])).
fof(f16788,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16100,f16305])).
fof(f16100,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f14309,f14309,f452])).
fof(f16787,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16102,f16305])).
fof(f16102,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f687,f14309,f14309,f452])).
fof(f16786,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16104,f16305])).
fof(f16104,plain,(
  ( ! [X0] : (~sP10('F_0',sK14,X0)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f14309,f14309,f452])).
fof(f16785,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16106,f16305])).
fof(f16106,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f14309,f14309,f452])).
fof(f16784,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16108,f16305])).
fof(f16108,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f14309,f14309,f452])).
fof(f16783,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16110,f16305])).
fof(f16110,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f14309,f14309,f452])).
fof(f16782,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16118,f14309])).
fof(f16118,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f512,f14309,f452])).
fof(f16781,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16119,f14309])).
fof(f16119,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f512,f14309,f452])).
fof(f16780,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16120,f14309])).
fof(f16120,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f512,f14309,f452])).
fof(f16779,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16124,f14309])).
fof(f16124,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f510,f14309,f452])).
fof(f16778,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16125,f14309])).
fof(f16125,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f510,f14309,f452])).
fof(f16777,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16128,f14309])).
fof(f16128,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f614,f14309,f452])).
fof(f16776,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16132,f14309])).
fof(f16132,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f9036,f14309,f452])).
fof(f16775,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16133,f14309])).
fof(f16133,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f9036,f14309,f452])).
fof(f16774,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16137,f14309])).
fof(f16137,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f8773,f14309,f452])).
fof(f16773,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16138,f14309])).
fof(f16138,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f8773,f14309,f452])).
fof(f16772,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16140,f14309])).
fof(f16140,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f9037,f14309,f452])).
fof(f16771,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16152,f16305])).
fof(f16152,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f682,f14309,f14309,f452])).
fof(f16770,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16153,f16305])).
fof(f16153,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f14309,f14309,f452])).
fof(f16769,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16154,f16305])).
fof(f16154,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f687,f14309,f14309,f452])).
fof(f16768,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16155,f16305])).
fof(f16155,plain,(
  ( ! [X0] : (~sP10('F_0',sK14,X0)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f14309,f14309,f452])).
fof(f16767,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16156,f16305])).
fof(f16156,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f14309,f14309,f452])).
fof(f16766,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16157,f16305])).
fof(f16157,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f14309,f14309,f452])).
fof(f16765,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16158,f16305])).
fof(f16158,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f14309,f14309,f452])).
fof(f16764,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16201,f16305])).
fof(f16201,plain,(
  ~sP10('F_0','F_0','F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f682,f481,f14309,f453])).
fof(f16763,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16202,f16305])).
fof(f16202,plain,(
  ~sP10('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f481,f14309,f453])).
fof(f16762,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16203,f16305])).
fof(f16203,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f481,f14309,f453])).
fof(f16761,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16204,f16305])).
fof(f16204,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f481,f14309,f453])).
fof(f16760,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16242,f16305])).
fof(f16242,plain,(
  ~sP10('F_0','F_0','F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f682,f481,f14309,f454])).
fof(f16759,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16243,f16305])).
fof(f16243,plain,(
  ~sP10('F_0','F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f481,f14309,f454])).
fof(f16758,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16244,f16305])).
fof(f16244,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f481,f14309,f454])).
fof(f16757,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16245,f16305])).
fof(f16245,plain,(
  ~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0'))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f481,f14309,f454])).
fof(f16756,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16273,f14309])).
fof(f16273,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f614,f481,f14309,f455])).
fof(f16755,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16274,f14309])).
fof(f16274,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9036,f481,f14309,f455])).
fof(f16754,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16275,f14309])).
fof(f16275,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f513,f481,f14309,f455])).
fof(f16753,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16276,f14309])).
fof(f16276,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f481,f14309,f455])).
fof(f16752,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16277,f14309])).
fof(f16277,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f615,f481,f14309,f455])).
fof(f16751,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16278,f16305])).
fof(f16278,plain,(
  ( ! [X0] : (~sP10(X0,'F_0','T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f14309,f455])).
fof(f16750,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16280,f16305])).
fof(f16280,plain,(
  ( ! [X0,X1] : (~sP10(X0,'F_0',X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f481,f14309,f455])).
fof(f16749,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16295,f14309])).
fof(f16295,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f510,f481,f14309,f455])).
fof(f16748,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16296,f14309])).
fof(f16296,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f614,f481,f14309,f455])).
fof(f16747,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16297,f14309])).
fof(f16297,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9036,f481,f14309,f455])).
fof(f16746,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16299,f14309])).
fof(f16299,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f481,f14309,f455])).
fof(f16745,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16300,f14309])).
fof(f16300,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f615,f481,f14309,f455])).
fof(f16744,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16301,f16305])).
fof(f16301,plain,(
  ( ! [X0] : (~sP10('T_0','F_0',X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f14309,f455])).
fof(f16743,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16303,f16305])).
fof(f16303,plain,(
  ( ! [X0,X1] : (~sP10(X0,'F_0',X1)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f481,f14309,f455])).
fof(f16742,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16337,f274])).
fof(f16337,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1166,f14309,f461])).
fof(f16741,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16338,f274])).
fof(f16338,plain,(
  ~p(s(bool,'T_0')) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8783,f14309,f461])).
fof(f16740,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16339,f274])).
fof(f16339,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9045,f14309,f461])).
fof(f16739,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16344,f14309])).
fof(f16344,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f14309,f461])).
fof(f16738,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16345,f14309])).
fof(f16345,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f14309,f461])).
fof(f16737,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16346,f14309])).
fof(f16346,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f14309,f461])).
fof(f16736,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16347,f14309])).
fof(f16347,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8812,f14309,f461])).
fof(f16735,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16348,f14309])).
fof(f16348,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8785,f14309,f461])).
fof(f16734,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16349,f14309])).
fof(f16349,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8786,f14309,f461])).
fof(f16733,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16356,f14309])).
fof(f16356,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9045,f14309,f461])).
fof(f16732,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16357,f14309])).
fof(f16357,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f682,f14309,f461])).
fof(f16731,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16358,f14309])).
fof(f16358,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f14309,f461])).
fof(f16730,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16359,f274])).
fof(f16359,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f687,f14309,f461])).
fof(f16729,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16360,f14309])).
fof(f16360,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f14309,f461])).
fof(f16728,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16361,f14309])).
fof(f16361,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f14309,f461])).
fof(f16727,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16362,f14309])).
fof(f16362,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f14309,f461])).
fof(f16726,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16363,f274])).
fof(f16363,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f14309,f461])).
fof(f16725,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16371,f274])).
fof(f16371,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f694,f481,f14309,f462])).
fof(f16724,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16372,f274])).
fof(f16372,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9043,f481,f14309,f462])).
fof(f16723,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16375,f14309])).
fof(f16375,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9038,f481,f14309,f462])).
fof(f16722,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16376,f14309])).
fof(f16376,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8760,f481,f14309,f462])).
fof(f16721,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16377,f14309])).
fof(f16377,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8788,f481,f14309,f462])).
fof(f16720,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16378,f14309])).
fof(f16378,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8789,f481,f14309,f462])).
fof(f16719,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16402,f14309])).
fof(f16402,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9043,f481,f14309,f462])).
fof(f16718,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16403,f274])).
fof(f16403,plain,(
  ~p(s(bool,'T_0')) | $spl94),
  inference(unit_resulting_resolution,[],[f1147,f481,f14309,f462])).
fof(f16717,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16404,f14309])).
fof(f16404,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8775,f481,f14309,f462])).
fof(f16716,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16405,f274])).
fof(f16405,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9038,f481,f14309,f462])).
fof(f16715,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16406,f14309])).
fof(f16406,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8760,f481,f14309,f462])).
fof(f16714,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16408,f14309])).
fof(f16408,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8789,f481,f14309,f462])).
fof(f16713,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16438,f510])).
fof(f16438,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'F_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f682,f14309,f465])).
fof(f16712,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16439,f9036])).
fof(f16439,plain,(
  ( ! [X0] : (~sP10('F_0',X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f14309,f465])).
fof(f16711,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16440,f512])).
fof(f16440,plain,(
  ( ! [X0] : (~sP10('F_0','T_0',X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f687,f14309,f465])).
fof(f16710,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16441,f8773])).
fof(f16441,plain,(
  ( ! [X0] : (~sP10('F_0',sK14,X0)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f14309,f465])).
fof(f16709,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16442,f510])).
fof(f16442,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'F_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f14309,f465])).
fof(f16708,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16443,f9036])).
fof(f16443,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9021,f14309,f465])).
fof(f16707,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16444,f512])).
fof(f16444,plain,(
  ( ! [X0] : (~sP10('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9022,f14309,f465])).
fof(f16706,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16467,f506])).
fof(f16467,plain,(
  ( ! [X0] : (~sP8('F_0',X0,'T_0')) ) | $spl94),
  inference(unit_resulting_resolution,[],[f649,f14309,f466])).
fof(f16705,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16468,f8734])).
fof(f16468,plain,(
  ( ! [X0] : (~sP8('F_0',X0,sK14)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f14309,f466])).
fof(f16704,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16469,f508])).
fof(f16469,plain,(
  ( ! [X0] : (~sP8('F_0','T_0',X0)) ) | $spl94),
  inference(unit_resulting_resolution,[],[f652,f14309,f466])).
fof(f16703,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16470,f8735])).
fof(f16470,plain,(
  ( ! [X0] : (~sP8('F_0',sK14,X0)) ) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8728,f14309,f466])).
fof(f16702,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16471,f506])).
fof(f16471,plain,(
  ( ! [X0] : (~sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),X0,'T_0')) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f14309,f466])).
fof(f16701,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16472,f508])).
fof(f16472,plain,(
  ( ! [X0] : (~sP8('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'T_0',X0)) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8965,f14309,f466])).
fof(f16700,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16498,f14309])).
fof(f16498,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8904,f14309,f1241])).
fof(f16699,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16501,f14309])).
fof(f16501,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0'))))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f608,f14309,f1241])).
fof(f16698,plain,(
  $false | ($spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16505,f14309])).
fof(f16505,plain,(
  ~p(s(bool,sK14)) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f9749,f14309,f1241])).
fof(f16697,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16514,f14309])).
fof(f16514,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f490,f14309,f1241])).
fof(f16696,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16518,f14309])).
fof(f16518,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8904,f14309,f1241])).
fof(f16695,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16522,f14309])).
fof(f16522,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f608,f14309,f1241])).
fof(f16694,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16535,f14309])).
fof(f16535,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8960,f14309,f1242])).
fof(f16693,plain,(
  $false | $spl94),
  inference(subsumption_resolution,[],[f16543,f14309])).
fof(f16543,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl94),
  inference(unit_resulting_resolution,[],[f481,f645,f14309,f1242])).
fof(f16692,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(subsumption_resolution,[],[f16546,f14309])).
fof(f16546,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8960,f14309,f1242])).
fof(f16605,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f9749,f14309,f9591])).
fof(f16601,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8788,f481,f14309,f9582])).
fof(f16595,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f645,f481,f14309,f9580])).
fof(f16585,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f490,f481,f14309,f9579])).
fof(f16573,plain,(
  $false | ($spl1 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8960,f14309,f5068])).
fof(f16571,plain,(
  $false | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f645,f14309,f5068])).
fof(f16567,plain,(
  $false | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f608,f14309,f5067])).
fof(f5067,plain,(
  ( ! [X8,X7] : (~sP4(X7,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),X8) | p(s(bool,X8)) | ~p(s(bool,X7))) ) | $spl9),
  inference(subsumption_resolution,[],[f4991,f274])).
fof(f4991,plain,(
  ( ! [X8,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | p(s(bool,X8)) | ~sP4(X7,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),X8)) ) | $spl9),
  inference(superposition,[],[f398,f1716])).
fof(f16565,plain,(
  $false | ($spl1 | $spl4 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f8904,f14309,f5067])).
fof(f16563,plain,(
  $false | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f490,f14309,f5067])).
fof(f16547,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f481,f8960,f14309,f1242])).
fof(f16544,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f645,f14309,f1242])).
fof(f16537,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f14309,f8960,f14309,f1242])).
fof(f16534,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f481,f645,f14309,f1242])).
fof(f16529,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f481,f9749,f14309,f1241])).
fof(f16523,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f608,f14309,f1241])).
fof(f16519,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f481,f8904,f14309,f1241])).
fof(f16515,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f481,f490,f14309,f1241])).
fof(f16507,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f14309,f9749,f14309,f1241])).
fof(f16503,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f608,f14309,f1241])).
fof(f16500,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f481,f14309,f8904,f14309,f1241])).
fof(f16497,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309,f490,f14309,f1241])).
fof(f16485,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f8996,f14309,f466])).
fof(f16483,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f649,f509,f14309,f466])).
fof(f16481,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8728,f8735,f14309,f466])).
fof(f16479,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f652,f508,f14309,f466])).
fof(f16477,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f8734,f14309,f466])).
fof(f16475,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f649,f506,f14309,f466])).
fof(f16461,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f9037,f14309,f465])).
fof(f16459,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f513,f14309,f465])).
fof(f16457,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f8773,f14309,f465])).
fof(f16455,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f9036,f14309,f465])).
fof(f16453,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f687,f614,f14309,f465])).
fof(f16451,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f510,f14309,f465])).
fof(f16449,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f687,f512,f14309,f465])).
fof(f16434,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f694,f481,f14309,f14309,f462])).
fof(f16418,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1147,f481,f274,f14309,f462])).
fof(f16400,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f694,f481,f14309,f14309,f462])).
fof(f16384,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f694,f481,f274,f14309,f462])).
fof(f16370,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1166,f14309,f14309,f461])).
fof(f16368,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f687,f274,f14309,f461])).
fof(f16353,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1166,f14309,f14309,f461])).
fof(f16351,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1166,f274,f14309,f461])).
fof(f16336,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f481,f14309,f460])).
fof(f16321,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f481,f481,f14309,f459])).
fof(f16306,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1157,f14309,f457])).
fof(f16304,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f510,f14309,f481,f14309,f455])).
fof(f16302,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f510,f274,f481,f14309,f455])).
fof(f16281,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f510,f14309,f481,f14309,f455])).
fof(f16279,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f513,f274,f481,f14309,f455])).
fof(f16257,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f9037,f481,f14309,f454])).
fof(f16255,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f513,f481,f14309,f454])).
fof(f16253,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f9036,f481,f14309,f454])).
fof(f16250,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f510,f481,f14309,f454])).
fof(f16216,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f9037,f481,f14309,f453])).
fof(f16214,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f513,f481,f14309,f453])).
fof(f16212,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f9036,f481,f14309,f453])).
fof(f16209,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f510,f481,f14309,f453])).
fof(f16175,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9020,f9037,f14309,f14309,f452])).
fof(f16173,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f513,f14309,f14309,f452])).
fof(f16171,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8748,f8773,f14309,f14309,f452])).
fof(f16169,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9017,f9036,f14309,f14309,f452])).
fof(f16167,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f687,f614,f14309,f14309,f452])).
fof(f16165,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f682,f510,f14309,f14309,f452])).
fof(f16163,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f687,f512,f14309,f14309,f452])).
fof(f16111,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9022,f14309,f14309,f452])).
fof(f16109,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9021,f14309,f14309,f452])).
fof(f16107,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9020,f14309,f14309,f452])).
fof(f16105,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f513,f8748,f14309,f14309,f452])).
fof(f16103,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f513,f687,f14309,f14309,f452])).
fof(f16101,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f513,f9017,f14309,f14309,f452])).
fof(f16099,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f513,f682,f14309,f14309,f452])).
fof(f16085,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9037,f9022,f274,f14309,f452])).
fof(f16083,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f513,f8748,f274,f14309,f452])).
fof(f16081,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f513,f687,f274,f14309,f452])).
fof(f16053,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1147,f481,f14309,f449])).
fof(f16037,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1067,f481,f481,f14309,f445])).
fof(f16019,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f14309,f444])).
fof(f16017,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f652,f274,f14309,f444])).
fof(f16004,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f14309,f444])).
fof(f16002,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f274,f14309,f444])).
fof(f15989,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f14309,f443])).
fof(f15987,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f649,f274,f14309,f443])).
fof(f15974,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f14309,f14309,f443])).
fof(f15972,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1087,f274,f14309,f443])).
fof(f15959,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1078,f14309,f440])).
fof(f15957,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1078,f14309,f439])).
fof(f15955,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f509,f481,f481,f14309,f438])).
fof(f15942,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8964,f8996,f481,f14309,f436])).
fof(f15940,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f649,f509,f481,f14309,f436])).
fof(f15938,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8726,f8734,f481,f14309,f436])).
fof(f15936,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f649,f506,f481,f14309,f436])).
fof(f15910,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8996,f8965,f481,f14309,f435])).
fof(f15908,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f509,f8728,f481,f14309,f435])).
fof(f15906,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f509,f652,f481,f14309,f435])).
fof(f15882,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1067,f481,f14309,f432])).
fof(f15864,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1067,f481,f14309,f431])).
fof(f15846,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f639,f481,f14309,f14309,f430])).
fof(f15828,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f639,f481,f274,f14309,f430])).
fof(f15814,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f639,f481,f14309,f14309,f430])).
fof(f15796,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f645,f481,f274,f14309,f430])).
fof(f15782,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f14309,f427])).
fof(f15780,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f636,f274,f14309,f14309,f427])).
fof(f15764,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f274,f14309,f427])).
fof(f15762,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1004,f274,f274,f14309,f427])).
fof(f15733,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f14309,f427])).
fof(f15731,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f14309,f14309,f427])).
fof(f15715,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f274,f14309,f427])).
fof(f15713,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f274,f14309,f427])).
fof(f15686,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f14309,f14309,f14309,f427])).
fof(f15684,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f634,f274,f14309,f14309,f427])).
fof(f15668,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f636,f14309,f274,f14309,f427])).
fof(f15666,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f636,f274,f274,f14309,f427])).
fof(f15640,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f995,f14309,f422])).
fof(f15638,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f14309,f481,f14309,f421])).
fof(f15636,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f274,f481,f14309,f421])).
fof(f15615,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f481,f14309,f14309,f421])).
fof(f15605,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f504,f481,f274,f14309,f421])).
fof(f15592,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f504,f8685,f14309,f14309,f417])).
fof(f15590,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f503,f8684,f14309,f14309,f417])).
fof(f15580,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8944,f14309,f14309,f417])).
fof(f15578,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f504,f636,f14309,f14309,f417])).
fof(f15576,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8942,f14309,f14309,f417])).
fof(f15574,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f634,f14309,f14309,f417])).
fof(f15564,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f503,f8684,f274,f14309,f417])).
fof(f15558,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8942,f274,f14309,f417])).
fof(f15556,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f634,f274,f14309,f417])).
fof(f15531,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f504,f8685,f14309,f14309,f417])).
fof(f15529,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f503,f8684,f14309,f14309,f417])).
fof(f15519,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8944,f14309,f14309,f417])).
fof(f15517,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f504,f636,f14309,f14309,f417])).
fof(f15515,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8951,f8942,f14309,f14309,f417])).
fof(f15513,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f503,f634,f14309,f14309,f417])).
fof(f15503,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f504,f8685,f274,f14309,f417])).
fof(f15498,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8952,f8944,f274,f14309,f417])).
fof(f15496,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f504,f636,f274,f14309,f417])).
fof(f15471,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f645,f481,f14309,f416])).
fof(f15453,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f639,f481,f14309,f415])).
fof(f15434,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10060,f8877,f14309,f412])).
fof(f15432,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9676,f8872,f14309,f412])).
fof(f15430,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9630,f8866,f14309,f412])).
fof(f15428,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f860,f523,f14309,f412])).
fof(f15425,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10021,f8877,f14309,f412])).
fof(f15423,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f9681,f8872,f14309,f412])).
fof(f15421,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f9635,f8866,f14309,f412])).
fof(f15419,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f862,f523,f14309,f412])).
fof(f15357,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1216,f389,f14309,f411])).
fof(f15355,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10124,f9103,f14309,f411])).
fof(f15353,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10949,f9672,f14309,f411])).
fof(f15351,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10719,f9626,f14309,f411])).
fof(f15348,plain,(
  $false | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12642,f8859,f14309,f411])).
fof(f15346,plain,(
  $false | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12434,f8854,f14309,f411])).
fof(f15344,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9186,f8626,f14309,f411])).
fof(f15342,plain,(
  $false | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5198,f2044,f14309,f411])).
fof(f15340,plain,(
  $false | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f4974,f1716,f14309,f411])).
fof(f15338,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1214,f389,f14309,f411])).
fof(f15336,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10160,f9103,f14309,f411])).
fof(f15334,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f10947,f9672,f14309,f411])).
fof(f15332,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10717,f9626,f14309,f411])).
fof(f15329,plain,(
  $false | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12640,f8859,f14309,f411])).
fof(f15327,plain,(
  $false | ($spl3 | $spl94)),
  inference(unit_resulting_resolution,[],[f12432,f8854,f14309,f411])).
fof(f15325,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9181,f8626,f14309,f411])).
fof(f15323,plain,(
  $false | ($spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f5196,f2044,f14309,f411])).
fof(f15321,plain,(
  $false | ($spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f4972,f1716,f14309,f411])).
fof(f16691,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(trivial_inequality_removal,[],[f15310])).
fof(f15310,plain,(
  s(bool,'F_0') != s(bool,'F_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f10088,f14309,f411])).
fof(f16690,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(trivial_inequality_removal,[],[f15309])).
fof(f15309,plain,(
  s(bool,'T_0') != s(bool,'T_0') | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9990,f14309,f411])).
fof(f16689,plain,(
  $false | ($spl4 | $spl94)),
  inference(trivial_inequality_removal,[],[f15306])).
fof(f15306,plain,(
  s(bool,sK14) != s(bool,sK14) | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f9191,f14309,f411])).
fof(f16688,plain,(
  $false | $spl94),
  inference(trivial_inequality_removal,[],[f15292])).
fof(f15292,plain,(
  s(bool,'F_0') != s(bool,'F_0') | $spl94),
  inference(unit_resulting_resolution,[],[f984,f14309,f411])).
fof(f16687,plain,(
  $false | $spl94),
  inference(trivial_inequality_removal,[],[f15286])).
fof(f15286,plain,(
  s(bool,'T_0') != s(bool,'T_0') | $spl94),
  inference(unit_resulting_resolution,[],[f980,f14309,f411])).
fof(f15268,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f971,f14309,f409])).
fof(f15266,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f971,f14309,f408])).
fof(f15264,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f971,f14309,f407])).
fof(f15262,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f954,f14309,f403])).
fof(f15260,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f493,f14309,f481,f14309,f402])).
fof(f15258,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10052,f274,f481,f14309,f402])).
fof(f15227,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f493,f481,f14309,f14309,f402])).
fof(f15213,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f494,f481,f274,f14309,f402])).
fof(f15194,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f926,f14309,f399])).
fof(f15192,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f489,f481,f14309,f14309,f398])).
fof(f15170,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f10902,f481,f274,f14309,f398])).
fof(f15147,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f489,f481,f14309,f14309,f398])).
fof(f15125,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f490,f481,f274,f14309,f398])).
fof(f15004,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f489,f8670,f14309,f395])).
fof(f15002,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f489,f8670,f14309,f395])).
fof(f15000,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f489,f8670,f14309,f395])).
fof(f14994,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f8655,f8670,f14309,f395])).
fof(f14992,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f8655,f8670,f14309,f395])).
fof(f14990,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f8655,f8670,f14309,f395])).
fof(f14956,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f607,f498,f14309,f395])).
fof(f14953,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f607,f498,f14309,f395])).
fof(f14949,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f8903,f498,f14309,f395])).
fof(f14947,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f8903,f498,f14309,f395])).
fof(f14944,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f489,f498,f14309,f395])).
fof(f14942,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f489,f498,f14309,f395])).
fof(f14940,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f489,f498,f14309,f395])).
fof(f14936,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f488,f498,f14309,f395])).
fof(f14934,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f488,f498,f14309,f395])).
fof(f14932,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f488,f498,f14309,f395])).
fof(f14930,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f488,f498,f14309,f395])).
fof(f14928,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f488,f498,f14309,f395])).
fof(f14896,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f8668,f607,f8669,f14309,f395])).
fof(f14894,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f607,f8669,f14309,f395])).
fof(f14883,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f489,f8669,f14309,f395])).
fof(f14881,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f489,f8669,f14309,f395])).
fof(f14875,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f493,f8655,f8669,f14309,f395])).
fof(f14873,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8640,f8668,f8655,f8669,f14309,f395])).
fof(f14870,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8681,f609,f488,f8669,f14309,f395])).
fof(f14867,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f493,f488,f8669,f14309,f395])).
fof(f14865,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8680,f8668,f488,f8669,f14309,f395])).
fof(f14826,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f492,f8903,f496,f14309,f395])).
fof(f14824,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f8903,f496,f14309,f395])).
fof(f14818,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f489,f496,f14309,f395])).
fof(f14816,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f489,f496,f14309,f395])).
fof(f14807,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f493,f8655,f496,f14309,f395])).
fof(f14805,plain,(
  $false | ($spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8639,f492,f8655,f496,f14309,f395])).
fof(f14801,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f8889,f8910,f488,f496,f14309,f395])).
fof(f14799,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f493,f488,f496,f14309,f395])).
fof(f14797,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f886,f492,f488,f496,f14309,f395])).
fof(f14684,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1389,f14309,f481,f14309,f394])).
fof(f14682,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1389,f274,f481,f14309,f394])).
fof(f14584,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f1389,f481,f14309,f14309,f394])).
fof(f14522,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f862,f481,f274,f14309,f394])).
fof(f14490,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f568,f481,f14309,f384])).
fof(f14477,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f568,f481,f14309,f381])).
fof(f14464,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f581,f14309,f14309,f380])).
fof(f14462,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f572,f274,f14309,f380])).
fof(f14436,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f581,f14309,f14309,f380])).
fof(f14434,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f581,f274,f14309,f380])).
fof(f14408,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f592,f14309,f366])).
fof(f14406,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f592,f14309,f365])).
fof(f14404,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f599,f14309,f363])).
fof(f14402,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8877,f14309,f363])).
fof(f14400,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8872,f14309,f363])).
fof(f14398,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8866,f14309,f363])).
fof(f14396,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f523,f14309,f363])).
fof(f14394,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f599,f14309,f363])).
fof(f14392,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8877,f14309,f363])).
fof(f14390,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8872,f14309,f363])).
fof(f14388,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8866,f14309,f363])).
fof(f14386,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f523,f14309,f363])).
fof(f14382,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f599,f14309,f363])).
fof(f14380,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8877,f14309,f363])).
fof(f14378,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8872,f14309,f363])).
fof(f14376,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f14309,f8866,f14309,f363])).
fof(f14374,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f14309,f523,f14309,f363])).
fof(f14372,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f599,f14309,f363])).
fof(f14370,plain,(
  $false | ($spl1 | $spl4 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8877,f14309,f363])).
fof(f14368,plain,(
  $false | ($spl3 | $spl9 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8872,f14309,f363])).
fof(f14366,plain,(
  $false | ($spl3 | $spl13 | $spl94)),
  inference(unit_resulting_resolution,[],[f274,f8866,f14309,f363])).
fof(f14364,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f274,f523,f14309,f363])).
fof(f14356,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f600,f14309,f296])).
fof(f14354,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f523,f14309,f293])).
fof(f14352,plain,(
  $false | $spl94),
  inference(unit_resulting_resolution,[],[f481,f14309])).
fof(f14310,plain,(
  ( ! [X10,X8,X9] : (sP1(sK14,happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10))) | s(bool,'T_0') = s(bool,X8)) ) | $spl96),
  inference(cnf_transformation,[],[f14310_D])).
fof(f14310_D,plain,(
  ( ! [X10,X8,X9] : (sP1(sK14,happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10))) | s(bool,'T_0') = s(bool,X8)) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f14311,plain,(
  ( ! [X14,X12,X13,X11] : (sP1(sK14,happ(s(fun(X13,bool),'_dst_x0_1'(s(bool,X12))),s(X13,X14))) | p(s(bool,X11)) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f14261,f292])).
fof(f14261,plain,(
  ( ! [X14,X12,X13,X11] : (sP1(sK14,happ(s(fun(X13,bool),'_dst_x0_1'(s(bool,X12))),s(X13,X14))) | p(s(bool,X11)) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X12)) ) | $spl4),
  inference(superposition,[],[f9878,f755])).
fof(f14308,plain,(
  ( ! [X10,X8,X7,X9] : (sP1(sK14,happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10))) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X8)) ) | $spl4),
  inference(subsumption_resolution,[],[f14260,f292])).
fof(f14260,plain,(
  ( ! [X10,X8,X7,X9] : (sP1(sK14,happ(s(fun(X9,bool),'_dst_x0_1'(s(bool,X8))),s(X9,X10))) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7)) ) | $spl4),
  inference(superposition,[],[f9878,f755])).
fof(f8569,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X2))))) ) | $spl80),
  inference(cnf_transformation,[],[f8569_D])).
fof(f8569_D,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X2))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f8593,plain,(
  ( ! [X23] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(sK13,X23,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X23),s(sK12,sK27(sK13,X23,sK12)))))) ) | $spl92),
  inference(cnf_transformation,[],[f8593_D])).
fof(f8593_D,plain,(
  ( ! [X23] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(sK13,X23,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X23),s(sK12,sK27(sK13,X23,sK12)))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f8592,plain,(
  ( ! [X23,X22] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(sK13,X23,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X22)))) | p(s(bool,happ(s(fun(sK12,bool),X23),s(sK12,sK27(sK13,X23,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8491,f478])).
fof(f8491,plain,(
  ( ! [X23,X22] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X22)))) | p(s(bool,happ(s(fun(sK12,bool),X23),s(sK12,sK27(sK13,X23,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK27(sK13,X23,sK12)))))) ) | $spl2),
  inference(superposition,[],[f359,f478])).
fof(f8591,plain,(
  ( ! [X21] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(X21,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X21),s(sK12,sK27(X21,sK13,sK12)))))) ) | $spl90),
  inference(cnf_transformation,[],[f8591_D])).
fof(f8591_D,plain,(
  ( ! [X21] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(X21,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X21),s(sK12,sK27(X21,sK13,sK12)))))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f8590,plain,(
  ( ! [X21,X20] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK27(X21,sK13,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X20)))) | p(s(bool,happ(s(fun(sK12,bool),X21),s(sK12,sK27(X21,sK13,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8490,f478])).
fof(f8490,plain,(
  ( ! [X21,X20] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X20)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK27(X21,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X21),s(sK12,sK27(X21,sK13,sK12)))))) ) | $spl2),
  inference(superposition,[],[f358,f478])).
fof(f8589,plain,(
  ( ! [X19] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK26(sK13,X19,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X19),s(sK12,sK25(sK13,X19,sK12)))))) ) | $spl88),
  inference(cnf_transformation,[],[f8589_D])).
fof(f8589_D,plain,(
  ( ! [X19] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK26(sK13,X19,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X19),s(sK12,sK25(sK13,X19,sK12)))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f8588,plain,(
  ( ! [X19,X18] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK26(sK13,X19,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X18)))) | p(s(bool,happ(s(fun(sK12,bool),X19),s(sK12,sK25(sK13,X19,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8489,f478])).
fof(f8489,plain,(
  ( ! [X19,X18] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X18)))) | p(s(bool,happ(s(fun(sK12,bool),X19),s(sK12,sK25(sK13,X19,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK26(sK13,X19,sK12)))))) ) | $spl2),
  inference(superposition,[],[f357,f478])).
fof(f8587,plain,(
  ( ! [X17] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK25(X17,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X17),s(sK12,sK26(X17,sK13,sK12)))))) ) | $spl86),
  inference(cnf_transformation,[],[f8587_D])).
fof(f8587_D,plain,(
  ( ! [X17] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK25(X17,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X17),s(sK12,sK26(X17,sK13,sK12)))))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f8586,plain,(
  ( ! [X17,X16] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK25(X17,sK13,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X16)))) | p(s(bool,happ(s(fun(sK12,bool),X17),s(sK12,sK26(X17,sK13,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8488,f478])).
fof(f8488,plain,(
  ( ! [X17,X16] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X16)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK25(X17,sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),X17),s(sK12,sK26(X17,sK13,sK12)))))) ) | $spl2),
  inference(superposition,[],[f356,f478])).
fof(f8574,plain,(
  p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK18(sK13,sK12))))) | $spl84),
  inference(cnf_transformation,[],[f8574_D])).
fof(f8574_D,plain,(
  p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK18(sK13,sK12))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f8572,plain,(
  ( ! [X3] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK18(sK13,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X3))))) ) | $spl2),
  inference(forward_demodulation,[],[f8478,f478])).
fof(f8478,plain,(
  ( ! [X3] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X3)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK18(sK13,sK12)))))) ) | $spl2),
  inference(superposition,[],[f337,f478])).
fof(f8571,plain,(
  p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK17(sK13,sK12))))) | $spl82),
  inference(cnf_transformation,[],[f8571_D])).
fof(f8571_D,plain,(
  p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK17(sK13,sK12))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f8568,plain,(
  ( ! [X2] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK17(sK13,sK12))))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X2))))) ) | $spl2),
  inference(forward_demodulation,[],[f8477,f478])).
fof(f8477,plain,(
  ( ! [X2] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X2)))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,sK17(sK13,sK12)))))) ) | $spl2),
  inference(superposition,[],[f336,f478])).
fof(f8567,plain,(
  ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK16(sK13,sK12))))) | $spl79),
  inference(cnf_transformation,[],[f8567_D])).
fof(f8567_D,plain,(
  ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK16(sK13,sK12))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f8564,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) | $spl76),
  inference(cnf_transformation,[],[f8564_D])).
fof(f8564_D,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f8565,plain,(
  ( ! [X1] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X1)))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK16(sK13,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8476,f478])).
fof(f8476,plain,(
  ( ! [X1] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK16(sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X1))))) ) | $spl2),
  inference(superposition,[],[f335,f478])).
fof(f8563,plain,(
  ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK15(sK13,sK12))))) | $spl75),
  inference(cnf_transformation,[],[f8563_D])).
fof(f8563_D,plain,(
  ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK15(sK13,sK12))))) <=> ~$spl75),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl75])])).
fof(f8561,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,X0)))) | ~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK15(sK13,sK12)))))) ) | $spl2),
  inference(forward_demodulation,[],[f8475,f478])).
fof(f8475,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun(sK12,bool),'const.pred_set.EMPTY_0'),s(sK12,sK15(sK13,sK12))))) | p(s(bool,happ(s(fun(sK12,bool),sK13),s(sK12,X0))))) ) | $spl2),
  inference(superposition,[],[f334,f478])).
fof(f8467,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f8466,f481])).
fof(f8466,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f8223,f389])).
fof(f8223,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(sK12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(sK12,sK20(happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),'_dst_x0_1'(s(bool,'F_0'))))),s(X0,X1)),sK13,sK12)))))) ) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f8194,f1595])).
fof(f8194,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'F_0')))))) | ($spl0 | $spl5)),
  inference(backward_demodulation,[],[f8193,f475])).
fof(f8193,plain,(
  s(bool,'F_0') = s(bool,sK14) | $spl5),
  inference(forward_demodulation,[],[f8158,f600])).
fof(f8158,plain,(
  ( ! [X0,X1] : (s(bool,sK14) = s(bool,'const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')))) ) | $spl5),
  inference(unit_resulting_resolution,[],[f599,f480,f818])).
fof(f8465,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f8464,f481])).
fof(f8464,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f8224,f389])).
fof(f8224,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(sK12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(sK12,sK20('_dst_x0_1'(s(bool,'F_0')),happ(s(fun(X0,fun(sK12,bool)),'_dst_x0_1'(s(fun(sK12,bool),sK13))),s(X0,X1)),sK12)))))) ) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f8194,f1591])).
fof(f8463,plain,(
  $false | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f8462,f481])).
fof(f8462,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl5)),
  inference(forward_demodulation,[],[f8227,f389])).
fof(f8227,plain,(
  p(s(bool,happ(s(fun(sK12,bool),'_dst_x0_1'(s(bool,'F_0'))),s(sK12,sK20('_dst_x0_1'(s(bool,'F_0')),sK13,sK12))))) | ($spl0 | $spl5)),
  inference(unit_resulting_resolution,[],[f8194,f346])).
fof(f7935,plain,(
  ( ! [X2,X3,X1] : (~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1) | p(s(bool,X1))) ) | $spl72),
  inference(cnf_transformation,[],[f7935_D])).
fof(f7935_D,plain,(
  ( ! [X2,X3,X1] : (~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1) | p(s(bool,X1))) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f7937,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) ) | $spl4),
  inference(condensation,[],[f7936])).
fof(f7936,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | ~sP4(sK14,happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(subsumption_resolution,[],[f7918,f818])).
fof(f7918,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | ~sP4(sK14,happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) ) | $spl4),
  inference(superposition,[],[f6290,f755])).
fof(f7934,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | ~sP4(sK14,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) ) | $spl4),
  inference(condensation,[],[f7933])).
fof(f7933,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | ~sP4(sK14,happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27)),X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) ) | $spl4),
  inference(subsumption_resolution,[],[f7917,f818])).
fof(f7917,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | ~sP4(sK14,happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27)),X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) ) | $spl4),
  inference(superposition,[],[f6290,f755])).
fof(f7296,plain,(
  ( ! [X4,X2,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) ) | $spl70),
  inference(cnf_transformation,[],[f7296_D])).
fof(f7296_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) ) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f7298,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) )),
  inference(condensation,[],[f7297])).
fof(f7297,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK24(happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X44,X45)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X46)))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7280,f818])).
fof(f7280,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,X41)) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK24(happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X44,X45)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X46)))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f1669,f755])).
fof(f7295,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) )),
  inference(condensation,[],[f7294])).
fof(f7294,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK24(happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X39)))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f7279,f818])).
fof(f7279,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK24(happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X39)))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1669,f755])).
fof(f7252,plain,(
  ( ! [X4,X2,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) ) | $spl68),
  inference(cnf_transformation,[],[f7252_D])).
fof(f7252_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f7254,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) )),
  inference(condensation,[],[f7253])).
fof(f7253,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK23(happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X44,X45)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X46)))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7236,f818])).
fof(f7236,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,X41)) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK23(happ(s(fun(X44,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X44,X45)),X43,X42))))) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X46)))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f1642,f755])).
fof(f7251,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X5))))) )),
  inference(condensation,[],[f7250])).
fof(f7250,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK23(happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X39)))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f7235,f818])).
fof(f7235,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,X34)) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK23(happ(s(fun(X37,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X37,X38)),X36,X35))))) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X39)))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1642,f755])).
fof(f7052,plain,(
  ( ! [X4,X2,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) ) | $spl66),
  inference(cnf_transformation,[],[f7052_D])).
fof(f7052_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) ) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f7054,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) )),
  inference(condensation,[],[f7053])).
fof(f7053,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK22(X43,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),X42))))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f7037,f818])).
fof(f7037,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,X41)) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK22(X43,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),X42))))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f1626,f755])).
fof(f7051,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) )),
  inference(condensation,[],[f7050])).
fof(f7050,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK22(X36,happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X35))))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f7036,f818])).
fof(f7036,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,X34)) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK22(X36,happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X35))))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1626,f755])).
fof(f7009,plain,(
  ( ! [X4,X2,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) ) | $spl64),
  inference(cnf_transformation,[],[f7009_D])).
fof(f7009_D,plain,(
  ( ! [X4,X2,X5,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f7011,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) )),
  inference(condensation,[],[f7010])).
fof(f7010,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK21(X43,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),X42))))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(subsumption_resolution,[],[f6994,f818])).
fof(f6994,plain,(
  ( ! [X47,X45,X43,X41,X46,X44,X42] : (~p(s(bool,X41)) | ~p(s(bool,happ(s(fun(X42,bool),X43),s(X42,X44)))) | p(s(bool,happ(s(fun(X42,bool),X43),s(X42,sK21(X43,happ(s(fun(X45,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X45,X46)),X42))))) | s(bool,X41) = s(bool,X47) | s(bool,'T_0') = s(bool,X47)) )),
  inference(superposition,[],[f1609,f755])).
fof(f7008,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,happ(s(fun(X4,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X4,X5)),X1)))))) )),
  inference(condensation,[],[f7007])).
fof(f7007,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK21(X36,happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X35))))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6993,f818])).
fof(f6993,plain,(
  ( ! [X39,X37,X35,X38,X36,X34,X40] : (~p(s(bool,X34)) | ~p(s(bool,happ(s(fun(X35,bool),X36),s(X35,X37)))) | p(s(bool,happ(s(fun(X35,bool),X36),s(X35,sK21(X36,happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X35))))) | s(bool,X34) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1609,f755])).
fof(f6644,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK28(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK28(X0,X1,bool,bool))))) ) | $spl60),
  inference(cnf_transformation,[],[f6644_D])).
fof(f6644_D,plain,(
  ( ! [X2,X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X2) = s(bool,sK28(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,sK28(X0,X1,bool,bool))))) ) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f6646,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | $spl63),
  inference(cnf_transformation,[],[f6646_D])).
fof(f6646_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f6630,plain,(
  ( ! [X4,X5,X3] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,g(s(bool,sK28(X3,X4,bool,bool)))) | s(bool,X5) = s(bool,sK28(X3,X4,bool,bool)) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1706,f755])).
fof(f6629,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,f(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,g(s(bool,sK28(X0,X1,bool,bool)))) | s(bool,X2) = s(bool,sK28(X0,X1,bool,bool)) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1706,f755])).
fof(f6614,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl54),
  inference(cnf_transformation,[],[f6614_D])).
fof(f6614_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f6610,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK28(X0,X1,bool,bool))) ) | $spl50),
  inference(cnf_transformation,[],[f6610_D])).
fof(f6610_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK28(X0,X1,bool,bool))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f6617,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl59),
  inference(cnf_transformation,[],[f6617_D])).
fof(f6617_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f6608,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK28(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1705,f281])).
fof(f6615,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl56),
  inference(cnf_transformation,[],[f6615_D])).
fof(f6615_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f6607,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK28(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f1705,f755])).
fof(f6606,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK28(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f1705,f755])).
fof(f6609,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl48),
  inference(cnf_transformation,[],[f6609_D])).
fof(f6609_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f6612,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl53),
  inference(cnf_transformation,[],[f6612_D])).
fof(f6612_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f6605,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK28(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f1705,f755])).
fof(f6604,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK28(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1705,f755])).
fof(f6490,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,'T_0') | p(s(bool,X2))) ) | $spl46),
  inference(cnf_transformation,[],[f6490_D])).
fof(f6490_D,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,'T_0') | p(s(bool,X2))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f6492,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,'T_0')) )),
  inference(condensation,[],[f6491])).
fof(f6491,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP11(happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39)),X37,'T_0') | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6476,f818])).
fof(f6476,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP11(happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39)),X37,'T_0') | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1244,f755])).
fof(f6489,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2,'T_0')) )),
  inference(condensation,[],[f6488])).
fof(f6488,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11(happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33)),X31,'T_0') | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f6475,f818])).
fof(f6475,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP11(happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33)),X31,'T_0') | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1244,f755])).
fof(f6448,plain,(
  ( ! [X4,X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1)) ) | $spl44),
  inference(cnf_transformation,[],[f6448_D])).
fof(f6448_D,plain,(
  ( ! [X4,X2,X3,X1] : (p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1)) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f6450,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1)) )),
  inference(condensation,[],[f6449])).
fof(f6449,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (p(s(bool,X36)) | p(s(bool,X37)) | ~sP9(happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X37,X36) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6434,f818])).
fof(f6434,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X35)) | p(s(bool,X36)) | p(s(bool,X37)) | ~sP9(happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X38,X39)),X37,X36) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1243,f755])).
fof(f6447,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9(happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X3,X4)),X2,X1)) )),
  inference(condensation,[],[f6446])).
fof(f6446,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (p(s(bool,X30)) | p(s(bool,X31)) | ~sP9(happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)),X31,X30) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f6433,f818])).
fof(f6433,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | p(s(bool,X31)) | ~sP9(happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)),X31,X30) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1243,f755])).
fof(f6383,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)))) ) | $spl42),
  inference(cnf_transformation,[],[f6383_D])).
fof(f6383_D,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f6385,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)))) )),
  inference(condensation,[],[f6384])).
fof(f6384,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP7(X37,'T_0',happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39))) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6368,f818])).
fof(f6368,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP7(X37,'T_0',happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39))) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1242,f755])).
fof(f6382,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,'T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)))) )),
  inference(condensation,[],[f6381])).
fof(f6381,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33))) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f6367,f818])).
fof(f6367,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP7(X31,'T_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33))) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1242,f755])).
fof(f6284,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2) | p(s(bool,X2))) ) | $spl40),
  inference(cnf_transformation,[],[f6284_D])).
fof(f6284_D,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,X1)) | ~sP4('T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2) | p(s(bool,X2))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f6286,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2)) )),
  inference(condensation,[],[f6285])).
fof(f6285,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4('T_0',happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39)),X37) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(subsumption_resolution,[],[f6267,f818])).
fof(f6267,plain,(
  ( ! [X39,X37,X35,X38,X36,X40] : (~p(s(bool,X35)) | ~p(s(bool,X36)) | p(s(bool,X37)) | ~sP4('T_0',happ(s(fun(X38,bool),'_dst_x0_1'(s(bool,X36))),s(X38,X39)),X37) | s(bool,X35) = s(bool,X40) | s(bool,'T_0') = s(bool,X40)) )),
  inference(superposition,[],[f1241,f755])).
fof(f6283,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4('T_0',happ(s(fun(X3,bool),'_dst_x0_1'(s(bool,X1))),s(X3,X4)),X2)) )),
  inference(condensation,[],[f6282])).
fof(f6282,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33)),X31) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(subsumption_resolution,[],[f6266,f818])).
fof(f6266,plain,(
  ( ! [X30,X33,X31,X29,X34,X32] : (~p(s(bool,X29)) | ~p(s(bool,X30)) | p(s(bool,X31)) | ~sP4('T_0',happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,X30))),s(X32,X33)),X31) | s(bool,X29) = s(bool,X34) | s(bool,'T_0') = s(bool,X34)) )),
  inference(superposition,[],[f1241,f755])).
fof(f5939,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) | $spl38),
  inference(cnf_transformation,[],[f5939_D])).
fof(f5939_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f5941,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) )),
  inference(condensation,[],[f5940])).
fof(f5940,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP1(X30,happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5926,f818])).
fof(f5926,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1(X30,happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1240,f755])).
fof(f5938,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)))) )),
  inference(condensation,[],[f5937])).
fof(f5937,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP1(X25,happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5925,f818])).
fof(f5925,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP1(X25,happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1240,f755])).
fof(f5901,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) ) | $spl36),
  inference(cnf_transformation,[],[f5901_D])).
fof(f5901_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f5903,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) )),
  inference(condensation,[],[f5902])).
fof(f5902,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,X30)) | sP1(happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f5888,f818])).
fof(f5888,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,X30)) | sP1(happ(s(fun(X31,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X31,X32)),X30) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f1239,f755])).
fof(f5900,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),X1)) )),
  inference(condensation,[],[f5899])).
fof(f5899,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,X25)) | sP1(happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27)),X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f5887,f818])).
fof(f5887,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,X25)) | sP1(happ(s(fun(X26,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X26,X27)),X25) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1239,f755])).
fof(f4180,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002,f4175,f4177,f4179])).
fof(f4179,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | $spl16),
  inference(subsumption_resolution,[],[f4070,f3877])).
fof(f4070,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X4,X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f1777])).
fof(f4177,plain,(
  ( ! [X4,X2,X0] : (s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | $spl16),
  inference(subsumption_resolution,[],[f4069,f3877])).
fof(f4069,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X4,happ(s(fun(X1,fun(X0,bool)),'_dst_x0_1'(s(fun(X0,bool),X2))),s(X1,X3)),X0)),s(fun(X0,bool),X2))) | s(fun(X0,bool),X2) = s(fun(X0,bool),X4)) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f1776])).
fof(f4175,plain,(
  ( ! [X2,X0,X1] : (s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(subsumption_resolution,[],[f4068,f3877])).
fof(f4068,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X0,sK19(X2,X1,X0)),s(fun(X0,bool),X1))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2)) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f344])).
fof(f4002,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2319])).
fof(f3997,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X3)),'const.bool.IN_2'(s(X1,X2),s(fun(X1,bool),'const.pred_set.EMPTY_0')),'F_0')) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2297])).
fof(f3996,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0','const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)))) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2286])).
fof(f3992,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0','F_0')) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2279])).
fof(f3991,plain,(
  ( ! [X12,X10,X13,X11] : (sP5('T_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2253])).
fof(f3986,plain,(
  ( ! [X2,X0,X3,X1] : (~sP2('const.bool.IN_2'(s(X0,X1),s(fun(X0,bool),'const.pred_set.EMPTY_0')),happ(s(fun(X2,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X2,X3)),'F_0')) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2227])).
fof(f3985,plain,(
  ( ! [X12,X10,X13,X11] : (~sP5('F_0',happ(s(fun(X12,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X12,X13)),'const.bool.IN_2'(s(X10,X11),s(fun(X10,bool),'const.pred_set.EMPTY_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2217])).
fof(f3981,plain,(
  ( ! [X0,X1] : (~sP2('F_0',happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2207])).
fof(f4091,plain,(
  ( ! [X8,X7] : (s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | $spl16),
  inference(subsumption_resolution,[],[f3980,f3877])).
fof(f3980,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X7,sK19('const.pred_set.EMPTY_0',X8,X7)),s(fun(X7,bool),X8))) | s(fun(X7,bool),'const.pred_set.EMPTY_0') = s(fun(X7,bool),X8)) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2121])).
fof(f4089,plain,(
  ( ! [X6,X5] : (s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | $spl16),
  inference(subsumption_resolution,[],[f3979,f3877])).
fof(f3979,plain,(
  ( ! [X6,X5] : (s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(X5,sK19(X6,'const.pred_set.EMPTY_0',X5)),s(fun(X5,bool),X6))) | s(fun(X5,bool),'const.pred_set.EMPTY_0') = s(fun(X5,bool),X6)) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f2120])).
fof(f4084,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl16),
  inference(subsumption_resolution,[],[f3960,f3877])).
fof(f3960,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | ~p(s(bool,X0))) ) | $spl16),
  inference(backward_demodulation,[],[f3877,f296])).
fof(f4178,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002,f4175,f4177])).
fof(f4176,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002,f4175])).
fof(f4114,plain,(
  $false | ($spl3 | $spl13 | $spl16)),
  inference(global_subsumption,[],[f4006,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002])).
fof(f4006,plain,(
  ( ! [X35,X34] : (sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X34,X35)))) ) | ($spl3 | $spl13 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2410])).
fof(f2410,plain,(
  ( ! [X35,X34] : (sP5('T_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X34,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X34,X35)))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1217,f2061])).
fof(f2061,plain,(
  s(bool,'F_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(unit_resulting_resolution,[],[f2056,f281])).
fof(f2056,plain,(
  s(bool,'T_0') != s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | ($spl3 | $spl13)),
  inference(backward_demodulation,[],[f2044,f1704])).
fof(f4113,plain,(
  $false | ($spl3 | $spl13 | $spl16)),
  inference(global_subsumption,[],[f4005,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002])).
fof(f4005,plain,(
  ( ! [X33,X32] : (~sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X32,X33)))) ) | ($spl3 | $spl13 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2409])).
fof(f2409,plain,(
  ( ! [X33,X32] : (~sP5('F_0',g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))),happ(s(fun(X32,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X32,X33)))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1216,f2061])).
fof(f4112,plain,(
  $false | ($spl3 | $spl13 | $spl16)),
  inference(global_subsumption,[],[f4004,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002])).
fof(f4004,plain,(
  ( ! [X30,X31] : (sP5('T_0',happ(s(fun(X30,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X30,X31)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2408])).
fof(f2408,plain,(
  ( ! [X30,X31] : (sP5('T_0',happ(s(fun(X30,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X30,X31)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1215,f2061])).
fof(f4111,plain,(
  $false | ($spl3 | $spl13 | $spl16)),
  inference(global_subsumption,[],[f4003,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002])).
fof(f4003,plain,(
  ( ! [X28,X29] : (~sP5('F_0',happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X28,X29)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2407])).
fof(f2407,plain,(
  ( ! [X28,X29] : (~sP5('F_0',happ(s(fun(X28,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X28,X29)),g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12))))) ) | ($spl3 | $spl13)),
  inference(superposition,[],[f1214,f2061])).
fof(f4110,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997,f4002])).
fof(f4109,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f4001,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997])).
fof(f4001,plain,(
  ( ! [X8,X9] : (sP5('T_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X8,X9)))) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2318])).
fof(f4108,plain,(
  $false | ($spl3 | $spl9 | $spl16)),
  inference(global_subsumption,[],[f4000,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997])).
fof(f4000,plain,(
  ( ! [X6,X7] : (sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X6,X7)))) ) | ($spl3 | $spl9 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2317])).
fof(f2317,plain,(
  ( ! [X6,X7] : (sP5('T_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X6,X7)))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1217,f1804])).
fof(f1804,plain,(
  s(bool,'F_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(unit_resulting_resolution,[],[f1728,f281])).
fof(f1728,plain,(
  s(bool,'T_0') != s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | ($spl3 | $spl9)),
  inference(backward_demodulation,[],[f1716,f1703])).
fof(f4107,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f3998,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997])).
fof(f3998,plain,(
  ( ! [X0,X1] : (~sP2(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),'F_0')) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2298])).
fof(f4106,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996,f3997])).
fof(f4105,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992,f3996])).
fof(f4104,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f3995,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992])).
fof(f3995,plain,(
  ( ! [X8,X9] : (~sP5('F_0','const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X8,X9)))) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2285])).
fof(f4103,plain,(
  $false | ($spl3 | $spl9 | $spl16)),
  inference(global_subsumption,[],[f3994,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992])).
fof(f3994,plain,(
  ( ! [X6,X7] : (~sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X6,X7)))) ) | ($spl3 | $spl9 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2284])).
fof(f2284,plain,(
  ( ! [X6,X7] : (~sP5('F_0',g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))),happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X6,X7)))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1216,f1804])).
fof(f4102,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991,f3992])).
fof(f4101,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986,f3991])).
fof(f4100,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f3990,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986])).
fof(f3990,plain,(
  ( ! [X8,X9] : (sP5('T_0',happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X8,X9)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2252])).
fof(f4099,plain,(
  $false | ($spl3 | $spl9 | $spl16)),
  inference(global_subsumption,[],[f3989,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986])).
fof(f3989,plain,(
  ( ! [X6,X7] : (sP5('T_0',happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X6,X7)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2251])).
fof(f2251,plain,(
  ( ! [X6,X7] : (sP5('T_0',happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X6,X7)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1215,f1804])).
fof(f4098,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f3987,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986])).
fof(f3987,plain,(
  ( ! [X0,X1] : (~sP2('const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))),happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),'F_0')) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2228])).
fof(f4097,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985,f3986])).
fof(f4096,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981,f3985])).
fof(f4095,plain,(
  $false | ($spl1 | $spl4 | $spl16)),
  inference(global_subsumption,[],[f3984,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981])).
fof(f3984,plain,(
  ( ! [X8,X9] : (~sP5('F_0',happ(s(fun(X8,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X8,X9)),'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,'T_0')))))) ) | ($spl1 | $spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2216])).
fof(f4094,plain,(
  $false | ($spl3 | $spl9 | $spl16)),
  inference(global_subsumption,[],[f3983,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981])).
fof(f3983,plain,(
  ( ! [X6,X7] : (~sP5('F_0',happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X6,X7)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9 | $spl16)),
  inference(backward_demodulation,[],[f3877,f2215])).
fof(f2215,plain,(
  ( ! [X6,X7] : (~sP5('F_0',happ(s(fun(X6,bool),'_dst_x0_1'(s(bool,'F_0'))),s(X6,X7)),g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12))))) ) | ($spl3 | $spl9)),
  inference(superposition,[],[f1214,f1804])).
fof(f4093,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091,f3981])).
fof(f4092,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089,f4091])).
fof(f4090,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084,f4089])).
fof(f4088,plain,(
  $false | ($spl4 | $spl16)),
  inference(global_subsumption,[],[f3969,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084])).
fof(f3969,plain,(
  ( ! [X0,X1] : (sP1(happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)),sK14)) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f1644])).
fof(f4087,plain,(
  $false | ($spl4 | $spl16)),
  inference(global_subsumption,[],[f3966,f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084])).
fof(f3966,plain,(
  ( ! [X0,X1] : (sP1(sK14,happ(s(fun(X0,bool),'_dst_x0_1'(s(bool,'T_0'))),s(X0,X1)))) ) | ($spl4 | $spl16)),
  inference(backward_demodulation,[],[f3877,f1275])).
fof(f4086,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f3962,f274])).
fof(f3962,plain,(
  ~p(s(bool,'T_0')) | $spl16),
  inference(backward_demodulation,[],[f3877,f481])).
fof(f4085,plain,(
  $false | $spl16),
  inference(global_subsumption,[],[f273,f272,f271,f274,f481,f281,f293,f292,f297,f296,f335,f334,f337,f336,f340,f344,f343,f347,f346,f345,f351,f349,f354,f352,f359,f358,f357,f356,f363,f360,f366,f365,f482,f384,f381,f380,f379,f389,f390,f397,f396,f395,f394,f393,f392,f391,f401,f400,f399,f398,f405,f404,f403,f402,f409,f408,f407,f406,f413,f412,f411,f410,f467,f417,f416,f415,f414,f424,f423,f422,f421,f430,f427,f426,f425,f437,f436,f435,f466,f433,f432,f431,f441,f440,f439,f438,f445,f444,f443,f442,f454,f453,f452,f465,f450,f449,f448,f458,f457,f456,f455,f462,f461,f460,f459,f484,f486,f488,f489,f490,f492,f493,f494,f496,f498,f500,f502,f503,f504,f506,f508,f509,f510,f512,f513,f523,f568,f569,f572,f581,f592,f621,f620,f616,f615,f614,f613,f612,f611,f610,f609,f608,f607,f606,f605,f604,f603,f601,f600,f599,f634,f636,f639,f645,f649,f652,f672,f678,f682,f687,f694,f704,f755,f818,f862,f860,f886,f883,f926,f954,f971,f980,f984,f988,f995,f1004,f1067,f1078,f1087,f1147,f1157,f1166,f1178,f1186,f1217,f1216,f1215,f1214,f1228,f1237,f1238,f1239,f1240,f1241,f1242,f1243,f1244,f1340,f1325,f1323,f1319,f1393,f1389,f1461,f1488,f1485,f1504,f1501,f1527,f1556,f1580,f1577,f1591,f1595,f1609,f1626,f1642,f1669,f1705,f1706,f1747,f1748,f1776,f1769,f1770,f1777,f1772,f1794,f1824,f1834,f1852,f1994,f2013,f2033,f2082,f2079,f2108,f2107,f2106,f2112,f2120,f2121,f2210,f2227,f2207,f2213,f2214,f2217,f2219,f2246,f2249,f2250,f2253,f2255,f2279,f2278,f2297,f2282,f2283,f2286,f2312,f2315,f2316,f2319,f2357,f2368,f2471,f2596,f2611,f2625,f2664,f2665,f2666,f2667,f2732,f2733,f2739,f2783,f2785,f2786,f2787,f2788,f2938,f3875,f3879,f3882,f3885,f3892,f3895,f3898,f3901,f3904,f3907,f2995,f2996,f2997,f2998,f3007,f3014,f3909,f3910,f3911,f3912,f3913,f3914,f3915,f3916,f3917,f3918,f3919,f3920,f3921,f3922,f3074,f3075,f3076,f3077,f3923,f3924,f3925,f3926,f3927,f3928,f3929,f3930,f3931,f3932,f3933,f3934,f3935,f3142,f3143,f3148,f3192,f3194,f3195,f3196,f3197,f3937,f3939,f3941,f3943,f3949,f3951,f3953,f3955,f3957,f3959,f3877,f4084])).
fof(f3908,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl34),
  inference(cnf_transformation,[],[f3908_D])).
fof(f3908_D,plain,(
  ( ! [X2,X1] : (~sP11('T_0',X2,X1) | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f3959,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3958])).
fof(f3958,plain,(
  ( ! [X163,X161,X164,X162] : (~p(s(bool,X162)) | p(s(bool,X163)) | ~sP11('T_0',X163,X162) | s(bool,X161) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(subsumption_resolution,[],[f3252,f818])).
fof(f3252,plain,(
  ( ! [X163,X161,X164,X162] : (~p(s(bool,X161)) | ~p(s(bool,X162)) | p(s(bool,X163)) | ~sP11('T_0',X163,X162) | s(bool,X161) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(superposition,[],[f462,f755])).
fof(f3905,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) | $spl32),
  inference(cnf_transformation,[],[f3905_D])).
fof(f3905_D,plain,(
  ( ! [X2,X1] : (~sP9('T_0',X2,X1) | p(s(bool,X2)) | p(s(bool,X1))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f3957,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3956])).
fof(f3956,plain,(
  ( ! [X158,X159,X157,X160] : (p(s(bool,X158)) | p(s(bool,X159)) | ~sP9('T_0',X159,X158) | s(bool,X157) = s(bool,X160) | s(bool,'T_0') = s(bool,X160)) )),
  inference(subsumption_resolution,[],[f3251,f818])).
fof(f3251,plain,(
  ( ! [X158,X159,X157,X160] : (~p(s(bool,X157)) | p(s(bool,X158)) | p(s(bool,X159)) | ~sP9('T_0',X159,X158) | s(bool,X157) = s(bool,X160) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f445,f755])).
fof(f3902,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) | $spl30),
  inference(cnf_transformation,[],[f3902_D])).
fof(f3902_D,plain,(
  ( ! [X2,X1] : (~sP7(X2,X1,'T_0') | p(s(bool,X2)) | ~p(s(bool,X1))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f3955,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f3954])).
fof(f3954,plain,(
  ( ! [X156,X154,X155,X153] : (~p(s(bool,X154)) | p(s(bool,X155)) | ~sP7(X155,X154,'T_0') | s(bool,X153) = s(bool,X156) | s(bool,'T_0') = s(bool,X156)) )),
  inference(subsumption_resolution,[],[f3250,f818])).
fof(f3250,plain,(
  ( ! [X156,X154,X155,X153] : (~p(s(bool,X153)) | ~p(s(bool,X154)) | p(s(bool,X155)) | ~sP7(X155,X154,'T_0') | s(bool,X153) = s(bool,X156) | s(bool,'T_0') = s(bool,X156)) )),
  inference(superposition,[],[f430,f755])).
fof(f3899,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) | $spl28),
  inference(cnf_transformation,[],[f3899_D])).
fof(f3899_D,plain,(
  ( ! [X2,X1] : (~sP4(X1,'T_0',X2) | ~p(s(bool,X1)) | p(s(bool,X2))) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f3953,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3952])).
fof(f3952,plain,(
  ( ! [X152,X151,X149,X150] : (~p(s(bool,X150)) | p(s(bool,X151)) | ~sP4(X150,'T_0',X151) | s(bool,X149) = s(bool,X152) | s(bool,'T_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f3249,f818])).
fof(f3249,plain,(
  ( ! [X152,X151,X149,X150] : (~p(s(bool,X149)) | ~p(s(bool,X150)) | p(s(bool,X151)) | ~sP4(X150,'T_0',X151) | s(bool,X149) = s(bool,X152) | s(bool,'T_0') = s(bool,X152)) )),
  inference(superposition,[],[f398,f755])).
fof(f3896,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) | $spl26),
  inference(cnf_transformation,[],[f3896_D])).
fof(f3896_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1(X1,'T_0')) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f3951,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f3950])).
fof(f3950,plain,(
  ( ! [X146,X147,X148] : (p(s(bool,X147)) | sP1(X147,'T_0') | s(bool,X146) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(subsumption_resolution,[],[f3248,f818])).
fof(f3248,plain,(
  ( ! [X146,X147,X148] : (~p(s(bool,X146)) | p(s(bool,X147)) | sP1(X147,'T_0') | s(bool,X146) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f384,f755])).
fof(f3893,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) | $spl24),
  inference(cnf_transformation,[],[f3893_D])).
fof(f3893_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | sP1('T_0',X1)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3949,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f3948])).
fof(f3948,plain,(
  ( ! [X144,X145,X143] : (p(s(bool,X144)) | sP1('T_0',X144) | s(bool,X143) = s(bool,X145) | s(bool,'T_0') = s(bool,X145)) )),
  inference(subsumption_resolution,[],[f3247,f818])).
fof(f3247,plain,(
  ( ! [X144,X145,X143] : (~p(s(bool,X143)) | p(s(bool,X144)) | sP1('T_0',X144) | s(bool,X143) = s(bool,X145) | s(bool,'T_0') = s(bool,X145)) )),
  inference(superposition,[],[f381,f755])).
fof(f3886,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl22),
  inference(cnf_transformation,[],[f3886_D])).
fof(f3886_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f3943,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f3942])).
fof(f3942,plain,(
  ( ! [X127,X125,X123,X126,X124] : (p(s(bool,happ(s(fun(X124,bool),X125),s(X124,sK24('T_0',X125,X124))))) | ~p(s(bool,happ(s(fun(X124,bool),X125),s(X124,X126)))) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,X127)) )),
  inference(subsumption_resolution,[],[f3241,f818])).
fof(f3241,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,X123)) | p(s(bool,happ(s(fun(X124,bool),X125),s(X124,sK24('T_0',X125,X124))))) | ~p(s(bool,happ(s(fun(X124,bool),X125),s(X124,X126)))) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,X127)) )),
  inference(superposition,[],[f354,f755])).
fof(f3883,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl20),
  inference(cnf_transformation,[],[f3883_D])).
fof(f3883_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f3941,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f3940])).
fof(f3940,plain,(
  ( ! [X121,X118,X122,X120,X119] : (p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK23('T_0',X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X118) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) )),
  inference(subsumption_resolution,[],[f3240,f818])).
fof(f3240,plain,(
  ( ! [X121,X118,X122,X120,X119] : (~p(s(bool,X118)) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK23('T_0',X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X118) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) )),
  inference(superposition,[],[f352,f755])).
fof(f3880,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,'T_0',X1)))))) ) | $spl18),
  inference(cnf_transformation,[],[f3880_D])).
fof(f3880_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,'T_0',X1)))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f3939,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,'T_0',X1)))))) )),
  inference(condensation,[],[f3938])).
fof(f3938,plain,(
  ( ! [X116,X114,X117,X115,X113] : (~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116)))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK22(X115,'T_0',X114))))) | s(bool,X113) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f3239,f818])).
fof(f3239,plain,(
  ( ! [X116,X114,X117,X115,X113] : (~p(s(bool,X113)) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116)))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK22(X115,'T_0',X114))))) | s(bool,X113) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f351,f755])).
fof(f3876,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'T_0',X1)))))) ) | $spl14),
  inference(cnf_transformation,[],[f3876_D])).
fof(f3876_D,plain,(
  ( ! [X2,X3,X1] : (~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'T_0',X1)))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f3937,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'T_0',X1)))))) )),
  inference(condensation,[],[f3936])).
fof(f3936,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,happ(s(fun(X109,bool),X110),s(X109,X111)))) | p(s(bool,happ(s(fun(X109,bool),X110),s(X109,sK21(X110,'T_0',X109))))) | s(bool,X108) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f3238,f818])).
fof(f3238,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,X108)) | ~p(s(bool,happ(s(fun(X109,bool),X110),s(X109,X111)))) | p(s(bool,happ(s(fun(X109,bool),X110),s(X109,sK21(X110,'T_0',X109))))) | s(bool,X108) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f349,f755])).
fof(f3907,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP11('T_0',X2,X1)) )),
  inference(condensation,[],[f3906])).
fof(f3906,plain,(
  ( ! [X163,X161,X164,X162] : (~p(s(bool,X162)) | p(s(bool,X163)) | ~sP11('T_0',X163,X162) | s(bool,X161) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(subsumption_resolution,[],[f2991,f818])).
fof(f2991,plain,(
  ( ! [X163,X161,X164,X162] : (~p(s(bool,X161)) | ~p(s(bool,X162)) | p(s(bool,X163)) | ~sP11('T_0',X163,X162) | s(bool,X161) = s(bool,X164) | s(bool,'T_0') = s(bool,X164)) )),
  inference(superposition,[],[f462,f755])).
fof(f3904,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | p(s(bool,X2)) | ~sP9('T_0',X2,X1)) )),
  inference(condensation,[],[f3903])).
fof(f3903,plain,(
  ( ! [X158,X159,X157,X160] : (p(s(bool,X158)) | p(s(bool,X159)) | ~sP9('T_0',X159,X158) | s(bool,X157) = s(bool,X160) | s(bool,'T_0') = s(bool,X160)) )),
  inference(subsumption_resolution,[],[f2990,f818])).
fof(f2990,plain,(
  ( ! [X158,X159,X157,X160] : (~p(s(bool,X157)) | p(s(bool,X158)) | p(s(bool,X159)) | ~sP9('T_0',X159,X158) | s(bool,X157) = s(bool,X160) | s(bool,'T_0') = s(bool,X160)) )),
  inference(superposition,[],[f445,f755])).
fof(f3901,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP7(X2,X1,'T_0')) )),
  inference(condensation,[],[f3900])).
fof(f3900,plain,(
  ( ! [X156,X154,X155,X153] : (~p(s(bool,X154)) | p(s(bool,X155)) | ~sP7(X155,X154,'T_0') | s(bool,X153) = s(bool,X156) | s(bool,'T_0') = s(bool,X156)) )),
  inference(subsumption_resolution,[],[f2989,f818])).
fof(f2989,plain,(
  ( ! [X156,X154,X155,X153] : (~p(s(bool,X153)) | ~p(s(bool,X154)) | p(s(bool,X155)) | ~sP7(X155,X154,'T_0') | s(bool,X153) = s(bool,X156) | s(bool,'T_0') = s(bool,X156)) )),
  inference(superposition,[],[f430,f755])).
fof(f3898,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X1,'T_0',X2)) )),
  inference(condensation,[],[f3897])).
fof(f3897,plain,(
  ( ! [X152,X151,X149,X150] : (~p(s(bool,X150)) | p(s(bool,X151)) | ~sP4(X150,'T_0',X151) | s(bool,X149) = s(bool,X152) | s(bool,'T_0') = s(bool,X152)) )),
  inference(subsumption_resolution,[],[f2988,f818])).
fof(f2988,plain,(
  ( ! [X152,X151,X149,X150] : (~p(s(bool,X149)) | ~p(s(bool,X150)) | p(s(bool,X151)) | ~sP4(X150,'T_0',X151) | s(bool,X149) = s(bool,X152) | s(bool,'T_0') = s(bool,X152)) )),
  inference(superposition,[],[f398,f755])).
fof(f3895,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1(X1,'T_0')) )),
  inference(condensation,[],[f3894])).
fof(f3894,plain,(
  ( ! [X146,X147,X148] : (p(s(bool,X147)) | sP1(X147,'T_0') | s(bool,X146) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(subsumption_resolution,[],[f2987,f818])).
fof(f2987,plain,(
  ( ! [X146,X147,X148] : (~p(s(bool,X146)) | p(s(bool,X147)) | sP1(X147,'T_0') | s(bool,X146) = s(bool,X148) | s(bool,'T_0') = s(bool,X148)) )),
  inference(superposition,[],[f384,f755])).
fof(f3892,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,X1)) | sP1('T_0',X1)) )),
  inference(condensation,[],[f3891])).
fof(f3891,plain,(
  ( ! [X144,X145,X143] : (p(s(bool,X144)) | sP1('T_0',X144) | s(bool,X143) = s(bool,X145) | s(bool,'T_0') = s(bool,X145)) )),
  inference(subsumption_resolution,[],[f2986,f818])).
fof(f2986,plain,(
  ( ! [X144,X145,X143] : (~p(s(bool,X143)) | p(s(bool,X144)) | sP1('T_0',X144) | s(bool,X143) = s(bool,X145) | s(bool,'T_0') = s(bool,X145)) )),
  inference(superposition,[],[f381,f755])).
fof(f3885,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK24('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f3884])).
fof(f3884,plain,(
  ( ! [X127,X125,X123,X126,X124] : (p(s(bool,happ(s(fun(X124,bool),X125),s(X124,sK24('T_0',X125,X124))))) | ~p(s(bool,happ(s(fun(X124,bool),X125),s(X124,X126)))) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,X127)) )),
  inference(subsumption_resolution,[],[f2980,f818])).
fof(f2980,plain,(
  ( ! [X127,X125,X123,X126,X124] : (~p(s(bool,X123)) | p(s(bool,happ(s(fun(X124,bool),X125),s(X124,sK24('T_0',X125,X124))))) | ~p(s(bool,happ(s(fun(X124,bool),X125),s(X124,X126)))) | s(bool,X123) = s(bool,X127) | s(bool,'T_0') = s(bool,X127)) )),
  inference(superposition,[],[f354,f755])).
fof(f3882,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK23('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f3881])).
fof(f3881,plain,(
  ( ! [X121,X118,X122,X120,X119] : (p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK23('T_0',X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X118) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) )),
  inference(subsumption_resolution,[],[f2979,f818])).
fof(f2979,plain,(
  ( ! [X121,X118,X122,X120,X119] : (~p(s(bool,X118)) | p(s(bool,happ(s(fun(X119,bool),X120),s(X119,sK23('T_0',X120,X119))))) | ~p(s(bool,happ(s(fun(X119,bool),X120),s(X119,X121)))) | s(bool,X118) = s(bool,X122) | s(bool,'T_0') = s(bool,X122)) )),
  inference(superposition,[],[f352,f755])).
fof(f3879,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK22(X2,'T_0',X1)))))) )),
  inference(condensation,[],[f3878])).
fof(f3878,plain,(
  ( ! [X116,X114,X117,X115,X113] : (~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116)))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK22(X115,'T_0',X114))))) | s(bool,X113) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(subsumption_resolution,[],[f2978,f818])).
fof(f2978,plain,(
  ( ! [X116,X114,X117,X115,X113] : (~p(s(bool,X113)) | ~p(s(bool,happ(s(fun(X114,bool),X115),s(X114,X116)))) | p(s(bool,happ(s(fun(X114,bool),X115),s(X114,sK22(X115,'T_0',X114))))) | s(bool,X113) = s(bool,X117) | s(bool,'T_0') = s(bool,X117)) )),
  inference(superposition,[],[f351,f755])).
fof(f3875,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK21(X2,'T_0',X1)))))) )),
  inference(condensation,[],[f3874])).
fof(f3874,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,happ(s(fun(X109,bool),X110),s(X109,X111)))) | p(s(bool,happ(s(fun(X109,bool),X110),s(X109,sK21(X110,'T_0',X109))))) | s(bool,X108) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(subsumption_resolution,[],[f2977,f818])).
fof(f2977,plain,(
  ( ! [X111,X109,X112,X110,X108] : (~p(s(bool,X108)) | ~p(s(bool,happ(s(fun(X109,bool),X110),s(X109,X111)))) | p(s(bool,happ(s(fun(X109,bool),X110),s(X109,sK21(X110,'T_0',X109))))) | s(bool,X108) = s(bool,X112) | s(bool,'T_0') = s(bool,X112)) )),
  inference(superposition,[],[f349,f755])).
fof(f1980,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl10),
  inference(cnf_transformation,[],[f1980_D])).
fof(f1980_D,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1982,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl13),
  inference(cnf_transformation,[],[f1982_D])).
fof(f1982_D,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f1978,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | s(bool,'T_0') = s(bool,g(s(sK12,sK28('const.pred_set.EMPTY_0',sK13,bool,sK12)))) | $spl3),
  inference(superposition,[],[f1704,f281])).
fof(f1713,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl6),
  inference(cnf_transformation,[],[f1713_D])).
fof(f1713_D,plain,(
  s(bool,'T_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1715,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl9),
  inference(cnf_transformation,[],[f1715_D])).
fof(f1715_D,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f1711,plain,(
  s(bool,'F_0') != s(bool,f(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | s(bool,'T_0') = s(bool,g(s(sK12,sK28(sK13,'const.pred_set.EMPTY_0',bool,sK12)))) | $spl3),
  inference(superposition,[],[f1703,f281])).
fof(f475,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) | $spl0),
  inference(cnf_transformation,[],[f475_D])).
fof(f475_D,plain,(
  p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f477,plain,(
  s(fun(sK12,bool),'const.pred_set.EMPTY_0') != s(fun(sK12,bool),sK13) | $spl3),
  inference(cnf_transformation,[],[f477_D])).
fof(f477_D,plain,(
  s(fun(sK12,bool),'const.pred_set.EMPTY_0') != s(fun(sK12,bool),sK13) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f271,plain,(
  s(fun(sK12,bool),'const.pred_set.EMPTY_0') != s(fun(sK12,bool),sK13) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14))))))),
  inference(cnf_transformation,[],[f169])).
fof(f169,plain,(
  (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) | (s(fun(sK12,bool),'const.pred_set.EMPTY_0') != s(fun(sK12,bool),sK13) & p(s(bool,sK14)))) & (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) | s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),sK13) | ~p(s(bool,sK14)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) & p(s(bool,X2)))) & (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) | s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ~p(s(bool,X2))))),
  inference(flattening,[],[f167])).
fof(f167,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) & p(s(bool,X2)))) & (~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) | (s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) | ~p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f125])).
fof(f125,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) <~> (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) & p(s(bool,X2))))),
  inference(ennf_transformation,[],[f52])).
fof(f52,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) <=> (s(fun(X0,bool),'const.pred_set.EMPTY_0') != s(fun(X0,bool),X1) & p(s(bool,X2))))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X0,bool),X1),s(fun(X0,bool),'_dst_x0_1'(s(bool,X2)))))) <=> (~s(fun(X0,bool),'const.pred_set.EMPTY_0') = s(fun(X0,bool),X1) & p(s(bool,X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'_dst_x0_1'(s(bool,X8)))))) <=> (~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) & p(s(bool,X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(X6,bool),X7),s(fun(X6,bool),'_dst_x0_1'(s(bool,X8)))))) <=> (~s(fun(X6,bool),'const.pred_set.EMPTY_0') = s(fun(X6,bool),X7) & p(s(bool,X8))))),
  file('thm.res_quan.RES_EXISTS_NULL','thm.res_quan.RES_EXISTS_NULL')).
fof(f479,plain,(
  p(s(bool,sK14)) | $spl4),
  inference(cnf_transformation,[],[f479_D])).
fof(f479_D,plain,(
  p(s(bool,sK14)) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f272,plain,(
  p(s(bool,sK14)) | p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14))))))),
  inference(cnf_transformation,[],[f169])).
fof(f476,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) | $spl1),
  inference(cnf_transformation,[],[f476_D])).
fof(f476_D,plain,(
  ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f478,plain,(
  s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),sK13) | $spl2),
  inference(cnf_transformation,[],[f478_D])).
fof(f478_D,plain,(
  s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),sK13) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f480,plain,(
  ~p(s(bool,sK14)) | $spl5),
  inference(cnf_transformation,[],[f480_D])).
fof(f480_D,plain,(
  ~p(s(bool,sK14)) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f273,plain,(
  ~p(s(bool,sK14)) | s(fun(sK12,bool),'const.pred_set.EMPTY_0') = s(fun(sK12,bool),sK13) | ~p(s(bool,'const.bool.RES_EXISTS_2'(s(fun(sK12,bool),sK13),s(fun(sK12,bool),'_dst_x0_1'(s(bool,sK14))))))),
  inference(cnf_transformation,[],[f169])).
% SZS output end Proof for thm.res_quan
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1157
% Passive clauses: 2797
% Generated clauses: 32001
% Final active clauses: 522
% Final passive clauses: 418
% Input formulas: 49
% Initial clauses: 194
% 
% Duplicate literals: 1039
% Trivial inequalities: 64
% Fw subsumption resolutions: 1476
% Fw demodulations: 2720
% Bw demodulations: 743
% Condensations: 1828
% Global subsumptions: 262
% 
% Simple tautologies: 143
% Equational tautologies: 126
% Forward subsumptions: 20265
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 8826
% Factoring: 1
% Forward superposition: 10329
% Backward superposition: 4032
% Self superposition: 34
% Equality factoring: 32
% Equality resolution: 13
% 
% Split clauses: 70
% Split components: 146
% SAT solver clauses: 4402
% SAT solver unit clauses: 454
% SAT solver binary clauses: 1227
% 
% Sat splits: 70
% Sat splitting refutations: 1201
% 
% Memory used [KB]: 19701
% Time elapsed: 1.281 s
% ------------------------------
% ------------------------------
% Success in time 2.6 s
