Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1504,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1501,f1453,f51,f77,f75,f50,f76,f74])).
fof(f74,plain,(
  p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl0),
  inference(cnf_transformation,[],[f74_D])).
fof(f74_D,plain,(
  p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f76,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl2),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f50,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) = s('type.num.num',sK1)) & (~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) | s('type.num.num',sK0) != s('type.num.num',sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f41])).
fof(f41,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) = s('type.num.num',X1)) & (~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1),s('type.num.num',X0)))) | s('type.num.num',X0) != s('type.num.num',X1)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1),s('type.num.num',X0)))) <~> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1),s('type.num.num',X0)))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7),s('type.num.num',X6)))) <=> s('type.num.num',X6) = s('type.num.num',X7))),
  file('thm.arithmetic.MODEQ_|48|_CONG','thm.arithmetic.MODEQ_|48|_CONG')).
fof(f75,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl1),
  inference(cnf_transformation,[],[f75_D])).
fof(f75_D,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f77,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | $spl3),
  inference(cnf_transformation,[],[f77_D])).
fof(f77_D,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f51,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK1) | ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f42])).
fof(f1453,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f1452,f77])).
fof(f1452,plain,(
  s('type.num.num',sK0) = s('type.num.num',sK1) | $spl0),
  inference(forward_demodulation,[],[f1451,f56])).
fof(f56,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.arithmetic.MODEQ_|48|_CONG','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1451,plain,(
  s('type.num.num',sK1) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | $spl0),
  inference(forward_demodulation,[],[f1450,f56])).
fof(f1450,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl0),
  inference(forward_demodulation,[],[f1449,f55])).
fof(f55,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.MODEQ_|48|_CONG','thm.arithmetic.MULT_|48|')).
fof(f1449,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(sK0,sK1,'const.num.|48|_0')),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK1))) | $spl0),
  inference(forward_demodulation,[],[f1448,f55])).
fof(f1448,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(sK0,sK1,'const.num.|48|_0')),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK4(sK0,sK1,'const.num.|48|_0')),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK0))) | $spl0),
  inference(subsumption_resolution,[],[f1357,f52])).
fof(f52,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f18])).
fof(f18,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.MODEQ_|48|_CONG','thm.bool.TRUTH')).
fof(f1357,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(sK0,sK1,'const.num.|48|_0')),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK4(sK0,sK1,'const.num.|48|_0')),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK0))) | $spl0),
  inference(superposition,[],[f71,f101])).
fof(f101,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0))) | $spl0),
  inference(subsumption_resolution,[],[f98,f54])).
fof(f54,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.MODEQ_|48|_CONG',aHL_FALSITY)).
fof(f98,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1),s('type.num.num',sK0))) | $spl0),
  inference(superposition,[],[f74,f61])).
fof(f61,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.MODEQ_|48|_CONG',aHL_BOOL_CASES)).
fof(f71,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(X2,X1,X0)),s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X0))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK3(X2,X1,X0)),s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK4(X2,X1,X0)),s('type.num.num',X0))),s('type.num.num',X2)))) & (! [X3,X4] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ? [X5,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X0))),s('type.num.num',X2)))) & (! [X3,X4] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ? [X3,X4] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2)))) & (! [X3,X4] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) <=> ? [X3,X4] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X9,X7,X6] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X9),s('type.num.num',X7),s('type.num.num',X6)))) <=> ? [X10,X11] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X9))),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num',X9))),s('type.num.num',X6))))),
  file('thm.arithmetic.MODEQ_|48|_CONG','thm.arithmetic.MODEQ_DEF')).
fof(f1501,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f1500])).
fof(f1500,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1499,f55])).
fof(f1499,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK0)))) ) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f1492,f55])).
fof(f1492,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK0))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))),s('type.num.num',sK0)))) ) | ($spl1 | $spl2)),
  inference(resolution,[],[f1491,f72])).
fof(f72,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X0))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f1491,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0),s('type.num.num',sK0)))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f75,f76])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 249
% Generated clauses: 1441
% Final active clauses: 32
% Final passive clauses: 192
% Input formulas: 19
% Initial clauses: 23
% 
% Duplicate literals: 41
% Trivial inequalities: 4
% Fw subsumption resolutions: 12
% Fw demodulations: 241
% Bw demodulations: 4
% 
% Simple tautologies: 18
% Equational tautologies: 15
% Forward subsumptions: 834
% Fw demodulations to eq. taut.: 32
% 
% Binary resolution: 9
% Forward superposition: 521
% Backward superposition: 497
% Self superposition: 55
% Equality factoring: 26
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 11
% SAT solver unit clauses: 2
% SAT solver binary clauses: 8
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 5
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 9
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 2174
% Time elapsed: 0.046 s
% ------------------------------
% ------------------------------
% Success in time 0.05 s
