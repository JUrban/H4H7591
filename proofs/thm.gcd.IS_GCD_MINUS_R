Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.gcd
% (102222)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 594
% Passive clauses: 9364
% Generated clauses: 16944
% Final active clauses: 589
% Final passive clauses: 8350
% Input formulas: 39
% Initial clauses: 174
% 
% Duplicate literals: 269
% Trivial inequalities: 19
% Fw subsumption resolutions: 1358
% Fw demodulations: 179
% Bw demodulations: 3
% 
% Simple tautologies: 218
% Equational tautologies: 57
% Forward subsumptions: 5190
% 
% Binary resolution: 10907
% Factoring: 1003
% Forward superposition: 1756
% Backward superposition: 1127
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 325
% Split components: 658
% SAT solver clauses: 651
% SAT solver unit clauses: 22
% SAT solver binary clauses: 171
% SAT solver learnt clauses: 1
% 
% Sat splits: 325
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 650
% TWLsolver calls for satisfiability: 373
% 
% Memory used [KB]: 7164
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.gcd
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.gcd
% SZS output start Proof for thm.gcd
fof(f5123,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f5074,f223,f410,f411,f413,f523,f524,f312,f443,f313,f444,f525,f529,f220,f408,f240,f418,f527,f531,f221,f406,f4983,f4985,f546,f551,f222,f404,f244,f420,f1770,f1830])).
fof(f1830,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X10),s('type.num.num',X9),s('type.num.num',X11)))) | s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11)))) ) | $spl596),
  inference(cnf_transformation,[],[f1830_D])).
fof(f1830_D,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X10),s('type.num.num',X9),s('type.num.num',X11)))) | s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11)))) ) <=> ~$spl596),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl596])])).
fof(f1770,plain,(
  ( ! [X10,X11,X9] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X10),s('type.num.num',X9),s('type.num.num',X11)))) | s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X9),s('type.num.num',X10),s('type.num.num',X11)))) ) | ($spl16 | $spl44)),
  inference(superposition,[],[f420,f443])).
fof(f420,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f420_D])).
fof(f420_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f244,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.bool.EQ_CLAUSES|split|3')).
fof(f404,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14)))) | $spl1),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f222,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14))))),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14)))) & ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f99])).
fof(f99,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2)))) & ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))))) & ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X2))))) => p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))))) => p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))))) => p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.gcd.IS_GCD_MINUS_R')).
fof(f551,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14))) | $spl200),
  inference(cnf_transformation,[],[f551_D])).
fof(f551_D,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14))) <=> ~$spl200),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl200])])).
fof(f546,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num',sK13),s('type.num.num',sK14))) | ($spl1 | $spl16)),
  inference(resolution,[],[f420,f404])).
fof(f4985,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK13),s('type.num.num',sK12),s('type.num.num',sK14))) | $spl1768),
  inference(cnf_transformation,[],[f4985_D])).
fof(f4985_D,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK13),s('type.num.num',sK12),s('type.num.num',sK14))) <=> ~$spl1768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1768])])).
fof(f4983,plain,(
  s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK13),s('type.num.num',sK12),s('type.num.num',sK14))) | ($spl9 | $spl200 | $spl596)),
  inference(subsumption_resolution,[],[f4958,f413])).
fof(f4958,plain,(
  p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK13),s('type.num.num',sK12),s('type.num.num',sK14))) | ($spl200 | $spl596)),
  inference(superposition,[],[f1830,f551])).
fof(f406,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14)))) | $spl2),
  inference(cnf_transformation,[],[f406_D])).
fof(f406_D,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f221,plain,(
  p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14))))),
  inference(cnf_transformation,[],[f143])).
fof(f531,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14))) | $spl194),
  inference(cnf_transformation,[],[f531_D])).
fof(f531_D,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14))) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f527,plain,(
  s(bool,'T_0') = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14))) | ($spl2 | $spl12)),
  inference(resolution,[],[f418,f406])).
fof(f418,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f418_D])).
fof(f418_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f240,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.bool.EQ_CLAUSES|split|0')).
fof(f408,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | $spl4),
  inference(cnf_transformation,[],[f408_D])).
fof(f408_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f220,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13))))),
  inference(cnf_transformation,[],[f143])).
fof(f529,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | $spl192),
  inference(cnf_transformation,[],[f529_D])).
fof(f529_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13))) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f525,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13))) | ($spl4 | $spl12)),
  inference(resolution,[],[f418,f408])).
fof(f444,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl46),
  inference(cnf_transformation,[],[f444_D])).
fof(f444_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f313,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(ennf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1),s('type.num.num',X2))))) => p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X6,X7,X8] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num',X6)))) & p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7),s('type.num.num',X8))))) => p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8)))))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.gcd.IS_GCD_MINUS_L')).
fof(f443,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num',X0),s('type.num.num',X2)))) ) | $spl44),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num',X0),s('type.num.num',X2)))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f312,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num',X0),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2] : s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num',X0),s('type.num.num',X2)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7,X8] : s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X6),s('type.num.num',X7),s('type.num.num',X8))) = s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X7),s('type.num.num',X6),s('type.num.num',X8)))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.gcd.IS_GCD_SYM')).
fof(f524,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl190),
  inference(cnf_transformation,[],[f524_D])).
fof(f524_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f523,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2)))) | p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',X0),s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | ($spl44 | $spl46)),
  inference(backward_demodulation,[],[f443,f444])).
fof(f413,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f413_D])).
fof(f413_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f411,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f226,f223])).
fof(f226,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f144])).
fof(f144,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f18])).
fof(f18,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.gcd.IS_GCD_MINUS_R','thm.bool.NOT_CLAUSES|split|2')).
fof(f410,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f410_D])).
fof(f410_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f223,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.gcd.IS_GCD_MINUS_R',aHL_TRUTH)).
fof(f5074,plain,(
  $false | ($spl6 | $spl9 | $spl190 | $spl192 | $spl194 | $spl1768)),
  inference(subsumption_resolution,[],[f5073,f410])).
fof(f5073,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl9 | $spl190 | $spl192 | $spl194 | $spl1768)),
  inference(forward_demodulation,[],[f5072,f529])).
fof(f5072,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | ($spl6 | $spl9 | $spl190 | $spl194 | $spl1768)),
  inference(subsumption_resolution,[],[f5071,f410])).
fof(f5071,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | ($spl9 | $spl190 | $spl194 | $spl1768)),
  inference(forward_demodulation,[],[f5070,f531])).
fof(f5070,plain,(
  ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | ($spl9 | $spl190 | $spl1768)),
  inference(subsumption_resolution,[],[f4999,f413])).
fof(f4999,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.gcd.is_gcd_3'(s('type.num.num',sK12),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK13),s('type.num.num',sK12))),s('type.num.num',sK14)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK12),s('type.num.num',sK13)))) | ($spl190 | $spl1768)),
  inference(superposition,[],[f524,f4985])).
% SZS output end Proof for thm.gcd
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 285
% Passive clauses: 872
% Generated clauses: 4835
% Final active clauses: 279
% Final passive clauses: 584
% Input formulas: 39
% Initial clauses: 174
% 
% Duplicate literals: 155
% Trivial inequalities: 34
% Fw subsumption resolutions: 470
% Fw demodulations: 169
% Bw demodulations: 8
% Condensations: 136
% Global subsumptions: 13
% 
% Simple tautologies: 228
% Equational tautologies: 17
% Forward subsumptions: 1645
% 
% Binary resolution: 1433
% Factoring: 79
% Forward superposition: 429
% Backward superposition: 803
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 5
% 
% Split clauses: 9
% Split components: 18
% SAT solver clauses: 1249
% SAT solver unit clauses: 175
% SAT solver binary clauses: 62
% SAT solver learnt clauses: 27
% SAT solver learnt literals: 10
% 
% Sat splits: 9
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1196
% TWLsolver calls for satisfiability: 1575
% 
% Memory used [KB]: 4477
% Time elapsed: 0.171 s
% ------------------------------
% ------------------------------
% Success in time 0.878 s
