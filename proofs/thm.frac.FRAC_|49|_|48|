Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.frac
% (58176)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 430
% Passive clauses: 4588
% Generated clauses: 30678
% Final active clauses: 235
% Final passive clauses: 3026
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 578
% Trivial inequalities: 512
% Fw subsumption resolutions: 1306
% Fw demodulations: 7895
% Bw demodulations: 119
% 
% Simple tautologies: 146
% Equational tautologies: 48
% Forward subsumptions: 15888
% Fw demodulations to eq. taut.: 90
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 42
% Forward superposition: 10880
% Backward superposition: 8744
% Self superposition: 122
% Equality factoring: 64
% Equality resolution: 69
% 
% Split clauses: 202
% Split components: 404
% SAT solver clauses: 368
% SAT solver unit clauses: 10
% SAT solver binary clauses: 39
% 
% Sat splits: 202
% Sat splitting refutations: 28
% 
% TWLsolver clauses: 368
% TWLsolver calls for satisfiability: 71
% 
% Memory used [KB]: 14072
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (58200)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 303
% Passive clauses: 1394
% Generated clauses: 22370
% Final active clauses: 176
% Final passive clauses: 535
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 596
% Trivial inequalities: 366
% Fw subsumption resolutions: 804
% Fw demodulations: 3908
% Bw demodulations: 618
% Condensations: 630
% Global subsumptions: 20
% 
% Simple tautologies: 105
% Equational tautologies: 32
% Forward subsumptions: 11567
% Fw demodulations to eq. taut.: 4
% Bw demodulations to eq. taut.: 34
% 
% Binary resolution: 8
% Forward superposition: 7876
% Backward superposition: 5378
% Self superposition: 113
% Equality factoring: 49
% Equality resolution: 76
% 
% Split clauses: 217
% Split components: 434
% SAT solver clauses: 2585
% SAT solver unit clauses: 202
% SAT solver binary clauses: 58
% SAT solver learnt clauses: 40
% 
% Sat splits: 217
% Sat splitting refutations: 48
% 
% TWLsolver clauses: 2505
% TWLsolver calls for satisfiability: 466
% 
% Memory used [KB]: 15991
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 287 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (58214)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 786
% Passive clauses: 3908
% Generated clauses: 511058
% Final active clauses: 249
% Final passive clauses: 735
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 416
% Trivial inequalities: 2615
% Fw subsumption resolutions: 4320
% Fw demodulations: 334866
% Bw demodulations: 2496
% Condensations: 571
% Global subsumptions: 336
% 
% Simple tautologies: 209
% Equational tautologies: 222
% Forward subsumptions: 67261
% Fw demodulations to eq. taut.: 94864
% Bw demodulations to eq. taut.: 133
% 
% Unit resulting resolution: 106451
% Forward superposition: 36927
% Backward superposition: 18164
% Self superposition: 113
% Equality factoring: 42
% Equality resolution: 309
% 
% Split clauses: 56
% Split components: 117
% SAT solver clauses: 4890
% SAT solver unit clauses: 1327
% SAT solver binary clauses: 2057
% 
% Sat splits: 56
% Sat splitting refutations: 532
% 
% Memory used [KB]: 106437
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 183 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% (58464)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 2451
% Passive clauses: 53435
% Generated clauses: 106739
% Final active clauses: 744
% Final passive clauses: 16752
% Input formulas: 76
% Initial clauses: 48
% 
% Selected by SInE selection: 27
% SInE iterations: 1
% 
% Duplicate literals: 508
% Trivial inequalities: 5767
% Fw subsumption resolutions: 894
% Fw demodulations: 5708
% Bw demodulations: 231
% 
% Simple tautologies: 122
% Equational tautologies: 17
% Forward subsumptions: 42744
% Fw demodulations to eq. taut.: 21
% 
% Binary resolution: 99
% Forward superposition: 78335
% Backward superposition: 2549
% Self superposition: 25
% Equality resolution: 1562
% 
% Split clauses: 3060
% Split components: 6121
% SAT solver clauses: 3125
% SAT solver unit clauses: 11
% SAT solver binary clauses: 619
% 
% Sat splits: 3060
% Sat splitting refutations: 62
% 
% Memory used [KB]: 23027
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.frac
% (58630)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 163
% Passive clauses: 1184
% Generated clauses: 32687
% Final active clauses: 120
% Final passive clauses: 781
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 38
% Trivial inequalities: 43
% Fw subsumption resolutions: 72
% Fw demodulations: 12625
% Bw demodulations: 265
% 
% Simple tautologies: 35
% Equational tautologies: 15
% Forward subsumptions: 7097
% Fw demodulations to eq. taut.: 11510
% Bw demodulations to eq. taut.: 17
% 
% Unit resulting resolution: 12128
% Forward superposition: 4399
% Backward superposition: 2925
% Self superposition: 77
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 1187
% SAT solver unit clauses: 418
% SAT solver binary clauses: 536
% 
% Sat splits: 1
% 
% Memory used [KB]: 15223
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.frac
% (58659)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 403
% Passive clauses: 6307
% Generated clauses: 28370
% Final active clauses: 386
% Final passive clauses: 5656
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 59
% Trivial inequalities: 1187
% Fw subsumption resolutions: 266
% Fw demodulations: 3842
% Bw demodulations: 16
% Condensations: 36
% 
% Simple tautologies: 43
% Equational tautologies: 1
% Forward subsumptions: 16645
% Backward subsumptions: 333
% 
% Binary resolution: 143
% Forward superposition: 21754
% Backward superposition: 1004
% Self superposition: 4
% Equality resolution: 116
% 
% Split clauses: 6
% Split components: 12
% SAT solver clauses: 6315
% SAT solver unit clauses: 3
% SAT solver binary clauses: 215
% 
% Sat splits: 6
% 
% Memory used [KB]: 20980
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 120 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f19333,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f183,f291,f293,f295,f1376,f1377,f3154,f3156,f3609,f3608,f3607,f3606,f3603,f3613,f3602,f3615,f3601,f3617,f3600,f3619,f3599,f3621,f3598,f3597,f3623,f3719,f3718,f3717,f3716,f3713,f3723,f3712,f3725,f3711,f3727,f3710,f3729,f4105,f4104,f4103,f4102,f4098,f4109,f4097,f4111,f4096,f4113,f4095,f4115,f4127,f4126,f4125,f4124,f4120,f4131,f4119,f4133,f4118,f4135,f4117,f4137,f4155,f4154,f4153,f4152,f4148,f4159,f4147,f4161,f4146,f4163,f4145,f4165,f4359,f4360,f3622,f5405,f5404,f5403,f5402,f5398,f5397,f5411,f5396,f5413,f5395,f5725,f5730,f5723,f5722,f5718,f5729,f5737,f5732,f5716,f5734,f5715,f5736,f5852,f5857,f5861,f5865,f5867,f5871,f5878,f5881,f5885,f5889,f5891,f5895,f5844,f5845,f6034,f6039,f6043,f6047,f6049,f6053,f6011,f6066,f6065,f6064,f6063,f6059,f6070,f6058,f6072,f6057,f6074,f6056,f6076,f6080,f6077,f6084,f6088,f6085,f6092,f6107,f6106,f6105,f6101,f6112,f6100,f6114,f6099,f6116,f6128,f6127,f6126,f6125,f6121,f6132,f6120,f6134,f6119,f6136,f6118,f6138,f6150,f6149,f6148,f6147,f6143,f6154,f6142,f6156,f6141,f6158,f6140,f6160,f6172,f6171,f6170,f6169,f6165,f6176,f6164,f6178,f6163,f6180,f6162,f6182,f6200,f6199,f6198,f6197,f6193,f6204,f6192,f6206,f6191,f6208,f6190,f6210,f6222,f6221,f6220,f6219,f6215,f6226,f6214,f6228,f6213,f6230,f6212,f6232,f6244,f6243,f6242,f6241,f6237,f6248,f6236,f6250,f6235,f6252,f6234,f6254,f6269,f6268,f6267,f6263,f6274,f6262,f6276,f6261,f6278,f6290,f6289,f6288,f6287,f6283,f6294,f6282,f6296,f6281,f6298,f6280,f6300,f6312,f6311,f6310,f6309,f6305,f6316,f6304,f6318,f6303,f6320,f6302,f6322,f6334,f6333,f6332,f6331,f6327,f6338,f6326,f6340,f6325,f6342,f6324,f6344,f6838,f6837,f6836,f6835,f6832,f6842,f6831,f6844,f6830,f6846,f6829,f6848,f7361,f7363,f7382,f7452,f7451,f7450,f7449,f7445,f7456,f7444,f7458,f7443,f7460,f7442,f7462,f8722,f8723,f8759,f8715,f8714,f8764,f8712,f8708,f8775,f8696,f8777,f8689,f8688,f8781,f8687,f8783,f8686,f8683,f8787,f8682,f8789,f8681,f8791,f8680,f8677,f8795,f8676,f8797,f8675,f8674,f8801,f8666,f8803,f8665,f8805,f8664,f8807,f8663,f8809,f8660,f8811,f8659,f8813,f8658,f8815,f8657,f8817,f8654,f8819,f8653,f8821,f8652,f8823,f8651,f8825,f8758,f8827,f8757,f8829,f8756,f8831,f8755,f8833,f8752,f8835,f8751,f8837,f8750,f8839,f8749,f8841,f8746,f8767,f8744,f8769,f8742,f8771,f8739,f8773,f8628,f8619,f8845,f8618,f8847,f8731,f8849,f8616,f8851,f8608,f8607,f8606,f8605,f8602,f8861,f8601,f8863,f8600,f8599,f8728,f8843,f8587,f8586,f8585,f8584,f8583,f8882,f8886,f8900,f8899,f8898,f8887,f8889,f8891,f8893,f8895,f9091,f8901,f9676,f9677,f9705,f9689,f9708,f9693,f9710,f9699,f9712,f9701,f9714,f9702,f10464,f10956,f10955,f10954,f10953,f10949,f10960,f10948,f10962,f10947,f10964,f10946,f10966,f13105,f10918,f8869,f13106,f13735,f13740,f13745,f13742,f13766,f13771,f13774,f13777,f13780,f13783,f13768,f13795,f13800,f13803,f13839,f13844,f13847,f13850,f13853,f13856,f13859,f13864,f13867,f13870,f13873,f13876,f13879,f13882,f13887,f13943,f13946,f13949,f13985,f13988,f13991,f13994,f13997,f14000,f14003,f14006,f14009,f14012,f14015,f14018,f14021,f14024,f14028,f14031,f14034,f13889,f14055,f14060,f14063,f14066,f14069,f14072,f14057,f14084,f14089,f14092,f14128,f14133,f14136,f14139,f14142,f14145,f14148,f14153,f14156,f14159,f14162,f14165,f14168,f14171,f14230,f14233,f14236,f14272,f14275,f14278,f14281,f14284,f14287,f14290,f14293,f14296,f14299,f14302,f14305,f14308,f14311,f14313,f14315,f14317,f14319,f14378,f14381,f14384,f14420,f14423,f14426,f14429,f14432,f14435,f14438,f14441,f14444,f14447,f14450,f14453,f14456,f14459,f14463,f14517,f14520,f14523,f13797,f14559,f14562,f14565,f14568,f14571,f14574,f13841,f14577,f14580,f14583,f14586,f14589,f14592,f14595,f14598,f13861,f14657,f14660,f14663,f14699,f14702,f14705,f14708,f14711,f14714,f14717,f14720,f14723,f14726,f14729,f14732,f14735,f14738,f14742,f13737,f14796,f14799,f14802,f14086,f14838,f14841,f14844,f14847,f14850,f14853,f14130,f14856,f14859,f14862,f14865,f14868,f14871,f14874,f14877,f14150,f14879,f6035,f14881,f6273,f14883,f6275,f14885,f6277,f13557,f14887,f14888,f14889,f6091,f14913,f14917,f14925,f14937,f14939,f14941,f14947,f14949,f14951,f14953,f14915,f14955,f14919,f14957,f14927,f14971,f14970,f14969,f14968,f14965,f14975,f14964,f14977,f14963,f14979,f14962,f14981,f15086,f15080,f15091,f15109,f15108,f15107,f15106,f15102,f15113,f15101,f15115,f15100,f15117,f15099,f15119,f15131,f15130,f15129,f15128,f15124,f15135,f15123,f15137,f15122,f15139,f15121,f15141,f15153,f15152,f15151,f15150,f15146,f15157,f15145,f15159,f15144,f15161,f15143,f15163,f15223,f15222,f15221,f15220,f15219,f15216,f15227,f15215,f15229,f15214,f15231,f15213,f15233,f15212,f15235,f15238,f15277,f15239,f15279,f15240,f15281,f15241,f15283,f15243,f15285,f15244,f15287,f15245,f15289,f15246,f15291,f15247,f15293,f15248,f15295,f15249,f15297,f15250,f15299,f15251,f15301,f15252,f15303,f15253,f15305,f15254,f15307,f15255,f15309,f15256,f15311,f15257,f15313,f15258,f15315,f15259,f15317,f15260,f15319,f15261,f15321,f15262,f15263,f15325,f15264,f15327,f15267,f15329,f15330,f15331,f15332,f14983,f14990,f8779,f14986,f14993,f8785,f15000,f15007,f8793,f15013,f15020,f8799,f15333,f15334,f15335,f15336,f10905,f10912,f10907,f10914,f15341,f15342,f15343,f15344,f15024,f15027,f10919,f10925,f15366,f15367,f15368,f15369,f15370,f15371,f15372,f15373,f15374,f15375,f15376,f15377,f15378,f15379,f15380,f15381,f15382,f15383,f15384,f15385,f15386,f15387,f15388,f15389,f15390,f10934,f10941,f8865,f10935,f10942,f8867,f15391,f15323,f15392,f15395,f15397,f10921,f10927,f8875,f10922,f10928,f15428,f15433,f15429,f15435,f15430,f15437,f15431,f15439,f15442,f15447,f15443,f15449,f15444,f15451,f15445,f15453,f15456,f15461,f15457,f15463,f15458,f15465,f15459,f15467,f15472,f15477,f15473,f15479,f15474,f15481,f15475,f15483,f15486,f15491,f15487,f15493,f15488,f15495,f15489,f15497,f15500,f15505,f15501,f15507,f15502,f15509,f15503,f15511,f15516,f15521,f15517,f15523,f15518,f15525,f15519,f15527,f15530,f15535,f15531,f15537,f15532,f15539,f15533,f15541,f15544,f15549,f15545,f15551,f15546,f15553,f15547,f15555,f15560,f15572,f15561,f15574,f15562,f15394,f15563,f15576,f15564,f15578,f15570,f15583,f15584,f15597,f15585,f15599,f15586,f15587,f15603,f15593,f15608,f15609,f15610,f15605,f15611,f15580,f15612,f15624,f15618,f15622,f15627,f15637,f15633,f15620,f15662,f15665,f15669,f15670,f15709,f15671,f15711,f15672,f15713,f15674,f15715,f15689,f15707,f15690,f15717,f15692,f15719,f15704,f15721,f15705,f15723,f15724,f15595,f15725,f15727,f15738,f15739,f15741,f15742,f15743,f15744,f15745,f15746,f15747,f15030,f15037,f15748,f15750,f15847,f15848,f15849,f15850,f15851,f15852,f15853,f15876,f15880,f15875,f15882,f15874,f15884,f15736,f15886,f15737,f15888,f15740,f9715,f15871,f15824,f15816,f15894,f15815,f15896,f15811,f15898,f15810,f15900,f15809,f15902,f15808,f15904,f15796,f15906,f15795,f15908,f15794,f15910,f15793,f15912,f15783,f15782,f15914,f15781,f15916,f15780,f15918,f15777,f15920,f15776,f15922,f15775,f15924,f15766,f15926,f15765,f15928,f15759,f15930,f15758,f15890,f15751,f15932,f15936,f15935,f16283,f16748,f16284,f16286,f16752,f16287,f16754,f16755,f16757,f16758,f16760,f16761,f16764,f16763,f16765,f16767,f16294,f16769,f16414,f16413,f16773,f16805,f16806,f16807,f16808,f16809,f16810,f16811,f16812,f16813,f16814,f16815,f16816,f16817,f16818,f16819,f16820,f16821,f16822,f16823,f16824,f16826,f16288,f16828,f16285,f16830,f15730,f16832,f15731,f16834,f15732,f16836,f16837,f16840,f16838,f16842,f16850,f16852,f16857,f16859,f16861,f16866,f16890,f16867,f16892,f16893,f16895,f16869,f16897,f16870,f16877,f16899,f16878,f16901,f16879,f16903,f16905,f8871,f16906,f8859,f16907,f8857,f16908,f8855,f16909,f8853,f16930,f8877,f16936,f16949,f16948,f15899,f16953,f16955,f16956,f16958,f16959,f189,f16963,f16965,f15892,f16966,f16967,f16968,f16969,f16970,f16960,f16972,f16977,f16980,f16995,f17243,f17008,f17255,f17009,f17010,f17259,f17021,f17267,f17022,f17269,f17023,f17271,f17024,f17273,f17027,f17275,f17028,f17277,f17029,f17279,f17030,f17281,f17035,f17283,f17036,f17285,f17037,f17287,f17038,f17289,f17046,f17047,f17058,f17067,f17076,f17306,f17077,f17308,f17078,f17310,f17079,f17312,f17082,f17314,f17083,f17316,f17084,f17318,f17085,f17320,f17088,f17322,f17089,f17324,f17090,f17326,f17091,f17328,f17096,f17330,f17097,f17332,f17098,f17334,f17099,f17336,f17102,f17338,f17103,f17340,f17104,f17342,f17105,f17344,f17108,f17346,f17109,f17348,f17110,f17350,f17111,f17352,f17114,f17118,f17354,f17119,f17356,f17120,f17358,f17121,f17360,f17124,f17362,f17125,f17364,f17126,f17366,f17127,f17368,f17130,f17370,f17131,f17372,f17132,f17374,f17133,f17376,f17154,f17378,f17156,f17381,f17159,f17383,f17160,f17385,f17161,f17387,f17162,f17389,f17170,f17391,f17171,f17172,f17395,f17188,f17399,f17189,f17257,f17192,f17401,f17195,f17403,f17196,f9716,f17197,f17198,f17407,f17199,f17409,f17200,f17411,f17201,f17413,f17208,f17209,f17294,f17213,f17415,f17214,f17417,f17215,f17419,f17216,f17421,f17217,f17423,f17218,f17425,f17219,f17427,f17220,f17429,f17221,f17431,f17222,f17433,f17223,f17435,f17224,f17437,f17225,f17439,f17226,f17441,f17230,f17443,f17231,f17232,f17447,f17233,f17449,f17460,f17445,f17463,f17292,f17466,f17405,f17486,f17393,f17489,f5415,f17500,f5409,f17514,f17241,f17517,f17239,f191,f17519,f188,f17521,f17522,f17524,f17544,f17550,f8873,f17553,f17898,f18348,f17899,f18350,f17900,f18352,f18353,f18355,f18356,f18358,f17903,f18360,f18361,f18363,f17905,f18365,f18366,f18368,f18369,f18371,f18372,f18374,f17909,f18376,f18395,f18396,f18397,f18398,f18399,f18400,f18401,f18402,f18403,f18404,f18405,f18406,f18407,f18408,f18409,f18410,f18411,f18412,f18413,f18414,f18415,f18416,f18417,f18418,f18419,f18420,f18421,f18422,f18423,f18424,f18425,f18426,f18427,f18428,f18429,f18430,f18431,f18432,f18433,f18434,f18435,f18436,f18437,f18438,f18439,f18440,f18441,f18442,f18443,f18444,f18445,f18446,f18447,f18448,f18449,f18450,f18451,f18452,f18453,f18454,f18455,f18456,f18457,f18458,f18459,f18460,f18461,f18462,f18463,f18464,f18465,f18466,f18467,f18468,f18469,f18470,f18471,f18472,f18473,f18474,f18475,f18476,f18477,f18478,f18479,f18480,f18481,f18482,f18483,f18484,f18485,f18486,f18487,f18488,f18489,f18490,f18491,f18492,f18493,f18494,f18495,f18496,f18497,f18498,f18499,f18500,f18501,f18502,f18503,f18504,f18505,f18506,f18507,f18508,f18509,f18510,f18511,f18512,f18513,f18514,f18515,f18516,f18517,f18518,f18519,f18520,f18521,f18522,f18523,f18524,f18525,f18526,f18527,f18528,f18529,f18530,f18531,f18532,f18533,f18534,f18535,f18536,f18537,f18538,f18539,f18540,f18541,f18542,f18543,f18544,f18545,f18546,f18547,f18548,f18549,f18550,f18551,f18552,f18553,f18554,f18555,f18556,f18557,f18558,f18559,f18560,f18561,f18562,f18563,f18564,f18565,f18566,f18567,f18568,f10088,f10087,f1750,f1749,f4785,f4783,f3582,f3580,f11569,f11568,f11491,f18578,f18579,f18580,f18581,f18582,f18583,f11420,f11419,f18584,f18585,f18586,f18587,f18588,f18589,f5879,f18590,f18591,f18592,f18593,f18594,f18595,f5855,f6010,f18575,f6009,f18576,f5932,f18602,f18603,f18604,f18605,f18606,f18607,f18577,f5854,f11570,f18608,f18609,f18610,f18611,f18612,f18613,f6037,f6036,f7422,f7404,f7402,f17911,f17910,f10469,f17557,f15601,f18616,f15284,f18620,f18622,f18618,f18624,f18619,f18626,f18627,f18628,f15714,f18629,f17256,f18630,f15328,f18632,f15895,f18633,f17293,f18634,f17291,f18635,f17402,f18636,f18638,f18640,f18642,f18643,f18645,f18646,f18648,f18649,f18651,f18653,f18655,f18656,f18658,f18659,f18661,f18662,f17424,f18663,f17426,f18664,f17428,f18665,f17430,f18666,f17432,f18667,f17434,f18668,f17436,f18669,f17438,f18670,f18672,f18673,f17412,f18674,f17410,f18676,f18678,f18679,f17406,f18680,f18681,f18682,f18683,f18693,f18684,f18695,f18685,f18697,f18686,f18687,f18709,f15917,f18710,f15915,f18711,f15396,f18712,f18714,f18715,f18691,f18716,f18689,f18717,f18719,f18720,f18722,f18723,f18725,f18726,f18730,f18727,f18732,f18728,f18734,f18735,f16746,f18738,f18770,f18771,f18772,f18773,f18774,f18775,f18776,f18777,f8884,f18758,f18779,f18759,f18781,f18760,f18783,f18761,f16750,f18764,f18785,f18765,f18787,f18766,f18789,f18767,f18791,f18792,f18794,f3724,f18796,f3722,f18798,f18800,f3728,f18801,f8846,f18802,f18804,f18805,f18812,f18838,f18815,f15234,f18839,f15891,f18847,f18848,f18883,f18884,f18851,f9709,f18852,f18853,f18854,f18886,f18855,f15706,f18856,f18888,f18900,f6083,f18905,f18906,f15710,f18910,f15889,f18921,f18923,f18933,f18935,f18936,f18938,f18973,f18975,f18981,f10468,f18982,f4164,f18983,f4162,f18984,f4160,f18985,f4158,f18986,f4136,f18987,f4134,f18989,f18991,f18992,f4130,f18994,f18996,f18998,f19000,f19003,f19005,f19007,f19009,f19012,f19015,f8870,f19018,f8872,f19022,f3581,f19025,f8876,f19029,f3618,f19030,f3616,f19032,f19034,f19035,f3612,f19208,f19210])).
fof(f19210,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl1024),
  inference(cnf_transformation,[],[f19210_D])).
fof(f19210_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl1024),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1024])])).
fof(f19208,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl188 | $spl328 | $spl646)),
  inference(forward_demodulation,[],[f19207,f10468])).
fof(f19207,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl188 | $spl646)),
  inference(forward_demodulation,[],[f7402,f15929])).
fof(f15929,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0') | $spl646),
  inference(cnf_transformation,[],[f15929_D])).
fof(f15929_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0') <=> ~$spl646),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl646])])).
fof(f3612,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl12),
  inference(cnf_transformation,[],[f3612_D])).
fof(f3612_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f19035,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl330 | $spl606)),
  inference(forward_demodulation,[],[f10959,f15889])).
fof(f10959,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl330),
  inference(cnf_transformation,[],[f10959_D])).
fof(f10959_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl330),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl330])])).
fof(f19034,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl1022),
  inference(cnf_transformation,[],[f19034_D])).
fof(f19034_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl1022),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1022])])).
fof(f19032,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl332 | $spl606)),
  inference(forward_demodulation,[],[f19031,f15889])).
fof(f19031,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl332 | $spl606)),
  inference(forward_demodulation,[],[f10961,f15889])).
fof(f10961,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl332),
  inference(cnf_transformation,[],[f10961_D])).
fof(f10961_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl332),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl332])])).
fof(f3616,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl16),
  inference(cnf_transformation,[],[f3616_D])).
fof(f3616_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f19030,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl334 | $spl606)),
  inference(forward_demodulation,[],[f10963,f15889])).
fof(f10963,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl334),
  inference(cnf_transformation,[],[f10963_D])).
fof(f10963_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl334),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl334])])).
fof(f3618,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl18),
  inference(cnf_transformation,[],[f3618_D])).
fof(f3618_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f19029,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl336 | $spl606)),
  inference(forward_demodulation,[],[f10965,f15889])).
fof(f10965,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl336),
  inference(cnf_transformation,[],[f10965_D])).
fof(f10965_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl336),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl336])])).
fof(f8876,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl310),
  inference(cnf_transformation,[],[f8876_D])).
fof(f8876_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl310),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl310])])).
fof(f19025,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl368 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19024,f15889])).
fof(f19024,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl368 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19023,f15889])).
fof(f19023,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl368 | $spl646)),
  inference(forward_demodulation,[],[f14974,f15929])).
fof(f14974,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl368),
  inference(cnf_transformation,[],[f14974_D])).
fof(f14974_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl368),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl368])])).
fof(f3581,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl10),
  inference(cnf_transformation,[],[f3581_D])).
fof(f3581_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f19022,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl370 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19021,f15889])).
fof(f19021,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl370 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19020,f15889])).
fof(f19020,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl370 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19019,f15889])).
fof(f19019,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl370 | $spl646)),
  inference(forward_demodulation,[],[f14976,f15929])).
fof(f14976,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl370),
  inference(cnf_transformation,[],[f14976_D])).
fof(f14976_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl370),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl370])])).
fof(f8872,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl306),
  inference(cnf_transformation,[],[f8872_D])).
fof(f8872_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f19018,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl372 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19017,f15889])).
fof(f19017,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl372 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19016,f15889])).
fof(f19016,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl372 | $spl646)),
  inference(forward_demodulation,[],[f14978,f15929])).
fof(f14978,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl372),
  inference(cnf_transformation,[],[f14978_D])).
fof(f14978_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl372),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl372])])).
fof(f8870,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl304),
  inference(cnf_transformation,[],[f8870_D])).
fof(f8870_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f19015,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl374 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19014,f15889])).
fof(f19014,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl374 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f19013,f15889])).
fof(f19013,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl374 | $spl646)),
  inference(forward_demodulation,[],[f14980,f15929])).
fof(f14980,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl374),
  inference(cnf_transformation,[],[f14980_D])).
fof(f14980_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl374),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl374])])).
fof(f19012,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl376 | $spl606)),
  inference(forward_demodulation,[],[f19011,f15889])).
fof(f19011,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl376 | $spl606)),
  inference(forward_demodulation,[],[f19010,f15889])).
fof(f19010,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl376 | $spl606)),
  inference(forward_demodulation,[],[f15090,f15889])).
fof(f15090,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl376),
  inference(cnf_transformation,[],[f15090_D])).
fof(f15090_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl376),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl376])])).
fof(f19009,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1020),
  inference(cnf_transformation,[],[f19009_D])).
fof(f19009_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1020),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1020])])).
fof(f19007,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl378 | $spl606)),
  inference(forward_demodulation,[],[f19006,f15889])).
fof(f19006,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl378 | $spl606)),
  inference(forward_demodulation,[],[f15112,f15889])).
fof(f15112,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl378),
  inference(cnf_transformation,[],[f15112_D])).
fof(f15112_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl378),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl378])])).
fof(f19005,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1018),
  inference(cnf_transformation,[],[f19005_D])).
fof(f19005_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1018),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1018])])).
fof(f19003,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl380 | $spl606)),
  inference(forward_demodulation,[],[f19002,f15889])).
fof(f19002,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl380 | $spl606)),
  inference(forward_demodulation,[],[f19001,f15889])).
fof(f19001,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl380 | $spl606)),
  inference(forward_demodulation,[],[f15114,f15889])).
fof(f15114,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl380),
  inference(cnf_transformation,[],[f15114_D])).
fof(f15114_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl380),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl380])])).
fof(f19000,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1016),
  inference(cnf_transformation,[],[f19000_D])).
fof(f19000_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1016),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1016])])).
fof(f18998,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl382 | $spl606)),
  inference(forward_demodulation,[],[f18997,f15889])).
fof(f18997,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl382 | $spl606)),
  inference(forward_demodulation,[],[f15116,f15889])).
fof(f15116,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl382),
  inference(cnf_transformation,[],[f15116_D])).
fof(f15116_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl382),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl382])])).
fof(f18996,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1014),
  inference(cnf_transformation,[],[f18996_D])).
fof(f18996_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1014),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1014])])).
fof(f18994,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl384 | $spl606)),
  inference(forward_demodulation,[],[f18993,f15889])).
fof(f18993,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl384 | $spl606)),
  inference(forward_demodulation,[],[f15118,f15889])).
fof(f15118,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl384),
  inference(cnf_transformation,[],[f15118_D])).
fof(f15118_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl384),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl384])])).
fof(f4130,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl40),
  inference(cnf_transformation,[],[f4130_D])).
fof(f4130_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f18992,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl386 | $spl606)),
  inference(forward_demodulation,[],[f15134,f15889])).
fof(f15134,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl386),
  inference(cnf_transformation,[],[f15134_D])).
fof(f15134_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl386),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl386])])).
fof(f18991,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1012),
  inference(cnf_transformation,[],[f18991_D])).
fof(f18991_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1012),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1012])])).
fof(f18989,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl388 | $spl606 | $spl640)),
  inference(forward_demodulation,[],[f18988,f15923])).
fof(f15923,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl640),
  inference(cnf_transformation,[],[f15923_D])).
fof(f15923_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl640),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl640])])).
fof(f18988,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl388 | $spl606)),
  inference(forward_demodulation,[],[f15136,f15889])).
fof(f15136,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl388),
  inference(cnf_transformation,[],[f15136_D])).
fof(f15136_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl388),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl388])])).
fof(f4134,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl44),
  inference(cnf_transformation,[],[f4134_D])).
fof(f4134_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f18987,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl390 | $spl606)),
  inference(forward_demodulation,[],[f15138,f15889])).
fof(f15138,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl390),
  inference(cnf_transformation,[],[f15138_D])).
fof(f15138_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl390),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl390])])).
fof(f4136,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl46),
  inference(cnf_transformation,[],[f4136_D])).
fof(f4136_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f18986,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl392 | $spl606)),
  inference(forward_demodulation,[],[f15140,f15889])).
fof(f15140,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl392),
  inference(cnf_transformation,[],[f15140_D])).
fof(f15140_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl392),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl392])])).
fof(f4158,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl48),
  inference(cnf_transformation,[],[f4158_D])).
fof(f4158_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f18985,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl394 | $spl606)),
  inference(forward_demodulation,[],[f15156,f15889])).
fof(f15156,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl394),
  inference(cnf_transformation,[],[f15156_D])).
fof(f15156_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl394),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl394])])).
fof(f4160,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl50),
  inference(cnf_transformation,[],[f4160_D])).
fof(f4160_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f18984,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl396 | $spl606)),
  inference(forward_demodulation,[],[f15158,f15889])).
fof(f15158,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl396),
  inference(cnf_transformation,[],[f15158_D])).
fof(f15158_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl396),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl396])])).
fof(f4162,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl52),
  inference(cnf_transformation,[],[f4162_D])).
fof(f4162_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f18983,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl398 | $spl606)),
  inference(forward_demodulation,[],[f15160,f15889])).
fof(f15160,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl398),
  inference(cnf_transformation,[],[f15160_D])).
fof(f15160_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl398),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl398])])).
fof(f4164,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl54),
  inference(cnf_transformation,[],[f4164_D])).
fof(f4164_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f18982,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl400 | $spl606)),
  inference(forward_demodulation,[],[f15162,f15889])).
fof(f15162,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl400),
  inference(cnf_transformation,[],[f15162_D])).
fof(f15162_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl400),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl400])])).
fof(f10468,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl328),
  inference(cnf_transformation,[],[f10468_D])).
fof(f10468_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl328),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl328])])).
fof(f18981,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl410 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f18980,f15889])).
fof(f18980,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl410 | $spl646)),
  inference(forward_demodulation,[],[f15234,f15929])).
fof(f18975,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1010),
  inference(cnf_transformation,[],[f18975_D])).
fof(f18975_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1010),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1010])])).
fof(f18973,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl420 | $spl606 | $spl646)),
  inference(forward_demodulation,[],[f18972,f15889])).
fof(f18972,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl420 | $spl646)),
  inference(forward_demodulation,[],[f15284,f15929])).
fof(f18938,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl1008),
  inference(cnf_transformation,[],[f18938_D])).
fof(f18938_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl1008),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1008])])).
fof(f18936,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl584 | $spl606)),
  inference(forward_demodulation,[],[f15716,f15889])).
fof(f15716,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl584),
  inference(cnf_transformation,[],[f15716_D])).
fof(f15716_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl584),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl584])])).
fof(f18935,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1006),
  inference(cnf_transformation,[],[f18935_D])).
fof(f18935_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1006),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1006])])).
fof(f18933,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl586 | $spl606)),
  inference(forward_demodulation,[],[f15718,f15889])).
fof(f15718,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl586),
  inference(cnf_transformation,[],[f15718_D])).
fof(f15718_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl586),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl586])])).
fof(f18923,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl1005),
  inference(cnf_transformation,[],[f18923_D])).
fof(f18923_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl1005),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1005])])).
fof(f18921,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl273 | $spl606 | $spl640)),
  inference(forward_demodulation,[],[f18913,f15923])).
fof(f18913,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl273 | $spl606)),
  inference(backward_demodulation,[],[f15889,f8839])).
fof(f15889,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl606),
  inference(cnf_transformation,[],[f15889_D])).
fof(f15889_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl606),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl606])])).
fof(f18910,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl608 | $spl646)),
  inference(forward_demodulation,[],[f15891,f15929])).
fof(f15710,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl578),
  inference(cnf_transformation,[],[f15710_D])).
fof(f15710_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl578),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl578])])).
fof(f18906,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl618 | $spl646)),
  inference(forward_demodulation,[],[f15901,f15929])).
fof(f15901,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl618),
  inference(cnf_transformation,[],[f15901_D])).
fof(f15901_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl618),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl618])])).
fof(f18905,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl620 | $spl624)),
  inference(backward_demodulation,[],[f15903,f15907])).
fof(f15907,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl624),
  inference(cnf_transformation,[],[f15907_D])).
fof(f15907_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl624),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl624])])).
fof(f15903,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl620),
  inference(cnf_transformation,[],[f15903_D])).
fof(f15903_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl620),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl620])])).
fof(f6083,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl90),
  inference(cnf_transformation,[],[f6083_D])).
fof(f6083_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f18900,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl186 | $spl646 | $spl650 | $spl896)),
  inference(backward_demodulation,[],[f18899,f7363])).
fof(f18899,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | ($spl646 | $spl650 | $spl896)),
  inference(forward_demodulation,[],[f18871,f207])).
fof(f207,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|6')).
fof(f18871,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | ($spl646 | $spl650 | $spl896)),
  inference(backward_demodulation,[],[f15929,f18826])).
fof(f18826,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | ($spl650 | $spl896)),
  inference(backward_demodulation,[],[f16746,f17922])).
fof(f17922,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl896),
  inference(superposition,[],[f263,f17521])).
fof(f263,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f130])).
fof(f130,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X14,X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|8')).
fof(f18888,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1002),
  inference(cnf_transformation,[],[f18888_D])).
fof(f18888_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1002),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1002])])).
fof(f18856,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl884)),
  inference(backward_demodulation,[],[f15929,f17440])).
fof(f17440,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl884),
  inference(cnf_transformation,[],[f17440_D])).
fof(f17440_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl884),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl884])])).
fof(f15706,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl574),
  inference(cnf_transformation,[],[f15706_D])).
fof(f15706_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl574),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl574])])).
fof(f18855,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl842)),
  inference(backward_demodulation,[],[f15929,f17398])).
fof(f17398,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl842),
  inference(cnf_transformation,[],[f17398_D])).
fof(f17398_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl842),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl842])])).
fof(f18886,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl1000),
  inference(cnf_transformation,[],[f18886_D])).
fof(f18886_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl1000),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1000])])).
fof(f18854,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl824)),
  inference(backward_demodulation,[],[f15929,f17378])).
fof(f18853,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl722)),
  inference(backward_demodulation,[],[f15929,f17258])).
fof(f17258,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl722),
  inference(cnf_transformation,[],[f17258_D])).
fof(f17258_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl722),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl722])])).
fof(f18852,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl720)),
  inference(backward_demodulation,[],[f15929,f17256])).
fof(f9709,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl320),
  inference(cnf_transformation,[],[f9709_D])).
fof(f9709_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl320),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl320])])).
fof(f18851,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl718)),
  inference(backward_demodulation,[],[f15929,f17254])).
fof(f17254,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl718),
  inference(cnf_transformation,[],[f17254_D])).
fof(f17254_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl718),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl718])])).
fof(f18884,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl646 | $spl702)),
  inference(forward_demodulation,[],[f18849,f187])).
fof(f187,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f48])).
fof(f48,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.prim_rec.PRE|split|0')).
fof(f18849,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl646 | $spl702)),
  inference(backward_demodulation,[],[f15929,f16903])).
fof(f18883,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl998),
  inference(cnf_transformation,[],[f18883_D])).
fof(f18883_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl998),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl998])])).
fof(f18848,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl646 | $spl696)),
  inference(backward_demodulation,[],[f15929,f16896])).
fof(f16896,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl696),
  inference(cnf_transformation,[],[f16896_D])).
fof(f16896_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl696),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl696])])).
fof(f18847,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl646 | $spl650)),
  inference(backward_demodulation,[],[f15929,f16746])).
fof(f15891,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl608),
  inference(cnf_transformation,[],[f15891_D])).
fof(f15891_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl608),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl608])])).
fof(f18839,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl648 | $spl650)),
  inference(forward_demodulation,[],[f15932,f16746])).
fof(f15234,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl410),
  inference(cnf_transformation,[],[f15234_D])).
fof(f15234_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl410),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl410])])).
fof(f18815,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl650 | $spl896)),
  inference(backward_demodulation,[],[f16746,f17521])).
fof(f18838,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl996),
  inference(cnf_transformation,[],[f18838_D])).
fof(f18838_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl996),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl996])])).
fof(f18812,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl650 | $spl660)),
  inference(backward_demodulation,[],[f16746,f16757])).
fof(f18805,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl660 | $spl672)),
  inference(backward_demodulation,[],[f16757,f16828])).
fof(f18804,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl994),
  inference(cnf_transformation,[],[f18804_D])).
fof(f18804_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl994),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl994])])).
fof(f18802,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl672 | $spl910)),
  inference(backward_demodulation,[],[f16828,f18360])).
fof(f8846,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl280),
  inference(cnf_transformation,[],[f8846_D])).
fof(f8846_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f18801,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl676 | $spl696)),
  inference(forward_demodulation,[],[f16831,f16896])).
fof(f16831,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl676),
  inference(cnf_transformation,[],[f16831_D])).
fof(f16831_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl676),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl676])])).
fof(f3728,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl30),
  inference(cnf_transformation,[],[f3728_D])).
fof(f3728_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f18800,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl678 | $spl696 | $spl722)),
  inference(forward_demodulation,[],[f18799,f17258])).
fof(f18799,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl678 | $spl696)),
  inference(forward_demodulation,[],[f16833,f16896])).
fof(f16833,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl678),
  inference(cnf_transformation,[],[f16833_D])).
fof(f16833_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl678),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl678])])).
fof(f18798,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl680 | $spl696 | $spl720)),
  inference(forward_demodulation,[],[f18797,f17256])).
fof(f18797,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl680 | $spl696)),
  inference(forward_demodulation,[],[f16835,f16896])).
fof(f16835,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl680),
  inference(cnf_transformation,[],[f16835_D])).
fof(f16835_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl680),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl680])])).
fof(f3722,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl24),
  inference(cnf_transformation,[],[f3722_D])).
fof(f3722_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f18796,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl682 | $spl696 | $spl718)),
  inference(forward_demodulation,[],[f18795,f17254])).
fof(f18795,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl682 | $spl696)),
  inference(forward_demodulation,[],[f16839,f16896])).
fof(f16839,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl682),
  inference(cnf_transformation,[],[f16839_D])).
fof(f16839_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl682),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl682])])).
fof(f3724,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl26),
  inference(cnf_transformation,[],[f3724_D])).
fof(f3724_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f18794,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl684 | $spl696 | $spl720)),
  inference(forward_demodulation,[],[f18793,f17256])).
fof(f18793,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl684 | $spl696)),
  inference(forward_demodulation,[],[f16841,f16896])).
fof(f16841,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl684),
  inference(cnf_transformation,[],[f16841_D])).
fof(f16841_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl684),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl684])])).
fof(f18792,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl686 | $spl696)),
  inference(forward_demodulation,[],[f16851,f16896])).
fof(f16851,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl686),
  inference(cnf_transformation,[],[f16851_D])).
fof(f16851_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl686),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl686])])).
fof(f18791,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl992),
  inference(cnf_transformation,[],[f18791_D])).
fof(f18791_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl992),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl992])])).
fof(f18767,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl688 | $spl922)),
  inference(backward_demodulation,[],[f16861,f18376])).
fof(f18789,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl990),
  inference(cnf_transformation,[],[f18789_D])).
fof(f18789_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl990),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl990])])).
fof(f18766,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl688 | $spl918)),
  inference(backward_demodulation,[],[f16861,f18371])).
fof(f18787,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | $spl988),
  inference(cnf_transformation,[],[f18787_D])).
fof(f18787_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl988),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl988])])).
fof(f18765,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl688 | $spl916)),
  inference(backward_demodulation,[],[f16861,f18368])).
fof(f18785,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl986),
  inference(cnf_transformation,[],[f18785_D])).
fof(f18785_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl986),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl986])])).
fof(f18764,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl688 | $spl914)),
  inference(backward_demodulation,[],[f16861,f18365])).
fof(f16750,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl654),
  inference(cnf_transformation,[],[f16750_D])).
fof(f16750_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl654),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl654])])).
fof(f18761,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl688 | $spl708)),
  inference(backward_demodulation,[],[f16861,f16963])).
fof(f18783,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl984),
  inference(cnf_transformation,[],[f18783_D])).
fof(f18783_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl984),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl984])])).
fof(f18760,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl688 | $spl704)),
  inference(backward_demodulation,[],[f16861,f16955])).
fof(f18781,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl982),
  inference(cnf_transformation,[],[f18781_D])).
fof(f18781_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl982),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl982])])).
fof(f18759,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl668 | $spl688)),
  inference(backward_demodulation,[],[f16861,f16769])).
fof(f18779,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl980),
  inference(cnf_transformation,[],[f18779_D])).
fof(f18779_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl980),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl980])])).
fof(f18758,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl664 | $spl688)),
  inference(backward_demodulation,[],[f16861,f16763])).
fof(f8884,plain,(
  ~p(s(bool,'T_0')) | $spl313),
  inference(cnf_transformation,[],[f8884_D])).
fof(f8884_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl313),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl313])])).
fof(f18777,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748,f18772,f18750,f18773,f18751,f18774,f18752,f18775,f18753,f18755,f18776,f18757])).
fof(f18757,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f274])).
fof(f274,plain,(
  ( ! [X0,X1] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|4')).
fof(f18755,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f272])).
fof(f272,plain,(
  ( ! [X0,X1] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f138])).
fof(f138,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f74])).
fof(f74,axiom,(
  ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|5')).
fof(f18753,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f265])).
fof(f265,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X14,X13] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|10')).
fof(f18752,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f252])).
fof(f252,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'F_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(flattening,[],[f170])).
fof(f170,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'F_0'))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,X0)) & p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : ((p(s(bool,X6)) & p(s(bool,'F_0'))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.AND_CLAUSES|split|3')).
fof(f18751,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | p(s(bool,X0))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f244])).
fof(f244,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f165])).
fof(f165,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | ~p(s(bool,X0)) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f164])).
fof(f164,plain,(
  ! [X0] : (((~p(s(bool,'F_0')) | ~p(s(bool,X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | (p(s(bool,'F_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0] : ((p(s(bool,'F_0')) & p(s(bool,X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ((p(s(bool,'F_0')) & p(s(bool,X6))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.AND_CLAUSES|split|2')).
fof(f18750,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f232])).
fof(f232,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f69])).
fof(f69,axiom,(
  ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|0')).
fof(f18748,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f230])).
fof(f230,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f157])).
fof(f157,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f70])).
fof(f70,axiom,(
  ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|1')).
fof(f18746,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f228])).
fof(f228,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f156])).
fof(f156,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f71])).
fof(f71,axiom,(
  ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|2')).
fof(f18744,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f226])).
fof(f226,plain,(
  ( ! [X0] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) <=> p(s(bool,'F_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|3')).
fof(f18742,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f221])).
fof(f221,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X14] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|3')).
fof(f18741,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f215])).
fof(f215,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X14] : s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|4')).
fof(f18740,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f199])).
fof(f199,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X14] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|23')).
fof(f18739,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl688),
  inference(backward_demodulation,[],[f16861,f198])).
fof(f198,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f53])).
fof(f53,axiom,(
  ! [X14] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|20')).
fof(f18776,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748,f18772,f18750,f18773,f18751,f18774,f18752,f18775,f18753,f18755])).
fof(f18775,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748,f18772,f18750,f18773,f18751,f18774,f18752])).
fof(f18774,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748,f18772,f18750,f18773,f18751])).
fof(f18773,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748,f18772,f18750])).
fof(f18772,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746,f18771,f18748])).
fof(f18771,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744,f18770,f18746])).
fof(f18770,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(global_subsumption,[],[f183,f189,f191,f188,f16861,f18738,f18739,f18740,f18741,f18742,f18744])).
fof(f18738,plain,(
  ~p(s(bool,'T_0')) | $spl688),
  inference(backward_demodulation,[],[f16861,f196])).
fof(f196,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.frac.FRAC_|49|_|48|',aHL_FALSITY)).
fof(f16746,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl650),
  inference(cnf_transformation,[],[f16746_D])).
fof(f16746_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl650),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl650])])).
fof(f18735,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl694 | $spl696)),
  inference(forward_demodulation,[],[f16894,f16896])).
fof(f16894,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl694),
  inference(cnf_transformation,[],[f16894_D])).
fof(f16894_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl694),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl694])])).
fof(f18734,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl978),
  inference(cnf_transformation,[],[f18734_D])).
fof(f18734_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl978),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl978])])).
fof(f18728,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl616 | $spl696)),
  inference(backward_demodulation,[],[f16896,f15899])).
fof(f18732,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl976),
  inference(cnf_transformation,[],[f18732_D])).
fof(f18732_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl976),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl976])])).
fof(f18727,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl296 | $spl696)),
  inference(backward_demodulation,[],[f16896,f8862])).
fof(f8862,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl296),
  inference(cnf_transformation,[],[f8862_D])).
fof(f8862_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f18730,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl974),
  inference(cnf_transformation,[],[f18730_D])).
fof(f18730_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl974),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl974])])).
fof(f18726,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl294 | $spl696)),
  inference(backward_demodulation,[],[f16896,f8860])).
fof(f8860,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl294),
  inference(cnf_transformation,[],[f8860_D])).
fof(f8860_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl294),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl294])])).
fof(f18725,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl972),
  inference(cnf_transformation,[],[f18725_D])).
fof(f18725_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl972),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl972])])).
fof(f18723,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl710 | $spl718)),
  inference(forward_demodulation,[],[f16972,f17254])).
fof(f18722,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl970),
  inference(cnf_transformation,[],[f18722_D])).
fof(f18722_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl970),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl970])])).
fof(f18720,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl712 | $spl718)),
  inference(forward_demodulation,[],[f17239,f17254])).
fof(f18719,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl968),
  inference(cnf_transformation,[],[f18719_D])).
fof(f18719_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl968),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl968])])).
fof(f18717,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl722 | $spl822)),
  inference(forward_demodulation,[],[f18708,f17258])).
fof(f18708,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl720 | $spl822)),
  inference(backward_demodulation,[],[f17256,f17375])).
fof(f17375,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl822),
  inference(cnf_transformation,[],[f17375_D])).
fof(f17375_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl822),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl822])])).
fof(f18689,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl956),
  inference(cnf_transformation,[],[f18689_D])).
fof(f18689_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl956),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl956])])).
fof(f18716,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl722 | $spl820)),
  inference(forward_demodulation,[],[f18707,f17258])).
fof(f18707,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl720 | $spl820)),
  inference(backward_demodulation,[],[f17256,f17373])).
fof(f17373,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl820),
  inference(cnf_transformation,[],[f17373_D])).
fof(f17373_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl820),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl820])])).
fof(f18691,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl958),
  inference(cnf_transformation,[],[f18691_D])).
fof(f18691_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl958),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl958])])).
fof(f18715,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl722 | $spl818)),
  inference(forward_demodulation,[],[f18706,f17258])).
fof(f18706,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl720 | $spl818)),
  inference(backward_demodulation,[],[f17256,f17371])).
fof(f17371,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl818),
  inference(cnf_transformation,[],[f17371_D])).
fof(f17371_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl818),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl818])])).
fof(f18714,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl966),
  inference(cnf_transformation,[],[f18714_D])).
fof(f18714_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl966),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl966])])).
fof(f18712,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl722 | $spl816)),
  inference(forward_demodulation,[],[f18705,f17258])).
fof(f18705,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl720 | $spl816)),
  inference(backward_demodulation,[],[f17256,f17369])).
fof(f17369,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl816),
  inference(cnf_transformation,[],[f17369_D])).
fof(f17369_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl816),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl816])])).
fof(f15396,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl468),
  inference(cnf_transformation,[],[f15396_D])).
fof(f15396_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl468),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl468])])).
fof(f18711,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl720 | $spl722 | $spl744)),
  inference(forward_demodulation,[],[f18703,f17258])).
fof(f18703,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl744)),
  inference(backward_demodulation,[],[f17256,f17286])).
fof(f17286,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl744),
  inference(cnf_transformation,[],[f17286_D])).
fof(f17286_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl744),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl744])])).
fof(f15915,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl632),
  inference(cnf_transformation,[],[f15915_D])).
fof(f15915_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl632),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl632])])).
fof(f18710,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl720 | $spl722 | $spl742)),
  inference(forward_demodulation,[],[f18702,f17258])).
fof(f18702,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl742)),
  inference(backward_demodulation,[],[f17256,f17284])).
fof(f17284,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl742),
  inference(cnf_transformation,[],[f17284_D])).
fof(f17284_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl742),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl742])])).
fof(f15917,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl634),
  inference(cnf_transformation,[],[f15917_D])).
fof(f15917_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl634),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl634])])).
fof(f18709,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl720 | $spl722 | $spl740)),
  inference(forward_demodulation,[],[f18701,f17258])).
fof(f18701,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl720 | $spl740)),
  inference(backward_demodulation,[],[f17256,f17282])).
fof(f17282,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl740),
  inference(cnf_transformation,[],[f17282_D])).
fof(f17282_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl740),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl740])])).
fof(f18687,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl462 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15326])).
fof(f15326,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl462),
  inference(cnf_transformation,[],[f15326_D])).
fof(f15326_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl462),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl462])])).
fof(f18686,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl458 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15322])).
fof(f15322,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl458),
  inference(cnf_transformation,[],[f15322_D])).
fof(f15322_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl458),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl458])])).
fof(f18697,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl964),
  inference(cnf_transformation,[],[f18697_D])).
fof(f18697_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl964),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl964])])).
fof(f18685,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl446 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15310])).
fof(f15310,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl446),
  inference(cnf_transformation,[],[f15310_D])).
fof(f15310_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl446),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl446])])).
fof(f18695,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl962),
  inference(cnf_transformation,[],[f18695_D])).
fof(f18695_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl962),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl962])])).
fof(f18684,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl442 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15306])).
fof(f15306,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl442),
  inference(cnf_transformation,[],[f15306_D])).
fof(f15306_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl442),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl442])])).
fof(f18693,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl960),
  inference(cnf_transformation,[],[f18693_D])).
fof(f18693_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl960),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl960])])).
fof(f18683,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl440 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15304])).
fof(f15304,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl440),
  inference(cnf_transformation,[],[f15304_D])).
fof(f15304_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl440),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl440])])).
fof(f18682,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl428 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15292])).
fof(f15292,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl428),
  inference(cnf_transformation,[],[f15292_D])).
fof(f15292_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl428),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl428])])).
fof(f18681,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl426 | $spl722)),
  inference(backward_demodulation,[],[f17258,f15290])).
fof(f15290,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl426),
  inference(cnf_transformation,[],[f15290_D])).
fof(f15290_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl426),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl426])])).
fof(f18680,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl278 | $spl722)),
  inference(backward_demodulation,[],[f17258,f8844])).
fof(f8844,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl278),
  inference(cnf_transformation,[],[f8844_D])).
fof(f8844_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f17406,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl850),
  inference(cnf_transformation,[],[f17406_D])).
fof(f17406_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl850),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl850])])).
fof(f18679,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl724 | $spl750)),
  inference(forward_demodulation,[],[f17266,f17293])).
fof(f17266,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl724),
  inference(cnf_transformation,[],[f17266_D])).
fof(f17266_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl724),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl724])])).
fof(f18678,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl954),
  inference(cnf_transformation,[],[f18678_D])).
fof(f18678_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl954),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl954])])).
fof(f18676,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl726 | $spl750 | $spl842)),
  inference(forward_demodulation,[],[f18675,f17398])).
fof(f18675,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl726 | $spl750)),
  inference(forward_demodulation,[],[f17268,f17293])).
fof(f17268,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl726),
  inference(cnf_transformation,[],[f17268_D])).
fof(f17268_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl726),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl726])])).
fof(f17410,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl854),
  inference(cnf_transformation,[],[f17410_D])).
fof(f17410_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl854),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl854])])).
fof(f18674,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl728 | $spl750)),
  inference(forward_demodulation,[],[f17270,f17293])).
fof(f17270,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl728),
  inference(cnf_transformation,[],[f17270_D])).
fof(f17270_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl728),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl728])])).
fof(f17412,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl856),
  inference(cnf_transformation,[],[f17412_D])).
fof(f17412_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl856),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl856])])).
fof(f18673,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl730 | $spl750)),
  inference(forward_demodulation,[],[f17272,f17293])).
fof(f17272,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl730),
  inference(cnf_transformation,[],[f17272_D])).
fof(f17272_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl730),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl730])])).
fof(f18672,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl952),
  inference(cnf_transformation,[],[f18672_D])).
fof(f18672_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl952),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl952])])).
fof(f18670,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl734 | $spl892)),
  inference(forward_demodulation,[],[f17276,f17448])).
fof(f17448,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl892),
  inference(cnf_transformation,[],[f17448_D])).
fof(f17448_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl892),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl892])])).
fof(f17276,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl734),
  inference(cnf_transformation,[],[f17276_D])).
fof(f17276_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl734),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl734])])).
fof(f17438,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl882),
  inference(cnf_transformation,[],[f17438_D])).
fof(f17438_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl882),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl882])])).
fof(f18669,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl774)),
  inference(backward_demodulation,[],[f17293,f17327])).
fof(f17327,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl774),
  inference(cnf_transformation,[],[f17327_D])).
fof(f17327_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl774),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl774])])).
fof(f17436,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl880),
  inference(cnf_transformation,[],[f17436_D])).
fof(f17436_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl880),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl880])])).
fof(f18668,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl772)),
  inference(backward_demodulation,[],[f17293,f17325])).
fof(f17325,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl772),
  inference(cnf_transformation,[],[f17325_D])).
fof(f17325_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl772),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl772])])).
fof(f17434,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl878),
  inference(cnf_transformation,[],[f17434_D])).
fof(f17434_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl878),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl878])])).
fof(f18667,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl770)),
  inference(backward_demodulation,[],[f17293,f17323])).
fof(f17323,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl770),
  inference(cnf_transformation,[],[f17323_D])).
fof(f17323_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl770),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl770])])).
fof(f17432,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl876),
  inference(cnf_transformation,[],[f17432_D])).
fof(f17432_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl876),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl876])])).
fof(f18666,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl768)),
  inference(backward_demodulation,[],[f17293,f17321])).
fof(f17321,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl768),
  inference(cnf_transformation,[],[f17321_D])).
fof(f17321_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl768),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl768])])).
fof(f17430,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl874),
  inference(cnf_transformation,[],[f17430_D])).
fof(f17430_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl874),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl874])])).
fof(f18665,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl766)),
  inference(backward_demodulation,[],[f17293,f17319])).
fof(f17319,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl766),
  inference(cnf_transformation,[],[f17319_D])).
fof(f17319_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl766),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl766])])).
fof(f17428,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl872),
  inference(cnf_transformation,[],[f17428_D])).
fof(f17428_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl872),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl872])])).
fof(f18664,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl764)),
  inference(backward_demodulation,[],[f17293,f17317])).
fof(f17317,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl764),
  inference(cnf_transformation,[],[f17317_D])).
fof(f17317_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl764),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl764])])).
fof(f17426,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl870),
  inference(cnf_transformation,[],[f17426_D])).
fof(f17426_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl870),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl870])])).
fof(f18663,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl762)),
  inference(backward_demodulation,[],[f17293,f17315])).
fof(f17315,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl762),
  inference(cnf_transformation,[],[f17315_D])).
fof(f17315_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl762),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl762])])).
fof(f17424,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl868),
  inference(cnf_transformation,[],[f17424_D])).
fof(f17424_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl868),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl868])])).
fof(f18662,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl750 | $spl760)),
  inference(backward_demodulation,[],[f17293,f17313])).
fof(f17313,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl760),
  inference(cnf_transformation,[],[f17313_D])).
fof(f17313_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl760),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl760])])).
fof(f18661,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl950),
  inference(cnf_transformation,[],[f18661_D])).
fof(f18661_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl950),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl950])])).
fof(f18659,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl752 | $spl842)),
  inference(forward_demodulation,[],[f17305,f17398])).
fof(f17305,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl752),
  inference(cnf_transformation,[],[f17305_D])).
fof(f17305_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl752),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl752])])).
fof(f18658,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl948),
  inference(cnf_transformation,[],[f18658_D])).
fof(f18658_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl948),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl948])])).
fof(f18656,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl754 | $spl842)),
  inference(forward_demodulation,[],[f17307,f17398])).
fof(f17307,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl754),
  inference(cnf_transformation,[],[f17307_D])).
fof(f17307_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl754),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl754])])).
fof(f18655,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl946),
  inference(cnf_transformation,[],[f18655_D])).
fof(f18655_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl946),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl946])])).
fof(f18653,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl616 | $spl756 | $spl842)),
  inference(forward_demodulation,[],[f18652,f15899])).
fof(f18652,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl756 | $spl842)),
  inference(forward_demodulation,[],[f17309,f17398])).
fof(f17309,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl756),
  inference(cnf_transformation,[],[f17309_D])).
fof(f17309_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl756),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl756])])).
fof(f18651,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl944),
  inference(cnf_transformation,[],[f18651_D])).
fof(f18651_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl944),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl944])])).
fof(f18649,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl758 | $spl842)),
  inference(forward_demodulation,[],[f17311,f17398])).
fof(f17311,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl758),
  inference(cnf_transformation,[],[f17311_D])).
fof(f17311_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl758),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl758])])).
fof(f18648,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl942),
  inference(cnf_transformation,[],[f18648_D])).
fof(f18648_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl942),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl942])])).
fof(f18646,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl776 | $spl892)),
  inference(forward_demodulation,[],[f17329,f17448])).
fof(f17329,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl776),
  inference(cnf_transformation,[],[f17329_D])).
fof(f17329_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl776),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl776])])).
fof(f18645,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl940),
  inference(cnf_transformation,[],[f18645_D])).
fof(f18645_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl940),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl940])])).
fof(f18643,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl778 | $spl892)),
  inference(forward_demodulation,[],[f17331,f17448])).
fof(f17331,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl778),
  inference(cnf_transformation,[],[f17331_D])).
fof(f17331_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl778),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl778])])).
fof(f18642,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl938),
  inference(cnf_transformation,[],[f18642_D])).
fof(f18642_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl938),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl938])])).
fof(f18640,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl616 | $spl780 | $spl892)),
  inference(forward_demodulation,[],[f18639,f15899])).
fof(f18639,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl780 | $spl892)),
  inference(forward_demodulation,[],[f17333,f17448])).
fof(f17333,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl780),
  inference(cnf_transformation,[],[f17333_D])).
fof(f17333_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl780),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl780])])).
fof(f18638,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl936),
  inference(cnf_transformation,[],[f18638_D])).
fof(f18638_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl936),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl936])])).
fof(f18636,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl782 | $spl892)),
  inference(forward_demodulation,[],[f17335,f17448])).
fof(f17335,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl782),
  inference(cnf_transformation,[],[f17335_D])).
fof(f17335_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl782),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl782])])).
fof(f17402,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl846),
  inference(cnf_transformation,[],[f17402_D])).
fof(f17402_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl846),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl846])])).
fof(f18635,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl826 | $spl884)),
  inference(forward_demodulation,[],[f17380,f17440])).
fof(f17380,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl826),
  inference(cnf_transformation,[],[f17380_D])).
fof(f17380_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl826])])).
fof(f17291,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl748),
  inference(cnf_transformation,[],[f17291_D])).
fof(f17291_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl748),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl748])])).
fof(f18634,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl828 | $spl842)),
  inference(forward_demodulation,[],[f17382,f17398])).
fof(f17382,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl828),
  inference(cnf_transformation,[],[f17382_D])).
fof(f17382_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl828),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl828])])).
fof(f17293,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl750),
  inference(cnf_transformation,[],[f17293_D])).
fof(f17293_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl750),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl750])])).
fof(f18633,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl830 | $spl842)),
  inference(forward_demodulation,[],[f17384,f17398])).
fof(f17384,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl830),
  inference(cnf_transformation,[],[f17384_D])).
fof(f17384_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl830),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl830])])).
fof(f15895,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl612),
  inference(cnf_transformation,[],[f15895_D])).
fof(f15895_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl612),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl612])])).
fof(f18632,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl616 | $spl832 | $spl842)),
  inference(forward_demodulation,[],[f18631,f15899])).
fof(f18631,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl832 | $spl842)),
  inference(forward_demodulation,[],[f17386,f17398])).
fof(f17386,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl832),
  inference(cnf_transformation,[],[f17386_D])).
fof(f17386_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl832),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl832])])).
fof(f15328,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl464),
  inference(cnf_transformation,[],[f15328_D])).
fof(f15328_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl464),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl464])])).
fof(f18630,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl834 | $spl842)),
  inference(forward_demodulation,[],[f17388,f17398])).
fof(f17388,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl834),
  inference(cnf_transformation,[],[f17388_D])).
fof(f17388_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl834),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl834])])).
fof(f17256,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl720),
  inference(cnf_transformation,[],[f17256_D])).
fof(f17256_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl720),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl720])])).
fof(f18629,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl836 | $spl842)),
  inference(forward_demodulation,[],[f17390,f17398])).
fof(f17390,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl836),
  inference(cnf_transformation,[],[f17390_D])).
fof(f17390_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl836),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl836])])).
fof(f15714,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl582),
  inference(cnf_transformation,[],[f15714_D])).
fof(f15714_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl582),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl582])])).
fof(f18628,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl840 | $spl884)),
  inference(forward_demodulation,[],[f17394,f17440])).
fof(f17394,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl840),
  inference(cnf_transformation,[],[f17394_D])).
fof(f17394_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl840),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl840])])).
fof(f18627,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl886 | $spl892)),
  inference(forward_demodulation,[],[f17442,f17448])).
fof(f17442,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl886),
  inference(cnf_transformation,[],[f17442_D])).
fof(f17442_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl886),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl886])])).
fof(f18626,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl934),
  inference(cnf_transformation,[],[f18626_D])).
fof(f18626_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl934),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl934])])).
fof(f18619,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl258 | $spl892)),
  inference(backward_demodulation,[],[f17448,f8824])).
fof(f8824,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl258),
  inference(cnf_transformation,[],[f8824_D])).
fof(f8824_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl258),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl258])])).
fof(f18624,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl932),
  inference(cnf_transformation,[],[f18624_D])).
fof(f18624_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl932),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl932])])).
fof(f18618,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl256 | $spl892)),
  inference(backward_demodulation,[],[f17448,f8822])).
fof(f8822,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl256),
  inference(cnf_transformation,[],[f8822_D])).
fof(f8822_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl256),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl256])])).
fof(f18622,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl930),
  inference(cnf_transformation,[],[f18622_D])).
fof(f18622_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl930),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl930])])).
fof(f18620,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl254 | $spl616 | $spl892)),
  inference(forward_demodulation,[],[f18617,f15899])).
fof(f18617,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl254 | $spl892)),
  inference(backward_demodulation,[],[f17448,f8820])).
fof(f8820,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl254),
  inference(cnf_transformation,[],[f8820_D])).
fof(f8820_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl254),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl254])])).
fof(f15284,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl420),
  inference(cnf_transformation,[],[f15284_D])).
fof(f15284_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl420),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl420])])).
fof(f18616,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl252 | $spl892)),
  inference(backward_demodulation,[],[f17448,f8818])).
fof(f8818,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl252),
  inference(cnf_transformation,[],[f8818_D])).
fof(f8818_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl252),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl252])])).
fof(f15601,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl559),
  inference(cnf_transformation,[],[f15601_D])).
fof(f15601_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl559),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl559])])).
fof(f17557,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl269 | $spl294)),
  inference(backward_demodulation,[],[f8860,f8835])).
fof(f10469,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl329),
  inference(cnf_transformation,[],[f10469_D])).
fof(f10469_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl329),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl329])])).
fof(f17910,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl896),
  inference(superposition,[],[f233,f17521])).
fof(f233,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X14] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|17')).
fof(f17911,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl896),
  inference(superposition,[],[f235,f17521])).
fof(f235,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X14] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|18')).
fof(f7402,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl188),
  inference(cnf_transformation,[],[f7402_D])).
fof(f7402_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f7404,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl191),
  inference(cnf_transformation,[],[f7404_D])).
fof(f7404_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl191),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl191])])).
fof(f7422,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(superposition,[],[f5774,f188])).
fof(f5774,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(superposition,[],[f3707,f188])).
fof(f3707,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3682,f1942])).
fof(f1942,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f689,f284])).
fof(f284,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X0,X2) = s(X0,X4)) )),
  inference(cnf_transformation,[],[f182])).
fof(f182,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & (s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(flattening,[],[f181])).
fof(f181,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5))) & ((s(X0,X2) != s(X0,X4) | s(X1,X3) != s(X1,X5)) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))),
  inference(nnf_transformation,[],[f147])).
fof(f147,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(flattening,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) <=> (s(X0,X2) = s(X0,X4) & s(X1,X3) = s(X1,X5)))),
  inference(rectify,[],[f77])).
fof(f77,axiom,(
  ! [X7,X15] : ! [X8,X16,X17,X18] : (s('type.pair.prod'(X7,X15),'const.pair.,_2'(s(X7,X8),s(X15,X16))) = s('type.pair.prod'(X7,X15),'const.pair.,_2'(s(X7,X17),s(X15,X18))) <=> (s(X7,X8) = s(X7,X17) & s(X15,X16) = s(X15,X18)))),
  file('thm.frac.FRAC_|49|_|48|','thm.pair.CLOSED_PAIR_EQ')).
fof(f689,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f688,f188])).
fof(f688,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f616,f291])).
fof(f616,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0')))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f211,f291,f286])).
fof(f286,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X3) != s(X1,X5) | s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X0,X2) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f182])).
fof(f211,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|11')).
fof(f3682,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | $spl0),
  inference(superposition,[],[f3194,f268])).
fof(f268,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X14,X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|2')).
fof(f3194,plain,(
  ( ! [X103,X104] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X104))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X104) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X103),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f277,f1942])).
fof(f277,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X14,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))) <=> s('type.num.num',X13) = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|19')).
fof(f6036,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl79),
  inference(cnf_transformation,[],[f6036_D])).
fof(f6036_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl79),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl79])])).
fof(f6037,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(cnf_transformation,[],[f6037_D])).
fof(f6037_D,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f18613,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11592,f205])).
fof(f205,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.frac.FRAC_|49|_|48|','thm.arithmetic.MULT|split|0')).
fof(f11592,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11554,f1942])).
fof(f11554,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(superposition,[],[f3657,f205])).
fof(f3657,plain,(
  ( ! [X23,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X22),s('type.num.num',X23))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3634,f1942])).
fof(f3634,plain,(
  ( ! [X24,X23,X22] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X22),s('type.num.num',X23))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X24),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X22))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23)))))) ) | $spl0),
  inference(superposition,[],[f3190,f264])).
fof(f264,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X14,X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|12')).
fof(f3190,plain,(
  ( ! [X95,X96] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X96))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X96) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X95),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f275,f1942])).
fof(f275,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X13,X14] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X13))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X14))) <=> s('type.num.num',X13) = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_INJ')).
fof(f18612,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11593,f206])).
fof(f206,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|4')).
fof(f11593,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11555,f1942])).
fof(f11555,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3657,f206])).
fof(f18611,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11596,f207])).
fof(f11596,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11558,f1942])).
fof(f11558,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(superposition,[],[f3657,f207])).
fof(f18610,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11599,f212])).
fof(f212,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|10')).
fof(f11599,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11561,f1942])).
fof(f11561,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f212])).
fof(f18609,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11600,f213])).
fof(f213,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X14] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14)))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|9')).
fof(f11600,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11562,f1942])).
fof(f11562,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f213])).
fof(f18608,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11603,f187])).
fof(f11603,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11565,f1942])).
fof(f11565,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3657,f187])).
fof(f11570,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(superposition,[],[f3657,f1942])).
fof(f5854,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl73),
  inference(cnf_transformation,[],[f5854_D])).
fof(f5854_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl73),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl73])])).
fof(f18577,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl928),
  inference(cnf_transformation,[],[f18577_D])).
fof(f18577_D,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) <=> ~$spl928),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl928])])).
fof(f18607,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5938,f205])).
fof(f5938,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5901,f207])).
fof(f5901,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(superposition,[],[f3656,f205])).
fof(f3656,plain,(
  ( ! [X19,X20] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num',X20))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3633,f1942])).
fof(f3633,plain,(
  ( ! [X21,X19,X20] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X19),s('type.num.num',X20))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X21),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))))) ) | $spl0),
  inference(superposition,[],[f3190,f263])).
fof(f18606,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5939,f206])).
fof(f5939,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5902,f207])).
fof(f5902,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(superposition,[],[f3656,f206])).
fof(f18605,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5942,f207])).
fof(f5942,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5905,f207])).
fof(f5905,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(superposition,[],[f3656,f207])).
fof(f18604,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5945,f212])).
fof(f5945,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5908,f207])).
fof(f5908,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(superposition,[],[f3656,f212])).
fof(f18603,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5946,f213])).
fof(f5946,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5909,f207])).
fof(f5909,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(superposition,[],[f3656,f213])).
fof(f18602,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5949,f187])).
fof(f5949,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5912,f207])).
fof(f5912,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(superposition,[],[f3656,f187])).
fof(f5932,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl0),
  inference(superposition,[],[f3656,f207])).
fof(f18576,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))))) ) | $spl926),
  inference(cnf_transformation,[],[f18576_D])).
fof(f18576_D,plain,(
  ( ! [X2] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))))) ) <=> ~$spl926),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl926])])).
fof(f6009,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f212])).
fof(f18575,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))))))) ) | $spl924),
  inference(cnf_transformation,[],[f18575_D])).
fof(f18575_D,plain,(
  ( ! [X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))))))) ) <=> ~$spl924),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl924])])).
fof(f6010,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f213])).
fof(f5855,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl74),
  inference(cnf_transformation,[],[f5855_D])).
fof(f5855_D,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f18595,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11426,f205])).
fof(f11426,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11389,f205])).
fof(f11389,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f3652,plain,(
  ( ! [X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl0),
  inference(forward_demodulation,[],[f3630,f1942])).
fof(f3630,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X12),s('type.num.num',X13))))))) | s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))) ) | $spl0),
  inference(superposition,[],[f3190,f262])).
fof(f262,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X14,X13] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X14),s('type.num.num',X13))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|5')).
fof(f18594,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11427,f206])).
fof(f11427,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11390,f205])).
fof(f11390,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f18593,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11430,f207])).
fof(f11430,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11393,f205])).
fof(f11393,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(superposition,[],[f3652,f207])).
fof(f18592,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11433,f212])).
fof(f11433,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11396,f205])).
fof(f11396,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(superposition,[],[f3652,f212])).
fof(f18591,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11434,f213])).
fof(f11434,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11397,f205])).
fof(f11397,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(superposition,[],[f3652,f213])).
fof(f18590,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11437,f187])).
fof(f11437,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11400,f205])).
fof(f11400,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(superposition,[],[f3652,f187])).
fof(f5879,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl76),
  inference(cnf_transformation,[],[f5879_D])).
fof(f5879_D,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f18589,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11443,f205])).
fof(f11443,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11406,f206])).
fof(f11406,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f18588,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11444,f206])).
fof(f11444,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11407,f206])).
fof(f11407,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f18587,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11447,f207])).
fof(f11447,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11410,f206])).
fof(f11410,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(superposition,[],[f3652,f207])).
fof(f18586,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11450,f212])).
fof(f11450,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11413,f206])).
fof(f11413,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(superposition,[],[f3652,f212])).
fof(f18585,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11451,f213])).
fof(f11451,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11414,f206])).
fof(f11414,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(superposition,[],[f3652,f213])).
fof(f18584,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11454,f187])).
fof(f11454,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f11417,f206])).
fof(f11417,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3652,f187])).
fof(f11419,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f11420,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f18583,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11497,f205])).
fof(f11497,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11460,f207])).
fof(f11460,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(superposition,[],[f3656,f205])).
fof(f18582,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11498,f206])).
fof(f11498,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11461,f207])).
fof(f11461,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(superposition,[],[f3656,f206])).
fof(f18581,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11501,f207])).
fof(f11501,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11464,f207])).
fof(f11464,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(superposition,[],[f3656,f207])).
fof(f18580,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11504,f212])).
fof(f11504,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11467,f207])).
fof(f11467,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(superposition,[],[f3656,f212])).
fof(f18579,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11505,f213])).
fof(f11505,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11468,f207])).
fof(f11468,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(superposition,[],[f3656,f213])).
fof(f18578,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f11508,f187])).
fof(f11508,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(forward_demodulation,[],[f11471,f207])).
fof(f11471,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(superposition,[],[f3656,f187])).
fof(f11491,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl0),
  inference(superposition,[],[f3656,f207])).
fof(f11568,plain,(
  ( ! [X2] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X2)))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f212])).
fof(f11569,plain,(
  ( ! [X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f213])).
fof(f3580,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))) ) | $spl8),
  inference(cnf_transformation,[],[f3580_D])).
fof(f3580_D,plain,(
  ( ! [X29] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f3582,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl11),
  inference(cnf_transformation,[],[f3582_D])).
fof(f3582_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f4783,plain,(
  ( ! [X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f233,f1942])).
fof(f4785,plain,(
  ( ! [X31] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X31),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f235,f1942])).
fof(f1749,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl5),
  inference(cnf_transformation,[],[f1749_D])).
fof(f1749_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f1750,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl6),
  inference(cnf_transformation,[],[f1750_D])).
fof(f1750_D,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f10087,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) ) | $spl2),
  inference(superposition,[],[f287,f295])).
fof(f287,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))),
  inference(flattening,[],[f151])).
fof(f151,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | (s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))))),
  inference(ennf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) => (s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) => s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))))),
  inference(flattening,[],[f148])).
fof(f148,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) => (~s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) => ~s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X9,X10,X11,X12] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) => (~s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int',X10))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))) => ~s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X9),s('type.integer.int',X10))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X11),s('type.integer.int',X12))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.frac.FRAC_NOT_EQ_IMP')).
fof(f10088,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl2),
  inference(superposition,[],[f287,f295])).
fof(f18568,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18567,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18566,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18565,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  introduced(theory_axiom,[])).
fof(f18564,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18563,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18562,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18561,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18560,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18559,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18558,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18557,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18556,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18555,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18554,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18553,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18552,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18551,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18550,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18549,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18548,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18547,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18546,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18545,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18544,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18543,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18542,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18541,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18540,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18539,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18538,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18537,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18536,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18535,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18534,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18533,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18532,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18531,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18530,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18529,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18528,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18527,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18526,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18525,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18524,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18523,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18522,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18521,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18520,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18519,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18518,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18517,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18516,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18515,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18514,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18513,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18512,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18511,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18510,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18509,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18508,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18507,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18506,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18505,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18504,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18503,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18502,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18501,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18500,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18499,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18498,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18497,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18496,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18495,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18494,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18493,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  introduced(theory_axiom,[])).
fof(f18492,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18491,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18490,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18489,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18488,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18487,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18486,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18485,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18484,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  introduced(theory_axiom,[])).
fof(f18483,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18482,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18481,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18480,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18479,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  introduced(theory_axiom,[])).
fof(f18478,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18477,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18476,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18475,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18474,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18473,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18472,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18471,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  introduced(theory_axiom,[])).
fof(f18470,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0')),
  introduced(theory_axiom,[])).
fof(f18469,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18468,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18467,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18466,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18465,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18464,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))),
  introduced(theory_axiom,[])).
fof(f18463,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18462,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18461,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18460,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18459,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18458,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18457,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18456,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18455,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18454,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18453,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18452,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18451,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18450,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f18449,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18448,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18447,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18446,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18445,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f18444,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18443,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18442,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18441,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18440,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18439,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18438,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18437,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18436,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18435,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18434,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18433,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18432,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18431,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18430,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18429,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18428,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18427,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18426,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18425,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18424,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18423,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18422,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18421,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18420,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18419,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18418,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18417,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18416,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18415,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18414,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18413,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18412,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18411,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18410,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18409,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18408,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  introduced(theory_axiom,[])).
fof(f18407,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18406,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18405,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18404,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f18403,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18402,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18401,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18400,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18399,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18398,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18397,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f18396,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f18395,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'T_0')) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),
  introduced(theory_axiom,[])).
fof(f18376,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl922),
  inference(cnf_transformation,[],[f18376_D])).
fof(f18376_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl922),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl922])])).
fof(f17909,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl896),
  inference(superposition,[],[f221,f17521])).
fof(f18374,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | $spl920),
  inference(cnf_transformation,[],[f18374_D])).
fof(f18374_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl920),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl920])])).
fof(f18372,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl666 | $spl896)),
  inference(forward_demodulation,[],[f17908,f16767])).
fof(f17908,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | $spl896),
  inference(superposition,[],[f218,f17521])).
fof(f218,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X14] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|27')).
fof(f18371,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl918),
  inference(cnf_transformation,[],[f18371_D])).
fof(f18371_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl918),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl918])])).
fof(f18369,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl664 | $spl896)),
  inference(forward_demodulation,[],[f17907,f16763])).
fof(f17907,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl896),
  inference(superposition,[],[f217,f17521])).
fof(f217,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|21')).
fof(f18368,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | $spl916),
  inference(cnf_transformation,[],[f18368_D])).
fof(f18368_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl916),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl916])])).
fof(f18366,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | ($spl664 | $spl896)),
  inference(forward_demodulation,[],[f17906,f16763])).
fof(f17906,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) | $spl896),
  inference(superposition,[],[f216,f17521])).
fof(f216,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X14] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X14))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|24')).
fof(f18365,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl914),
  inference(cnf_transformation,[],[f18365_D])).
fof(f18365_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl914),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl914])])).
fof(f17905,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl896),
  inference(superposition,[],[f215,f17521])).
fof(f18363,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl912),
  inference(cnf_transformation,[],[f18363_D])).
fof(f18363_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl912),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl912])])).
fof(f18361,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl662 | $spl896)),
  inference(forward_demodulation,[],[f17904,f16760])).
fof(f17904,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl896),
  inference(superposition,[],[f214,f17521])).
fof(f214,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|16')).
fof(f18360,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl910),
  inference(cnf_transformation,[],[f18360_D])).
fof(f18360_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl910),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl910])])).
fof(f17903,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl896),
  inference(superposition,[],[f210,f17521])).
fof(f210,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X14] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X14))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|14')).
fof(f18358,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl908),
  inference(cnf_transformation,[],[f18358_D])).
fof(f18358_D,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl908),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl908])])).
fof(f18356,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl658 | $spl896)),
  inference(forward_demodulation,[],[f17902,f16754])).
fof(f17902,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl896),
  inference(superposition,[],[f209,f17521])).
fof(f209,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f65])).
fof(f65,axiom,(
  ! [X14] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X14))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|32')).
fof(f18355,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl906),
  inference(cnf_transformation,[],[f18355_D])).
fof(f18355_D,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl906),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl906])])).
fof(f18353,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl656 | $spl896)),
  inference(forward_demodulation,[],[f17901,f16752])).
fof(f17901,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl896),
  inference(superposition,[],[f208,f17521])).
fof(f208,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f66])).
fof(f66,axiom,(
  ! [X14] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X14))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|33')).
fof(f18352,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl904),
  inference(cnf_transformation,[],[f18352_D])).
fof(f18352_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl904),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl904])])).
fof(f17900,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl896),
  inference(superposition,[],[f213,f17521])).
fof(f18350,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl902),
  inference(cnf_transformation,[],[f18350_D])).
fof(f18350_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl902),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl902])])).
fof(f17899,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl896),
  inference(superposition,[],[f219,f17521])).
fof(f219,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) )),
  inference(cnf_transformation,[],[f104])).
fof(f104,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14)))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|0')).
fof(f18348,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl900),
  inference(cnf_transformation,[],[f18348_D])).
fof(f18348_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl900),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl900])])).
fof(f17898,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl896),
  inference(superposition,[],[f222,f17521])).
fof(f222,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|5')).
fof(f17553,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f8873,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl307),
  inference(cnf_transformation,[],[f8873_D])).
fof(f8873_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl307),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl307])])).
fof(f17550,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl649 | $spl896)),
  inference(forward_demodulation,[],[f17529,f17521])).
fof(f17529,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl649),
  inference(unit_resulting_resolution,[],[f15931,f279])).
fof(f279,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f178])).
fof(f178,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) <=> s('type.num.num',X13) = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|6')).
fof(f15931,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl649),
  inference(cnf_transformation,[],[f15931_D])).
fof(f15931_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl649),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl649])])).
fof(f17544,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl649 | $spl896)),
  inference(forward_demodulation,[],[f17535,f17521])).
fof(f17535,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl649),
  inference(unit_resulting_resolution,[],[f15931,f279])).
fof(f17524,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl898),
  inference(cnf_transformation,[],[f17524_D])).
fof(f17524_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl898),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl898])])).
fof(f17522,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl894 | $spl896)),
  inference(forward_demodulation,[],[f17519,f17521])).
fof(f17521,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl896),
  inference(cnf_transformation,[],[f17521_D])).
fof(f17521_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl896),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl896])])).
fof(f188,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f46])).
fof(f46,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|13')).
fof(f17519,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl894),
  inference(cnf_transformation,[],[f17519_D])).
fof(f17519_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl894),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl894])])).
fof(f191,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f18])).
fof(f18,axiom,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.frac.frac_|49|_def')).
fof(f17239,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl712),
  inference(cnf_transformation,[],[f17239_D])).
fof(f17239_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl712),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl712])])).
fof(f17517,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl2 | $spl284)),
  inference(forward_demodulation,[],[f295,f8850])).
fof(f8850,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl284),
  inference(cnf_transformation,[],[f8850_D])).
fof(f8850_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f17241,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl715),
  inference(cnf_transformation,[],[f17241_D])).
fof(f17241_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl715),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl715])])).
fof(f17514,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl5 | $spl284)),
  inference(forward_demodulation,[],[f1749,f8850])).
fof(f5409,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl57),
  inference(cnf_transformation,[],[f5409_D])).
fof(f5409_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl57),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl57])])).
fof(f17500,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl79 | $spl284)),
  inference(forward_demodulation,[],[f6036,f8850])).
fof(f5415,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl63),
  inference(cnf_transformation,[],[f5415_D])).
fof(f5415_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl63),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl63])])).
fof(f17489,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl153 | $spl278)),
  inference(forward_demodulation,[],[f6278,f8844])).
fof(f17393,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl839),
  inference(cnf_transformation,[],[f17393_D])).
fof(f17393_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl839),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl839])])).
fof(f17486,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl207 | $spl284)),
  inference(forward_demodulation,[],[f8773,f8850])).
fof(f17405,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl849),
  inference(cnf_transformation,[],[f17405_D])).
fof(f17405_D,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl849),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl849])])).
fof(f17466,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl284 | $spl315)),
  inference(forward_demodulation,[],[f8885,f8850])).
fof(f8885,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl315),
  inference(cnf_transformation,[],[f8885_D])).
fof(f8885_D,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl315),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl315])])).
fof(f17292,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl749),
  inference(cnf_transformation,[],[f17292_D])).
fof(f17292_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl749),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl749])])).
fof(f17463,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl284 | $spl369)),
  inference(forward_demodulation,[],[f14975,f8850])).
fof(f17445,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl889),
  inference(cnf_transformation,[],[f17445_D])).
fof(f17445_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl889),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl889])])).
fof(f17460,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl284 | $spl683)),
  inference(forward_demodulation,[],[f16840,f8850])).
fof(f17449,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl893),
  inference(cnf_transformation,[],[f17449_D])).
fof(f17449_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl893),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl893])])).
fof(f17233,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl410 | $spl687)),
  inference(backward_demodulation,[],[f15234,f16852])).
fof(f17447,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl891),
  inference(cnf_transformation,[],[f17447_D])).
fof(f17447_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl891),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl891])])).
fof(f17232,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl410 | $spl685)),
  inference(backward_demodulation,[],[f15234,f16842])).
fof(f17231,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl410 | $spl683)),
  inference(backward_demodulation,[],[f15234,f16840])).
fof(f17443,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl887),
  inference(cnf_transformation,[],[f17443_D])).
fof(f17443_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl887),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl887])])).
fof(f17230,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl410 | $spl681)),
  inference(backward_demodulation,[],[f15234,f16836])).
fof(f17441,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl885),
  inference(cnf_transformation,[],[f17441_D])).
fof(f17441_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl885),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl885])])).
fof(f17226,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl410 | $spl587)),
  inference(backward_demodulation,[],[f15234,f15719])).
fof(f17439,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl883),
  inference(cnf_transformation,[],[f17439_D])).
fof(f17439_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl883),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl883])])).
fof(f17225,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl401 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15163])).
fof(f17437,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl881),
  inference(cnf_transformation,[],[f17437_D])).
fof(f17437_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl881),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl881])])).
fof(f17224,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl399 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15161])).
fof(f17435,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl879),
  inference(cnf_transformation,[],[f17435_D])).
fof(f17435_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl879),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl879])])).
fof(f17223,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl397 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15159])).
fof(f17433,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl877),
  inference(cnf_transformation,[],[f17433_D])).
fof(f17433_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl877),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl877])])).
fof(f17222,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl395 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15157])).
fof(f17431,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl875),
  inference(cnf_transformation,[],[f17431_D])).
fof(f17431_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl875),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl875])])).
fof(f17221,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl393 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15141])).
fof(f17429,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl873),
  inference(cnf_transformation,[],[f17429_D])).
fof(f17429_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl873),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl873])])).
fof(f17220,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl391 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15139])).
fof(f17427,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl871),
  inference(cnf_transformation,[],[f17427_D])).
fof(f17427_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl871),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl871])])).
fof(f17219,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl389 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15137])).
fof(f17425,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl869),
  inference(cnf_transformation,[],[f17425_D])).
fof(f17425_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl869),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl869])])).
fof(f17218,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl387 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15135])).
fof(f17423,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl867),
  inference(cnf_transformation,[],[f17423_D])).
fof(f17423_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl867),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl867])])).
fof(f17217,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl385 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15119])).
fof(f17421,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl865),
  inference(cnf_transformation,[],[f17421_D])).
fof(f17421_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl865),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl865])])).
fof(f17216,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl383 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15117])).
fof(f17419,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl863),
  inference(cnf_transformation,[],[f17419_D])).
fof(f17419_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl863),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl863])])).
fof(f17215,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl381 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15115])).
fof(f17417,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl861),
  inference(cnf_transformation,[],[f17417_D])).
fof(f17417_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl861),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl861])])).
fof(f17214,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl379 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15113])).
fof(f17415,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl859),
  inference(cnf_transformation,[],[f17415_D])).
fof(f17415_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl859),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl859])])).
fof(f17213,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl377 | $spl410)),
  inference(backward_demodulation,[],[f15234,f15091])).
fof(f17294,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl751),
  inference(cnf_transformation,[],[f17294_D])).
fof(f17294_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl751),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl751])])).
fof(f17209,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl371 | $spl410)),
  inference(backward_demodulation,[],[f15234,f14977])).
fof(f17208,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl369 | $spl410)),
  inference(backward_demodulation,[],[f15234,f14975])).
fof(f17413,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl857),
  inference(cnf_transformation,[],[f17413_D])).
fof(f17413_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl857),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl857])])).
fof(f17201,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl337 | $spl410)),
  inference(backward_demodulation,[],[f15234,f10966])).
fof(f17411,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl855),
  inference(cnf_transformation,[],[f17411_D])).
fof(f17411_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl855),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl855])])).
fof(f17200,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl335 | $spl410)),
  inference(backward_demodulation,[],[f15234,f10964])).
fof(f17409,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl853),
  inference(cnf_transformation,[],[f17409_D])).
fof(f17409_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl853),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl853])])).
fof(f17199,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl333 | $spl410)),
  inference(backward_demodulation,[],[f15234,f10962])).
fof(f17407,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl851),
  inference(cnf_transformation,[],[f17407_D])).
fof(f17407_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl851),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl851])])).
fof(f17198,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl331 | $spl410)),
  inference(backward_demodulation,[],[f15234,f10960])).
fof(f17197,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl315 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8885])).
fof(f9716,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl327),
  inference(cnf_transformation,[],[f9716_D])).
fof(f9716_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl327),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl327])])).
fof(f17196,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl311 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8877])).
fof(f17403,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl847),
  inference(cnf_transformation,[],[f17403_D])).
fof(f17403_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl847),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl847])])).
fof(f17195,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl309 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8875])).
fof(f17401,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl845),
  inference(cnf_transformation,[],[f17401_D])).
fof(f17401_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) <=> ~$spl845),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl845])])).
fof(f17192,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl303 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8869])).
fof(f17257,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl721),
  inference(cnf_transformation,[],[f17257_D])).
fof(f17257_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl721),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl721])])).
fof(f17189,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl283 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8849])).
fof(f17399,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl843),
  inference(cnf_transformation,[],[f17399_D])).
fof(f17399_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl843),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl843])])).
fof(f17188,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl277 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8843])).
fof(f17395,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl841),
  inference(cnf_transformation,[],[f17395_D])).
fof(f17395_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl841),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl841])])).
fof(f17172,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl209 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8775])).
fof(f17171,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl207 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8773])).
fof(f17391,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl837),
  inference(cnf_transformation,[],[f17391_D])).
fof(f17391_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl837),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl837])])).
fof(f17170,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl205 | $spl410)),
  inference(backward_demodulation,[],[f15234,f8771])).
fof(f17389,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl835),
  inference(cnf_transformation,[],[f17389_D])).
fof(f17389_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl835),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl835])])).
fof(f17162,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl199 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7462])).
fof(f17387,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl833),
  inference(cnf_transformation,[],[f17387_D])).
fof(f17387_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl833),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl833])])).
fof(f17161,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl197 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7460])).
fof(f17385,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl831),
  inference(cnf_transformation,[],[f17385_D])).
fof(f17385_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl831),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl831])])).
fof(f17160,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl195 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7458])).
fof(f17383,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl829),
  inference(cnf_transformation,[],[f17383_D])).
fof(f17383_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl829),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl829])])).
fof(f17159,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl193 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7456])).
fof(f17381,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl827),
  inference(cnf_transformation,[],[f17381_D])).
fof(f17381_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl827),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl827])])).
fof(f17156,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl191 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7404])).
fof(f17378,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl824),
  inference(cnf_transformation,[],[f17378_D])).
fof(f17378_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl824),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl824])])).
fof(f17154,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl186 | $spl410)),
  inference(backward_demodulation,[],[f15234,f7363])).
fof(f17376,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl823),
  inference(cnf_transformation,[],[f17376_D])).
fof(f17376_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl823),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl823])])).
fof(f17133,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl177 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6344])).
fof(f17374,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl821),
  inference(cnf_transformation,[],[f17374_D])).
fof(f17374_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl821),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl821])])).
fof(f17132,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl175 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6342])).
fof(f17372,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl819),
  inference(cnf_transformation,[],[f17372_D])).
fof(f17372_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl819),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl819])])).
fof(f17131,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl173 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6340])).
fof(f17370,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl817),
  inference(cnf_transformation,[],[f17370_D])).
fof(f17370_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl817),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl817])])).
fof(f17130,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl171 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6338])).
fof(f17368,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl815),
  inference(cnf_transformation,[],[f17368_D])).
fof(f17368_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl815),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl815])])).
fof(f17127,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl169 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6322])).
fof(f17366,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl813),
  inference(cnf_transformation,[],[f17366_D])).
fof(f17366_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl813),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl813])])).
fof(f17126,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl167 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6320])).
fof(f17364,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl811),
  inference(cnf_transformation,[],[f17364_D])).
fof(f17364_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl811),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl811])])).
fof(f17125,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl165 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6318])).
fof(f17362,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl809),
  inference(cnf_transformation,[],[f17362_D])).
fof(f17362_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl809),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl809])])).
fof(f17124,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl163 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6316])).
fof(f17360,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl807),
  inference(cnf_transformation,[],[f17360_D])).
fof(f17360_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl807),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl807])])).
fof(f17121,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl161 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6300])).
fof(f17358,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl805),
  inference(cnf_transformation,[],[f17358_D])).
fof(f17358_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl805),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl805])])).
fof(f17120,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl159 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6298])).
fof(f17356,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl803),
  inference(cnf_transformation,[],[f17356_D])).
fof(f17356_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl803),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl803])])).
fof(f17119,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl157 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6296])).
fof(f17354,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl801),
  inference(cnf_transformation,[],[f17354_D])).
fof(f17354_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl801),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl801])])).
fof(f17118,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl155 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6294])).
fof(f17114,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl149 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6274])).
fof(f17352,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl799),
  inference(cnf_transformation,[],[f17352_D])).
fof(f17352_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl799),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl799])])).
fof(f17111,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl147 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6254])).
fof(f17350,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl797),
  inference(cnf_transformation,[],[f17350_D])).
fof(f17350_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl797),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl797])])).
fof(f17110,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl145 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6252])).
fof(f17348,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl795),
  inference(cnf_transformation,[],[f17348_D])).
fof(f17348_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl795),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl795])])).
fof(f17109,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl143 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6250])).
fof(f17346,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl793),
  inference(cnf_transformation,[],[f17346_D])).
fof(f17346_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl793),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl793])])).
fof(f17108,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl141 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6248])).
fof(f17344,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl791),
  inference(cnf_transformation,[],[f17344_D])).
fof(f17344_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl791),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl791])])).
fof(f17105,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl139 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6232])).
fof(f17342,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl789),
  inference(cnf_transformation,[],[f17342_D])).
fof(f17342_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl789),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl789])])).
fof(f17104,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl137 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6230])).
fof(f17340,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl787),
  inference(cnf_transformation,[],[f17340_D])).
fof(f17340_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl787),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl787])])).
fof(f17103,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl135 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6228])).
fof(f17338,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl785),
  inference(cnf_transformation,[],[f17338_D])).
fof(f17338_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl785),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl785])])).
fof(f17102,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl133 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6226])).
fof(f17336,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl783),
  inference(cnf_transformation,[],[f17336_D])).
fof(f17336_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl783),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl783])])).
fof(f17099,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl131 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6210])).
fof(f17334,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl781),
  inference(cnf_transformation,[],[f17334_D])).
fof(f17334_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl781),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl781])])).
fof(f17098,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl129 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6208])).
fof(f17332,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl779),
  inference(cnf_transformation,[],[f17332_D])).
fof(f17332_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl779),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl779])])).
fof(f17097,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl127 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6206])).
fof(f17330,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl777),
  inference(cnf_transformation,[],[f17330_D])).
fof(f17330_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl777),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl777])])).
fof(f17096,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl125 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6204])).
fof(f17328,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl775),
  inference(cnf_transformation,[],[f17328_D])).
fof(f17328_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl775),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl775])])).
fof(f17091,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl123 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6182])).
fof(f17326,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl773),
  inference(cnf_transformation,[],[f17326_D])).
fof(f17326_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl773),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl773])])).
fof(f17090,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl121 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6180])).
fof(f17324,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl771),
  inference(cnf_transformation,[],[f17324_D])).
fof(f17324_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl771),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl771])])).
fof(f17089,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl119 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6178])).
fof(f17322,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl769),
  inference(cnf_transformation,[],[f17322_D])).
fof(f17322_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl769),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl769])])).
fof(f17088,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl117 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6176])).
fof(f17320,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl767),
  inference(cnf_transformation,[],[f17320_D])).
fof(f17320_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl767),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl767])])).
fof(f17085,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl115 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6160])).
fof(f17318,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl765),
  inference(cnf_transformation,[],[f17318_D])).
fof(f17318_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl765),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl765])])).
fof(f17084,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl113 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6158])).
fof(f17316,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl763),
  inference(cnf_transformation,[],[f17316_D])).
fof(f17316_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl763),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl763])])).
fof(f17083,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl111 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6156])).
fof(f17314,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl761),
  inference(cnf_transformation,[],[f17314_D])).
fof(f17314_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl761),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl761])])).
fof(f17082,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl109 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6154])).
fof(f17312,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl759),
  inference(cnf_transformation,[],[f17312_D])).
fof(f17312_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl759),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl759])])).
fof(f17079,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl107 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6138])).
fof(f17310,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl757),
  inference(cnf_transformation,[],[f17310_D])).
fof(f17310_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl757),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl757])])).
fof(f17078,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl105 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6136])).
fof(f17308,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl755),
  inference(cnf_transformation,[],[f17308_D])).
fof(f17308_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl755),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl755])])).
fof(f17077,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl103 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6134])).
fof(f17306,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl753),
  inference(cnf_transformation,[],[f17306_D])).
fof(f17306_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl753),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl753])])).
fof(f17076,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl101 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6132])).
fof(f17067,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl93 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6092])).
fof(f17058,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl79 | $spl410)),
  inference(backward_demodulation,[],[f15234,f6036])).
fof(f17047,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl59 | $spl410)),
  inference(backward_demodulation,[],[f15234,f5411])).
fof(f17046,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl57 | $spl410)),
  inference(backward_demodulation,[],[f15234,f5409])).
fof(f17289,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl747),
  inference(cnf_transformation,[],[f17289_D])).
fof(f17289_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl747),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl747])])).
fof(f17038,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl55 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4165])).
fof(f17287,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl745),
  inference(cnf_transformation,[],[f17287_D])).
fof(f17287_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl745),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl745])])).
fof(f17037,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl53 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4163])).
fof(f17285,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl743),
  inference(cnf_transformation,[],[f17285_D])).
fof(f17285_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl743),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl743])])).
fof(f17036,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl51 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4161])).
fof(f17283,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl741),
  inference(cnf_transformation,[],[f17283_D])).
fof(f17283_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl741),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl741])])).
fof(f17035,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl49 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4159])).
fof(f17281,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl739),
  inference(cnf_transformation,[],[f17281_D])).
fof(f17281_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl739),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl739])])).
fof(f17030,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl47 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4137])).
fof(f17279,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl737),
  inference(cnf_transformation,[],[f17279_D])).
fof(f17279_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl737),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl737])])).
fof(f17029,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl45 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4135])).
fof(f17277,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl735),
  inference(cnf_transformation,[],[f17277_D])).
fof(f17277_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl735),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl735])])).
fof(f17028,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl43 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4133])).
fof(f17275,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl733),
  inference(cnf_transformation,[],[f17275_D])).
fof(f17275_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl733),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl733])])).
fof(f17027,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl41 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4131])).
fof(f17273,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl731),
  inference(cnf_transformation,[],[f17273_D])).
fof(f17273_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl731),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl731])])).
fof(f17024,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl39 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4115])).
fof(f17271,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl729),
  inference(cnf_transformation,[],[f17271_D])).
fof(f17271_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl729),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl729])])).
fof(f17023,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl37 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4113])).
fof(f17269,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl727),
  inference(cnf_transformation,[],[f17269_D])).
fof(f17269_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl727),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl727])])).
fof(f17022,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl35 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4111])).
fof(f17267,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl725),
  inference(cnf_transformation,[],[f17267_D])).
fof(f17267_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl725),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl725])])).
fof(f17021,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl33 | $spl410)),
  inference(backward_demodulation,[],[f15234,f4109])).
fof(f17259,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl723),
  inference(cnf_transformation,[],[f17259_D])).
fof(f17259_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl723),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl723])])).
fof(f17010,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl31 | $spl410)),
  inference(backward_demodulation,[],[f15234,f3729])).
fof(f17009,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl27 | $spl410)),
  inference(backward_demodulation,[],[f15234,f3725])).
fof(f17255,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl719),
  inference(cnf_transformation,[],[f17255_D])).
fof(f17255_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl719),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl719])])).
fof(f17008,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl25 | $spl410)),
  inference(backward_demodulation,[],[f15234,f3723])).
fof(f17243,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | $spl717),
  inference(cnf_transformation,[],[f17243_D])).
fof(f17243_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) <=> ~$spl717),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl717])])).
fof(f16995,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl21 | $spl410)),
  inference(backward_demodulation,[],[f15234,f3621])).
fof(f16980,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl5 | $spl410)),
  inference(backward_demodulation,[],[f15234,f1749])).
fof(f16977,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl2 | $spl410)),
  inference(backward_demodulation,[],[f15234,f295])).
fof(f16972,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl710),
  inference(cnf_transformation,[],[f16972_D])).
fof(f16972_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl710),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl710])])).
fof(f16960,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl650),
  inference(forward_demodulation,[],[f191,f16746])).
fof(f16970,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f16969,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f16968,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f16967,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f16966,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f15892,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl609),
  inference(cnf_transformation,[],[f15892_D])).
fof(f15892_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl609),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl609])])).
fof(f16965,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl649 | $spl650)),
  inference(forward_demodulation,[],[f15931,f16746])).
fof(f16963,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl708),
  inference(cnf_transformation,[],[f16963_D])).
fof(f16963_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl708),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl708])])).
fof(f189,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,axiom,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|2')).
fof(f16959,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl650),
  inference(forward_demodulation,[],[f188,f16746])).
fof(f16958,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl706),
  inference(cnf_transformation,[],[f16958_D])).
fof(f16958_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl706),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl706])])).
fof(f16956,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl650 | $spl666)),
  inference(forward_demodulation,[],[f16767,f16746])).
fof(f16955,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl704),
  inference(cnf_transformation,[],[f16955_D])).
fof(f16955_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl704),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl704])])).
fof(f16953,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl650 | $spl664)),
  inference(forward_demodulation,[],[f16763,f16746])).
fof(f15899,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl616),
  inference(cnf_transformation,[],[f15899_D])).
fof(f15899_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl616),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl616])])).
fof(f16948,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl280 | $spl306)),
  inference(forward_demodulation,[],[f8846,f8872])).
fof(f16949,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f16936,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl411 | $spl608)),
  inference(backward_demodulation,[],[f15891,f15235])).
fof(f8877,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl311),
  inference(cnf_transformation,[],[f8877_D])).
fof(f8877_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl311),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl311])])).
fof(f16930,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl285 | $spl608)),
  inference(backward_demodulation,[],[f15891,f8851])).
fof(f8853,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl287),
  inference(cnf_transformation,[],[f8853_D])).
fof(f8853_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl287),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl287])])).
fof(f16909,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl409 | $spl618)),
  inference(backward_demodulation,[],[f15901,f15233])).
fof(f8855,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl289),
  inference(cnf_transformation,[],[f8855_D])).
fof(f8855_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl289),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl289])])).
fof(f16908,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl407 | $spl618)),
  inference(backward_demodulation,[],[f15901,f15231])).
fof(f8857,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl291),
  inference(cnf_transformation,[],[f8857_D])).
fof(f8857_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl291),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl291])])).
fof(f16907,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl405 | $spl618)),
  inference(backward_demodulation,[],[f15901,f15229])).
fof(f8859,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl293),
  inference(cnf_transformation,[],[f8859_D])).
fof(f8859_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl293),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl293])])).
fof(f16906,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl403 | $spl618)),
  inference(backward_demodulation,[],[f15901,f15227])).
fof(f8871,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl305),
  inference(cnf_transformation,[],[f8871_D])).
fof(f8871_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl305),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl305])])).
fof(f16905,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl279 | $spl618)),
  inference(backward_demodulation,[],[f15901,f8845])).
fof(f16903,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl702),
  inference(cnf_transformation,[],[f16903_D])).
fof(f16903_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl702),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl702])])).
fof(f16879,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl650 | $spl662)),
  inference(backward_demodulation,[],[f16746,f16760])).
fof(f16901,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl700),
  inference(cnf_transformation,[],[f16901_D])).
fof(f16901_D,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl700),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl700])])).
fof(f16878,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl650 | $spl658)),
  inference(backward_demodulation,[],[f16746,f16754])).
fof(f16899,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl698),
  inference(cnf_transformation,[],[f16899_D])).
fof(f16899_D,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl698),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl698])])).
fof(f16877,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl650 | $spl656)),
  inference(backward_demodulation,[],[f16746,f16752])).
fof(f16870,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl648 | $spl650)),
  inference(backward_demodulation,[],[f16746,f15932])).
fof(f16897,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | $spl697),
  inference(cnf_transformation,[],[f16897_D])).
fof(f16897_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl697),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl697])])).
fof(f16869,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) | ($spl645 | $spl650)),
  inference(backward_demodulation,[],[f16746,f15928])).
fof(f16895,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl695),
  inference(cnf_transformation,[],[f16895_D])).
fof(f16895_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl695),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl695])])).
fof(f16893,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl639 | $spl650)),
  inference(forward_demodulation,[],[f16868,f16746])).
fof(f16868,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl639 | $spl650)),
  inference(backward_demodulation,[],[f16746,f15922])).
fof(f16892,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl693),
  inference(cnf_transformation,[],[f16892_D])).
fof(f16892_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl693),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl693])])).
fof(f16867,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl637 | $spl650)),
  inference(backward_demodulation,[],[f16746,f15920])).
fof(f16890,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl691),
  inference(cnf_transformation,[],[f16890_D])).
fof(f16890_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl691),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl691])])).
fof(f16866,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl593 | $spl650)),
  inference(backward_demodulation,[],[f16746,f15727])).
fof(f16861,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl688),
  inference(cnf_transformation,[],[f16861_D])).
fof(f16861_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl688),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl688])])).
fof(f16859,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl654),
  inference(backward_demodulation,[],[f16750,f189])).
fof(f16857,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl648),
  inference(forward_demodulation,[],[f188,f15932])).
fof(f16852,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl687),
  inference(cnf_transformation,[],[f16852_D])).
fof(f16852_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl687),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl687])])).
fof(f16850,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl67 | $spl306)),
  inference(forward_demodulation,[],[f5732,f8872])).
fof(f16842,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl685),
  inference(cnf_transformation,[],[f16842_D])).
fof(f16842_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl685),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl685])])).
fof(f16838,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl181 | $spl306)),
  inference(backward_demodulation,[],[f8872,f6844])).
fof(f16840,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl683),
  inference(cnf_transformation,[],[f16840_D])).
fof(f16840_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl683),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl683])])).
fof(f16837,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl179 | $spl306)),
  inference(backward_demodulation,[],[f8872,f6842])).
fof(f16836,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl681),
  inference(cnf_transformation,[],[f16836_D])).
fof(f16836_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl681),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl681])])).
fof(f15732,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl211 | $spl298)),
  inference(backward_demodulation,[],[f8864,f8777])).
fof(f8864,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl298),
  inference(cnf_transformation,[],[f8864_D])).
fof(f8864_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f16834,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl679),
  inference(cnf_transformation,[],[f16834_D])).
fof(f16834_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl679),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl679])])).
fof(f15731,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl185 | $spl298)),
  inference(backward_demodulation,[],[f8864,f6848])).
fof(f16832,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl677),
  inference(cnf_transformation,[],[f16832_D])).
fof(f16832_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl677),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl677])])).
fof(f15730,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl183 | $spl298)),
  inference(backward_demodulation,[],[f8864,f6846])).
fof(f16830,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | $spl674),
  inference(cnf_transformation,[],[f16830_D])).
fof(f16830_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) <=> ~$spl674),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl674])])).
fof(f16285,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | $spl648),
  inference(superposition,[],[f213,f15932])).
fof(f16828,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl672),
  inference(cnf_transformation,[],[f16828_D])).
fof(f16828_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl672),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl672])])).
fof(f16288,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl648),
  inference(superposition,[],[f210,f15932])).
fof(f16826,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl671),
  inference(cnf_transformation,[],[f16826_D])).
fof(f16826_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl671),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl671])])).
fof(f16824,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl21 | $spl648)),
  inference(forward_demodulation,[],[f3621,f16777])).
fof(f16777,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) ) | $spl648),
  inference(backward_demodulation,[],[f16776,f16299])).
fof(f16299,plain,(
  ( ! [X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))) ) | $spl648),
  inference(superposition,[],[f259,f15932])).
fof(f259,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X14,X13] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X13),s('type.num.num',X14))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|31')).
fof(f16776,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl648),
  inference(forward_demodulation,[],[f16302,f218])).
fof(f16302,plain,(
  ( ! [X6] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.num.|48|_0')))) ) | $spl648),
  inference(superposition,[],[f260,f15932])).
fof(f260,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X14,X13] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X14),s('type.num.num',X13))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|28')).
fof(f16823,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f16822,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f16821,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f16820,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16819,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16818,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16817,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16816,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16815,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16814,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16813,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16812,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f16811,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f16810,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f16809,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f16808,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f16807,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  introduced(theory_axiom,[])).
fof(f16806,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f16805,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  introduced(theory_axiom,[])).
fof(f16773,plain,(
  ~p(s(bool,'T_0')) | ($spl581 | $spl648)),
  inference(forward_demodulation,[],[f16772,f200])).
fof(f200,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|26')).
fof(f16772,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | ($spl581 | $spl648)),
  inference(backward_demodulation,[],[f16299,f15713])).
fof(f16413,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(trivial_inequality_removal,[],[f16296])).
fof(f16296,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(superposition,[],[f235,f15932])).
fof(f16414,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(trivial_inequality_removal,[],[f16295])).
fof(f16295,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(superposition,[],[f233,f15932])).
fof(f16769,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl668),
  inference(cnf_transformation,[],[f16769_D])).
fof(f16769_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl668),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl668])])).
fof(f16294,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl648),
  inference(superposition,[],[f221,f15932])).
fof(f16767,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl666),
  inference(cnf_transformation,[],[f16767_D])).
fof(f16767_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl666),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl666])])).
fof(f16765,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(forward_demodulation,[],[f16293,f200])).
fof(f16293,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(superposition,[],[f218,f15932])).
fof(f16763,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl664),
  inference(cnf_transformation,[],[f16763_D])).
fof(f16763_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f16764,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(forward_demodulation,[],[f16292,f198])).
fof(f16292,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(superposition,[],[f217,f15932])).
fof(f16761,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(forward_demodulation,[],[f16291,f199])).
fof(f16291,plain,(
  s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(superposition,[],[f216,f15932])).
fof(f16760,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl662),
  inference(cnf_transformation,[],[f16760_D])).
fof(f16760_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl662),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl662])])).
fof(f16758,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl648),
  inference(forward_demodulation,[],[f16289,f187])).
fof(f16289,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl648),
  inference(superposition,[],[f214,f15932])).
fof(f16757,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl660),
  inference(cnf_transformation,[],[f16757_D])).
fof(f16757_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl660),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl660])])).
fof(f16755,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl328 | $spl648)),
  inference(forward_demodulation,[],[f16288,f10468])).
fof(f16754,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl658),
  inference(cnf_transformation,[],[f16754_D])).
fof(f16754_D,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl658),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl658])])).
fof(f16287,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(superposition,[],[f209,f15932])).
fof(f16752,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl656),
  inference(cnf_transformation,[],[f16752_D])).
fof(f16752_D,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl656),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl656])])).
fof(f16286,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(superposition,[],[f208,f15932])).
fof(f16284,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl648),
  inference(superposition,[],[f219,f15932])).
fof(f16748,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl652),
  inference(cnf_transformation,[],[f16748_D])).
fof(f16748_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl652),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl652])])).
fof(f16283,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl648),
  inference(superposition,[],[f222,f15932])).
fof(f15935,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(unit_resulting_resolution,[],[f15932,f235])).
fof(f15936,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl648),
  inference(unit_resulting_resolution,[],[f15932,f233])).
fof(f15932,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl648),
  inference(cnf_transformation,[],[f15932_D])).
fof(f15932_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl648),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl648])])).
fof(f15751,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl328),
  inference(backward_demodulation,[],[f10468,f188])).
fof(f15890,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl607),
  inference(cnf_transformation,[],[f15890_D])).
fof(f15890_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl607),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl607])])).
fof(f15758,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl11 | $spl328)),
  inference(backward_demodulation,[],[f10468,f3582])).
fof(f15930,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') | $spl647),
  inference(cnf_transformation,[],[f15930_D])).
fof(f15930_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') <=> ~$spl647),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl647])])).
fof(f15759,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.ZERO_0') | ($spl23 | $spl328)),
  inference(backward_demodulation,[],[f10468,f3623])).
fof(f15928,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl645),
  inference(cnf_transformation,[],[f15928_D])).
fof(f15928_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl645),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl645])])).
fof(f15765,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl29 | $spl328)),
  inference(backward_demodulation,[],[f10468,f3727])).
fof(f15926,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl643),
  inference(cnf_transformation,[],[f15926_D])).
fof(f15926_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl643),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl643])])).
fof(f15766,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl31 | $spl328)),
  inference(backward_demodulation,[],[f10468,f3729])).
fof(f15924,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | $spl641),
  inference(cnf_transformation,[],[f15924_D])).
fof(f15924_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl641),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl641])])).
fof(f15775,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl67 | $spl328)),
  inference(backward_demodulation,[],[f10468,f5732])).
fof(f15922,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl639),
  inference(cnf_transformation,[],[f15922_D])).
fof(f15922_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl639),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl639])])).
fof(f15776,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl69 | $spl328)),
  inference(backward_demodulation,[],[f10468,f5734])).
fof(f15920,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl637),
  inference(cnf_transformation,[],[f15920_D])).
fof(f15920_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl637),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl637])])).
fof(f15777,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl71 | $spl328)),
  inference(backward_demodulation,[],[f10468,f5736])).
fof(f15918,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl635),
  inference(cnf_transformation,[],[f15918_D])).
fof(f15918_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl635),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl635])])).
fof(f15780,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl83 | $spl328)),
  inference(backward_demodulation,[],[f10468,f6070])).
fof(f15916,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl633),
  inference(cnf_transformation,[],[f15916_D])).
fof(f15916_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl633),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl633])])).
fof(f15781,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl85 | $spl328)),
  inference(backward_demodulation,[],[f10468,f6072])).
fof(f15914,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl631),
  inference(cnf_transformation,[],[f15914_D])).
fof(f15914_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl631),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl631])])).
fof(f15782,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl89 | $spl328)),
  inference(backward_demodulation,[],[f10468,f6076])).
fof(f15783,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl91 | $spl328)),
  inference(backward_demodulation,[],[f10468,f6084])).
fof(f15912,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl629),
  inference(cnf_transformation,[],[f15912_D])).
fof(f15912_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl629),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl629])])).
fof(f15793,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl201 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8767])).
fof(f15910,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl627),
  inference(cnf_transformation,[],[f15910_D])).
fof(f15910_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl627),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl627])])).
fof(f15794,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl203 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8769])).
fof(f15908,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl625),
  inference(cnf_transformation,[],[f15908_D])).
fof(f15908_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl625),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl625])])).
fof(f15795,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl205 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8771])).
fof(f15906,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | $spl623),
  inference(cnf_transformation,[],[f15906_D])).
fof(f15906_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) <=> ~$spl623),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl623])])).
fof(f15796,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl209 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8775])).
fof(f15904,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl621),
  inference(cnf_transformation,[],[f15904_D])).
fof(f15904_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl621),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl621])])).
fof(f15808,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl277 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8843])).
fof(f15902,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl619),
  inference(cnf_transformation,[],[f15902_D])).
fof(f15902_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl619),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl619])])).
fof(f15809,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl279 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8845])).
fof(f15900,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl617),
  inference(cnf_transformation,[],[f15900_D])).
fof(f15900_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl617),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl617])])).
fof(f15810,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl281 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8847])).
fof(f15898,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl615),
  inference(cnf_transformation,[],[f15898_D])).
fof(f15898_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl615),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl615])])).
fof(f15811,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl283 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8849])).
fof(f15896,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl613),
  inference(cnf_transformation,[],[f15896_D])).
fof(f15896_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl613),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl613])])).
fof(f15815,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl328 | $spl373)),
  inference(backward_demodulation,[],[f10468,f14979])).
fof(f15894,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl611),
  inference(cnf_transformation,[],[f15894_D])).
fof(f15894_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl611),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl611])])).
fof(f15816,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl328 | $spl375)),
  inference(backward_demodulation,[],[f10468,f14981])).
fof(f15824,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl328 | $spl411)),
  inference(backward_demodulation,[],[f10468,f15235])).
fof(f15871,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl328 | $spl587)),
  inference(forward_demodulation,[],[f15846,f203])).
fof(f203,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X14] : s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|1')).
fof(f15846,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) | ($spl328 | $spl587)),
  inference(backward_demodulation,[],[f10468,f15719])).
fof(f9715,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl326),
  inference(cnf_transformation,[],[f9715_D])).
fof(f9715_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl326),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl326])])).
fof(f15740,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl284 | $spl310)),
  inference(forward_demodulation,[],[f8850,f8876])).
fof(f15888,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl605),
  inference(cnf_transformation,[],[f15888_D])).
fof(f15888_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl605),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl605])])).
fof(f15737,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl298 | $spl421)),
  inference(backward_demodulation,[],[f8864,f15285])).
fof(f15886,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl603),
  inference(cnf_transformation,[],[f15886_D])).
fof(f15886_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl603),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl603])])).
fof(f15736,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl298 | $spl323)),
  inference(backward_demodulation,[],[f8864,f9712])).
fof(f15884,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl601),
  inference(cnf_transformation,[],[f15884_D])).
fof(f15884_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl601),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl601])])).
fof(f15874,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl211 | $spl298 | $spl328)),
  inference(forward_demodulation,[],[f15732,f10468])).
fof(f15882,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl599),
  inference(cnf_transformation,[],[f15882_D])).
fof(f15882_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl599),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl599])])).
fof(f15875,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl185 | $spl298 | $spl328)),
  inference(forward_demodulation,[],[f15731,f10468])).
fof(f15880,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl597),
  inference(cnf_transformation,[],[f15880_D])).
fof(f15880_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl597),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl597])])).
fof(f15876,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl183 | $spl298 | $spl328)),
  inference(forward_demodulation,[],[f15730,f10468])).
fof(f15853,plain,(
  $false | ($spl237 | $spl328)),
  inference(trivial_inequality_removal,[],[f15797])).
fof(f15797,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl237 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8803])).
fof(f15852,plain,(
  $false | ($spl239 | $spl328)),
  inference(trivial_inequality_removal,[],[f15798])).
fof(f15798,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl239 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8805])).
fof(f15851,plain,(
  $false | ($spl241 | $spl328)),
  inference(trivial_inequality_removal,[],[f15799])).
fof(f15799,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl241 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8807])).
fof(f15850,plain,(
  $false | ($spl243 | $spl328)),
  inference(trivial_inequality_removal,[],[f15800])).
fof(f15800,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl243 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8809])).
fof(f15849,plain,(
  $false | ($spl247 | $spl328)),
  inference(trivial_inequality_removal,[],[f15801])).
fof(f15801,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl247 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8813])).
fof(f15848,plain,(
  $false | ($spl249 | $spl328)),
  inference(trivial_inequality_removal,[],[f15802])).
fof(f15802,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl249 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8815])).
fof(f15847,plain,(
  $false | ($spl295 | $spl328)),
  inference(trivial_inequality_removal,[],[f15812])).
fof(f15812,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl295 | $spl328)),
  inference(backward_demodulation,[],[f10468,f8861])).
fof(f15750,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl595),
  inference(cnf_transformation,[],[f15750_D])).
fof(f15750_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl595),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl595])])).
fof(f15748,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl298 | $spl585)),
  inference(forward_demodulation,[],[f15717,f8864])).
fof(f15037,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl295),
  inference(unit_resulting_resolution,[],[f8861,f282])).
fof(f282,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f179])).
fof(f179,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f76])).
fof(f76,axiom,(
  ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) <=> s('type.num.num',X13) = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_eq|split|7')).
fof(f15030,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl295),
  inference(unit_resulting_resolution,[],[f8861,f282])).
fof(f15747,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15746,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15745,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15744,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15743,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15742,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15741,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  introduced(theory_axiom,[])).
fof(f15739,plain,(
  $false | ($spl255 | $spl298)),
  inference(trivial_inequality_removal,[],[f15733])).
fof(f15733,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl255 | $spl298)),
  inference(backward_demodulation,[],[f8864,f8821])).
fof(f15738,plain,(
  $false | ($spl259 | $spl298)),
  inference(trivial_inequality_removal,[],[f15734])).
fof(f15734,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl259 | $spl298)),
  inference(backward_demodulation,[],[f8864,f8825])).
fof(f15727,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl593),
  inference(cnf_transformation,[],[f15727_D])).
fof(f15727_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl593),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl593])])).
fof(f15725,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl65 | $spl300)),
  inference(backward_demodulation,[],[f8866,f5729])).
fof(f8866,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl300),
  inference(cnf_transformation,[],[f8866_D])).
fof(f8866_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f15595,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl553),
  inference(cnf_transformation,[],[f15595_D])).
fof(f15595_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl553),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl553])])).
fof(f15724,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl275 | $spl300)),
  inference(backward_demodulation,[],[f8866,f8841])).
fof(f15723,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl591),
  inference(cnf_transformation,[],[f15723_D])).
fof(f15723_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl591),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl591])])).
fof(f15705,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl308 | $spl377)),
  inference(backward_demodulation,[],[f8874,f15091])).
fof(f8874,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl308),
  inference(cnf_transformation,[],[f8874_D])).
fof(f8874_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f15721,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl589),
  inference(cnf_transformation,[],[f15721_D])).
fof(f15721_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl589),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl589])])).
fof(f15704,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl308 | $spl371)),
  inference(backward_demodulation,[],[f8874,f14977])).
fof(f15719,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl587),
  inference(cnf_transformation,[],[f15719_D])).
fof(f15719_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl587),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl587])])).
fof(f15692,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl191 | $spl308)),
  inference(backward_demodulation,[],[f8874,f7404])).
fof(f15717,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl585),
  inference(cnf_transformation,[],[f15717_D])).
fof(f15717_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl585),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl585])])).
fof(f15690,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl181 | $spl308)),
  inference(backward_demodulation,[],[f8874,f6844])).
fof(f15707,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl575),
  inference(cnf_transformation,[],[f15707_D])).
fof(f15707_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl575),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl575])])).
fof(f15689,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl95 | $spl308)),
  inference(backward_demodulation,[],[f8874,f6112])).
fof(f15715,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl583),
  inference(cnf_transformation,[],[f15715_D])).
fof(f15715_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl583),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl583])])).
fof(f15674,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl27 | $spl308)),
  inference(backward_demodulation,[],[f8874,f3725])).
fof(f15713,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl581),
  inference(cnf_transformation,[],[f15713_D])).
fof(f15713_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl581),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl581])])).
fof(f15672,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl21 | $spl308)),
  inference(backward_demodulation,[],[f8874,f3621])).
fof(f15711,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl579),
  inference(cnf_transformation,[],[f15711_D])).
fof(f15711_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl579),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl579])])).
fof(f15671,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl19 | $spl308)),
  inference(backward_demodulation,[],[f8874,f3619])).
fof(f15709,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl577),
  inference(cnf_transformation,[],[f15709_D])).
fof(f15709_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl577),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl577])])).
fof(f15670,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl17 | $spl308)),
  inference(backward_demodulation,[],[f8874,f3617])).
fof(f15669,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl15 | $spl308)),
  inference(backward_demodulation,[],[f8874,f3615])).
fof(f15665,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl573),
  inference(cnf_transformation,[],[f15665_D])).
fof(f15665_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl573),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl573])])).
fof(f15662,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl310 | $spl369)),
  inference(backward_demodulation,[],[f8876,f14975])).
fof(f15620,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl565),
  inference(cnf_transformation,[],[f15620_D])).
fof(f15620_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl565),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl565])])).
fof(f15633,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl193 | $spl330)),
  inference(backward_demodulation,[],[f10959,f7456])).
fof(f15637,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl571),
  inference(cnf_transformation,[],[f15637_D])).
fof(f15637_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl571),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl571])])).
fof(f15627,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl57 | $spl330)),
  inference(backward_demodulation,[],[f10959,f5409])).
fof(f15622,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl567),
  inference(cnf_transformation,[],[f15622_D])).
fof(f15622_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl567),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl567])])).
fof(f15618,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl195 | $spl332)),
  inference(backward_demodulation,[],[f10961,f7458])).
fof(f15624,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl569),
  inference(cnf_transformation,[],[f15624_D])).
fof(f15624_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl569),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl569])])).
fof(f15612,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl59 | $spl332)),
  inference(backward_demodulation,[],[f10961,f5411])).
fof(f15580,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl551),
  inference(cnf_transformation,[],[f15580_D])).
fof(f15580_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl551),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl551])])).
fof(f15611,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl39 | $spl332)),
  inference(backward_demodulation,[],[f10961,f4115])).
fof(f15605,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl563),
  inference(cnf_transformation,[],[f15605_D])).
fof(f15605_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl563),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl563])])).
fof(f15610,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl37 | $spl332)),
  inference(backward_demodulation,[],[f10961,f4113])).
fof(f15609,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl35 | $spl332)),
  inference(backward_demodulation,[],[f10961,f4111])).
fof(f15608,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl33 | $spl332)),
  inference(backward_demodulation,[],[f10961,f4109])).
fof(f15593,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl197 | $spl334)),
  inference(backward_demodulation,[],[f10963,f7460])).
fof(f15603,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl561),
  inference(cnf_transformation,[],[f15603_D])).
fof(f15603_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl561),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl561])])).
fof(f15587,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl61 | $spl334)),
  inference(backward_demodulation,[],[f10963,f5413])).
fof(f15586,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl47 | $spl334)),
  inference(backward_demodulation,[],[f10963,f4137])).
fof(f15599,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl557),
  inference(cnf_transformation,[],[f15599_D])).
fof(f15599_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl557),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl557])])).
fof(f15585,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl45 | $spl334)),
  inference(backward_demodulation,[],[f10963,f4135])).
fof(f15597,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl555),
  inference(cnf_transformation,[],[f15597_D])).
fof(f15597_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl555),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl555])])).
fof(f15584,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl43 | $spl334)),
  inference(backward_demodulation,[],[f10963,f4133])).
fof(f15583,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl41 | $spl334)),
  inference(backward_demodulation,[],[f10963,f4131])).
fof(f15570,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl199 | $spl336)),
  inference(backward_demodulation,[],[f10965,f7462])).
fof(f15578,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl549),
  inference(cnf_transformation,[],[f15578_D])).
fof(f15578_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl549),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl549])])).
fof(f15564,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl63 | $spl336)),
  inference(backward_demodulation,[],[f10965,f5415])).
fof(f15576,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl547),
  inference(cnf_transformation,[],[f15576_D])).
fof(f15576_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl547),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl547])])).
fof(f15563,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl55 | $spl336)),
  inference(backward_demodulation,[],[f10965,f4165])).
fof(f15394,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl467),
  inference(cnf_transformation,[],[f15394_D])).
fof(f15394_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl467),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl467])])).
fof(f15562,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl53 | $spl336)),
  inference(backward_demodulation,[],[f10965,f4163])).
fof(f15574,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl545),
  inference(cnf_transformation,[],[f15574_D])).
fof(f15574_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl545),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl545])])).
fof(f15561,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl51 | $spl336)),
  inference(backward_demodulation,[],[f10965,f4161])).
fof(f15572,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl543),
  inference(cnf_transformation,[],[f15572_D])).
fof(f15572_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl543),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl543])])).
fof(f15560,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl49 | $spl336)),
  inference(backward_demodulation,[],[f10965,f4159])).
fof(f15555,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl541),
  inference(cnf_transformation,[],[f15555_D])).
fof(f15555_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl541),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl541])])).
fof(f15547,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl107 | $spl380)),
  inference(backward_demodulation,[],[f15114,f6138])).
fof(f15553,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl539),
  inference(cnf_transformation,[],[f15553_D])).
fof(f15553_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl539),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl539])])).
fof(f15546,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl105 | $spl380)),
  inference(backward_demodulation,[],[f15114,f6136])).
fof(f15551,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl537),
  inference(cnf_transformation,[],[f15551_D])).
fof(f15551_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl537),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl537])])).
fof(f15545,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl103 | $spl380)),
  inference(backward_demodulation,[],[f15114,f6134])).
fof(f15549,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl535),
  inference(cnf_transformation,[],[f15549_D])).
fof(f15549_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl535),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl535])])).
fof(f15544,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl101 | $spl380)),
  inference(backward_demodulation,[],[f15114,f6132])).
fof(f15541,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl533),
  inference(cnf_transformation,[],[f15541_D])).
fof(f15541_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl533),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl533])])).
fof(f15533,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl115 | $spl382)),
  inference(backward_demodulation,[],[f15116,f6160])).
fof(f15539,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl531),
  inference(cnf_transformation,[],[f15539_D])).
fof(f15539_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl531),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl531])])).
fof(f15532,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl113 | $spl382)),
  inference(backward_demodulation,[],[f15116,f6158])).
fof(f15537,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl529),
  inference(cnf_transformation,[],[f15537_D])).
fof(f15537_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl529),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl529])])).
fof(f15531,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl111 | $spl382)),
  inference(backward_demodulation,[],[f15116,f6156])).
fof(f15535,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl527),
  inference(cnf_transformation,[],[f15535_D])).
fof(f15535_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl527),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl527])])).
fof(f15530,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl109 | $spl382)),
  inference(backward_demodulation,[],[f15116,f6154])).
fof(f15527,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl525),
  inference(cnf_transformation,[],[f15527_D])).
fof(f15527_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl525),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl525])])).
fof(f15519,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl123 | $spl384)),
  inference(backward_demodulation,[],[f15118,f6182])).
fof(f15525,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl523),
  inference(cnf_transformation,[],[f15525_D])).
fof(f15525_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl523),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl523])])).
fof(f15518,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl121 | $spl384)),
  inference(backward_demodulation,[],[f15118,f6180])).
fof(f15523,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl521),
  inference(cnf_transformation,[],[f15523_D])).
fof(f15523_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl521),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl521])])).
fof(f15517,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl119 | $spl384)),
  inference(backward_demodulation,[],[f15118,f6178])).
fof(f15521,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl519),
  inference(cnf_transformation,[],[f15521_D])).
fof(f15521_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl519),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl519])])).
fof(f15516,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl117 | $spl384)),
  inference(backward_demodulation,[],[f15118,f6176])).
fof(f15511,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl517),
  inference(cnf_transformation,[],[f15511_D])).
fof(f15511_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl517),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl517])])).
fof(f15503,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl131 | $spl388)),
  inference(backward_demodulation,[],[f15136,f6210])).
fof(f15509,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl515),
  inference(cnf_transformation,[],[f15509_D])).
fof(f15509_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl515),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl515])])).
fof(f15502,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl129 | $spl388)),
  inference(backward_demodulation,[],[f15136,f6208])).
fof(f15507,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl513),
  inference(cnf_transformation,[],[f15507_D])).
fof(f15507_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl513),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl513])])).
fof(f15501,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl127 | $spl388)),
  inference(backward_demodulation,[],[f15136,f6206])).
fof(f15505,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl511),
  inference(cnf_transformation,[],[f15505_D])).
fof(f15505_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl511),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl511])])).
fof(f15500,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl125 | $spl388)),
  inference(backward_demodulation,[],[f15136,f6204])).
fof(f15497,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl509),
  inference(cnf_transformation,[],[f15497_D])).
fof(f15497_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl509),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl509])])).
fof(f15489,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl139 | $spl390)),
  inference(backward_demodulation,[],[f15138,f6232])).
fof(f15495,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl507),
  inference(cnf_transformation,[],[f15495_D])).
fof(f15495_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl507),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl507])])).
fof(f15488,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl137 | $spl390)),
  inference(backward_demodulation,[],[f15138,f6230])).
fof(f15493,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl505),
  inference(cnf_transformation,[],[f15493_D])).
fof(f15493_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl505),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl505])])).
fof(f15487,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl135 | $spl390)),
  inference(backward_demodulation,[],[f15138,f6228])).
fof(f15491,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl503),
  inference(cnf_transformation,[],[f15491_D])).
fof(f15491_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl503),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl503])])).
fof(f15486,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl133 | $spl390)),
  inference(backward_demodulation,[],[f15138,f6226])).
fof(f15483,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl501),
  inference(cnf_transformation,[],[f15483_D])).
fof(f15483_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl501),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl501])])).
fof(f15475,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl147 | $spl392)),
  inference(backward_demodulation,[],[f15140,f6254])).
fof(f15481,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl499),
  inference(cnf_transformation,[],[f15481_D])).
fof(f15481_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl499),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl499])])).
fof(f15474,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl145 | $spl392)),
  inference(backward_demodulation,[],[f15140,f6252])).
fof(f15479,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl497),
  inference(cnf_transformation,[],[f15479_D])).
fof(f15479_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl497),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl497])])).
fof(f15473,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl143 | $spl392)),
  inference(backward_demodulation,[],[f15140,f6250])).
fof(f15477,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl495),
  inference(cnf_transformation,[],[f15477_D])).
fof(f15477_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl495),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl495])])).
fof(f15472,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl141 | $spl392)),
  inference(backward_demodulation,[],[f15140,f6248])).
fof(f15467,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl493),
  inference(cnf_transformation,[],[f15467_D])).
fof(f15467_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl493),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl493])])).
fof(f15459,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl161 | $spl396)),
  inference(backward_demodulation,[],[f15158,f6300])).
fof(f15465,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl491),
  inference(cnf_transformation,[],[f15465_D])).
fof(f15465_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl491),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl491])])).
fof(f15458,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl159 | $spl396)),
  inference(backward_demodulation,[],[f15158,f6298])).
fof(f15463,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl489),
  inference(cnf_transformation,[],[f15463_D])).
fof(f15463_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl489),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl489])])).
fof(f15457,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl157 | $spl396)),
  inference(backward_demodulation,[],[f15158,f6296])).
fof(f15461,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl487),
  inference(cnf_transformation,[],[f15461_D])).
fof(f15461_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl487),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl487])])).
fof(f15456,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl155 | $spl396)),
  inference(backward_demodulation,[],[f15158,f6294])).
fof(f15453,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl485),
  inference(cnf_transformation,[],[f15453_D])).
fof(f15453_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl485),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl485])])).
fof(f15445,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl169 | $spl398)),
  inference(backward_demodulation,[],[f15160,f6322])).
fof(f15451,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl483),
  inference(cnf_transformation,[],[f15451_D])).
fof(f15451_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl483),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl483])])).
fof(f15444,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl167 | $spl398)),
  inference(backward_demodulation,[],[f15160,f6320])).
fof(f15449,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl481),
  inference(cnf_transformation,[],[f15449_D])).
fof(f15449_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl481),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl481])])).
fof(f15443,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl165 | $spl398)),
  inference(backward_demodulation,[],[f15160,f6318])).
fof(f15447,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl479),
  inference(cnf_transformation,[],[f15447_D])).
fof(f15447_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl479),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl479])])).
fof(f15442,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl163 | $spl398)),
  inference(backward_demodulation,[],[f15160,f6316])).
fof(f15439,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl477),
  inference(cnf_transformation,[],[f15439_D])).
fof(f15439_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl477),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl477])])).
fof(f15431,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl177 | $spl400)),
  inference(backward_demodulation,[],[f15162,f6344])).
fof(f15437,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl475),
  inference(cnf_transformation,[],[f15437_D])).
fof(f15437_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl475),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl475])])).
fof(f15430,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl175 | $spl400)),
  inference(backward_demodulation,[],[f15162,f6342])).
fof(f15435,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl473),
  inference(cnf_transformation,[],[f15435_D])).
fof(f15435_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl473),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl473])])).
fof(f15429,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl173 | $spl400)),
  inference(backward_demodulation,[],[f15162,f6340])).
fof(f15433,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl471),
  inference(cnf_transformation,[],[f15433_D])).
fof(f15433_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl471),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl471])])).
fof(f15428,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl171 | $spl400)),
  inference(backward_demodulation,[],[f15162,f6338])).
fof(f10928,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f275])).
fof(f10922,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f275])).
fof(f8875,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl309),
  inference(cnf_transformation,[],[f8875_D])).
fof(f8875_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl309),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl309])])).
fof(f10927,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f277])).
fof(f10921,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f277])).
fof(f15397,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl469),
  inference(cnf_transformation,[],[f15397_D])).
fof(f15397_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl469),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl469])])).
fof(f15395,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl87 | $spl288)),
  inference(forward_demodulation,[],[f6074,f8854])).
fof(f8854,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl288),
  inference(cnf_transformation,[],[f8854_D])).
fof(f8854_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl288),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl288])])).
fof(f15392,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl263 | $spl288)),
  inference(forward_demodulation,[],[f8829,f8854])).
fof(f15323,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl459),
  inference(cnf_transformation,[],[f15323_D])).
fof(f15323_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl459),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl459])])).
fof(f15391,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl288 | $spl407)),
  inference(forward_demodulation,[],[f15231,f8854])).
fof(f8867,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl301),
  inference(cnf_transformation,[],[f8867_D])).
fof(f8867_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl301),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl301])])).
fof(f10942,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl307),
  inference(unit_resulting_resolution,[],[f8873,f275])).
fof(f10935,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl307),
  inference(unit_resulting_resolution,[],[f8873,f275])).
fof(f8865,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl299),
  inference(cnf_transformation,[],[f8865_D])).
fof(f8865_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl299),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl299])])).
fof(f10941,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl307),
  inference(unit_resulting_resolution,[],[f8873,f277])).
fof(f10934,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl307),
  inference(unit_resulting_resolution,[],[f8873,f277])).
fof(f15390,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15389,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15388,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15387,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15386,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15385,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15384,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  introduced(theory_axiom,[])).
fof(f15383,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),
  introduced(theory_axiom,[])).
fof(f15382,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15381,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15380,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15379,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15378,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15377,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15376,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15375,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15374,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15373,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15372,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15371,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15370,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15369,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15368,plain,(
  $false | ($spl293 | $spl304)),
  inference(global_subsumption,[],[f183,f15029,f15028,f8859,f15024,f15027,f8870,f15361,f15362])).
fof(f15362,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.integer.int'),'const.pair.,_2'(s(X0,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.pair.prod'(X0,'type.integer.int'),'const.pair.,_2'(s(X0,X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl293 | $spl304)),
  inference(backward_demodulation,[],[f8870,f15029])).
fof(f15361,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.integer.int',X0),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))),s(X0,X1))) != s('type.pair.prod'('type.integer.int',X0),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))),s(X0,X2)))) ) | ($spl293 | $spl304)),
  inference(backward_demodulation,[],[f8870,f15028])).
fof(f15028,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.integer.int',X0),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))),s(X0,X1))) != s('type.pair.prod'('type.integer.int',X0),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),s(X0,X2)))) ) | $spl293),
  inference(unit_resulting_resolution,[],[f8859,f284])).
fof(f15029,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,'type.integer.int'),'const.pair.,_2'(s(X0,X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.pair.prod'(X0,'type.integer.int'),'const.pair.,_2'(s(X0,X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))) ) | $spl293),
  inference(unit_resulting_resolution,[],[f8859,f285])).
fof(f285,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3))) != s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))) | s(X1,X3) = s(X1,X5)) )),
  inference(cnf_transformation,[],[f182])).
fof(f15367,plain,(
  $false | ($spl293 | $spl304)),
  inference(global_subsumption,[],[f183,f15029,f15028,f8859,f15024,f15027,f8870,f15361])).
fof(f15366,plain,(
  $false | ($spl293 | $spl304)),
  inference(trivial_inequality_removal,[],[f15359])).
fof(f15359,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl293 | $spl304)),
  inference(backward_demodulation,[],[f8870,f8859])).
fof(f10925,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f281])).
fof(f281,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f179])).
fof(f10919,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f281])).
fof(f15027,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl293),
  inference(unit_resulting_resolution,[],[f8859,f276])).
fof(f276,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f176])).
fof(f15024,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl293),
  inference(unit_resulting_resolution,[],[f8859,f276])).
fof(f15344,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15343,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15342,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f15341,plain,(
  $false | ($spl229 | $spl290)),
  inference(trivial_inequality_removal,[],[f15338])).
fof(f15338,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl229 | $spl290)),
  inference(backward_demodulation,[],[f8856,f8795])).
fof(f8856,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl290),
  inference(cnf_transformation,[],[f8856_D])).
fof(f8856_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl290),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl290])])).
fof(f10914,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl305),
  inference(unit_resulting_resolution,[],[f8871,f277])).
fof(f10907,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl305),
  inference(unit_resulting_resolution,[],[f8871,f277])).
fof(f10912,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl305),
  inference(unit_resulting_resolution,[],[f8871,f281])).
fof(f10905,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl305),
  inference(unit_resulting_resolution,[],[f8871,f281])).
fof(f15336,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15335,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15334,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15333,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f8799,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl233),
  inference(cnf_transformation,[],[f8799_D])).
fof(f8799_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f15020,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl291),
  inference(unit_resulting_resolution,[],[f8857,f277])).
fof(f15013,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl291),
  inference(unit_resulting_resolution,[],[f8857,f277])).
fof(f8793,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl227),
  inference(cnf_transformation,[],[f8793_D])).
fof(f8793_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl227),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl227])])).
fof(f15007,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl289),
  inference(unit_resulting_resolution,[],[f8855,f275])).
fof(f15000,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl289),
  inference(unit_resulting_resolution,[],[f8855,f275])).
fof(f8785,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl219),
  inference(cnf_transformation,[],[f8785_D])).
fof(f8785_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl219])])).
fof(f14993,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl287),
  inference(unit_resulting_resolution,[],[f8853,f275])).
fof(f14986,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl287),
  inference(unit_resulting_resolution,[],[f8853,f275])).
fof(f8779,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl213),
  inference(cnf_transformation,[],[f8779_D])).
fof(f8779_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl213),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl213])])).
fof(f14990,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl287),
  inference(unit_resulting_resolution,[],[f8853,f281])).
fof(f14983,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl287),
  inference(unit_resulting_resolution,[],[f8853,f281])).
fof(f15332,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15331,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15330,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  introduced(theory_axiom,[])).
fof(f15329,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl465),
  inference(cnf_transformation,[],[f15329_D])).
fof(f15329_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl465),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl465])])).
fof(f15267,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl278 | $spl375)),
  inference(backward_demodulation,[],[f8844,f14981])).
fof(f15327,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl463),
  inference(cnf_transformation,[],[f15327_D])).
fof(f15327_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl463),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl463])])).
fof(f15264,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl278 | $spl293)),
  inference(backward_demodulation,[],[f8844,f8859])).
fof(f15325,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl461),
  inference(cnf_transformation,[],[f15325_D])).
fof(f15325_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl461),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl461])])).
fof(f15263,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl278 | $spl291)),
  inference(backward_demodulation,[],[f8844,f8857])).
fof(f15262,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl278 | $spl289)),
  inference(backward_demodulation,[],[f8844,f8855])).
fof(f15321,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl457),
  inference(cnf_transformation,[],[f15321_D])).
fof(f15321_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl457),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl457])])).
fof(f15261,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl278 | $spl287)),
  inference(backward_demodulation,[],[f8844,f8853])).
fof(f15319,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl455),
  inference(cnf_transformation,[],[f15319_D])).
fof(f15319_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl455),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl455])])).
fof(f15260,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl267 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8833])).
fof(f15317,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl453),
  inference(cnf_transformation,[],[f15317_D])).
fof(f15317_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl453),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl453])])).
fof(f15259,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl265 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8831])).
fof(f15315,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl451),
  inference(cnf_transformation,[],[f15315_D])).
fof(f15315_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl451),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl451])])).
fof(f15258,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl263 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8829])).
fof(f15313,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl449),
  inference(cnf_transformation,[],[f15313_D])).
fof(f15313_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl449),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl449])])).
fof(f15257,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl261 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8827])).
fof(f15311,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl447),
  inference(cnf_transformation,[],[f15311_D])).
fof(f15311_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl447),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl447])])).
fof(f15256,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl235 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8801])).
fof(f15309,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl445),
  inference(cnf_transformation,[],[f15309_D])).
fof(f15309_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl445),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl445])])).
fof(f15255,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl233 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8799])).
fof(f15307,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl443),
  inference(cnf_transformation,[],[f15307_D])).
fof(f15307_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl443),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl443])])).
fof(f15254,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl231 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8797])).
fof(f15305,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl441),
  inference(cnf_transformation,[],[f15305_D])).
fof(f15305_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl441),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl441])])).
fof(f15253,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl229 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8795])).
fof(f15303,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl439),
  inference(cnf_transformation,[],[f15303_D])).
fof(f15303_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl439),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl439])])).
fof(f15252,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl227 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8793])).
fof(f15301,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl437),
  inference(cnf_transformation,[],[f15301_D])).
fof(f15301_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl437),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl437])])).
fof(f15251,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl225 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8791])).
fof(f15299,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl435),
  inference(cnf_transformation,[],[f15299_D])).
fof(f15299_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl435),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl435])])).
fof(f15250,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl223 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8789])).
fof(f15297,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl433),
  inference(cnf_transformation,[],[f15297_D])).
fof(f15297_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl433),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl433])])).
fof(f15249,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl221 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8787])).
fof(f15295,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl431),
  inference(cnf_transformation,[],[f15295_D])).
fof(f15295_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl431),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl431])])).
fof(f15248,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl219 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8785])).
fof(f15293,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl429),
  inference(cnf_transformation,[],[f15293_D])).
fof(f15293_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl429),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl429])])).
fof(f15247,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl217 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8783])).
fof(f15291,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl427),
  inference(cnf_transformation,[],[f15291_D])).
fof(f15291_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl427),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl427])])).
fof(f15246,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl215 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8781])).
fof(f15289,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl425),
  inference(cnf_transformation,[],[f15289_D])).
fof(f15289_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl425),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl425])])).
fof(f15245,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl213 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8779])).
fof(f15287,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl423),
  inference(cnf_transformation,[],[f15287_D])).
fof(f15287_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl423),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl423])])).
fof(f15244,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl201 | $spl278)),
  inference(backward_demodulation,[],[f8844,f8767])).
fof(f15285,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl421),
  inference(cnf_transformation,[],[f15285_D])).
fof(f15285_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl421),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl421])])).
fof(f15243,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl185 | $spl278)),
  inference(backward_demodulation,[],[f8844,f6848])).
fof(f15283,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl419),
  inference(cnf_transformation,[],[f15283_D])).
fof(f15283_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl419),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl419])])).
fof(f15241,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl89 | $spl278)),
  inference(backward_demodulation,[],[f8844,f6076])).
fof(f15281,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl417),
  inference(cnf_transformation,[],[f15281_D])).
fof(f15281_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl417),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl417])])).
fof(f15240,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl87 | $spl278)),
  inference(backward_demodulation,[],[f8844,f6074])).
fof(f15279,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl415),
  inference(cnf_transformation,[],[f15279_D])).
fof(f15279_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl415),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl415])])).
fof(f15239,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl85 | $spl278)),
  inference(backward_demodulation,[],[f8844,f6072])).
fof(f15277,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl413),
  inference(cnf_transformation,[],[f15277_D])).
fof(f15277_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl413),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl413])])).
fof(f15238,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl83 | $spl278)),
  inference(backward_demodulation,[],[f8844,f6070])).
fof(f15235,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl411),
  inference(cnf_transformation,[],[f15235_D])).
fof(f15235_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl411),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl411])])).
fof(f15212,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f282])).
fof(f15233,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl409),
  inference(cnf_transformation,[],[f15233_D])).
fof(f15233_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl409),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl409])])).
fof(f15213,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f281])).
fof(f15231,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl407),
  inference(cnf_transformation,[],[f15231_D])).
fof(f15231_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl407),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl407])])).
fof(f15214,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f279])).
fof(f15229,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl405),
  inference(cnf_transformation,[],[f15229_D])).
fof(f15229_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl405),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl405])])).
fof(f15215,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f277])).
fof(f15227,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl403),
  inference(cnf_transformation,[],[f15227_D])).
fof(f15227_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl403),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl403])])).
fof(f15216,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f275])).
fof(f15219,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f282])).
fof(f15220,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f281])).
fof(f15221,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f279])).
fof(f15222,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f277])).
fof(f15223,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl279),
  inference(unit_resulting_resolution,[],[f8845,f275])).
fof(f15163,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl401),
  inference(cnf_transformation,[],[f15163_D])).
fof(f15163_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl401),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl401])])).
fof(f15143,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f281])).
fof(f15161,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl399),
  inference(cnf_transformation,[],[f15161_D])).
fof(f15161_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl399),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl399])])).
fof(f15144,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f279])).
fof(f15159,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl397),
  inference(cnf_transformation,[],[f15159_D])).
fof(f15159_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl397),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl397])])).
fof(f15145,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f277])).
fof(f15157,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl395),
  inference(cnf_transformation,[],[f15157_D])).
fof(f15157_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl395),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl395])])).
fof(f15146,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f275])).
fof(f15150,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f281])).
fof(f15151,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f279])).
fof(f15152,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f277])).
fof(f15153,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl337),
  inference(unit_resulting_resolution,[],[f10966,f275])).
fof(f15141,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl393),
  inference(cnf_transformation,[],[f15141_D])).
fof(f15141_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl393),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl393])])).
fof(f15121,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f281])).
fof(f15139,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl391),
  inference(cnf_transformation,[],[f15139_D])).
fof(f15139_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl391),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl391])])).
fof(f15122,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f279])).
fof(f15137,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl389),
  inference(cnf_transformation,[],[f15137_D])).
fof(f15137_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl389),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl389])])).
fof(f15123,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f277])).
fof(f15135,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl387),
  inference(cnf_transformation,[],[f15135_D])).
fof(f15135_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl387),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl387])])).
fof(f15124,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f275])).
fof(f15128,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f281])).
fof(f15129,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f279])).
fof(f15130,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f277])).
fof(f15131,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl335),
  inference(unit_resulting_resolution,[],[f10964,f275])).
fof(f15119,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl385),
  inference(cnf_transformation,[],[f15119_D])).
fof(f15119_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl385),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl385])])).
fof(f15099,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f281])).
fof(f15117,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl383),
  inference(cnf_transformation,[],[f15117_D])).
fof(f15117_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl383),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl383])])).
fof(f15100,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f279])).
fof(f15115,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl381),
  inference(cnf_transformation,[],[f15115_D])).
fof(f15115_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl381),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl381])])).
fof(f15101,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f277])).
fof(f15113,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl379),
  inference(cnf_transformation,[],[f15113_D])).
fof(f15113_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl379),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl379])])).
fof(f15102,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f275])).
fof(f15106,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f281])).
fof(f15107,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f279])).
fof(f15108,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f277])).
fof(f15109,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl333),
  inference(unit_resulting_resolution,[],[f10962,f275])).
fof(f15091,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl377),
  inference(cnf_transformation,[],[f15091_D])).
fof(f15091_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl377),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl377])])).
fof(f15080,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl277),
  inference(unit_resulting_resolution,[],[f8843,f277])).
fof(f15086,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl277),
  inference(unit_resulting_resolution,[],[f8843,f277])).
fof(f14981,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl375),
  inference(cnf_transformation,[],[f14981_D])).
fof(f14981_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl375),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl375])])).
fof(f14962,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f281])).
fof(f14979,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl373),
  inference(cnf_transformation,[],[f14979_D])).
fof(f14979_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl373),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl373])])).
fof(f14963,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f279])).
fof(f14977,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl371),
  inference(cnf_transformation,[],[f14977_D])).
fof(f14977_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl371),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl371])])).
fof(f14964,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f277])).
fof(f14975,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl369),
  inference(cnf_transformation,[],[f14975_D])).
fof(f14975_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl369),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl369])])).
fof(f14965,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f275])).
fof(f14968,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f281])).
fof(f14969,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f279])).
fof(f14970,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f277])).
fof(f14971,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl283),
  inference(unit_resulting_resolution,[],[f8849,f275])).
fof(f14927,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | $spl366),
  inference(cnf_transformation,[],[f14927_D])).
fof(f14927_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl366),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl366])])).
fof(f14957,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14956,f1942])).
fof(f14956,plain,(
  ( ! [X175] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X175),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13716,f264])).
fof(f13716,plain,(
  ( ! [X175] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13669])).
fof(f13669,plain,(
  ( ! [X175] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X175))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3800,f6037])).
fof(f3800,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3778,f1942])).
fof(f3778,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3202,f202])).
fof(f202,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X14] : s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|7')).
fof(f3202,plain,(
  ( ! [X120,X119] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X120))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X120) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X119),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f281,f1942])).
fof(f14919,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl364),
  inference(cnf_transformation,[],[f14919_D])).
fof(f14919_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl364),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl364])])).
fof(f14955,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14954,f1942])).
fof(f14954,plain,(
  ( ! [X174] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X174),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13717,f264])).
fof(f13717,plain,(
  ( ! [X174] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13668])).
fof(f13668,plain,(
  ( ! [X174] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X174))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3794,f6037])).
fof(f3794,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl0),
  inference(forward_demodulation,[],[f3774,f1942])).
fof(f3774,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3202,f204])).
fof(f204,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X14] : s('type.num.num',X14) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))),
  file('thm.frac.FRAC_|49|_|48|','thm.arithmetic.ADD|split|0')).
fof(f14915,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | $spl362),
  inference(cnf_transformation,[],[f14915_D])).
fof(f14915_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl362),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl362])])).
fof(f14953,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14952,f1942])).
fof(f14952,plain,(
  ( ! [X173] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X173),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13718,f264])).
fof(f13718,plain,(
  ( ! [X173] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13667])).
fof(f13667,plain,(
  ( ! [X173] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3793,f6037])).
fof(f3793,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3773,f1942])).
fof(f3773,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3202,f203])).
fof(f14951,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14950,f1942])).
fof(f14950,plain,(
  ( ! [X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X172),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13719,f264])).
fof(f13719,plain,(
  ( ! [X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13666])).
fof(f13666,plain,(
  ( ! [X172] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3759,f6037])).
fof(f3759,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3737,f1942])).
fof(f3737,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3198,f202])).
fof(f3198,plain,(
  ( ! [X111,X112] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X112))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X112) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X111),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f279,f1942])).
fof(f14949,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14948,f1942])).
fof(f14948,plain,(
  ( ! [X171] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X171),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13720,f264])).
fof(f13720,plain,(
  ( ! [X171] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13665])).
fof(f13665,plain,(
  ( ! [X171] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3753,f6037])).
fof(f3753,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl0),
  inference(forward_demodulation,[],[f3733,f1942])).
fof(f3733,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3198,f204])).
fof(f14947,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14946,f1942])).
fof(f14946,plain,(
  ( ! [X170] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X170),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13721,f264])).
fof(f13721,plain,(
  ( ! [X170] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13664])).
fof(f13664,plain,(
  ( ! [X170] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X170))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3752,f6037])).
fof(f3752,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3732,f1942])).
fof(f3732,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3198,f203])).
fof(f14941,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14940,f1942])).
fof(f14940,plain,(
  ( ! [X165] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X165),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13722,f264])).
fof(f13722,plain,(
  ( ! [X165] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13661])).
fof(f13661,plain,(
  ( ! [X165] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X165))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3695,f6037])).
fof(f3695,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3672,f1942])).
fof(f3672,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3194,f202])).
fof(f14939,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14938,f1942])).
fof(f14938,plain,(
  ( ! [X164] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X164),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13723,f264])).
fof(f13723,plain,(
  ( ! [X164] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X164))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13660])).
fof(f13660,plain,(
  ( ! [X164] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X164))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3689,f6037])).
fof(f3689,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl0),
  inference(forward_demodulation,[],[f3668,f1942])).
fof(f3668,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3194,f204])).
fof(f14937,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14936,f1942])).
fof(f14936,plain,(
  ( ! [X163] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X163),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13724,f264])).
fof(f13724,plain,(
  ( ! [X163] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13659])).
fof(f13659,plain,(
  ( ! [X163] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X163))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3688,f6037])).
fof(f3688,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3667,f1942])).
fof(f3667,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3194,f203])).
fof(f14925,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14924,f1942])).
fof(f14924,plain,(
  ( ! [X154] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X154),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13725,f264])).
fof(f13725,plain,(
  ( ! [X154] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13654])).
fof(f13654,plain,(
  ( ! [X154] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X154))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3653,f6037])).
fof(f3653,plain,(
  ( ! [X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3631,f1942])).
fof(f3631,plain,(
  ( ! [X15,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X15))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3190,f202])).
fof(f14917,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14916,f1942])).
fof(f14916,plain,(
  ( ! [X149] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X149),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13726,f264])).
fof(f13726,plain,(
  ( ! [X149] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13651])).
fof(f13651,plain,(
  ( ! [X149] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X149))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3647,f6037])).
fof(f3647,plain,(
  ( ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) ) | $spl0),
  inference(forward_demodulation,[],[f3627,f1942])).
fof(f3627,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X6))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3190,f204])).
fof(f14913,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14912,f1942])).
fof(f14912,plain,(
  ( ! [X148] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X148),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13727,f264])).
fof(f13727,plain,(
  ( ! [X148] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(trivial_inequality_removal,[],[f13650])).
fof(f13650,plain,(
  ( ! [X148] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X148))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | ($spl0 | $spl80)),
  inference(superposition,[],[f3646,f6037])).
fof(f3646,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(forward_demodulation,[],[f3626,f1942])).
fof(f3626,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num',X4))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f3190,f203])).
fof(f6091,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl92),
  inference(cnf_transformation,[],[f6091_D])).
fof(f6091_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f14889,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13560,f1942])).
fof(f13560,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(superposition,[],[f264,f6037])).
fof(f14888,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13559,f1942])).
fof(f13559,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(superposition,[],[f6037,f264])).
fof(f14887,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl360),
  inference(cnf_transformation,[],[f14887_D])).
fof(f14887_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl360),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl360])])).
fof(f13557,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl80),
  inference(superposition,[],[f6037,f188])).
fof(f6277,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl152),
  inference(cnf_transformation,[],[f6277_D])).
fof(f6277_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f14885,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14884,f1942])).
fof(f14884,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13123,f264])).
fof(f13123,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f282])).
fof(f6275,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl150),
  inference(cnf_transformation,[],[f6275_D])).
fof(f6275_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f14883,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14882,f1942])).
fof(f14882,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13124,f264])).
fof(f13124,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f280])).
fof(f280,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f178])).
fof(f6273,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl148),
  inference(cnf_transformation,[],[f6273_D])).
fof(f6273_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f14881,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14880,f1942])).
fof(f14880,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13125,f264])).
fof(f13125,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f278])).
fof(f278,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f177])).
fof(f6035,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl78),
  inference(cnf_transformation,[],[f6035_D])).
fof(f6035_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f14879,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14878,f1942])).
fof(f14878,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13126,f264])).
fof(f13126,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f276])).
fof(f14150,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | $spl358),
  inference(cnf_transformation,[],[f14150_D])).
fof(f14150_D,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) <=> ~$spl358),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl358])])).
fof(f14877,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14876,f1942])).
fof(f14876,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14875,f264])).
fof(f14875,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13127,f200])).
fof(f13127,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14874,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14873,f1942])).
fof(f14873,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14872,f264])).
fof(f14872,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13128,f201])).
fof(f201,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|29')).
fof(f13128,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14871,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14870,f1942])).
fof(f14870,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14869,f264])).
fof(f14869,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13129,f219])).
fof(f13129,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14868,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14867,f1942])).
fof(f14867,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14866,f264])).
fof(f14866,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13130,f220])).
fof(f220,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14)))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|1')).
fof(f13130,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14865,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14864,f1942])).
fof(f14864,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14863,f264])).
fof(f14863,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13131,f266])).
fof(f266,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X14,X13] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|8')).
fof(f13131,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14862,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14861,f1942])).
fof(f14861,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14860,f264])).
fof(f14860,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13132,f267])).
fof(f267,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X14,X13] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|9')).
fof(f13132,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14859,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14858,f1942])).
fof(f14858,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14857,f264])).
fof(f14857,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13133,f222])).
fof(f13133,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14856,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14855,f1942])).
fof(f14855,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14854,f264])).
fof(f14854,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13134,f223])).
fof(f223,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X14] : s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.frac.FRAC_|49|_|48|','thm.integer.INT_LT_REDUCE|split|6')).
fof(f13134,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14130,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | $spl356),
  inference(cnf_transformation,[],[f14130_D])).
fof(f14130_D,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) <=> ~$spl356),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl356])])).
fof(f14853,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14852,f1942])).
fof(f14852,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14851,f264])).
fof(f14851,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13135,f189])).
fof(f13135,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14850,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14849,f1942])).
fof(f14849,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14848,f264])).
fof(f14848,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13136,f215])).
fof(f13136,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14847,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14846,f1942])).
fof(f14846,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14845,f264])).
fof(f14845,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13137,f221])).
fof(f13137,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14844,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14843,f1942])).
fof(f14843,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14842,f264])).
fof(f14842,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13138,f265])).
fof(f13138,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14841,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14840,f1942])).
fof(f14840,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14839,f264])).
fof(f14839,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13139,f198])).
fof(f13139,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14838,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14837,f1942])).
fof(f14837,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14836,f264])).
fof(f14836,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13140,f199])).
fof(f13140,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f14086,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl354),
  inference(cnf_transformation,[],[f14086_D])).
fof(f14086_D,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) <=> ~$spl354),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl354])])).
fof(f14802,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14801,f1942])).
fof(f14801,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14800,f264])).
fof(f14800,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13152,f191])).
fof(f13152,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14799,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14798,f1942])).
fof(f14798,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f14797,f264])).
fof(f14797,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13153,f295])).
fof(f13153,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14796,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14795,f1942])).
fof(f14795,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14794,f264])).
fof(f14794,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13154,f291])).
fof(f13154,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|48|_0')))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f13737,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl338),
  inference(cnf_transformation,[],[f13737_D])).
fof(f13737_D,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl338),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl338])])).
fof(f14742,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14741,f1942])).
fof(f14741,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14740,f264])).
fof(f14740,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14739,f1942])).
fof(f14739,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13172,f264])).
fof(f13172,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f6037,f286])).
fof(f14738,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14737,f1942])).
fof(f14737,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14736,f200])).
fof(f14736,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))) ) | $spl80),
  inference(forward_demodulation,[],[f13173,f264])).
fof(f13173,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14735,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14734,f1942])).
fof(f14734,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14733,f201])).
fof(f14733,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13174,f264])).
fof(f13174,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14732,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14731,f1942])).
fof(f14731,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14730,f264])).
fof(f14730,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13175,f219])).
fof(f13175,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14729,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14728,f1942])).
fof(f14728,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14727,f264])).
fof(f14727,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13176,f220])).
fof(f13176,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14726,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14725,f1942])).
fof(f14725,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14724,f264])).
fof(f14724,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13177,f266])).
fof(f13177,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14723,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14722,f1942])).
fof(f14722,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14721,f264])).
fof(f14721,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13178,f267])).
fof(f13178,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14720,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14719,f1942])).
fof(f14719,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14718,f264])).
fof(f14718,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13179,f222])).
fof(f13179,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14717,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14716,f1942])).
fof(f14716,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14715,f264])).
fof(f14715,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13180,f223])).
fof(f13180,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14714,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14713,f1942])).
fof(f14713,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14712,f264])).
fof(f14712,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13181,f189])).
fof(f13181,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14711,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14710,f1942])).
fof(f14710,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14709,f264])).
fof(f14709,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13182,f215])).
fof(f13182,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14708,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14707,f1942])).
fof(f14707,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14706,f264])).
fof(f14706,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13183,f221])).
fof(f13183,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14705,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14704,f1942])).
fof(f14704,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14703,f264])).
fof(f14703,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13184,f265])).
fof(f13184,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14702,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14701,f1942])).
fof(f14701,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14700,f198])).
fof(f14700,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13185,f264])).
fof(f13185,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14699,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14698,f1942])).
fof(f14698,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14697,f199])).
fof(f14697,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))) ) | $spl80),
  inference(forward_demodulation,[],[f13186,f264])).
fof(f13186,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f14663,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14662,f1942])).
fof(f14662,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14661,f264])).
fof(f14661,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13198,f191])).
fof(f13198,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14660,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14659,f1942])).
fof(f14659,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f14658,f264])).
fof(f14658,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13199,f295])).
fof(f13199,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14657,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14656,f291])).
fof(f14656,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14655,f1942])).
fof(f14655,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13200,f264])).
fof(f13200,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f13861,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl348),
  inference(cnf_transformation,[],[f13861_D])).
fof(f13861_D,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl348),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl348])])).
fof(f14598,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14597,f200])).
fof(f14597,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14596,f1942])).
fof(f14596,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13229,f264])).
fof(f13229,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14595,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14594,f201])).
fof(f14594,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14593,f1942])).
fof(f14593,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13230,f264])).
fof(f13230,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14592,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14591,f219])).
fof(f14591,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14590,f1942])).
fof(f14590,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13231,f264])).
fof(f13231,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14589,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14588,f220])).
fof(f14588,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14587,f1942])).
fof(f14587,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13232,f264])).
fof(f13232,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14586,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14585,f266])).
fof(f14585,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14584,f1942])).
fof(f14584,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13233,f264])).
fof(f13233,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14583,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14582,f267])).
fof(f14582,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14581,f1942])).
fof(f14581,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13234,f264])).
fof(f13234,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14580,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14579,f222])).
fof(f14579,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14578,f1942])).
fof(f14578,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13235,f264])).
fof(f13235,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14577,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14576,f223])).
fof(f14576,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14575,f1942])).
fof(f14575,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13236,f264])).
fof(f13236,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f13841,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl346),
  inference(cnf_transformation,[],[f13841_D])).
fof(f13841_D,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl346),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl346])])).
fof(f14574,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14573,f189])).
fof(f14573,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14572,f1942])).
fof(f14572,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13237,f264])).
fof(f13237,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14571,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14570,f215])).
fof(f14570,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14569,f1942])).
fof(f14569,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13238,f264])).
fof(f13238,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14568,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14567,f221])).
fof(f14567,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14566,f1942])).
fof(f14566,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13239,f264])).
fof(f13239,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14565,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14564,f265])).
fof(f14564,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14563,f1942])).
fof(f14563,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13240,f264])).
fof(f13240,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14562,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14561,f198])).
fof(f14561,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14560,f1942])).
fof(f14560,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13241,f264])).
fof(f13241,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14559,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14558,f199])).
fof(f14558,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14557,f1942])).
fof(f14557,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13242,f264])).
fof(f13242,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f13797,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl344),
  inference(cnf_transformation,[],[f13797_D])).
fof(f13797_D,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f14523,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14522,f191])).
fof(f14522,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14521,f1942])).
fof(f14521,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13254,f264])).
fof(f13254,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14520,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14519,f295])).
fof(f14519,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14518,f1942])).
fof(f14518,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13255,f264])).
fof(f13255,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14517,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14516,f291])).
fof(f14516,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14515,f1942])).
fof(f14515,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13256,f264])).
fof(f13256,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f14463,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14462,f1942])).
fof(f14462,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14461,f264])).
fof(f14461,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14460,f1942])).
fof(f14460,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13274,f264])).
fof(f13274,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f6037,f286])).
fof(f14459,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14458,f1942])).
fof(f14458,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14457,f200])).
fof(f14457,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13275,f264])).
fof(f13275,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14456,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14455,f1942])).
fof(f14455,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14454,f201])).
fof(f14454,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13276,f264])).
fof(f13276,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14453,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14452,f1942])).
fof(f14452,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14451,f264])).
fof(f14451,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13277,f219])).
fof(f13277,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14450,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14449,f1942])).
fof(f14449,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14448,f264])).
fof(f14448,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13278,f220])).
fof(f13278,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14447,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14446,f1942])).
fof(f14446,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14445,f264])).
fof(f14445,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13279,f266])).
fof(f13279,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14444,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14443,f1942])).
fof(f14443,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14442,f264])).
fof(f14442,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13280,f267])).
fof(f13280,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14441,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14440,f1942])).
fof(f14440,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14439,f264])).
fof(f14439,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13281,f222])).
fof(f13281,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14438,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14437,f1942])).
fof(f14437,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14436,f264])).
fof(f14436,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13282,f223])).
fof(f13282,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14435,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14434,f1942])).
fof(f14434,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14433,f264])).
fof(f14433,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13283,f189])).
fof(f13283,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14432,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14431,f1942])).
fof(f14431,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14430,f264])).
fof(f14430,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13284,f215])).
fof(f13284,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14429,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14428,f1942])).
fof(f14428,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14427,f264])).
fof(f14427,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13285,f221])).
fof(f13285,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14426,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14425,f1942])).
fof(f14425,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14424,f264])).
fof(f14424,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13286,f265])).
fof(f13286,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14423,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14422,f1942])).
fof(f14422,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14421,f198])).
fof(f14421,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13287,f264])).
fof(f13287,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14420,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14419,f1942])).
fof(f14419,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14418,f199])).
fof(f14418,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13288,f264])).
fof(f13288,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f14384,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14383,f1942])).
fof(f14383,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14382,f264])).
fof(f14382,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13300,f191])).
fof(f13300,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14381,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14380,f1942])).
fof(f14380,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f14379,f264])).
fof(f14379,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13301,f295])).
fof(f13301,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14378,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14377,f291])).
fof(f14377,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14376,f1942])).
fof(f14376,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13302,f264])).
fof(f13302,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f14319,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14318,f1942])).
fof(f14318,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13331,f264])).
fof(f13331,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f282])).
fof(f14317,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14316,f1942])).
fof(f14316,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13332,f264])).
fof(f13332,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f280])).
fof(f14315,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14314,f1942])).
fof(f14314,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13333,f264])).
fof(f13333,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f278])).
fof(f14313,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14312,f1942])).
fof(f14312,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13334,f264])).
fof(f13334,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f276])).
fof(f14311,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14310,f1942])).
fof(f14310,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14309,f200])).
fof(f14309,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))) ) | $spl80),
  inference(forward_demodulation,[],[f13335,f264])).
fof(f13335,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14308,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14307,f1942])).
fof(f14307,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14306,f201])).
fof(f14306,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13336,f264])).
fof(f13336,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14305,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14304,f1942])).
fof(f14304,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14303,f264])).
fof(f14303,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13337,f219])).
fof(f13337,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14302,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14301,f1942])).
fof(f14301,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14300,f264])).
fof(f14300,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13338,f220])).
fof(f13338,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14299,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14298,f1942])).
fof(f14298,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14297,f264])).
fof(f14297,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13339,f266])).
fof(f13339,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14296,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14295,f1942])).
fof(f14295,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14294,f264])).
fof(f14294,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13340,f267])).
fof(f13340,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14293,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14292,f1942])).
fof(f14292,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14291,f264])).
fof(f14291,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13341,f222])).
fof(f13341,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14290,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14289,f1942])).
fof(f14289,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14288,f264])).
fof(f14288,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13342,f223])).
fof(f13342,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14287,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14286,f1942])).
fof(f14286,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14285,f264])).
fof(f14285,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13343,f189])).
fof(f13343,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14284,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14283,f1942])).
fof(f14283,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14282,f264])).
fof(f14282,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13344,f215])).
fof(f13344,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14281,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14280,f1942])).
fof(f14280,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14279,f264])).
fof(f14279,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13345,f221])).
fof(f13345,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14278,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14277,f1942])).
fof(f14277,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14276,f264])).
fof(f14276,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13346,f265])).
fof(f13346,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14275,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14274,f1942])).
fof(f14274,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14273,f198])).
fof(f14273,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13347,f264])).
fof(f13347,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14272,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14271,f1942])).
fof(f14271,plain,(
  ( ! [X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14270,f199])).
fof(f14270,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))))) ) | $spl80),
  inference(forward_demodulation,[],[f13348,f264])).
fof(f13348,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f14236,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14235,f1942])).
fof(f14235,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14234,f264])).
fof(f14234,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13360,f191])).
fof(f13360,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14233,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14232,f1942])).
fof(f14232,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f14231,f264])).
fof(f14231,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13361,f295])).
fof(f13361,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14230,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14229,f291])).
fof(f14229,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14228,f1942])).
fof(f14228,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13362,f264])).
fof(f13362,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|48|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f14171,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14170,f1942])).
fof(f14170,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14169,f264])).
fof(f14169,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13381,f200])).
fof(f13381,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14168,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14167,f1942])).
fof(f14167,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14166,f264])).
fof(f14166,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13382,f201])).
fof(f13382,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14165,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14164,f1942])).
fof(f14164,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14163,f264])).
fof(f14163,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13383,f219])).
fof(f13383,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14162,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14161,f1942])).
fof(f14161,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14160,f264])).
fof(f14160,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13384,f220])).
fof(f13384,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14159,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14158,f1942])).
fof(f14158,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14157,f264])).
fof(f14157,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13385,f266])).
fof(f13385,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14156,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14155,f1942])).
fof(f14155,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14154,f264])).
fof(f14154,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13386,f267])).
fof(f13386,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14153,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14152,f1942])).
fof(f14152,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14151,f264])).
fof(f14151,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13387,f222])).
fof(f13387,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14148,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14147,f1942])).
fof(f14147,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14146,f264])).
fof(f14146,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'T_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13388,f223])).
fof(f13388,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'T_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14145,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14144,f1942])).
fof(f14144,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14143,f264])).
fof(f14143,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13389,f189])).
fof(f13389,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f14142,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14141,f1942])).
fof(f14141,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14140,f264])).
fof(f14140,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13390,f215])).
fof(f13390,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f14139,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14138,f1942])).
fof(f14138,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14137,f264])).
fof(f14137,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13391,f221])).
fof(f13391,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f14136,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14135,f1942])).
fof(f14135,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14134,f264])).
fof(f14134,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13392,f265])).
fof(f13392,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f14133,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14132,f1942])).
fof(f14132,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14131,f264])).
fof(f14131,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13393,f198])).
fof(f13393,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f14128,plain,(
  s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14127,f1942])).
fof(f14127,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14126,f264])).
fof(f14126,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'F_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13394,f199])).
fof(f13394,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s(bool,'F_0'))) = s('type.pair.prod'('type.num.num',bool),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f14092,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14091,f1942])).
fof(f14091,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14090,f264])).
fof(f14090,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13406,f191])).
fof(f13406,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f14089,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f14088,f1942])).
fof(f14088,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f14087,f264])).
fof(f14087,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13407,f295])).
fof(f13407,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f14084,plain,(
  s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14083,f1942])).
fof(f14083,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14082,f264])).
fof(f14082,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|49|_0')))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13408,f291])).
fof(f13408,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.pair.prod'('type.num.num','type.frac.frac'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.frac.frac','const.frac.frac_|48|_0')))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f14057,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | $spl352),
  inference(cnf_transformation,[],[f14057_D])).
fof(f14057_D,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) <=> ~$spl352),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl352])])).
fof(f14072,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14071,f1942])).
fof(f14071,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14070,f264])).
fof(f14070,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13412,f205])).
fof(f13412,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f205,f6037,f286])).
fof(f14069,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14068,f1942])).
fof(f14068,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14067,f264])).
fof(f14067,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13413,f206])).
fof(f13413,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f206,f6037,f286])).
fof(f14066,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14065,f1942])).
fof(f14065,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14064,f264])).
fof(f14064,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13414,f207])).
fof(f13414,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f207,f6037,f286])).
fof(f14063,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14062,f1942])).
fof(f14062,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14061,f264])).
fof(f14061,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13415,f212])).
fof(f13415,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f212,f6037,f286])).
fof(f14060,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14059,f1942])).
fof(f14059,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14058,f264])).
fof(f14058,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13416,f213])).
fof(f13416,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f213,f6037,f286])).
fof(f14055,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14054,f1942])).
fof(f14054,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f14053,f264])).
fof(f14053,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.|48|_0')))) ) | $spl80),
  inference(forward_demodulation,[],[f13417,f187])).
fof(f13417,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0'))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f187,f6037,f286])).
fof(f13889,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl350),
  inference(cnf_transformation,[],[f13889_D])).
fof(f13889_D,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl350),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl350])])).
fof(f14034,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14033,f1942])).
fof(f14033,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f14032,f264])).
fof(f14032,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13424,f188])).
fof(f13424,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f188,f6037,f286])).
fof(f14031,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14030,f1942])).
fof(f14030,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14029,f264])).
fof(f14029,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13425,f1942])).
fof(f13425,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f1942,f6037,f286])).
fof(f14028,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14027,f1942])).
fof(f14027,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14026,f264])).
fof(f14026,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14025,f1942])).
fof(f14025,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13426,f264])).
fof(f13426,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f6037,f286])).
fof(f14024,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14023,f1942])).
fof(f14023,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14022,f200])).
fof(f14022,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13437,f264])).
fof(f13437,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f14021,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14020,f1942])).
fof(f14020,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14019,f201])).
fof(f14019,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13438,f264])).
fof(f13438,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f14018,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14017,f1942])).
fof(f14017,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14016,f264])).
fof(f14016,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13439,f219])).
fof(f13439,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f14015,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14014,f1942])).
fof(f14014,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14013,f264])).
fof(f14013,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13440,f220])).
fof(f13440,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f14012,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14011,f1942])).
fof(f14011,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14010,f264])).
fof(f14010,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13441,f266])).
fof(f13441,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f14009,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14008,f1942])).
fof(f14008,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14007,f264])).
fof(f14007,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13442,f267])).
fof(f13442,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f14006,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14005,f1942])).
fof(f14005,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14004,f264])).
fof(f14004,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13443,f222])).
fof(f13443,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f14003,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f14002,f1942])).
fof(f14002,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f14001,f264])).
fof(f14001,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13444,f223])).
fof(f13444,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f14000,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13999,f1942])).
fof(f13999,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13998,f264])).
fof(f13998,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13445,f189])).
fof(f13445,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f13997,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13996,f1942])).
fof(f13996,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13995,f264])).
fof(f13995,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13446,f215])).
fof(f13446,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f13994,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13993,f1942])).
fof(f13993,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13992,f264])).
fof(f13992,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13447,f221])).
fof(f13447,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f13991,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13990,f1942])).
fof(f13990,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13989,f264])).
fof(f13989,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13448,f265])).
fof(f13448,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f13988,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13987,f1942])).
fof(f13987,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13986,f198])).
fof(f13986,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13449,f264])).
fof(f13449,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f13985,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13984,f1942])).
fof(f13984,plain,(
  ( ! [X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13983,f199])).
fof(f13983,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13450,f264])).
fof(f13450,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f13949,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13948,f1942])).
fof(f13948,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13947,f264])).
fof(f13947,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13462,f191])).
fof(f13462,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f13946,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f13945,f1942])).
fof(f13945,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13944,f264])).
fof(f13944,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13463,f295])).
fof(f13463,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f13943,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13942,f291])).
fof(f13942,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13941,f1942])).
fof(f13941,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13464,f264])).
fof(f13464,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f13887,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13886,f13786])).
fof(f13786,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13785,f204])).
fof(f13785,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13784,f1942])).
fof(f13784,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13513,f264])).
fof(f13513,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f204,f6037,f286])).
fof(f13886,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13885,f1942])).
fof(f13885,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13884,f1942])).
fof(f13884,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13883,f264])).
fof(f13883,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl80),
  inference(forward_demodulation,[],[f13482,f264])).
fof(f13482,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f6037,f286])).
fof(f13882,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13881,f200])).
fof(f13881,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13880,f1942])).
fof(f13880,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13483,f264])).
fof(f13483,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f200,f6037,f286])).
fof(f13879,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13878,f201])).
fof(f13878,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13877,f1942])).
fof(f13877,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13484,f264])).
fof(f13484,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f201,f6037,f286])).
fof(f13876,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13875,f219])).
fof(f13875,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13874,f1942])).
fof(f13874,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13485,f264])).
fof(f13485,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f219,f6037,f286])).
fof(f13873,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13872,f220])).
fof(f13872,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13871,f1942])).
fof(f13871,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13486,f264])).
fof(f13486,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f220,f6037,f286])).
fof(f13870,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13869,f266])).
fof(f13869,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13868,f1942])).
fof(f13868,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13487,f264])).
fof(f13487,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f266,f6037,f286])).
fof(f13867,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13866,f267])).
fof(f13866,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13865,f1942])).
fof(f13865,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13488,f264])).
fof(f13488,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f267,f6037,f286])).
fof(f13864,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13863,f222])).
fof(f13863,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13862,f1942])).
fof(f13862,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13489,f264])).
fof(f13489,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f222,f6037,f286])).
fof(f13859,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13858,f223])).
fof(f13858,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13857,f1942])).
fof(f13857,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13490,f264])).
fof(f13490,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'T_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f223,f6037,f286])).
fof(f13856,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13855,f189])).
fof(f13855,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13854,f1942])).
fof(f13854,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13491,f264])).
fof(f13491,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f189,f6037,f286])).
fof(f13853,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13852,f215])).
fof(f13852,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13851,f1942])).
fof(f13851,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13492,f264])).
fof(f13492,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f215,f6037,f286])).
fof(f13850,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13849,f221])).
fof(f13849,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13848,f1942])).
fof(f13848,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13493,f264])).
fof(f13493,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f221,f6037,f286])).
fof(f13847,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13846,f265])).
fof(f13846,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13845,f1942])).
fof(f13845,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13494,f264])).
fof(f13494,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f265,f6037,f286])).
fof(f13844,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13843,f198])).
fof(f13843,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13842,f1942])).
fof(f13842,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13495,f264])).
fof(f13495,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f198,f6037,f286])).
fof(f13839,plain,(
  s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13838,f199])).
fof(f13838,plain,(
  ( ! [X0] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13837,f1942])).
fof(f13837,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13496,f264])).
fof(f13496,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'F_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'(bool,'type.num.num'),'const.pair.,_2'(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f199,f6037,f286])).
fof(f13803,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13802,f191])).
fof(f13802,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13801,f1942])).
fof(f13801,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13508,f264])).
fof(f13508,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f191,f6037,f286])).
fof(f13800,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f13799,f295])).
fof(f13799,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl2 | $spl80)),
  inference(forward_demodulation,[],[f13798,f1942])).
fof(f13798,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(forward_demodulation,[],[f13509,f264])).
fof(f13509,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl2 | $spl80)),
  inference(unit_resulting_resolution,[],[f295,f6037,f286])).
fof(f13795,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13794,f291])).
fof(f13794,plain,(
  s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13793,f1942])).
fof(f13793,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13510,f264])).
fof(f13510,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|49|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.frac.frac','type.num.num'),'const.pair.,_2'(s('type.frac.frac','const.frac.frac_|48|_0'),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f291,f6037,f286])).
fof(f13768,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl342),
  inference(cnf_transformation,[],[f13768_D])).
fof(f13768_D,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl342),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl342])])).
fof(f13783,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13782,f205])).
fof(f13782,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13781,f1942])).
fof(f13781,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13514,f264])).
fof(f13514,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f205,f6037,f286])).
fof(f13780,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13779,f206])).
fof(f13779,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13778,f1942])).
fof(f13778,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13515,f264])).
fof(f13515,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f206,f6037,f286])).
fof(f13777,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13776,f207])).
fof(f13776,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13775,f1942])).
fof(f13775,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13516,f264])).
fof(f13516,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f207,f6037,f286])).
fof(f13774,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13773,f212])).
fof(f13773,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13772,f1942])).
fof(f13772,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13517,f264])).
fof(f13517,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f212,f6037,f286])).
fof(f13771,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13770,f213])).
fof(f13770,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13769,f1942])).
fof(f13769,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13518,f264])).
fof(f13518,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f213,f6037,f286])).
fof(f13766,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13765,f187])).
fof(f13765,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13764,f1942])).
fof(f13764,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13519,f264])).
fof(f13519,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f187,f6037,f286])).
fof(f13742,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl340),
  inference(cnf_transformation,[],[f13742_D])).
fof(f13742_D,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f13745,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13744,f188])).
fof(f13744,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13743,f1942])).
fof(f13743,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13526,f264])).
fof(f13526,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f188,f6037,f286])).
fof(f13740,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13739,f1942])).
fof(f13739,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13738,f1942])).
fof(f13738,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13527,f264])).
fof(f13527,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(unit_resulting_resolution,[],[f1942,f6037,f286])).
fof(f13735,plain,(
  s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13734,f1942])).
fof(f13734,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13733,f264])).
fof(f13733,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | ($spl0 | $spl80)),
  inference(forward_demodulation,[],[f13732,f1942])).
fof(f13732,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X1),s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(forward_demodulation,[],[f13528,f264])).
fof(f13528,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.pair.,_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl80),
  inference(unit_resulting_resolution,[],[f6037,f6037,f286])).
fof(f13106,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f8869,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl303),
  inference(cnf_transformation,[],[f8869_D])).
fof(f8869_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl303),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl303])])).
fof(f10918,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | $spl329),
  inference(unit_resulting_resolution,[],[f10469,f237])).
fof(f237,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X14] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X14)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X14))),
  file('thm.frac.FRAC_|49|_|48|','thm.numeral.numeral_distrib|split|30')).
fof(f13105,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f10966,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl337),
  inference(cnf_transformation,[],[f10966_D])).
fof(f10966_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl337),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl337])])).
fof(f10946,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f281])).
fof(f10964,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl335),
  inference(cnf_transformation,[],[f10964_D])).
fof(f10964_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl335),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl335])])).
fof(f10947,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f279])).
fof(f10962,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl333),
  inference(cnf_transformation,[],[f10962_D])).
fof(f10962_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl333),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl333])])).
fof(f10948,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f277])).
fof(f10960,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl331),
  inference(cnf_transformation,[],[f10960_D])).
fof(f10960_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl331),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl331])])).
fof(f10949,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f275])).
fof(f10953,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f281])).
fof(f10954,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f279])).
fof(f10955,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f277])).
fof(f10956,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl309),
  inference(unit_resulting_resolution,[],[f8875,f275])).
fof(f10464,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl303),
  inference(unit_resulting_resolution,[],[f8869,f238])).
fof(f238,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f161])).
fof(f9702,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl285 | $spl310)),
  inference(backward_demodulation,[],[f8876,f8851])).
fof(f9714,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl325),
  inference(cnf_transformation,[],[f9714_D])).
fof(f9714_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl325),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl325])])).
fof(f9701,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl207 | $spl310)),
  inference(backward_demodulation,[],[f8876,f8773])).
fof(f9712,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl323),
  inference(cnf_transformation,[],[f9712_D])).
fof(f9712_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl323),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl323])])).
fof(f9699,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl179 | $spl310)),
  inference(backward_demodulation,[],[f8876,f6842])).
fof(f9710,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl321),
  inference(cnf_transformation,[],[f9710_D])).
fof(f9710_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl321),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl321])])).
fof(f9693,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl73 | $spl310)),
  inference(backward_demodulation,[],[f8876,f5854])).
fof(f9708,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl319),
  inference(cnf_transformation,[],[f9708_D])).
fof(f9708_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl319),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl319])])).
fof(f9689,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl25 | $spl310)),
  inference(backward_demodulation,[],[f8876,f3723])).
fof(f9705,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl316),
  inference(cnf_transformation,[],[f9705_D])).
fof(f9705_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl316),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl316])])).
fof(f9677,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl2 | $spl310)),
  inference(backward_demodulation,[],[f8876,f295])).
fof(f9676,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  introduced(theory_axiom,[])).
fof(f8901,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl314),
  inference(unit_resulting_resolution,[],[f8886,f284])).
fof(f9091,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl314),
  inference(unit_resulting_resolution,[],[f8886,f284])).
fof(f8895,plain,(
  $false | $spl313),
  inference(unit_resulting_resolution,[],[f196,f8884,f192])).
fof(f192,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f79])).
fof(f79,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f14])).
fof(f14,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.NOT_CLAUSES|split|1')).
fof(f8893,plain,(
  $false | $spl313),
  inference(unit_resulting_resolution,[],[f196,f8884,f194])).
fof(f194,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f154])).
fof(f154,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f80])).
fof(f80,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f15])).
fof(f15,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.NOT_CLAUSES|split|2')).
fof(f8891,plain,(
  $false | $spl313),
  inference(unit_resulting_resolution,[],[f289,f8884,f240])).
fof(f240,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f163])).
fof(f163,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(flattening,[],[f162])).
fof(f162,plain,(
  ! [X0] : (((~p(s(bool,'T_0')) | ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,'T_0')) & p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0] : ((p(s(bool,'T_0')) & p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ((p(s(bool,'T_0')) & p(s(bool,X6))) <=> p(s(bool,X6)))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.AND_CLAUSES|split|0')).
fof(f289,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f256])).
fof(f256,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f123])).
fof(f123,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : ! [X8] : (s(X7,X8) = s(X7,X8) <=> p(s(bool,'T_0')))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.REFL_CLAUSE')).
fof(f8889,plain,(
  $false | $spl313),
  inference(unit_resulting_resolution,[],[f289,f8884,f247])).
fof(f247,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(flattening,[],[f166])).
fof(f166,plain,(
  ! [X0] : (((~p(s(bool,X0)) | ~p(s(bool,'T_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) & p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0] : ((p(s(bool,X0)) & p(s(bool,'T_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ((p(s(bool,X6)) & p(s(bool,'T_0'))) <=> p(s(bool,X6)))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.AND_CLAUSES|split|1')).
fof(f8887,plain,(
  $false | $spl313),
  inference(unit_resulting_resolution,[],[f289,f8884])).
fof(f8898,plain,(
  $false | $spl313),
  inference(resolution,[],[f8884,f289])).
fof(f8899,plain,(
  $false | $spl313),
  inference(resolution,[],[f8884,f185])).
fof(f185,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_|49|_|48|','thm.bool.TRUTH')).
fof(f8900,plain,(
  $false | $spl313),
  inference(resolution,[],[f8884,f184])).
fof(f184,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_|49|_|48|',aHL_TRUTH)).
fof(f8886,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl314),
  inference(cnf_transformation,[],[f8886_D])).
fof(f8886_D,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl314),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl314])])).
fof(f8882,plain,(
  s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'T_0')) | $spl6),
  inference(forward_demodulation,[],[f8881,f188])).
fof(f8881,plain,(
  ~p(s(bool,'T_0')) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl6),
  inference(forward_demodulation,[],[f8880,f219])).
fof(f8880,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl6),
  inference(trivial_inequality_removal,[],[f8878])).
fof(f8878,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.frac_|49|_0') | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl6),
  inference(superposition,[],[f1750,f191])).
fof(f8583,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl13 | $spl92)),
  inference(backward_demodulation,[],[f6091,f3613])).
fof(f8584,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl15 | $spl92)),
  inference(backward_demodulation,[],[f6091,f3615])).
fof(f8585,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl17 | $spl92)),
  inference(backward_demodulation,[],[f6091,f3617])).
fof(f8586,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl19 | $spl92)),
  inference(backward_demodulation,[],[f6091,f3619])).
fof(f8587,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl21 | $spl92)),
  inference(backward_demodulation,[],[f6091,f3621])).
fof(f8843,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl277),
  inference(cnf_transformation,[],[f8843_D])).
fof(f8843_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl277),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl277])])).
fof(f8728,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl35 | $spl92)),
  inference(forward_demodulation,[],[f8727,f6091])).
fof(f8727,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl35 | $spl92)),
  inference(forward_demodulation,[],[f8594,f6091])).
fof(f8594,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl35 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4111])).
fof(f8599,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl41 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4131])).
fof(f8600,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl43 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4133])).
fof(f8863,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl297),
  inference(cnf_transformation,[],[f8863_D])).
fof(f8863_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl297),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl297])])).
fof(f8601,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl45 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4135])).
fof(f8861,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl295),
  inference(cnf_transformation,[],[f8861_D])).
fof(f8861_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl295),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl295])])).
fof(f8602,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl47 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4137])).
fof(f8605,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl49 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4159])).
fof(f8606,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl51 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4161])).
fof(f8607,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl53 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4163])).
fof(f8608,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl55 | $spl92)),
  inference(backward_demodulation,[],[f6091,f4165])).
fof(f8851,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl285),
  inference(cnf_transformation,[],[f8851_D])).
fof(f8851_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl285),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl285])])).
fof(f8616,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl57 | $spl92)),
  inference(backward_demodulation,[],[f6091,f5409])).
fof(f8849,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl283),
  inference(cnf_transformation,[],[f8849_D])).
fof(f8849_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl283),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl283])])).
fof(f8731,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl59 | $spl92)),
  inference(forward_demodulation,[],[f8617,f6091])).
fof(f8617,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl59 | $spl92)),
  inference(backward_demodulation,[],[f6091,f5411])).
fof(f8847,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl281),
  inference(cnf_transformation,[],[f8847_D])).
fof(f8847_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl281),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl281])])).
fof(f8618,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl61 | $spl92)),
  inference(backward_demodulation,[],[f6091,f5413])).
fof(f8845,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl279),
  inference(cnf_transformation,[],[f8845_D])).
fof(f8845_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl279),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl279])])).
fof(f8619,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl63 | $spl92)),
  inference(backward_demodulation,[],[f6091,f5415])).
fof(f8628,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl92 | $spl95)),
  inference(backward_demodulation,[],[f6091,f6112])).
fof(f8773,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl207),
  inference(cnf_transformation,[],[f8773_D])).
fof(f8773_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl207),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl207])])).
fof(f8739,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl101)),
  inference(forward_demodulation,[],[f8738,f6091])).
fof(f8738,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl101)),
  inference(forward_demodulation,[],[f8631,f6091])).
fof(f8631,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl101)),
  inference(backward_demodulation,[],[f6091,f6132])).
fof(f8771,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl205),
  inference(cnf_transformation,[],[f8771_D])).
fof(f8771_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f8742,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl103)),
  inference(forward_demodulation,[],[f8741,f6091])).
fof(f8741,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl103)),
  inference(forward_demodulation,[],[f8740,f6091])).
fof(f8740,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl103)),
  inference(forward_demodulation,[],[f8632,f6091])).
fof(f8632,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl103)),
  inference(backward_demodulation,[],[f6091,f6134])).
fof(f8769,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl203),
  inference(cnf_transformation,[],[f8769_D])).
fof(f8769_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl203),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl203])])).
fof(f8744,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl105)),
  inference(forward_demodulation,[],[f8743,f6091])).
fof(f8743,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl105)),
  inference(forward_demodulation,[],[f8633,f6091])).
fof(f8633,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl105)),
  inference(backward_demodulation,[],[f6091,f6136])).
fof(f8767,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl201),
  inference(cnf_transformation,[],[f8767_D])).
fof(f8767_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl201),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl201])])).
fof(f8746,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl107)),
  inference(forward_demodulation,[],[f8745,f6091])).
fof(f8745,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl107)),
  inference(forward_demodulation,[],[f8634,f6091])).
fof(f8634,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl107)),
  inference(backward_demodulation,[],[f6091,f6138])).
fof(f8841,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl275),
  inference(cnf_transformation,[],[f8841_D])).
fof(f8841_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl275),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl275])])).
fof(f8749,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl109)),
  inference(forward_demodulation,[],[f8637,f6091])).
fof(f8637,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl109)),
  inference(backward_demodulation,[],[f6091,f6154])).
fof(f8839,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl273),
  inference(cnf_transformation,[],[f8839_D])).
fof(f8839_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl273),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl273])])).
fof(f8750,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl111)),
  inference(forward_demodulation,[],[f8638,f6091])).
fof(f8638,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl111)),
  inference(backward_demodulation,[],[f6091,f6156])).
fof(f8837,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl271),
  inference(cnf_transformation,[],[f8837_D])).
fof(f8837_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl271),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl271])])).
fof(f8751,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl113)),
  inference(forward_demodulation,[],[f8639,f6091])).
fof(f8639,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl113)),
  inference(backward_demodulation,[],[f6091,f6158])).
fof(f8835,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl269),
  inference(cnf_transformation,[],[f8835_D])).
fof(f8835_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl269),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl269])])).
fof(f8752,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl115)),
  inference(forward_demodulation,[],[f8640,f6091])).
fof(f8640,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl115)),
  inference(backward_demodulation,[],[f6091,f6160])).
fof(f8833,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl267),
  inference(cnf_transformation,[],[f8833_D])).
fof(f8833_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl267),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl267])])).
fof(f8755,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl117)),
  inference(forward_demodulation,[],[f8643,f6091])).
fof(f8643,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl117)),
  inference(backward_demodulation,[],[f6091,f6176])).
fof(f8831,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl265),
  inference(cnf_transformation,[],[f8831_D])).
fof(f8831_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl265),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl265])])).
fof(f8756,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl119)),
  inference(forward_demodulation,[],[f8644,f6091])).
fof(f8644,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl119)),
  inference(backward_demodulation,[],[f6091,f6178])).
fof(f8829,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl263),
  inference(cnf_transformation,[],[f8829_D])).
fof(f8829_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl263),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl263])])).
fof(f8757,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl121)),
  inference(forward_demodulation,[],[f8645,f6091])).
fof(f8645,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl121)),
  inference(backward_demodulation,[],[f6091,f6180])).
fof(f8827,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl261),
  inference(cnf_transformation,[],[f8827_D])).
fof(f8827_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl261),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl261])])).
fof(f8758,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl123)),
  inference(forward_demodulation,[],[f8646,f6091])).
fof(f8646,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl123)),
  inference(backward_demodulation,[],[f6091,f6182])).
fof(f8825,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl259),
  inference(cnf_transformation,[],[f8825_D])).
fof(f8825_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl259),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl259])])).
fof(f8651,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl125)),
  inference(backward_demodulation,[],[f6091,f6204])).
fof(f8823,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl257),
  inference(cnf_transformation,[],[f8823_D])).
fof(f8823_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl257),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl257])])).
fof(f8652,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl127)),
  inference(backward_demodulation,[],[f6091,f6206])).
fof(f8821,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl255),
  inference(cnf_transformation,[],[f8821_D])).
fof(f8821_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl255),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl255])])).
fof(f8653,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl129)),
  inference(backward_demodulation,[],[f6091,f6208])).
fof(f8819,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl253),
  inference(cnf_transformation,[],[f8819_D])).
fof(f8819_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl253),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl253])])).
fof(f8654,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl131)),
  inference(backward_demodulation,[],[f6091,f6210])).
fof(f8817,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl251),
  inference(cnf_transformation,[],[f8817_D])).
fof(f8817_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl251),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl251])])).
fof(f8657,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl133)),
  inference(backward_demodulation,[],[f6091,f6226])).
fof(f8815,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl249),
  inference(cnf_transformation,[],[f8815_D])).
fof(f8815_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl249),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl249])])).
fof(f8658,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl135)),
  inference(backward_demodulation,[],[f6091,f6228])).
fof(f8813,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl247),
  inference(cnf_transformation,[],[f8813_D])).
fof(f8813_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl247),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl247])])).
fof(f8659,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl137)),
  inference(backward_demodulation,[],[f6091,f6230])).
fof(f8811,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl245),
  inference(cnf_transformation,[],[f8811_D])).
fof(f8811_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl245),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl245])])).
fof(f8660,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl139)),
  inference(backward_demodulation,[],[f6091,f6232])).
fof(f8809,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl243),
  inference(cnf_transformation,[],[f8809_D])).
fof(f8809_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl243),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl243])])).
fof(f8663,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl141)),
  inference(backward_demodulation,[],[f6091,f6248])).
fof(f8807,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl241),
  inference(cnf_transformation,[],[f8807_D])).
fof(f8807_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl241),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl241])])).
fof(f8664,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl143)),
  inference(backward_demodulation,[],[f6091,f6250])).
fof(f8805,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl239),
  inference(cnf_transformation,[],[f8805_D])).
fof(f8805_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl239),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl239])])).
fof(f8665,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl145)),
  inference(backward_demodulation,[],[f6091,f6252])).
fof(f8803,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl237),
  inference(cnf_transformation,[],[f8803_D])).
fof(f8803_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f8666,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl147)),
  inference(backward_demodulation,[],[f6091,f6254])).
fof(f8801,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl235),
  inference(cnf_transformation,[],[f8801_D])).
fof(f8801_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl235),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl235])])).
fof(f8674,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl155)),
  inference(backward_demodulation,[],[f6091,f6294])).
fof(f8675,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl157)),
  inference(backward_demodulation,[],[f6091,f6296])).
fof(f8797,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl231),
  inference(cnf_transformation,[],[f8797_D])).
fof(f8797_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl231),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl231])])).
fof(f8676,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl159)),
  inference(backward_demodulation,[],[f6091,f6298])).
fof(f8795,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl229),
  inference(cnf_transformation,[],[f8795_D])).
fof(f8795_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f8677,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl161)),
  inference(backward_demodulation,[],[f6091,f6300])).
fof(f8680,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl163)),
  inference(backward_demodulation,[],[f6091,f6316])).
fof(f8791,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl225),
  inference(cnf_transformation,[],[f8791_D])).
fof(f8791_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl225),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl225])])).
fof(f8681,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl165)),
  inference(backward_demodulation,[],[f6091,f6318])).
fof(f8789,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl223),
  inference(cnf_transformation,[],[f8789_D])).
fof(f8789_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl223),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl223])])).
fof(f8682,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl167)),
  inference(backward_demodulation,[],[f6091,f6320])).
fof(f8787,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl221),
  inference(cnf_transformation,[],[f8787_D])).
fof(f8787_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f8683,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl169)),
  inference(backward_demodulation,[],[f6091,f6322])).
fof(f8686,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl171)),
  inference(backward_demodulation,[],[f6091,f6338])).
fof(f8783,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl217),
  inference(cnf_transformation,[],[f8783_D])).
fof(f8783_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl217),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl217])])).
fof(f8687,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl173)),
  inference(backward_demodulation,[],[f6091,f6340])).
fof(f8781,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl215),
  inference(cnf_transformation,[],[f8781_D])).
fof(f8781_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl215),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl215])])).
fof(f8688,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl175)),
  inference(backward_demodulation,[],[f6091,f6342])).
fof(f8689,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl177)),
  inference(backward_demodulation,[],[f6091,f6344])).
fof(f8777,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl211),
  inference(cnf_transformation,[],[f8777_D])).
fof(f8777_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl211])])).
fof(f8696,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | ($spl92 | $spl181)),
  inference(backward_demodulation,[],[f6091,f6844])).
fof(f8775,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl209),
  inference(cnf_transformation,[],[f8775_D])).
fof(f8775_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl209),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl209])])).
fof(f8708,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl92 | $spl191)),
  inference(backward_demodulation,[],[f6091,f7404])).
fof(f8712,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl193)),
  inference(backward_demodulation,[],[f6091,f7456])).
fof(f8764,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl195)),
  inference(forward_demodulation,[],[f8713,f6091])).
fof(f8713,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl195)),
  inference(backward_demodulation,[],[f6091,f7458])).
fof(f8714,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl197)),
  inference(backward_demodulation,[],[f6091,f7460])).
fof(f8715,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) | ($spl92 | $spl199)),
  inference(backward_demodulation,[],[f6091,f7462])).
fof(f8759,plain,(
  $false | ($spl92 | $spl149)),
  inference(global_subsumption,[],[f183,f6274,f6091,f8669])).
fof(f8669,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl92 | $spl149)),
  inference(backward_demodulation,[],[f6091,f6274])).
fof(f8723,plain,(
  $false | ($spl92 | $spl151)),
  inference(trivial_inequality_removal,[],[f8670])).
fof(f8670,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl92 | $spl151)),
  inference(backward_demodulation,[],[f6091,f6276])).
fof(f8722,plain,(
  $false | ($spl92 | $spl153)),
  inference(trivial_inequality_removal,[],[f8671])).
fof(f8671,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | ($spl92 | $spl153)),
  inference(backward_demodulation,[],[f6091,f6278])).
fof(f7462,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl199),
  inference(cnf_transformation,[],[f7462_D])).
fof(f7462_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl199),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl199])])).
fof(f7442,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f281])).
fof(f7460,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl197),
  inference(cnf_transformation,[],[f7460_D])).
fof(f7460_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl197),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl197])])).
fof(f7443,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f279])).
fof(f7458,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl195),
  inference(cnf_transformation,[],[f7458_D])).
fof(f7458_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl195),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl195])])).
fof(f7444,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f277])).
fof(f7456,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl193),
  inference(cnf_transformation,[],[f7456_D])).
fof(f7456_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl193),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl193])])).
fof(f7445,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f275])).
fof(f7449,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f281])).
fof(f7450,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f279])).
fof(f7451,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f277])).
fof(f7452,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl95),
  inference(unit_resulting_resolution,[],[f6112,f275])).
fof(f7382,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(superposition,[],[f5755,f188])).
fof(f5755,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))))) ) | $spl0),
  inference(superposition,[],[f3707,f188])).
fof(f7363,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl186),
  inference(cnf_transformation,[],[f7363_D])).
fof(f7363_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f7361,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(forward_demodulation,[],[f7351,f188])).
fof(f7351,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(trivial_inequality_removal,[],[f7349])).
fof(f7349,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(superposition,[],[f5956,f188])).
fof(f5956,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5955,f205])).
fof(f5955,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5918,f202])).
fof(f5918,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(superposition,[],[f3656,f205])).
fof(f6848,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl185),
  inference(cnf_transformation,[],[f6848_D])).
fof(f6848_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl185),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl185])])).
fof(f6829,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f281])).
fof(f6846,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl183),
  inference(cnf_transformation,[],[f6846_D])).
fof(f6846_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl183),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl183])])).
fof(f6830,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f279])).
fof(f6844,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl181),
  inference(cnf_transformation,[],[f6844_D])).
fof(f6844_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl181),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl181])])).
fof(f6831,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f277])).
fof(f6842,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl179),
  inference(cnf_transformation,[],[f6842_D])).
fof(f6842_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl179),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl179])])).
fof(f6832,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f275])).
fof(f6835,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f281])).
fof(f6836,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f279])).
fof(f6837,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f277])).
fof(f6838,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl67),
  inference(unit_resulting_resolution,[],[f5732,f275])).
fof(f6344,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl177),
  inference(cnf_transformation,[],[f6344_D])).
fof(f6344_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f6324,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f281])).
fof(f6342,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl175),
  inference(cnf_transformation,[],[f6342_D])).
fof(f6342_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl175),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl175])])).
fof(f6325,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f279])).
fof(f6340,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl173),
  inference(cnf_transformation,[],[f6340_D])).
fof(f6340_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl173),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl173])])).
fof(f6326,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f277])).
fof(f6338,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl171),
  inference(cnf_transformation,[],[f6338_D])).
fof(f6338_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl171),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl171])])).
fof(f6327,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f275])).
fof(f6331,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f281])).
fof(f6332,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f279])).
fof(f6333,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f277])).
fof(f6334,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl55),
  inference(unit_resulting_resolution,[],[f4165,f275])).
fof(f6322,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl169),
  inference(cnf_transformation,[],[f6322_D])).
fof(f6322_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl169),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl169])])).
fof(f6302,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f281])).
fof(f6320,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl167),
  inference(cnf_transformation,[],[f6320_D])).
fof(f6320_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl167),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl167])])).
fof(f6303,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f279])).
fof(f6318,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl165),
  inference(cnf_transformation,[],[f6318_D])).
fof(f6318_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl165),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl165])])).
fof(f6304,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f277])).
fof(f6316,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl163),
  inference(cnf_transformation,[],[f6316_D])).
fof(f6316_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl163),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl163])])).
fof(f6305,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f275])).
fof(f6309,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f281])).
fof(f6310,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f279])).
fof(f6311,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f277])).
fof(f6312,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl53),
  inference(unit_resulting_resolution,[],[f4163,f275])).
fof(f6300,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl161),
  inference(cnf_transformation,[],[f6300_D])).
fof(f6300_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl161),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl161])])).
fof(f6280,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f281])).
fof(f6298,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl159),
  inference(cnf_transformation,[],[f6298_D])).
fof(f6298_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl159),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl159])])).
fof(f6281,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f279])).
fof(f6296,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl157),
  inference(cnf_transformation,[],[f6296_D])).
fof(f6296_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl157),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl157])])).
fof(f6282,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f277])).
fof(f6294,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl155),
  inference(cnf_transformation,[],[f6294_D])).
fof(f6294_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl155),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl155])])).
fof(f6283,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f275])).
fof(f6287,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f281])).
fof(f6288,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f279])).
fof(f6289,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f277])).
fof(f6290,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl51),
  inference(unit_resulting_resolution,[],[f4161,f275])).
fof(f6278,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl153),
  inference(cnf_transformation,[],[f6278_D])).
fof(f6278_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl153),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl153])])).
fof(f6261,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f281])).
fof(f6276,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl151),
  inference(cnf_transformation,[],[f6276_D])).
fof(f6276_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl151),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl151])])).
fof(f6262,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f279])).
fof(f6274,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl149),
  inference(cnf_transformation,[],[f6274_D])).
fof(f6274_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl149),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl149])])).
fof(f6263,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f277])).
fof(f6267,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f281])).
fof(f6268,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f279])).
fof(f6269,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl93),
  inference(unit_resulting_resolution,[],[f6092,f277])).
fof(f6254,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl147),
  inference(cnf_transformation,[],[f6254_D])).
fof(f6254_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl147),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl147])])).
fof(f6234,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f281])).
fof(f6252,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl145),
  inference(cnf_transformation,[],[f6252_D])).
fof(f6252_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl145),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl145])])).
fof(f6235,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f279])).
fof(f6250,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl143),
  inference(cnf_transformation,[],[f6250_D])).
fof(f6250_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl143),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl143])])).
fof(f6236,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f277])).
fof(f6248,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl141),
  inference(cnf_transformation,[],[f6248_D])).
fof(f6248_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl141),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl141])])).
fof(f6237,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f275])).
fof(f6241,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f281])).
fof(f6242,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f279])).
fof(f6243,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f277])).
fof(f6244,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl47),
  inference(unit_resulting_resolution,[],[f4137,f275])).
fof(f6232,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl139),
  inference(cnf_transformation,[],[f6232_D])).
fof(f6232_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl139),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl139])])).
fof(f6212,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f281])).
fof(f6230,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl137),
  inference(cnf_transformation,[],[f6230_D])).
fof(f6230_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl137),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl137])])).
fof(f6213,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f279])).
fof(f6228,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl135),
  inference(cnf_transformation,[],[f6228_D])).
fof(f6228_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl135),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl135])])).
fof(f6214,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f277])).
fof(f6226,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl133),
  inference(cnf_transformation,[],[f6226_D])).
fof(f6226_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl133),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl133])])).
fof(f6215,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f275])).
fof(f6219,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f281])).
fof(f6220,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f279])).
fof(f6221,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f277])).
fof(f6222,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl45),
  inference(unit_resulting_resolution,[],[f4135,f275])).
fof(f6210,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl131),
  inference(cnf_transformation,[],[f6210_D])).
fof(f6210_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f6190,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f281])).
fof(f6208,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl129),
  inference(cnf_transformation,[],[f6208_D])).
fof(f6208_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl129),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl129])])).
fof(f6191,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f279])).
fof(f6206,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl127),
  inference(cnf_transformation,[],[f6206_D])).
fof(f6206_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f6192,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f277])).
fof(f6204,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl125),
  inference(cnf_transformation,[],[f6204_D])).
fof(f6204_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f6193,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f275])).
fof(f6197,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f281])).
fof(f6198,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f279])).
fof(f6199,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f277])).
fof(f6200,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl43),
  inference(unit_resulting_resolution,[],[f4133,f275])).
fof(f6182,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl123),
  inference(cnf_transformation,[],[f6182_D])).
fof(f6182_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f6162,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f281])).
fof(f6180,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl121),
  inference(cnf_transformation,[],[f6180_D])).
fof(f6180_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl121),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl121])])).
fof(f6163,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f279])).
fof(f6178,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl119),
  inference(cnf_transformation,[],[f6178_D])).
fof(f6178_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f6164,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f277])).
fof(f6176,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl117),
  inference(cnf_transformation,[],[f6176_D])).
fof(f6176_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl117),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl117])])).
fof(f6165,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f275])).
fof(f6169,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f281])).
fof(f6170,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f279])).
fof(f6171,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f277])).
fof(f6172,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl39),
  inference(unit_resulting_resolution,[],[f4115,f275])).
fof(f6160,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl115),
  inference(cnf_transformation,[],[f6160_D])).
fof(f6160_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f6140,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f281])).
fof(f6158,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl113),
  inference(cnf_transformation,[],[f6158_D])).
fof(f6158_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f6141,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f279])).
fof(f6156,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl111),
  inference(cnf_transformation,[],[f6156_D])).
fof(f6156_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f6142,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f277])).
fof(f6154,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl109),
  inference(cnf_transformation,[],[f6154_D])).
fof(f6154_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl109),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl109])])).
fof(f6143,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f275])).
fof(f6147,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f281])).
fof(f6148,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f279])).
fof(f6149,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f277])).
fof(f6150,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f4113,f275])).
fof(f6138,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl107),
  inference(cnf_transformation,[],[f6138_D])).
fof(f6138_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f6118,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f281])).
fof(f6136,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl105),
  inference(cnf_transformation,[],[f6136_D])).
fof(f6136_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl105),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl105])])).
fof(f6119,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f279])).
fof(f6134,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl103),
  inference(cnf_transformation,[],[f6134_D])).
fof(f6134_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl103),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl103])])).
fof(f6120,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f277])).
fof(f6132,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl101),
  inference(cnf_transformation,[],[f6132_D])).
fof(f6132_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) <=> ~$spl101),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl101])])).
fof(f6121,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f275])).
fof(f6125,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f281])).
fof(f6126,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f279])).
fof(f6127,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f277])).
fof(f6128,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))))) | $spl35),
  inference(unit_resulting_resolution,[],[f4111,f275])).
fof(f6116,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl99),
  inference(cnf_transformation,[],[f6116_D])).
fof(f6116_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl99),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl99])])).
fof(f6099,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f281])).
fof(f6114,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl97),
  inference(cnf_transformation,[],[f6114_D])).
fof(f6114_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl97),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl97])])).
fof(f6100,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f279])).
fof(f6112,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl95),
  inference(cnf_transformation,[],[f6112_D])).
fof(f6112_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f6101,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f277])).
fof(f6105,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f281])).
fof(f6106,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f279])).
fof(f6107,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl91),
  inference(unit_resulting_resolution,[],[f6084,f277])).
fof(f6092,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl93),
  inference(cnf_transformation,[],[f6092_D])).
fof(f6092_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl93),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl93])])).
fof(f6085,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl79),
  inference(unit_resulting_resolution,[],[f6036,f276])).
fof(f6088,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl79),
  inference(unit_resulting_resolution,[],[f6036,f276])).
fof(f6084,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl91),
  inference(cnf_transformation,[],[f6084_D])).
fof(f6084_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f6077,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl73),
  inference(unit_resulting_resolution,[],[f5854,f276])).
fof(f6080,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl73),
  inference(unit_resulting_resolution,[],[f5854,f276])).
fof(f6076,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl89),
  inference(cnf_transformation,[],[f6076_D])).
fof(f6076_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl89),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl89])])).
fof(f6056,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f281])).
fof(f6074,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl87),
  inference(cnf_transformation,[],[f6074_D])).
fof(f6074_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl87),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl87])])).
fof(f6057,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f279])).
fof(f6072,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl85),
  inference(cnf_transformation,[],[f6072_D])).
fof(f6072_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f6058,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f277])).
fof(f6070,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl83),
  inference(cnf_transformation,[],[f6070_D])).
fof(f6070_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl83),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl83])])).
fof(f6059,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f275])).
fof(f6063,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f281])).
fof(f6064,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f279])).
fof(f6065,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f277])).
fof(f6066,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl31),
  inference(unit_resulting_resolution,[],[f3729,f275])).
fof(f6011,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(superposition,[],[f3657,f1942])).
fof(f6053,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6052,f187])).
fof(f6052,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6006,f1942])).
fof(f6006,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3657,f187])).
fof(f6049,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6048,f213])).
fof(f6048,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6003,f1942])).
fof(f6003,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f213])).
fof(f6047,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6046,f212])).
fof(f6046,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6002,f1942])).
fof(f6002,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(superposition,[],[f3657,f212])).
fof(f6043,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6042,f207])).
fof(f6042,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5999,f1942])).
fof(f5999,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(superposition,[],[f3657,f207])).
fof(f6039,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6038,f206])).
fof(f6038,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5996,f1942])).
fof(f5996,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3657,f206])).
fof(f6034,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f6033,f205])).
fof(f6033,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5995,f1942])).
fof(f5995,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(superposition,[],[f3657,f205])).
fof(f5845,plain,(
  ( ! [X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f5844,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f5895,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5894,f187])).
fof(f5894,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5842,f206])).
fof(f5842,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X33),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3652,f187])).
fof(f5891,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5890,f213])).
fof(f5890,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5839,f206])).
fof(f5839,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X28),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27)))))))))))) ) | $spl0),
  inference(superposition,[],[f3652,f213])).
fof(f5889,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5888,f212])).
fof(f5888,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5838,f206])).
fof(f5838,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25)))))))))))) ) | $spl0),
  inference(superposition,[],[f3652,f212])).
fof(f5885,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5884,f207])).
fof(f5884,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5835,f206])).
fof(f5835,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17)))))))) ) | $spl0),
  inference(superposition,[],[f3652,f207])).
fof(f5881,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5880,f206])).
fof(f5880,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5832,f206])).
fof(f5832,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X11),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f5878,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5877,f205])).
fof(f5877,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(forward_demodulation,[],[f5831,f206])).
fof(f5831,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f5871,plain,(
  ( ! [X33] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5870,f187])).
fof(f5870,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5825,f205])).
fof(f5825,plain,(
  ( ! [X33] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X33))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X33)))))) ) | $spl0),
  inference(superposition,[],[f3652,f187])).
fof(f5867,plain,(
  ( ! [X28] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5866,f213])).
fof(f5866,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5822,f205])).
fof(f5822,plain,(
  ( ! [X28,X27] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X28))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X28)))))) ) | $spl0),
  inference(superposition,[],[f3652,f213])).
fof(f5865,plain,(
  ( ! [X26] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5864,f212])).
fof(f5864,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5821,f205])).
fof(f5821,plain,(
  ( ! [X26,X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X26))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X25))))))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26)))))) ) | $spl0),
  inference(superposition,[],[f3652,f212])).
fof(f5861,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5860,f207])).
fof(f5860,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5818,f205])).
fof(f5818,plain,(
  ( ! [X17,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X17))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))) ) | $spl0),
  inference(superposition,[],[f3652,f207])).
fof(f5857,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5856,f206])).
fof(f5856,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5815,f205])).
fof(f5815,plain,(
  ( ! [X10,X11] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0'))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))) ) | $spl0),
  inference(superposition,[],[f3652,f206])).
fof(f5852,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(forward_demodulation,[],[f5851,f205])).
fof(f5851,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(forward_demodulation,[],[f5814,f205])).
fof(f5814,plain,(
  ( ! [X8,X9] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl0),
  inference(superposition,[],[f3652,f205])).
fof(f5736,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl71),
  inference(cnf_transformation,[],[f5736_D])).
fof(f5736_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl71),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl71])])).
fof(f5715,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f281])).
fof(f5734,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl69),
  inference(cnf_transformation,[],[f5734_D])).
fof(f5734_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl69),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl69])])).
fof(f5716,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f279])).
fof(f5732,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl67),
  inference(cnf_transformation,[],[f5732_D])).
fof(f5732_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f5737,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(forward_demodulation,[],[f5717,f188])).
fof(f5717,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f277])).
fof(f5729,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl65),
  inference(cnf_transformation,[],[f5729_D])).
fof(f5729_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl65),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl65])])).
fof(f5718,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f275])).
fof(f5722,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f281])).
fof(f5723,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f279])).
fof(f5730,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(forward_demodulation,[],[f5724,f188])).
fof(f5724,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f277])).
fof(f5725,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f3727,f275])).
fof(f5395,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f281])).
fof(f5413,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl61),
  inference(cnf_transformation,[],[f5413_D])).
fof(f5413_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl61),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl61])])).
fof(f5396,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f279])).
fof(f5411,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl59),
  inference(cnf_transformation,[],[f5411_D])).
fof(f5411_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f5397,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f277])).
fof(f5398,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f275])).
fof(f5402,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f281])).
fof(f5403,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f279])).
fof(f5404,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f277])).
fof(f5405,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl27),
  inference(unit_resulting_resolution,[],[f3725,f275])).
fof(f3622,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl22),
  inference(cnf_transformation,[],[f3622_D])).
fof(f3622_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f4360,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl8)),
  inference(backward_demodulation,[],[f3580,f1942])).
fof(f4359,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(theory_axiom,[])).
fof(f4165,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl55),
  inference(cnf_transformation,[],[f4165_D])).
fof(f4165_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl55),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl55])])).
fof(f4145,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f281])).
fof(f4163,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl53),
  inference(cnf_transformation,[],[f4163_D])).
fof(f4163_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl53),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl53])])).
fof(f4146,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f279])).
fof(f4161,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl51),
  inference(cnf_transformation,[],[f4161_D])).
fof(f4161_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f4147,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f277])).
fof(f4159,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl49),
  inference(cnf_transformation,[],[f4159_D])).
fof(f4159_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl49),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl49])])).
fof(f4148,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f275])).
fof(f4152,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f281])).
fof(f4153,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f279])).
fof(f4154,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f277])).
fof(f4155,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f3619,f275])).
fof(f4137,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl47),
  inference(cnf_transformation,[],[f4137_D])).
fof(f4137_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f4117,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f281])).
fof(f4135,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl45),
  inference(cnf_transformation,[],[f4135_D])).
fof(f4135_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f4118,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f279])).
fof(f4133,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl43),
  inference(cnf_transformation,[],[f4133_D])).
fof(f4133_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f4119,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f277])).
fof(f4131,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl41),
  inference(cnf_transformation,[],[f4131_D])).
fof(f4131_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl41),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl41])])).
fof(f4120,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f275])).
fof(f4124,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f281])).
fof(f4125,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f279])).
fof(f4126,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f277])).
fof(f4127,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl17),
  inference(unit_resulting_resolution,[],[f3617,f275])).
fof(f4115,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl39),
  inference(cnf_transformation,[],[f4115_D])).
fof(f4115_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f4095,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f281])).
fof(f4113,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl37),
  inference(cnf_transformation,[],[f4113_D])).
fof(f4113_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f4096,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f279])).
fof(f4111,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl35),
  inference(cnf_transformation,[],[f4111_D])).
fof(f4111_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f4097,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f277])).
fof(f4109,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl33),
  inference(cnf_transformation,[],[f4109_D])).
fof(f4109_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f4098,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f275])).
fof(f4102,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f281])).
fof(f4103,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f279])).
fof(f4104,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f277])).
fof(f4105,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl15),
  inference(unit_resulting_resolution,[],[f3615,f275])).
fof(f3729,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl31),
  inference(cnf_transformation,[],[f3729_D])).
fof(f3729_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f3710,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f281])).
fof(f3727,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl29),
  inference(cnf_transformation,[],[f3727_D])).
fof(f3727_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f3711,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f279])).
fof(f3725,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl27),
  inference(cnf_transformation,[],[f3725_D])).
fof(f3725_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f3712,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f277])).
fof(f3723,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl25),
  inference(cnf_transformation,[],[f3723_D])).
fof(f3723_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f3713,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f275])).
fof(f3716,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f281])).
fof(f3717,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f279])).
fof(f3718,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f277])).
fof(f3719,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl23),
  inference(unit_resulting_resolution,[],[f3623,f275])).
fof(f3623,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl23),
  inference(cnf_transformation,[],[f3623_D])).
fof(f3623_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f3597,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f236])).
fof(f236,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f160])).
fof(f3598,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f234])).
fof(f234,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f159])).
fof(f3621,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl21),
  inference(cnf_transformation,[],[f3621_D])).
fof(f3621_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f3599,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f237])).
fof(f3619,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl19),
  inference(cnf_transformation,[],[f3619_D])).
fof(f3619_D,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f3600,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f281])).
fof(f3617,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl17),
  inference(cnf_transformation,[],[f3617_D])).
fof(f3617_D,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f3601,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f279])).
fof(f3615,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl15),
  inference(cnf_transformation,[],[f3615_D])).
fof(f3615_D,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f3602,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f277])).
fof(f3613,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl13),
  inference(cnf_transformation,[],[f3613_D])).
fof(f3613_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f3603,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f275])).
fof(f3606,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f281])).
fof(f3607,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f279])).
fof(f3608,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f277])).
fof(f3609,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl11),
  inference(unit_resulting_resolution,[],[f3582,f275])).
fof(f3156,plain,(
  ( ! [X31] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X31),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f235,f1942])).
fof(f3154,plain,(
  ( ! [X29] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X29),s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(superposition,[],[f233,f1942])).
fof(f1377,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl2),
  inference(superposition,[],[f287,f295])).
fof(f1376,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_|49|_0') != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) ) | $spl2),
  inference(superposition,[],[f287,f295])).
fof(f295,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl2),
  inference(cnf_transformation,[],[f295_D])).
fof(f295_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f293,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))))) | $spl0),
  inference(forward_demodulation,[],[f292,f188])).
fof(f292,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(backward_demodulation,[],[f291,f190])).
fof(f190,plain,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f17])).
fof(f17,axiom,(
  s('type.frac.frac','const.frac.frac_|48|_0') = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.frac.FRAC_|49|_|48|','thm.frac.frac_|48|_def')).
fof(f291,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0') | $spl0),
  inference(cnf_transformation,[],[f291_D])).
fof(f291_D,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0') <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f183,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0')),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0')),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~~s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0')),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ~s('type.frac.frac','const.frac.frac_|49|_0') = s('type.frac.frac','const.frac.frac_|48|_0')),
  file('thm.frac.FRAC_|49|_|48|','thm.frac.FRAC_|49|_|48|')).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 230
% Passive clauses: 2111
% Generated clauses: 19912
% Final active clauses: 55
% Final passive clauses: 63
% Input formulas: 76
% Initial clauses: 105
% 
% Duplicate literals: 3
% Trivial inequalities: 79
% Fw demodulations: 5898
% Bw demodulations: 1096
% Global subsumptions: 11
% 
% Simple tautologies: 13
% Equational tautologies: 5
% Forward subsumptions: 6995
% Backward subsumptions: 17
% Fw demodulations to eq. taut.: 3529
% Bw demodulations to eq. taut.: 94
% 
% Binary resolution: 3
% Unit resulting resolution: 5805
% Forward superposition: 4149
% Backward superposition: 706
% Self superposition: 3
% Equality resolution: 26
% 
% Split clauses: 73
% Split components: 146
% SAT solver clauses: 4652
% SAT solver unit clauses: 16
% SAT solver binary clauses: 2077
% 
% Sat splits: 73
% Sat splitting refutations: 24
% 
% Memory used [KB]: 11513
% Time elapsed: 0.665 s
% ------------------------------
% ------------------------------
% Success in time 18.591 s
