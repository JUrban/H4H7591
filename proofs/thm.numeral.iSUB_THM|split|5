Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% (52449)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 124
% Passive clauses: 2972
% Generated clauses: 23041
% Final active clauses: 119
% Final passive clauses: 2684
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1464
% Trivial inequalities: 191
% Fw subsumption resolutions: 1830
% Fw demodulations: 2186
% Bw demodulations: 3
% 
% Simple tautologies: 321
% Equational tautologies: 29
% Forward subsumptions: 12162
% 
% Binary resolution: 45
% Forward superposition: 10390
% Backward superposition: 6119
% Self superposition: 272
% Equality factoring: 88
% Equality resolution: 8
% 
% Split clauses: 1139
% Split components: 2299
% SAT solver clauses: 1723
% SAT solver unit clauses: 61
% SAT solver binary clauses: 450
% 
% Sat splits: 1139
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1719
% TWLsolver calls for satisfiability: 177
% 
% Memory used [KB]: 15479
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% (52458)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 100
% Passive clauses: 763
% Generated clauses: 17445
% Final active clauses: 86
% Final passive clauses: 648
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 1082
% Trivial inequalities: 144
% Fw subsumption resolutions: 683
% Fw demodulations: 1153
% Bw demodulations: 20
% Condensations: 2438
% Global subsumptions: 4
% 
% Simple tautologies: 173
% Equational tautologies: 21
% Forward subsumptions: 9250
% 
% Binary resolution: 10
% Forward superposition: 6500
% Backward superposition: 4288
% Self superposition: 243
% Equality factoring: 52
% Equality resolution: 3
% 
% Split clauses: 68
% Split components: 143
% SAT solver clauses: 1397
% SAT solver unit clauses: 56
% SAT solver binary clauses: 40
% SAT solver learnt clauses: 8
% 
% Sat splits: 68
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 1381
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 16247
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f56321,plain,(
  $false),
  inference(subsumption_resolution,[],[f78,f32770])).
fof(f32770,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X5))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5)))))) )),
  inference(forward_demodulation,[],[f32700,f32209])).
fof(f32209,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num',X3))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X4))))),s('type.num.num',X3)))) )),
  inference(forward_demodulation,[],[f32155,f12767])).
fof(f12767,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num',X6))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))) )),
  inference(superposition,[],[f4850,f106])).
fof(f106,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : ! [X11,X12] : s(X8,X12) = s(X8,'const.bool.COND_3'(s(bool,'F_0'),s(X8,X11),s(X8,X12)))),
  file('thm.numeral.iSUB_THM|split|5','thm.bool.COND_CLAUSES|split|1')).
fof(f4850,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(backward_demodulation,[],[f4808,f4842])).
fof(f4842,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X3),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f4841,f113])).
fof(f113,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num',X1),s('type.num.num',X2))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',X1))),s('type.num.num',X2)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X17,X18,X19] : s('type.num.num','const.numeral.iSUB_3'(s(bool,X17),s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X17),s('type.num.num',X18))),s('type.num.num',X19)))),
  file('thm.numeral.iSUB_THM|split|5','ARITY_2_3_const.numeral.iSUB')).
fof(f4841,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f4840,f84])).
fof(f84,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X17] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|5','ARITY_0_1_const.arithmetic.BIT|49|')).
fof(f4840,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))),s('type.num.num',X2)))))))) )),
  inference(forward_demodulation,[],[f4806,f116])).
fof(f116,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X20,X21,X22] : ! [X23,X24,X25] : s(X20,happ(s(fun(X21,X20),X23),s(X21,happ(s(fun(X22,X21),X24),s(X22,X25))))) = s(X20,happ(s(fun(X22,X20),'_dst_x0x1_2'(s(fun(X21,X20),X23),s(fun(X22,X21),X24))),s(X22,X25)))),
  file('thm.numeral.iSUB_THM|split|5','_dst_x0x1_ax')).
fof(f4806,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X4),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))) = s('type.num.num','const.bool.COND_3'(s(bool,X4),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X3))))),s('type.num.num',X2)))))) )),
  inference(superposition,[],[f2586,f108])).
fof(f108,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X3),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : ! [X6,X13,X14,X15] : s(X8,happ(s(fun('type.num.num',X8),X14),s('type.num.num',X6))) = s(X8,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(X8,X13),s(fun('type.num.num',X8),X14),s(fun('type.num.num',X8),X15)))),
  file('thm.numeral.iSUB_THM|split|5','thm.numeral.iBIT_cases|split|1')).
fof(f2586,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(backward_demodulation,[],[f2525,f123])).
fof(f123,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f122,f113])).
fof(f122,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f121,f84])).
fof(f121,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f115,f83])).
fof(f83,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X17] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X17))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X17)))),
  file('thm.numeral.iSUB_THM|split|5','ARITY_0_1_const.numeral.iDUB')).
fof(f115,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X16,X6,X10] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X16),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))))),s('type.num.num',X10))) = s('type.num.num','const.bool.COND_3'(s(bool,X16),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|5','thm.numeral.iSUB_DEF|split|1')).
fof(f2525,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X5))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))) )),
  inference(superposition,[],[f120,f106])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f119,f113])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(forward_demodulation,[],[f114,f84])).
fof(f114,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X0),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))),s('type.num.num',X2))) = s('type.num.num','const.bool.COND_3'(s(bool,X0),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X2),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X1))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X1))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X16,X6,X10] : s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,X16),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))))),s('type.num.num',X10))) = s('type.num.num','const.bool.COND_3'(s(bool,X16),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))))),s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X10),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))))),
  file('thm.numeral.iSUB_THM|split|5','thm.numeral.iSUB_DEF|split|2')).
fof(f4808,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))),s('type.num.num',X4))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))),s('type.num.num',X4)))) )),
  inference(superposition,[],[f2586,f105])).
fof(f105,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f42])).
fof(f42,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X8] : ! [X11,X12] : s(X8,X11) = s(X8,'const.bool.COND_3'(s(bool,'T_0'),s(X8,X11),s(X8,X12)))),
  file('thm.numeral.iSUB_THM|split|5','thm.bool.COND_CLAUSES|split|0')).
fof(f32155,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X4))))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f4809,f108])).
fof(f4809,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X6),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X5))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X5))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X5)))))))) )),
  inference(superposition,[],[f2586,f106])).
fof(f32700,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))))) = s('type.num.num',happ(s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6))))),s('type.num.num',X5)))) )),
  inference(superposition,[],[f4847,f109])).
fof(f109,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))) )),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : s(X0,happ(s(fun('type.num.num',X0),X4),s('type.num.num',X1))) = s(X0,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))),s(X0,X2),s(fun('type.num.num',X0),X3),s(fun('type.num.num',X0),X4)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X8] : ! [X6,X13,X14,X15] : s(X8,happ(s(fun('type.num.num',X8),X15),s('type.num.num',X6))) = s(X8,'const.numeral.iBIT_cases_4'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s(X8,X13),s(fun('type.num.num',X8),X14),s(fun('type.num.num',X8),X15)))),
  file('thm.numeral.iSUB_THM|split|5','thm.numeral.iBIT_cases|split|2')).
fof(f4847,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X5))) = s('type.num.num','const.numeral.iBIT_cases_4'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.numeral.iDUB_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'T_0'),s('type.num.num',X6))))),s(fun('type.num.num','type.num.num'),'_dst_x0x1_2'(s(fun('type.num.num','type.num.num'),'const.arithmetic.BIT|49|_0'),s(fun('type.num.num','type.num.num'),'const.numeral.iSUB_2'(s(bool,'F_0'),s('type.num.num',X6)))))))) )),
  inference(backward_demodulation,[],[f4808,f2525])).
fof(f78,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',sK0),s('type.num.num',sK1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f61])).
fof(f61,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) != s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.numeral.iSUB_3'(s(bool,'F_0'),s('type.num.num',X6),s('type.num.num',X7))))) = s('type.num.num','const.numeral.iSUB_3'(s(bool,'T_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))),
  file('thm.numeral.iSUB_THM|split|5','thm.numeral.iSUB_THM|split|5')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 254
% Passive clauses: 5314
% Generated clauses: 57803
% Final active clauses: 28
% Final passive clauses: 1197
% Input formulas: 27
% Initial clauses: 39
% 
% Duplicate literals: 2693
% Trivial inequalities: 340
% Fw subsumption resolutions: 1201
% Fw demodulations: 5351
% Bw demodulations: 2271
% Condensations: 6023
% Global subsumptions: 86
% 
% Simple tautologies: 209
% Equational tautologies: 223
% Forward subsumptions: 36083
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 118
% 
% Unit resulting resolution: 1063
% Forward superposition: 18588
% Backward superposition: 16686
% Self superposition: 697
% Equality factoring: 125
% Equality resolution: 6
% 
% Split clauses: 223
% Split components: 456
% SAT solver clauses: 5887
% SAT solver unit clauses: 258
% SAT solver binary clauses: 1026
% 
% Sat splits: 223
% Sat splitting refutations: 39
% 
% Memory used [KB]: 47973
% Time elapsed: 3.467 s
% ------------------------------
% ------------------------------
% Success in time 4.791 s
