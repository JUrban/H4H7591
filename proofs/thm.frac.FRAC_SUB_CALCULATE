Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.frac
% (64236)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 100
% Passive clauses: 2674
% Generated clauses: 18601
% Final active clauses: 90
% Final passive clauses: 2439
% Input formulas: 17
% Initial clauses: 20
% 
% Duplicate literals: 1104
% Trivial inequalities: 253
% Fw subsumption resolutions: 2314
% Fw demodulations: 1507
% Bw demodulations: 8
% 
% Simple tautologies: 346
% Equational tautologies: 91
% Forward subsumptions: 7769
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 29
% Forward superposition: 8037
% Backward superposition: 4589
% Self superposition: 333
% Equality factoring: 238
% Equality resolution: 12
% 
% Split clauses: 864
% Split components: 1764
% SAT solver clauses: 2173
% SAT solver unit clauses: 305
% SAT solver binary clauses: 601
% 
% Sat splits: 864
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2165
% TWLsolver calls for satisfiability: 105
% 
% Memory used [KB]: 7164
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (64254)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 75
% Passive clauses: 270
% Generated clauses: 10027
% Final active clauses: 72
% Final passive clauses: 185
% Input formulas: 17
% Initial clauses: 20
% 
% Duplicate literals: 1305
% Trivial inequalities: 116
% Fw subsumption resolutions: 699
% Fw demodulations: 405
% Bw demodulations: 10
% Condensations: 1936
% 
% Simple tautologies: 210
% Equational tautologies: 64
% Forward subsumptions: 4261
% 
% Binary resolution: 12
% Forward superposition: 2889
% Backward superposition: 2018
% Self superposition: 211
% Equality factoring: 182
% Equality resolution: 9
% 
% Split clauses: 148
% Split components: 321
% SAT solver clauses: 751
% SAT solver unit clauses: 34
% SAT solver binary clauses: 71
% 
% Sat splits: 148
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 751
% TWLsolver calls for satisfiability: 90
% 
% Memory used [KB]: 6268
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% (64274)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 254
% Passive clauses: 1712
% Generated clauses: 105771
% Final active clauses: 82
% Final passive clauses: 364
% Input formulas: 17
% Initial clauses: 20
% 
% Duplicate literals: 9068
% Trivial inequalities: 775
% Fw subsumption resolutions: 8182
% Fw demodulations: 5030
% Bw demodulations: 672
% Condensations: 16813
% Global subsumptions: 667
% 
% Simple tautologies: 1054
% Equational tautologies: 672
% Forward subsumptions: 58998
% Fw demodulations to eq. taut.: 85
% Bw demodulations to eq. taut.: 31
% 
% Unit resulting resolution: 1157
% Forward superposition: 24595
% Backward superposition: 20322
% Self superposition: 885
% Equality factoring: 576
% Equality resolution: 41
% 
% Split clauses: 347
% Split components: 699
% SAT solver clauses: 3726
% SAT solver unit clauses: 93
% SAT solver binary clauses: 193
% 
% Sat splits: 347
% Sat splitting refutations: 651
% 
% Memory used [KB]: 40937
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f2593,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2558])).
fof(f2558,plain,(
  s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))))))) != s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))))))),
  inference(superposition,[],[f41,f1833])).
fof(f1833,plain,(
  ( ! [X4,X3] : (s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))))) )),
  inference(forward_demodulation,[],[f1754,f59])).
fof(f59,plain,(
  ( ! [X0] : (s('type.integer.int',sK1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK1)))))))) )),
  inference(resolution,[],[f39,f43])).
fof(f43,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X14,X15] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X15)))) => s('type.integer.int',X15) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int',X15))))))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.DNM')).
fof(f39,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3)))) & s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f34])).
fof(f34,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3))))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) & (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))))),
  inference(ennf_transformation,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) => s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',X3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) => s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X7))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X9)))) => s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X8),s('type.integer.int',X9))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X7))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.FRAC_SUB_CALCULATE')).
fof(f1754,plain,(
  ( ! [X4,X3] : (s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X4),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X3),s('type.integer.int',sK1))))))),s('type.integer.int',sK3)))))))) )),
  inference(superposition,[],[f593,f60])).
fof(f60,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int',sK1)))))))) )),
  inference(resolution,[],[f39,f42])).
fof(f42,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X14,X15] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X15)))) => s('type.integer.int',X14) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X14),s('type.integer.int',X15))))))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.NMR')).
fof(f593,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac',X1),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3)))))))) )),
  inference(forward_demodulation,[],[f592,f247])).
fof(f247,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac',X1),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK3)))))))) )),
  inference(superposition,[],[f52,f212])).
fof(f212,plain,(
  ( ! [X1] : (s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',sK3))))) = s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int',sK3)))))))) )),
  inference(forward_demodulation,[],[f193,f64])).
fof(f64,plain,(
  ( ! [X0] : (s('type.integer.int',sK3) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK3)))))))) )),
  inference(resolution,[],[f40,f43])).
fof(f40,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK3))))),
  inference(cnf_transformation,[],[f37])).
fof(f193,plain,(
  ( ! [X1] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int',sK3)))))))))))) )),
  inference(superposition,[],[f53,f65])).
fof(f65,plain,(
  ( ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X1),s('type.integer.int',sK3)))))))) )),
  inference(resolution,[],[f40,f42])).
fof(f53,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0)))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X12] : s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X12))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X12))))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12)))))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.frac_ainv_def')).
fof(f52,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X12,X13] : s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac',X12),s('type.frac.frac',X13))) = s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X12),s('type.frac.frac','const.frac.frac_ainv_1'(s('type.frac.frac',X13)))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.frac_sub_def')).
fof(f592,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3)))))))) )),
  inference(forward_demodulation,[],[f559,f49])).
fof(f49,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X11,X16] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X11),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X16)))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.integer.int_sub')).
fof(f559,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X1),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))),s('type.integer.int',sK3)))))))) )),
  inference(superposition,[],[f213,f44])).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11,X16] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11))),s('type.integer.int',X16))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',X16)))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.integer.INT_MUL_CALCULATE|split|1')).
fof(f213,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X3),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X3))),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))),s('type.integer.int',sK3)))))))) )),
  inference(forward_demodulation,[],[f194,f64])).
fof(f194,plain,(
  ( ! [X2,X3] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X3),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',sK3))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X3))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',sK3))))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X3))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X2),s('type.integer.int',sK3)))))))))))))) )),
  inference(superposition,[],[f50,f65])).
fof(f50,plain,(
  ( ! [X0,X1] : (s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X1))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X1)))))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X12,X13] : s('type.frac.frac','const.frac.frac_add_2'(s('type.frac.frac',X12),s('type.frac.frac',X13))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X12))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X13))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X12))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X13)))))))))),
  file('thm.frac.FRAC_SUB_CALCULATE','thm.frac.frac_add_def')).
fof(f41,plain,(
  s('type.frac.frac','const.frac.frac_sub_2'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK0),s('type.integer.int',sK3))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))))),
  inference(cnf_transformation,[],[f37])).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 66
% Passive clauses: 283
% Generated clauses: 2486
% Final active clauses: 60
% Final passive clauses: 204
% Input formulas: 17
% Initial clauses: 19
% 
% Selected by SInE selection: 16
% SInE iterations: 1
% 
% Trivial inequalities: 2
% Fw subsumption resolutions: 19
% Fw demodulations: 578
% Bw demodulations: 6
% 
% Equational tautologies: 1
% Forward subsumptions: 1574
% Fw demodulations to eq. taut.: 16
% 
% Binary resolution: 4
% Forward superposition: 1064
% Backward superposition: 825
% Self superposition: 22
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 9
% SAT solver binary clauses: 8
% 
% Sat splits: 8
% 
% Memory used [KB]: 5756
% Time elapsed: 0.093 s
% ------------------------------
% ------------------------------
% Success in time 11.785 s
