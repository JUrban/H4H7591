Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f2103,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2098,f77,f111,f1540,f1542,f1541,f125,f129,f152,f206,f202,f1886,f127])).
fof(f127,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f127_D])).
fof(f127_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1886,plain,(
  ( ! [X65] : (s(bool,'F_0') = s(bool,X65)) ) | $spl16),
  inference(duplicate_literal_removal,[],[f1595])).
fof(f1595,plain,(
  ( ! [X65] : (s(bool,'F_0') = s(bool,X65) | s(bool,'F_0') = s(bool,X65)) ) | $spl16),
  inference(superposition,[],[f1541,f78])).
fof(f78,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : s(bool,'F_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X6),'const.option.NONE_0')))),
  file('thm.option.option_26_prove_ltb','thm.option.IS_SOME_DEF|split|1')).
fof(f202,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,X7)) ) | $spl14),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  ( ! [X7] : (p(s(bool,X7)) | s(bool,'F_0') = s(bool,X7)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f206,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,X1) | p(s(bool,X1))) ) | $spl1),
  inference(forward_demodulation,[],[f205,f78])).
fof(f205,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))) ) | $spl1),
  inference(subsumption_resolution,[],[f192,f111])).
fof(f192,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X1)) | s(bool,X1) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(superposition,[],[f104,f78])).
fof(f104,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X9] : ((p(s(bool,X8)) => p(s(bool,X9))) => ((p(s(bool,X9)) => p(s(bool,X8))) => s(bool,X8) = s(bool,X9)))),
  file('thm.option.option_26_prove_ltb','thm.bool.IMP_ANTISYM_AX')).
fof(f152,plain,(
  $false | ($spl1 | $spl8)),
  inference(subsumption_resolution,[],[f137,f111])).
fof(f137,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f127,f73])).
fof(f73,plain,(
  p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK0),sK1))))),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK0),sK1)))) & s('type.option.option'(sK0),sK1) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.option.THE_1'(s('type.option.option'(sK0),sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f48])).
fof(f48,plain,(
  ? [X0,X1] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),X1)))) & s('type.option.option'(X0),X1) != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.option.THE_1'(s('type.option.option'(X0),X1))))))),
  inference(ennf_transformation,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),X1)))) => s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.option.THE_1'(s('type.option.option'(X0),X1))))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ~! [X0] : ! [X1] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),X1)))) => s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,'const.option.THE_1'(s('type.option.option'(X0),X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X6),X7)))) => s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,'const.option.THE_1'(s('type.option.option'(X6),X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (p(s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X6),X7)))) => s('type.option.option'(X6),X7) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,'const.option.THE_1'(s('type.option.option'(X6),X7))))))),
  file('thm.option.option_26_prove_ltb','thm.option.option_26_prove_ltb')).
fof(f129,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f129_D])).
fof(f129_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f125,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f79])).
fof(f79,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.option_26_prove_ltb',aHL_BOOL_CASES)).
fof(f1541,plain,(
  ( ! [X14,X16] : (s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) | $spl16),
  inference(cnf_transformation,[],[f1541_D])).
fof(f1541_D,plain,(
  ( ! [X14,X16] : (s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1542,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X15),'const.option.NONE_0')))) ) | $spl18),
  inference(cnf_transformation,[],[f1542_D])).
fof(f1542_D,plain,(
  ( ! [X15] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X15),'const.option.NONE_0')))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1540,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X15),'const.option.NONE_0'))) | s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16)) ) | ($spl1 | $spl11 | $spl14)),
  inference(subsumption_resolution,[],[f1502,f950])).
fof(f950,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') != s(bool,X0) | s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1)) ) | ($spl11 | $spl14)),
  inference(superposition,[],[f129,f264])).
fof(f264,plain,(
  ( ! [X4,X5] : (s(bool,X4) = s(bool,X5) | s(bool,'F_0') = s(bool,X5) | s(bool,'F_0') = s(bool,X4)) ) | $spl14),
  inference(resolution,[],[f220,f202])).
fof(f220,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X2)) ) | $spl14),
  inference(resolution,[],[f107,f202])).
fof(f107,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f56])).
fof(f1502,plain,(
  ( ! [X14,X15,X16] : (s(bool,'T_0') != s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X15),'const.option.NONE_0'))) | s(bool,X14) = s(bool,X16) | s(bool,'F_0') = s(bool,X16) | s(bool,'T_0') = s(bool,X14)) ) | ($spl1 | $spl11 | $spl14)),
  inference(superposition,[],[f950,f244])).
fof(f244,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl1),
  inference(subsumption_resolution,[],[f238,f111])).
fof(f238,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s(bool,X1) = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(X0),'const.option.NONE_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl1),
  inference(superposition,[],[f203,f78])).
fof(f203,plain,(
  ( ! [X8,X9] : (p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,'T_0') = s(bool,X8)) ) | $spl1),
  inference(subsumption_resolution,[],[f190,f111])).
fof(f190,plain,(
  ( ! [X8,X9] : (p(s(bool,'F_0')) | p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f104,f79])).
fof(f111,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f111_D])).
fof(f111_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f77,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.option.option_26_prove_ltb',aHL_FALSITY)).
fof(f2098,plain,(
  $false | ($spl1 | $spl18)),
  inference(subsumption_resolution,[],[f2087,f1542])).
fof(f2087,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK0),'const.option.NONE_0'))) | $spl1),
  inference(backward_demodulation,[],[f2084,f126])).
fof(f126,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK0),sK1))) | $spl1),
  inference(subsumption_resolution,[],[f122,f111])).
fof(f122,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.option.IS_SOME_1'(s('type.option.option'(sK0),sK1)))),
  inference(superposition,[],[f73,f79])).
fof(f2084,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1)),
  inference(subsumption_resolution,[],[f2069,f98])).
fof(f98,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK2(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK2(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : ! [X11] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X11) | ? [X7] : s('type.option.option'(X6),X11) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7))))),
  file('thm.option.option_26_prove_ltb','thm.option.option_nchotomy')).
fof(f2069,plain,(
  s('type.option.option'(sK0),sK1) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,sK2(sK1,sK0)))) | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK1)),
  inference(superposition,[],[f74,f1332])).
fof(f1332,plain,(
  ( ! [X10,X9] : (s(X9,sK2(X10,X9)) = s(X9,'const.option.THE_1'(s('type.option.option'(X9),X10))) | s('type.option.option'(X9),'const.option.NONE_0') = s('type.option.option'(X9),X10)) )),
  inference(superposition,[],[f97,f98])).
fof(f97,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.option.THE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6] : ! [X7] : s(X6,X7) = s(X6,'const.option.THE_1'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X7)))))),
  file('thm.option.option_26_prove_ltb','thm.option.THE_DEF')).
fof(f74,plain,(
  s('type.option.option'(sK0),sK1) != s('type.option.option'(sK0),'const.option.SOME_1'(s(sK0,'const.option.THE_1'(s('type.option.option'(sK0),sK1)))))),
  inference(cnf_transformation,[],[f58])).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 37
% Passive clauses: 399
% Generated clauses: 1955
% Final active clauses: 30
% Final passive clauses: 300
% Input formulas: 20
% Initial clauses: 36
% 
% Duplicate literals: 183
% Trivial inequalities: 15
% Fw subsumption resolutions: 157
% Fw demodulations: 105
% Bw demodulations: 5
% 
% Simple tautologies: 47
% Equational tautologies: 36
% Forward subsumptions: 963
% 
% Binary resolution: 24
% Factoring: 1
% Forward superposition: 549
% Backward superposition: 731
% Self superposition: 73
% Equality factoring: 64
% Equality resolution: 3
% 
% Split clauses: 46
% Split components: 93
% SAT solver clauses: 75
% SAT solver unit clauses: 4
% SAT solver binary clauses: 21
% SAT solver learnt clauses: 1
% 
% Sat splits: 46
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 74
% TWLsolver calls for satisfiability: 13
% 
% Memory used [KB]: 1535
% Time elapsed: 0.051 s
% ------------------------------
% ------------------------------
% Success in time 0.052 s
