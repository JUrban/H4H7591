Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (74570)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 194
% Passive clauses: 1808
% Generated clauses: 23295
% Final active clauses: 173
% Final passive clauses: 1390
% Input formulas: 34
% Initial clauses: 74
% 
% Duplicate literals: 835
% Trivial inequalities: 325
% Fw subsumption resolutions: 2649
% Fw demodulations: 4110
% Bw demodulations: 21
% 
% Simple tautologies: 420
% Equational tautologies: 53
% Forward subsumptions: 11293
% Fw demodulations to eq. taut.: 34
% 
% Binary resolution: 372
% Forward superposition: 7860
% Backward superposition: 6536
% Self superposition: 204
% Equality factoring: 123
% Equality resolution: 42
% 
% Split clauses: 982
% Split components: 2040
% SAT solver clauses: 1461
% SAT solver unit clauses: 19
% SAT solver binary clauses: 174
% 
% Sat splits: 982
% 
% TWLsolver clauses: 1460
% TWLsolver calls for satisfiability: 174
% 
% Memory used [KB]: 14200
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% (74595)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 161
% Passive clauses: 523
% Generated clauses: 19470
% Final active clauses: 139
% Final passive clauses: 318
% Input formulas: 34
% Initial clauses: 74
% 
% Duplicate literals: 1117
% Trivial inequalities: 154
% Fw subsumption resolutions: 1431
% Fw demodulations: 3146
% Bw demodulations: 60
% Condensations: 1408
% Global subsumptions: 8
% 
% Simple tautologies: 369
% Equational tautologies: 47
% Forward subsumptions: 9185
% Fw demodulations to eq. taut.: 50
% 
% Binary resolution: 115
% Forward superposition: 6044
% Backward superposition: 5903
% Self superposition: 210
% Equality factoring: 127
% Equality resolution: 30
% 
% Split clauses: 198
% Split components: 408
% SAT solver clauses: 1095
% SAT solver unit clauses: 87
% SAT solver binary clauses: 39
% SAT solver learnt clauses: 16
% 
% Sat splits: 198
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 1063
% TWLsolver calls for satisfiability: 343
% 
% Memory used [KB]: 15095
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f114657,plain,(
  $false),
  inference(subsumption_resolution,[],[f113977,f121])).
fof(f121,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0',aHL_TRUTH)).
fof(f113977,plain,(
  ~p(s(bool,'T_0'))),
  inference(backward_demodulation,[],[f113976,f123])).
fof(f123,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0',aHL_FALSITY)).
fof(f113976,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f112890,f108576])).
fof(f108576,plain,(
  ( ! [X6,X7] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X7),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))))))) )),
  inference(superposition,[],[f46323,f453])).
fof(f453,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f175,f217])).
fof(f217,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f215,f125])).
fof(f125,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.ADD_|48|')).
fof(f215,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f175,f128])).
fof(f128,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.BIT|49|')).
fof(f175,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f46323,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f601,f853])).
fof(f853,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(subsumption_resolution,[],[f801,f121])).
fof(f801,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(superposition,[],[f178,f245])).
fof(f245,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f127,f133])).
fof(f133,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.bool.EQ_CLAUSES|split|1')).
fof(f127,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X6] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.prim_rec.LESS_|48|')).
fof(f178,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ((~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X2),s('type.num.num',X1)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0)))) & (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))) | p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X2),s('type.num.num',X1)))))))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X2),s('type.num.num',X1)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X0),s('type.num.num',X2),s('type.num.num',X1)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0)))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X10,X11] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => (p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num',X6),s('type.num.num',X11),s('type.num.num',X10)))) <=> s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X11),s('type.num.num',X6)))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.MODEQ_NONZERO_MODEQUALITY')).
fof(f601,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(subsumption_resolution,[],[f570,f121])).
fof(f570,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f131,f245])).
fof(f131,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X9] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X9),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num',X6))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.MOD_MOD')).
fof(f112890,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))))) )),
  inference(condensation,[],[f112889])).
fof(f112889,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) | s(bool,X0) = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f112888])).
fof(f112888,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) | s(bool,X0) = s(bool,X1) | s(bool,X0) = s(bool,X1)) )),
  inference(condensation,[],[f110677])).
fof(f110677,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))) | s(bool,'T_0') = s(bool,X6) | s(bool,'T_0') = s(bool,X7) | s(bool,X6) = s(bool,X8) | s(bool,X7) = s(bool,X8)) )),
  inference(superposition,[],[f133,f20775])).
fof(f20775,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(bool,X1) = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) | s(bool,X1) = s(bool,X2) | s(bool,X0) = s(bool,X2)) )),
  inference(condensation,[],[f20774])).
fof(f20774,plain,(
  ( ! [X80,X83,X81,X82] : (s(bool,X81) = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X80) | s(bool,X82) = s(bool,X83) | s(bool,'T_0') = s(bool,X83)) )),
  inference(duplicate_literal_removal,[],[f17566])).
fof(f17566,plain,(
  ( ! [X80,X83,X81,X82] : (s(bool,X81) = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) | s(bool,X81) = s(bool,X82) | s(bool,'T_0') = s(bool,X80) | s(bool,X82) = s(bool,X83) | s(bool,'T_0') = s(bool,X83) | s(bool,'T_0') = s(bool,X80)) )),
  inference(superposition,[],[f1002,f1274])).
fof(f1274,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(subsumption_resolution,[],[f1012,f221])).
fof(f221,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(unit_resulting_resolution,[],[f123,f132])).
fof(f132,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f87])).
fof(f1012,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X14) = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f256,f289])).
fof(f289,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))))),
  inference(unit_resulting_resolution,[],[f213,f137])).
fof(f137,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f47])).
fof(f47,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.bool.EQ_CLAUSES|split|2')).
fof(f213,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))))),
  inference(forward_demodulation,[],[f211,f124])).
fof(f124,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.NUMERAL_DEF')).
fof(f211,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))))),
  inference(backward_demodulation,[],[f124,f120])).
fof(f120,plain,(
  ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))))))),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK1)))))) & ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f73])).
fof(f73,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) & ~p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) => p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) => p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) => p(s(bool,'const.arithmetic.MODEQ_3'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6)))))))))))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0','thm.arithmetic.MODEQ_NUMERAL|split|0')).
fof(f256,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f130,f130])).
fof(f130,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.MODEQ_NUMERAL|split|0',aHL_BOOL_CASES)).
fof(f1002,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f256,f256])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 497
% Passive clauses: 3001
% Generated clauses: 116728
% Final active clauses: 126
% Final passive clauses: 473
% Input formulas: 34
% Initial clauses: 74
% 
% Duplicate literals: 7299
% Trivial inequalities: 1112
% Fw subsumption resolutions: 9923
% Fw demodulations: 17003
% Bw demodulations: 1616
% Condensations: 12673
% Global subsumptions: 199
% 
% Simple tautologies: 1283
% Equational tautologies: 746
% Forward subsumptions: 60799
% Fw demodulations to eq. taut.: 86
% Bw demodulations to eq. taut.: 69
% 
% Unit resulting resolution: 3161
% Forward superposition: 35326
% Backward superposition: 23678
% Self superposition: 823
% Equality factoring: 432
% Equality resolution: 92
% 
% Split clauses: 410
% Split components: 846
% SAT solver clauses: 4268
% SAT solver unit clauses: 271
% SAT solver binary clauses: 548
% 
% Sat splits: 410
% Sat splitting refutations: 246
% 
% Memory used [KB]: 44519
% Time elapsed: 6.460 s
% ------------------------------
% ------------------------------
% Success in time 7.763 s
