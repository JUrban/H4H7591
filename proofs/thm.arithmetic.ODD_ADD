Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f405,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f404,f268,f220,f55,f86,f84,f117,f126,f124,f83,f88,f63,f91,f56,f87,f85,f272,f348])).
fof(f348,plain,(
  $false | ($spl0 | $spl2 | $spl7 | $spl10)),
  inference(subsumption_resolution,[],[f347,f280])).
fof(f280,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f273,f91])).
fof(f273,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | $spl10),
  inference(superposition,[],[f139,f125])).
fof(f125,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl10),
  inference(cnf_transformation,[],[f125_D])).
fof(f125_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f139,plain,(
  ( ! [X1] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(resolution,[],[f75,f67])).
fof(f67,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.arithmetic.ODD_ADD','thm.bool.EQ_CLAUSES|split|1')).
fof(f75,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X7)))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7)))))),
  file('thm.arithmetic.ODD_ADD','thm.arithmetic.ODD_EVEN')).
fof(f347,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl0 | $spl2 | $spl7 | $spl10)),
  inference(forward_demodulation,[],[f346,f311])).
fof(f311,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl2 | $spl7 | $spl10)),
  inference(subsumption_resolution,[],[f304,f91])).
fof(f304,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl2 | $spl10)),
  inference(superposition,[],[f139,f302])).
fof(f302,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | ($spl2 | $spl10)),
  inference(forward_demodulation,[],[f87,f125])).
fof(f346,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f336,f91])).
fof(f336,plain,(
  p(s(bool,'F_0')) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | $spl0),
  inference(superposition,[],[f81,f298])).
fof(f298,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl0),
  inference(resolution,[],[f84,f135])).
fof(f135,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0)))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(resolution,[],[f74,f71])).
fof(f71,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.arithmetic.ODD_ADD','thm.bool.EQ_CLAUSES|split|3')).
fof(f74,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f50])).
fof(f81,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) & (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7))))),
  file('thm.arithmetic.ODD_ADD','thm.arithmetic.EVEN_ADD')).
fof(f272,plain,(
  $false | ($spl2 | $spl9 | $spl11)),
  inference(subsumption_resolution,[],[f271,f123])).
fof(f123,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl9),
  inference(cnf_transformation,[],[f123_D])).
fof(f123_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f271,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | ($spl2 | $spl11)),
  inference(forward_demodulation,[],[f87,f225])).
fof(f225,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl11),
  inference(trivial_inequality_removal,[],[f224])).
fof(f224,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl11),
  inference(superposition,[],[f126,f64])).
fof(f64,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) | s(bool,'F_0') = s(bool,X8))),
  file('thm.arithmetic.ODD_ADD','thm.bool.BOOL_CASES_AX')).
fof(f85,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f85_D])).
fof(f85_D,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f87,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl2),
  inference(cnf_transformation,[],[f87_D])).
fof(f87_D,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f56,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) & (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f42])).
fof(f42,plain,(
  ? [X0,X1] : ((p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) & (~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ? [X0,X1] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <~> s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> ~s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> ~s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X7))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7)))))) <=> ~s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X7))))),
  file('thm.arithmetic.ODD_ADD','thm.arithmetic.ODD_ADD')).
fof(f91,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f91_D])).
fof(f91_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f63,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.ODD_ADD',aHL_FALSITY)).
fof(f88,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f88_D])).
fof(f88_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f83,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f78])).
fof(f78,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X9] : ! [X10] : (s(X9,X10) = s(X9,X10) <=> p(s(bool,'T_0')))),
  file('thm.arithmetic.ODD_ADD','thm.bool.REFL_CLAUSE')).
fof(f124,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl8),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f126,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | $spl11),
  inference(cnf_transformation,[],[f126_D])).
fof(f126_D,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f117,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl3),
  inference(superposition,[],[f86,f64])).
fof(f84,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f84_D])).
fof(f84_D,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f86,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | $spl3),
  inference(cnf_transformation,[],[f86_D])).
fof(f86_D,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f55,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f43])).
fof(f220,plain,(
  $false | ($spl1 | $spl3 | $spl4 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f218,f127])).
fof(f127,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | ($spl3 | $spl8)),
  inference(backward_demodulation,[],[f124,f86])).
fof(f218,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | ($spl1 | $spl4 | $spl7 | $spl8)),
  inference(resolution,[],[f208,f67])).
fof(f208,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) | ($spl1 | $spl4 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f201,f91])).
fof(f201,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0)))) | ($spl1 | $spl4 | $spl7 | $spl8)),
  inference(superposition,[],[f75,f196])).
fof(f196,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl1 | $spl4 | $spl7 | $spl8)),
  inference(forward_demodulation,[],[f195,f161])).
fof(f161,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f158,f88])).
fof(f158,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | $spl8),
  inference(superposition,[],[f135,f124])).
fof(f195,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl1 | $spl4 | $spl7)),
  inference(subsumption_resolution,[],[f185,f88])).
fof(f185,plain,(
  ~p(s(bool,'T_0')) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl1 | $spl7)),
  inference(superposition,[],[f80,f182])).
fof(f182,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | ($spl1 | $spl7)),
  inference(subsumption_resolution,[],[f180,f91])).
fof(f180,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl1),
  inference(superposition,[],[f139,f98])).
fof(f98,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))) | $spl1),
  inference(resolution,[],[f85,f71])).
fof(f80,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f53])).
fof(f268,plain,(
  $false | ($spl1 | $spl4 | $spl7 | $spl9 | $spl11)),
  inference(subsumption_resolution,[],[f266,f123])).
fof(f266,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1))) | ($spl1 | $spl4 | $spl7 | $spl11)),
  inference(resolution,[],[f262,f67])).
fof(f262,plain,(
  p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) | ($spl1 | $spl4 | $spl7 | $spl11)),
  inference(subsumption_resolution,[],[f255,f91])).
fof(f255,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK1)))) | ($spl1 | $spl4 | $spl7 | $spl11)),
  inference(superposition,[],[f75,f253])).
fof(f253,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl1 | $spl4 | $spl7 | $spl11)),
  inference(forward_demodulation,[],[f195,f235])).
fof(f235,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl4 | $spl11)),
  inference(subsumption_resolution,[],[f229,f88])).
fof(f229,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | $spl11),
  inference(superposition,[],[f135,f225])).
fof(f404,plain,(
  $false | ($spl0 | $spl2 | $spl4 | $spl7 | $spl8)),
  inference(subsumption_resolution,[],[f403,f374])).
fof(f374,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl2 | $spl4 | $spl8)),
  inference(subsumption_resolution,[],[f368,f88])).
fof(f368,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl2 | $spl8)),
  inference(superposition,[],[f135,f364])).
fof(f364,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',sK0))) | ($spl2 | $spl8)),
  inference(forward_demodulation,[],[f87,f124])).
fof(f403,plain,(
  s(bool,'F_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) | ($spl0 | $spl4 | $spl7 | $spl8)),
  inference(forward_demodulation,[],[f346,f361])).
fof(f361,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | ($spl4 | $spl8)),
  inference(subsumption_resolution,[],[f355,f88])).
fof(f355,plain,(
  ~p(s(bool,'T_0')) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK1))) | $spl8),
  inference(superposition,[],[f135,f124])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 49
% Passive clauses: 84
% Generated clauses: 354
% Final active clauses: 24
% Final passive clauses: 17
% Input formulas: 17
% Initial clauses: 28
% 
% Duplicate literals: 1
% Trivial inequalities: 18
% Fw subsumption resolutions: 42
% Fw demodulations: 29
% Bw demodulations: 5
% 
% Simple tautologies: 8
% Equational tautologies: 4
% Forward subsumptions: 166
% 
% Binary resolution: 27
% Forward superposition: 42
% Backward superposition: 140
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 20
% SAT solver unit clauses: 5
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 7
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 18
% TWLsolver calls for satisfiability: 8
% 
% Memory used [KB]: 767
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.02 s
