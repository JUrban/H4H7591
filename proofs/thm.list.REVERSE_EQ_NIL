Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f3445,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3444,f296,f493,f491,f3434,f295,f492,f490])).
fof(f490,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) | $spl0),
  inference(cnf_transformation,[],[f490_D])).
fof(f490_D,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f492,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),sK9) | $spl2),
  inference(cnf_transformation,[],[f492_D])).
fof(f492_D,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),sK9) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f295,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),sK9) | s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9)))),
  inference(cnf_transformation,[],[f227])).
fof(f227,plain,(
  (s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) | s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),sK9)) & (s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) | s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),sK9))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f226])).
fof(f226,plain,(
  ? [X0,X1] : ((s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)))),
  inference(nnf_transformation,[],[f182])).
fof(f182,plain,(
  ? [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) <~> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.REVERSE_EQ_NIL','thm.list.REVERSE_EQ_NIL')).
fof(f3434,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f3433,f493])).
fof(f3433,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') = s('type.list.list'(sK8),sK9) | $spl0),
  inference(forward_demodulation,[],[f3424,f303])).
fof(f303,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.list.REVERSE_EQ_NIL','thm.list.REVERSE_DEF|split|0')).
fof(f3424,plain,(
  s('type.list.list'(sK8),sK9) = s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),'const.list.NIL_0'))) | $spl0),
  inference(superposition,[],[f345,f490])).
fof(f345,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),'const.list.REVERSE_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X7] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),'const.list.REVERSE_1'(s('type.list.list'(X6),X7)))))),
  file('thm.list.REVERSE_EQ_NIL','thm.list.REVERSE_REVERSE')).
fof(f491,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) | $spl1),
  inference(cnf_transformation,[],[f491_D])).
fof(f491_D,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f493,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),sK9) | $spl3),
  inference(cnf_transformation,[],[f493_D])).
fof(f493_D,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),sK9) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f296,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),sK9) | s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),sK9)))),
  inference(cnf_transformation,[],[f227])).
fof(f3444,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f3443,f303])).
fof(f3443,plain,(
  s('type.list.list'(sK8),'const.list.NIL_0') != s('type.list.list'(sK8),'const.list.REVERSE_1'(s('type.list.list'(sK8),'const.list.NIL_0'))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f491,f492])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 250
% Passive clauses: 1144
% Generated clauses: 3144
% Final active clauses: 247
% Final passive clauses: 812
% Input formulas: 69
% Initial clauses: 190
% 
% Duplicate literals: 99
% Trivial inequalities: 20
% Fw subsumption resolutions: 195
% Fw demodulations: 8
% Bw demodulations: 1
% 
% Simple tautologies: 119
% Equational tautologies: 23
% Forward subsumptions: 1509
% 
% Binary resolution: 1883
% Factoring: 397
% Forward superposition: 141
% Backward superposition: 170
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 62
% Split components: 125
% SAT solver clauses: 117
% SAT solver unit clauses: 8
% SAT solver binary clauses: 31
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 62
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 115
% TWLsolver calls for satisfiability: 93
% 
% Memory used [KB]: 1918
% Time elapsed: 0.067 s
% ------------------------------
% ------------------------------
% Success in time 0.062 s
