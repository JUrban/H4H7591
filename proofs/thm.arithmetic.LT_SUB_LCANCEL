Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1102,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1058,f500,f50,f871,f52,f83,f81,f79,f615,f617,f327,f494,f498,f282,f284,f283,f1069,f51,f82,f78,f903,f511,f80])).
fof(f80,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f80_D])).
fof(f80_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f511,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl19),
  inference(resolution,[],[f500,f63])).
fof(f63,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : ((p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9,X10] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))) <=> p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9)))))),
  file('thm.arithmetic.LT_SUB_LCANCEL','thm.arithmetic.NOT_LESS_EQUAL')).
fof(f903,plain,(
  $false | ($spl5 | $spl12 | $spl37)),
  inference(subsumption_resolution,[],[f896,f627])).
fof(f627,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | $spl37),
  inference(cnf_transformation,[],[f627_D])).
fof(f627_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f896,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | ($spl5 | $spl12)),
  inference(resolution,[],[f83,f284])).
fof(f78,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) | $spl0),
  inference(cnf_transformation,[],[f78_D])).
fof(f78_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f82,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f82_D])).
fof(f82_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f51,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f36])).
fof(f36,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) <~> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X6)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X6)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X7)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  file('thm.arithmetic.LT_SUB_LCANCEL','thm.arithmetic.LT_SUB_LCANCEL')).
fof(f1069,plain,(
  $false | ($spl0 | $spl36)),
  inference(subsumption_resolution,[],[f1068,f53])).
fof(f53,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LT_SUB_LCANCEL',aHL_TRUTH)).
fof(f1068,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl36)),
  inference(forward_demodulation,[],[f1057,f626])).
fof(f626,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | $spl36),
  inference(cnf_transformation,[],[f626_D])).
fof(f626_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1057,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | $spl0),
  inference(resolution,[],[f78,f693])).
fof(f693,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(resolution,[],[f76,f64])).
fof(f64,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f42])).
fof(f76,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0))))))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1)))))) & ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0))))))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X7))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X6)))))) <=> (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X8),s('type.num.num',X7))))))),
  file('thm.arithmetic.LT_SUB_LCANCEL','thm.arithmetic.LE_SUB_LCANCEL')).
fof(f283,plain,(
  ( ! [X17] : (s(bool,'T_0') = s(bool,X17)) ) | $spl10),
  inference(cnf_transformation,[],[f283_D])).
fof(f283_D,plain,(
  ( ! [X17] : (s(bool,'T_0') = s(bool,X17)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f284,plain,(
  ( ! [X15,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16)))) ) | $spl12),
  inference(cnf_transformation,[],[f284_D])).
fof(f284_D,plain,(
  ( ! [X15,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f282,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16)))) )),
  inference(subsumption_resolution,[],[f183,f86])).
fof(f86,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f55,f56])).
fof(f56,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LT_SUB_LCANCEL',aHL_BOOL_CASES)).
fof(f55,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LT_SUB_LCANCEL',aHL_FALSITY)).
fof(f183,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,X17)) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X16),s('type.num.num',X15)))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16)))) )),
  inference(superposition,[],[f63,f84])).
fof(f84,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f56,f56])).
fof(f498,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | $spl16),
  inference(cnf_transformation,[],[f498_D])).
fof(f498_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f494,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X9)) ) | $spl2),
  inference(duplicate_literal_removal,[],[f445])).
fof(f445,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl2),
  inference(superposition,[],[f437,f56])).
fof(f437,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(subsumption_resolution,[],[f430,f53])).
fof(f430,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl2),
  inference(superposition,[],[f286,f92])).
fof(f92,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl2),
  inference(subsumption_resolution,[],[f88,f55])).
fof(f88,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1))) | $spl2),
  inference(superposition,[],[f80,f56])).
fof(f286,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9)))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f202,f53])).
fof(f202,plain,(
  ( ! [X10,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9)))) | s(bool,X11) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f64,f84])).
fof(f327,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f288,f53])).
fof(f288,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f283,f55])).
fof(f617,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | $spl30),
  inference(cnf_transformation,[],[f617_D])).
fof(f617_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f615,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(duplicate_literal_removal,[],[f554])).
fof(f554,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl4),
  inference(superposition,[],[f438,f56])).
fof(f438,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(subsumption_resolution,[],[f431,f53])).
fof(f431,plain,(
  ( ! [X1] : (~p(s(bool,'T_0')) | s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0))) | s(bool,'T_0') = s(bool,X1)) ) | $spl4),
  inference(superposition,[],[f286,f93])).
fof(f93,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl4),
  inference(subsumption_resolution,[],[f89,f55])).
fof(f89,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl4),
  inference(superposition,[],[f82,f56])).
fof(f79,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) | $spl1),
  inference(cnf_transformation,[],[f79_D])).
fof(f79_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f81,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f81_D])).
fof(f81_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f83,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl5),
  inference(cnf_transformation,[],[f83_D])).
fof(f83_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f52,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f37])).
fof(f871,plain,(
  $false | ($spl1 | $spl12 | $spl16 | $spl30)),
  inference(subsumption_resolution,[],[f870,f55])).
fof(f870,plain,(
  p(s(bool,'F_0')) | ($spl1 | $spl12 | $spl16 | $spl30)),
  inference(forward_demodulation,[],[f869,f617])).
fof(f869,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | ($spl1 | $spl12 | $spl16)),
  inference(subsumption_resolution,[],[f868,f55])).
fof(f868,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | ($spl1 | $spl12 | $spl16)),
  inference(forward_demodulation,[],[f867,f498])).
fof(f867,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f857,f53])).
fof(f857,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK2),s('type.num.num',sK0)))) | ($spl1 | $spl12)),
  inference(superposition,[],[f74,f377])).
fof(f377,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))))) | ($spl1 | $spl12)),
  inference(resolution,[],[f284,f79])).
fof(f74,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f50,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',sK2),s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f37])).
fof(f500,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl19),
  inference(cnf_transformation,[],[f500_D])).
fof(f500_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f1058,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num',sK0)))) | $spl0),
  inference(resolution,[],[f78,f628])).
fof(f628,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(resolution,[],[f75,f64])).
fof(f75,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X1))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X2),s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f49])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 50
% Passive clauses: 172
% Generated clauses: 1092
% Final active clauses: 21
% Final passive clauses: 50
% Input formulas: 13
% Initial clauses: 27
% 
% Duplicate literals: 121
% Trivial inequalities: 15
% Fw subsumption resolutions: 119
% Fw demodulations: 35
% Bw demodulations: 13
% 
% Simple tautologies: 48
% Equational tautologies: 19
% Forward subsumptions: 482
% 
% Binary resolution: 39
% Forward superposition: 307
% Backward superposition: 251
% Self superposition: 34
% Equality factoring: 34
% 
% Split clauses: 49
% Split components: 99
% SAT solver clauses: 100
% SAT solver unit clauses: 7
% SAT solver binary clauses: 39
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 49
% Sat splitting refutations: 14
% 
% TWLsolver clauses: 97
% TWLsolver calls for satisfiability: 26
% 
% Memory used [KB]: 1023
% Time elapsed: 0.030 s
% ------------------------------
% ------------------------------
% Success in time 0.034 s
