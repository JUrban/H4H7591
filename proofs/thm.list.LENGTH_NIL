Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (31297)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 699
% Passive clauses: 3457
% Generated clauses: 19350
% Final active clauses: 681
% Final passive clauses: 2573
% Input formulas: 261
% Initial clauses: 527
% 
% Duplicate literals: 137
% Trivial inequalities: 35
% Fw subsumption resolutions: 1480
% Fw demodulations: 1191
% Bw demodulations: 7
% 
% Simple tautologies: 252
% Equational tautologies: 22
% Forward subsumptions: 12632
% 
% Binary resolution: 3630
% Factoring: 390
% Forward superposition: 6811
% Backward superposition: 5422
% Self superposition: 21
% Equality factoring: 2
% Equality resolution: 6
% 
% Split clauses: 206
% Split components: 414
% SAT solver clauses: 318
% SAT solver unit clauses: 16
% SAT solver binary clauses: 64
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 206
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 317
% TWLsolver calls for satisfiability: 219
% 
% Memory used [KB]: 9594
% Time elapsed: 0.629 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (31317)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit

% Active clauses: 401
% Passive clauses: 1736
% Generated clauses: 13030
% Final active clauses: 362
% Final passive clauses: 1002
% Input formulas: 261
% Initial clauses: 527
% 
% Duplicate literals: 85
% Trivial inequalities: 23
% Fw subsumption resolutions: 673
% Fw demodulations: 742
% Bw demodulations: 345
% Condensations: 39
% Global subsumptions: 24
% 
% Simple tautologies: 260
% Equational tautologies: 9
% Forward subsumptions: 7669
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 1179
% Factoring: 57
% Forward superposition: 3131
% Backward superposition: 4534
% Self superposition: 33
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 12
% Split components: 24
% SAT solver clauses: 2184
% SAT solver unit clauses: 635
% SAT solver binary clauses: 142
% SAT solver learnt clauses: 50
% SAT solver learnt literals: 15
% 
% Sat splits: 12
% Sat splitting refutations: 31
% 
% TWLsolver clauses: 2086
% TWLsolver calls for satisfiability: 3124
% 
% Memory used [KB]: 11769
% Time elapsed: 0.732 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% (31336)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1004
% Passive clauses: 8466
% Generated clauses: 78419
% Final active clauses: 875
% Final passive clauses: 3593
% Input formulas: 261
% Initial clauses: 527
% Discarded non-redundant clauses: 16466
% 
% Duplicate literals: 9
% Trivial inequalities: 31
% Fw subsumption resolutions: 1348
% Fw demodulations: 11309
% Bw demodulations: 1425
% Condensations: 35
% 
% Simple tautologies: 185
% Equational tautologies: 64
% Forward subsumptions: 44751
% Fw demodulations to eq. taut.: 252
% Bw demodulations to eq. taut.: 36
% 
% Unit resulting resolution: 25976
% Factoring: 1
% Forward superposition: 17661
% Backward superposition: 18521
% Self superposition: 115
% Equality factoring: 2
% Equality resolution: 11
% 
% Split clauses: 50
% Split components: 100
% SAT solver clauses: 10072
% SAT solver unit clauses: 2928
% SAT solver binary clauses: 5843
% 
% Sat splits: 50
% Sat splitting refutations: 1504
% 
% Memory used [KB]: 160167
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 29 next slice time: 29
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f2989,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f580,f848,f846,f579,f847,f845,f958,f1095,f1097,f1098,f1099,f1102,f1182,f1216,f1196,f1197,f1198,f1224,f1366,f1652,f1910,f1909,f1906,f1971,f1972,f1988,f1993,f2009,f2014,f2030,f2036,f2052,f2058,f2074,f2080,f2097,f2101,f2118,f2123,f1222,f2124,f2125,f2126,f2219,f2302,f2304,f2305,f1217,f2306,f2309,f1218,f2389,f1220,f2426,f2427,f1219,f1223,f2947,f2217,f2950,f2951,f2220,f2855,f2949,f2953,f2856,f2857,f2957,f2955,f2962])).
fof(f2962,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2862,f813])).
fof(f813,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) )),
  inference(cnf_transformation,[],[f374])).
fof(f374,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f373])).
fof(f373,plain,(
  ! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X18] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num','const.num.|48|_0'))))),
  file('thm.list.LENGTH_NIL','thm.prim_rec.NOT_LESS_|48|')).
fof(f2862,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl0 | $spl3)),
  inference(superposition,[],[f823,f2227])).
fof(f2227,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2130,f845])).
fof(f2130,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) | $spl3),
  inference(superposition,[],[f660,f964])).
fof(f964,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11)))) | $spl3),
  inference(trivial_inequality_removal,[],[f959])).
fof(f959,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') != s('type.list.list'(sK11),'const.list.NIL_0') | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11)))) | $spl3),
  inference(superposition,[],[f848,f599])).
fof(f599,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,X0)),s('type.list.list'(X0),sK30(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f462])).
fof(f462,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,X0)),s('type.list.list'(X0),sK30(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK29,sK30])],[f286])).
fof(f286,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f285])).
fof(f285,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X6] : ! [X7] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7) | ? [X8,X9] : s('type.list.list'(X6),X7) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9))))),
  file('thm.list.LENGTH_NIL','thm.list.list_CASES')).
fof(f660,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f319])).
fof(f319,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f318])).
fof(f318,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8,X9] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X8),s('type.list.list'(X6),X9)))))),
  file('thm.list.LENGTH_NIL','thm.list.LENGTH|split|1')).
fof(f823,plain,(
  ( ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) )),
  inference(cnf_transformation,[],[f381])).
fof(f381,plain,(
  ! [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f72])).
fof(f72,axiom,(
  ! [X18] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))),
  file('thm.list.LENGTH_NIL','thm.prim_rec.LESS_|48|')).
fof(f2955,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) | $spl47),
  inference(cnf_transformation,[],[f2955_D])).
fof(f2955_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) <=> ~$spl47),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl47])])).
fof(f2957,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl48),
  inference(cnf_transformation,[],[f2957_D])).
fof(f2957_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2857,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f814])).
fof(f814,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f573])).
fof(f573,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f375])).
fof(f375,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f159])).
fof(f159,axiom,(
  ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X18))),
  file('thm.list.LENGTH_NIL','thm.numeral.numeral_distrib|split|17')).
fof(f2856,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f816])).
fof(f816,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f574])).
fof(f574,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f376])).
fof(f376,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f201])).
fof(f201,axiom,(
  ! [X18] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X18))),
  file('thm.list.LENGTH_NIL','thm.numeral.numeral_distrib|split|18')).
fof(f2953,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK61('const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11))))))) | $spl44),
  inference(cnf_transformation,[],[f2953_D])).
fof(f2953_D,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK61('const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f2949,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | $spl42),
  inference(cnf_transformation,[],[f2949_D])).
fof(f2949_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2855,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11)))) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK61('const.list.LENGTH_1'(s('type.list.list'(sK11),sK30(sK12,sK11))))))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f820])).
fof(f820,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK61(X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f577])).
fof(f577,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',sK61(X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK61])],[f378])).
fof(f378,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X0) | ? [X1] : s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f108])).
fof(f108,axiom,(
  ! [X39] : (s('type.num.num','const.num.|48|_0') = s('type.num.num',X39) | ? [X18] : s('type.num.num',X39) = s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))),
  file('thm.list.LENGTH_NIL','thm.arithmetic.num_CASES')).
fof(f2220,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK11,X0),X1),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl38),
  inference(cnf_transformation,[],[f2220_D])).
fof(f2220_D,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK11,X0),X1),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2951,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2852,f600])).
fof(f600,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f287])).
fof(f287,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.list.LENGTH_NIL','thm.list.LENGTH|split|0')).
fof(f2852,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),'const.list.NIL_0'))))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f588])).
fof(f588,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))) )),
  inference(cnf_transformation,[],[f456])).
fof(f456,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(nnf_transformation,[],[f272])).
fof(f272,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f271])).
fof(f271,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X10,X6] : ! [X7,X13] : (s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),'const.list.MAP_2'(s(fun(X6,X10),X13),s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.LENGTH_NIL','thm.list.MAP_EQ_NIL|split|1')).
fof(f2950,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK11,X0),X1),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2851,f600])).
fof(f2851,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),'const.list.NIL_0'))))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK11,X0),X1),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f590])).
fof(f590,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))) )),
  inference(cnf_transformation,[],[f457])).
fof(f457,plain,(
  ! [X0,X1,X2,X3] : ((s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) | s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2)) & (s('type.list.list'(X1),'const.list.NIL_0') != s('type.list.list'(X1),X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(nnf_transformation,[],[f274])).
fof(f274,plain,(
  ! [X0,X1,X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(flattening,[],[f273])).
fof(f273,plain,(
  ! [X0,X1] : ! [X2,X3] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2))) <=> s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),X2))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X10,X6] : ! [X7,X13] : (s('type.list.list'(X10),'const.list.NIL_0') = s('type.list.list'(X10),'const.list.MAP_2'(s(fun(X6,X10),X13),s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.LENGTH_NIL','thm.list.MAP_EQ_NIL|split|0')).
fof(f2217,plain,(
  s('type.list.list'(sK11),sK30(sK12,sK11)) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK30(sK12,sK11),sK11)),s('type.list.list'(sK11),sK30(sK30(sK12,sK11),sK11)))) | $spl34),
  inference(cnf_transformation,[],[f2217_D])).
fof(f2217_D,plain,(
  s('type.list.list'(sK11),sK30(sK12,sK11)) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK30(sK12,sK11),sK11)),s('type.list.list'(sK11),sK30(sK30(sK12,sK11),sK11)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2947,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.list.list'(sK11),sK30(sK12,sK11)) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK30(sK12,sK11),sK11)),s('type.list.list'(sK11),sK30(sK30(sK12,sK11),sK11)))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2850,f600])).
fof(f2850,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),'const.list.NIL_0'))))) | s('type.list.list'(sK11),sK30(sK12,sK11)) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK30(sK12,sK11),sK11)),s('type.list.list'(sK11),sK30(sK30(sK12,sK11),sK11)))) | ($spl0 | $spl3)),
  inference(superposition,[],[f2227,f599])).
fof(f1223,plain,(
  ( ! [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0'))))) ) | $spl16),
  inference(cnf_transformation,[],[f1223_D])).
fof(f1223_D,plain,(
  ( ! [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0'))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1219,plain,(
  ( ! [X19] : (~p(s(bool,X19))) ) | $spl10),
  inference(cnf_transformation,[],[f1219_D])).
fof(f1219_D,plain,(
  ( ! [X19] : (~p(s(bool,X19))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f2427,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0'))))) ) | $spl20),
  inference(resolution,[],[f1993,f616])).
fof(f616,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP2(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f470])).
fof(f470,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f469])).
fof(f469,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(flattening,[],[f468])).
fof(f468,plain,(
  ! [X2,X0,X1] : ((~sP2(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP2(X2,X0,X1)))),
  inference(nnf_transformation,[],[f434])).
fof(f434,plain,(
  ! [X2,X0,X1] : (sP2(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f2426,plain,(
  ( ! [X5,X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl40),
  inference(cnf_transformation,[],[f2426_D])).
fof(f2426_D,plain,(
  ( ! [X5,X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),'const.list.NIL_0')))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1220,plain,(
  ( ! [X18] : (p(s(bool,X18))) ) | $spl12),
  inference(cnf_transformation,[],[f1220_D])).
fof(f1220_D,plain,(
  ( ! [X18] : (p(s(bool,X18))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2389,plain,(
  ( ! [X263,X262,X264] : (p(s(bool,X262)) | p(s(bool,X263)) | s(bool,X263) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X264),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl16),
  inference(resolution,[],[f1223,f839])).
fof(f839,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f605])).
fof(f605,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f464,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f463])).
fof(f463,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f403])).
fof(f403,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f402])).
fof(f402,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f288])).
fof(f288,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f246])).
fof(f246,axiom,(
  ! [X15,X59,X21,X60] : ((s(bool,X15) = s(bool,X59) & (p(s(bool,X59)) => s(bool,X21) = s(bool,X60))) => ((p(s(bool,X15)) => p(s(bool,X21))) <=> (p(s(bool,X59)) => p(s(bool,X60)))))),
  file('thm.list.LENGTH_NIL','thm.bool.IMP_CONG')).
fof(f1218,plain,(
  ( ! [X13,X11] : (s(bool,X11) != s(bool,X13) | ~p(s(bool,X11))) ) | $spl8),
  inference(cnf_transformation,[],[f1218_D])).
fof(f1218_D,plain,(
  ( ! [X13,X11] : (s(bool,X11) != s(bool,X13) | ~p(s(bool,X11))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f2309,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X31),s('type.list.list'(sK11),'const.list.NIL_0'))) | s(bool,X30) != s(bool,X32)) ) | $spl16),
  inference(resolution,[],[f1223,f608])).
fof(f608,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f2306,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X21),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl16),
  inference(resolution,[],[f1223,f607])).
fof(f607,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f1217,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) | $spl6),
  inference(cnf_transformation,[],[f1217_D])).
fof(f1217_D,plain,(
  ( ! [X4,X2] : (s(bool,X2) != s(bool,X4) | p(s(bool,X2))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f2305,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X17),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl16),
  inference(resolution,[],[f1223,f606])).
fof(f606,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f2304,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X12),s('type.list.list'(sK11),'const.list.NIL_0'))) | s(bool,X11) != s(bool,X13)) ) | $spl16),
  inference(resolution,[],[f1223,f604])).
fof(f604,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f2302,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl16),
  inference(resolution,[],[f1223,f602])).
fof(f602,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X3)) | ~p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X2) != s(bool,X3) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f464])).
fof(f2219,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),'const.list.NIL_0'))) | $spl36),
  inference(cnf_transformation,[],[f2219_D])).
fof(f2219_D,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),'const.list.NIL_0'))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2126,plain,(
  ( ! [X2,X3] : (s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl3),
  inference(superposition,[],[f964,f588])).
fof(f2125,plain,(
  ( ! [X0,X1] : (s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),'const.list.MAP_2'(s(fun(sK11,X0),X1),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl3),
  inference(superposition,[],[f964,f590])).
fof(f2124,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK11),sK30(sK12,sK11)) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK30(sK12,sK11),sK11)),s('type.list.list'(sK11),sK30(sK30(sK12,sK11),sK11)))) | $spl3),
  inference(superposition,[],[f964,f599])).
fof(f1222,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11)))) | $spl14),
  inference(cnf_transformation,[],[f1222_D])).
fof(f1222_D,plain,(
  s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11)))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2123,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl32),
  inference(cnf_transformation,[],[f2123_D])).
fof(f2123_D,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2118,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1143,f599])).
fof(f1143,plain,(
  ( ! [X149,X147,X148] : (sP6(X147,X148,'const.list.EVERY_2'(s(fun(sK11,bool),X149),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f702])).
fof(f702,plain,(
  ( ! [X2,X0,X1] : (sP6(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f503])).
fof(f503,plain,(
  ! [X0,X1,X2] : ((~sP6(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP6(X0,X1,X2)))),
  inference(rectify,[],[f502])).
fof(f502,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(flattening,[],[f501])).
fof(f501,plain,(
  ! [X2,X0,X1] : ((~sP6(X2,X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP6(X2,X0,X1)))),
  inference(nnf_transformation,[],[f440])).
fof(f440,plain,(
  ! [X2,X0,X1] : (sP6(X2,X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP6])])).
fof(f1067,plain,(
  ( ! [X4] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X4),s('type.list.list'(sK11),sK12))))) ) | $spl0),
  inference(subsumption_resolution,[],[f975,f813])).
fof(f975,plain,(
  ( ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK33(X4,sK12,sK11)),s('type.num.num','const.num.|48|_0')))) | p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X4),s('type.list.list'(sK11),sK12))))) ) | $spl0),
  inference(superposition,[],[f657,f845])).
fof(f657,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK33(X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f489])).
fof(f489,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) | ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1)))))))) & ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK33(X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',sK33(X2,X1,X0)),s('type.list.list'(X0),X1))))))) | p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK33])],[f488])).
fof(f488,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) | ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X4),s('type.list.list'(X0),X1)))))))) & (? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))))))) | p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f487])).
fof(f487,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) | ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1)))))))) & (? [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) & ~p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))))))) | p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1))))))),
  inference(nnf_transformation,[],[f407])).
fof(f407,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) <=> ! [X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) | p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))))))))),
  inference(ennf_transformation,[],[f315])).
fof(f315,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) <=> ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))))))))),
  inference(flattening,[],[f314])).
fof(f314,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.list.EVERY_2'(s(fun(X0,bool),X2),s('type.list.list'(X0),X1)))) <=> ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))) => p(s(bool,happ(s(fun(X0,bool),X2),s(X0,'const.list.EL_2'(s('type.num.num',X3),s('type.list.list'(X0),X1))))))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6] : ! [X7,X14] : (p(s(bool,'const.list.EVERY_2'(s(fun(X6,bool),X14),s('type.list.list'(X6),X7)))) <=> ! [X18] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X18),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))))) => p(s(bool,happ(s(fun(X6,bool),X14),s(X6,'const.list.EL_2'(s('type.num.num',X18),s('type.list.list'(X6),X7))))))))),
  file('thm.list.LENGTH_NIL','thm.list.EVERY_EL')).
fof(f2101,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2)) ) | $spl30),
  inference(cnf_transformation,[],[f2101_D])).
fof(f2101_D,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2)) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f2097,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1130,f599])).
fof(f1130,plain,(
  ( ! [X109,X110,X108] : (sP4(X108,'const.list.EVERY_2'(s(fun(sK11,bool),X109),s('type.list.list'(sK11),sK12)),X110)) ) | $spl0),
  inference(resolution,[],[f1067,f686])).
fof(f686,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f495])).
fof(f495,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | ~p(s(bool,X2)) | p(s(bool,X1)) | ~p(s(bool,X0))) & ((p(s(bool,X2)) & ~p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f494])).
fof(f494,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | ~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(flattening,[],[f493])).
fof(f493,plain,(
  ! [X2,X0,X1] : ((~sP4(X2,X0,X1) | (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2)))) & ((p(s(bool,X1)) & ~p(s(bool,X0)) & p(s(bool,X2))) | sP4(X2,X0,X1)))),
  inference(nnf_transformation,[],[f437])).
fof(f437,plain,(
  ! [X2,X0,X1] : (sP4(X2,X0,X1) <=> (~p(s(bool,X1)) | p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f2080,plain,(
  ( ! [X2,X0,X1] : (sP0('const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0')),X1,X2)) ) | $spl28),
  inference(cnf_transformation,[],[f2080_D])).
fof(f2080_D,plain,(
  ( ! [X2,X0,X1] : (sP0('const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0')),X1,X2)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2074,plain,(
  ( ! [X2,X0,X1] : (sP0('const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0')),X1,X2) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1114,f599])).
fof(f1114,plain,(
  ( ! [X68,X66,X67] : (sP0('const.list.EVERY_2'(s(fun(sK11,bool),X66),s('type.list.list'(sK11),sK12)),X67,X68)) ) | $spl0),
  inference(resolution,[],[f1067,f627])).
fof(f627,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f475])).
fof(f475,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(flattening,[],[f474])).
fof(f474,plain,(
  ! [X0,X1,X2] : ((~sP0(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP0(X0,X1,X2)))),
  inference(nnf_transformation,[],[f432])).
fof(f432,plain,(
  ! [X0,X1,X2] : (sP0(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f2058,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2)) ) | $spl26),
  inference(cnf_transformation,[],[f2058_D])).
fof(f2058_D,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2052,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')),X2) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1113,f599])).
fof(f1113,plain,(
  ( ! [X64,X65,X63] : (sP0(X63,'const.list.EVERY_2'(s(fun(sK11,bool),X64),s('type.list.list'(sK11),sK12)),X65)) ) | $spl0),
  inference(resolution,[],[f1067,f626])).
fof(f626,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f475])).
fof(f2036,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl24),
  inference(cnf_transformation,[],[f2036_D])).
fof(f2036_D,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2030,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1112,f599])).
fof(f1112,plain,(
  ( ! [X61,X62,X60] : (sP0(X60,X61,'const.list.EVERY_2'(s(fun(sK11,bool),X62),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f625])).
fof(f625,plain,(
  ( ! [X2,X0,X1] : (sP0(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f475])).
fof(f2014,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl22),
  inference(cnf_transformation,[],[f2014_D])).
fof(f2014_D,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2009,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1111,f599])).
fof(f1111,plain,(
  ( ! [X59,X57,X58] : (sP1(X57,X58,'const.list.EVERY_2'(s(fun(sK11,bool),X59),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f621])).
fof(f621,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f473])).
fof(f473,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(rectify,[],[f472])).
fof(f472,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(flattening,[],[f471])).
fof(f471,plain,(
  ! [X1,X0,X2] : ((~sP1(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP1(X1,X0,X2)))),
  inference(nnf_transformation,[],[f433])).
fof(f433,plain,(
  ! [X1,X0,X2] : (sP1(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f1993,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) | $spl20),
  inference(cnf_transformation,[],[f1993_D])).
fof(f1993_D,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0')))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1988,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,'const.list.EVERY_2'(s(fun(sK11,bool),X2),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1108,f599])).
fof(f1108,plain,(
  ( ! [X50,X48,X49] : (sP2(X48,X49,'const.list.EVERY_2'(s(fun(sK11,bool),X50),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f617])).
fof(f617,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f470])).
fof(f1972,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1907,f1759])).
fof(f1759,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | $spl8),
  inference(equality_resolution,[],[f1218])).
fof(f1907,plain,(
  ( ! [X418,X417,X419] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK33(X417,X418,X419)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X419),X418))))))) ) | $spl8),
  inference(resolution,[],[f1759,f657])).
fof(f1971,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1905,f1759])).
fof(f1905,plain,(
  ( ! [X414,X416,X415] : (p(s(bool,'const.list.EVERY_2'(s(fun(X414,bool),X415),s('type.list.list'(X414),X416))))) ) | $spl8),
  inference(resolution,[],[f1759,f657])).
fof(f1906,plain,(
  $false | $spl8),
  inference(resolution,[],[f1759,f823])).
fof(f1909,plain,(
  $false | ($spl0 | $spl8)),
  inference(resolution,[],[f1759,f1067])).
fof(f1910,plain,(
  $false | $spl8),
  inference(resolution,[],[f1759,f834])).
fof(f834,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f392])).
fof(f392,plain,(
  ! [X0] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))),
  inference(rectify,[],[f180])).
fof(f180,axiom,(
  ! [X18] : p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X18))))),
  file('thm.list.LENGTH_NIL','thm.arithmetic.ZERO_LESS_EQ')).
fof(f1652,plain,(
  $false | $spl6),
  inference(resolution,[],[f1473,f813])).
fof(f1473,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl6),
  inference(equality_resolution,[],[f1217])).
fof(f1366,plain,(
  $false | $spl12),
  inference(resolution,[],[f1220,f813])).
fof(f1224,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK12)))) ) | $spl18),
  inference(cnf_transformation,[],[f1224_D])).
fof(f1224_D,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK12)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1198,plain,(
  ( ! [X6,X4,X5] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X4),s('type.list.list'(sK11),'const.list.NIL_0')))) | s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),'const.list.MAP_2'(s(fun(sK11,X5),X6),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(superposition,[],[f1067,f588])).
fof(f1197,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X1),s('type.list.list'(sK11),'const.list.NIL_0')))) | s('type.list.list'(X2),'const.list.NIL_0') != s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK11,X2),X3),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(superposition,[],[f1067,f590])).
fof(f1196,plain,(
  ( ! [X0] : (p(s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X0),s('type.list.list'(sK11),'const.list.NIL_0')))) | s('type.list.list'(sK11),sK12) = s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,sK29(sK12,sK11)),s('type.list.list'(sK11),sK30(sK12,sK11))))) ) | $spl0),
  inference(superposition,[],[f1067,f599])).
fof(f1216,plain,(
  ( ! [X5,X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),sK12)))) ) | $spl4),
  inference(cnf_transformation,[],[f1216_D])).
fof(f1216_D,plain,(
  ( ! [X5,X3] : (p(s(bool,X3)) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),sK12)))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1182,plain,(
  ( ! [X263,X262,X264] : (p(s(bool,X262)) | p(s(bool,X263)) | s(bool,X263) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X264),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f839])).
fof(f1102,plain,(
  ( ! [X30,X31,X29,X32] : (p(s(bool,X29)) | ~p(s(bool,X30)) | s(bool,X29) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X31),s('type.list.list'(sK11),sK12))) | s(bool,X30) != s(bool,X32)) ) | $spl0),
  inference(resolution,[],[f1067,f608])).
fof(f1099,plain,(
  ( ! [X21,X19,X20,X18] : (p(s(bool,X18)) | ~p(s(bool,X19)) | p(s(bool,X20)) | s(bool,X20) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X21),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f607])).
fof(f1098,plain,(
  ( ! [X14,X17,X15,X16] : (p(s(bool,X14)) | p(s(bool,X15)) | s(bool,X14) != s(bool,X16) | s(bool,X15) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X17),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f606])).
fof(f1097,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,X10)) | ~p(s(bool,X11)) | s(bool,X10) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X12),s('type.list.list'(sK11),sK12))) | s(bool,X11) != s(bool,X13)) ) | $spl0),
  inference(resolution,[],[f1067,f604])).
fof(f1095,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X2) != s(bool,X4) | s(bool,X3) != s(bool,'const.list.EVERY_2'(s(fun(sK11,bool),X5),s('type.list.list'(sK11),sK12)))) ) | $spl0),
  inference(resolution,[],[f1067,f602])).
fof(f958,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f957,f600])).
fof(f957,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),'const.list.NIL_0'))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f846,f847])).
fof(f845,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) | $spl0),
  inference(cnf_transformation,[],[f845_D])).
fof(f845_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f847,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') = s('type.list.list'(sK11),sK12) | $spl2),
  inference(cnf_transformation,[],[f847_D])).
fof(f847_D,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') = s('type.list.list'(sK11),sK12) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f579,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') = s('type.list.list'(sK11),sK12) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12)))),
  inference(cnf_transformation,[],[f449])).
fof(f449,plain,(
  (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) | s('type.list.list'(sK11),'const.list.NIL_0') = s('type.list.list'(sK11),sK12)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) | s('type.list.list'(sK11),'const.list.NIL_0') != s('type.list.list'(sK11),sK12))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12])],[f448])).
fof(f448,plain,(
  ? [X0,X1] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1)))),
  inference(nnf_transformation,[],[f395])).
fof(f395,plain,(
  ? [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <~> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(ennf_transformation,[],[f264])).
fof(f264,plain,(
  ~! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ~! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X7))),
  file('thm.list.LENGTH_NIL','thm.list.LENGTH_NIL')).
fof(f846,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) | $spl1),
  inference(cnf_transformation,[],[f846_D])).
fof(f846_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f848,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') != s('type.list.list'(sK11),sK12) | $spl3),
  inference(cnf_transformation,[],[f848_D])).
fof(f848_D,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') != s('type.list.list'(sK11),sK12) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f580,plain,(
  s('type.list.list'(sK11),'const.list.NIL_0') != s('type.list.list'(sK11),sK12) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK11),sK12)))),
  inference(cnf_transformation,[],[f449])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 208
% Passive clauses: 318
% Generated clauses: 2125
% Final active clauses: 200
% Final passive clauses: 163
% Input formulas: 261
% Initial clauses: 260
% 
% Selected by SInE selection: 83
% SInE iterations: 1
% 
% Duplicate literals: 42
% Trivial inequalities: 10
% Fw subsumption resolutions: 117
% Fw demodulations: 204
% 
% Simple tautologies: 121
% Equational tautologies: 4
% Forward subsumptions: 1238
% 
% Binary resolution: 672
% Forward superposition: 552
% Backward superposition: 517
% Equality resolution: 2
% 
% Split clauses: 34
% Split components: 71
% SAT solver clauses: 45
% SAT solver unit clauses: 6
% SAT solver binary clauses: 5
% 
% Sat splits: 34
% Sat splitting refutations: 9
% 
% Memory used [KB]: 3198
% Time elapsed: 0.112 s
% ------------------------------
% ------------------------------
% Success in time 12.22 s
