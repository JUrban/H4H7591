Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f175,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f174,f66,f96,f106,f110,f108,f122])).
fof(f122,plain,(
  $false | ($spl5 | $spl8)),
  inference(subsumption_resolution,[],[f111,f96])).
fof(f111,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f108,f62])).
fof(f62,plain,(
  p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK0),sK4))))),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK0),sK4)))) & s(sK1,sK3) != s(sK1,'const.option.option_CASE_3'(s('type.option.option'(sK0),sK4),s(sK1,sK3),s(fun(sK0,sK1),sK2)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f41])).
fof(f41,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),X4)))) & s(X1,X3) != s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X4),s(X1,X3),s(fun(X0,X1),X2))))),
  inference(ennf_transformation,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),X4)))) => s(X1,X3) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X4),s(X1,X3),s(fun(X0,X1),X2))))),
  inference(flattening,[],[f19])).
fof(f19,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),X4)))) => s(X1,X3) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),X4),s(X1,X3),s(fun(X0,X1),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X6),X10)))) => s(X7,X9) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),X10),s(X7,X9),s(fun(X6,X7),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X6),X10)))) => s(X7,X9) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),X10),s(X7,X9),s(fun(X6,X7),X8))))),
  file('thm.option.option_3|49|_prove_ltb','thm.option.option_3|49|_prove_ltb')).
fof(f108,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f110,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f106,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f68])).
fof(f68,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.option.option_3|49|_prove_ltb',aHL_BOOL_CASES)).
fof(f96,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f96_D])).
fof(f96_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f66,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f21])).
fof(f21,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.option.option_3|49|_prove_ltb',aHL_FALSITY)).
fof(f174,plain,(
  $false | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f169,f88])).
fof(f88,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.option.option_CASE_3'(s('type.option.option'(X0),'const.option.NONE_0'),s(X1,X2),s(fun(X0,X1),X3)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X6,X7] : ! [X13,X8] : s(X7,X13) = s(X7,'const.option.option_CASE_3'(s('type.option.option'(X6),'const.option.NONE_0'),s(X7,X13),s(fun(X6,X7),X8)))),
  file('thm.option.option_3|49|_prove_ltb','thm.option.option_case_def|split|0')).
fof(f169,plain,(
  s(sK1,sK3) != s(sK1,'const.option.option_CASE_3'(s('type.option.option'(sK0),'const.option.NONE_0'),s(sK1,sK3),s(fun(sK0,sK1),sK2))) | ($spl5 | $spl11)),
  inference(backward_demodulation,[],[f167,f63])).
fof(f63,plain,(
  s(sK1,sK3) != s(sK1,'const.option.option_CASE_3'(s('type.option.option'(sK0),sK4),s(sK1,sK3),s(fun(sK0,sK1),sK2)))),
  inference(cnf_transformation,[],[f48])).
fof(f167,plain,(
  s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | ($spl5 | $spl11)),
  inference(subsumption_resolution,[],[f161,f110])).
fof(f161,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.option.option'(sK0),'const.option.NONE_0') = s('type.option.option'(sK0),sK4) | $spl5),
  inference(superposition,[],[f155,f107])).
fof(f107,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK0),sK4))) | $spl5),
  inference(subsumption_resolution,[],[f103,f96])).
fof(f103,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK0),sK4)))),
  inference(superposition,[],[f62,f68])).
fof(f155,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),X1))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f84,f85])).
fof(f85,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK5(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK5])],[f32])).
fof(f32,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : ! [X12] : (s('type.option.option'(X6),'const.option.NONE_0') = s('type.option.option'(X6),X12) | ? [X10] : s('type.option.option'(X6),X12) = s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X10))))),
  file('thm.option.option_3|49|_prove_ltb','thm.option.option_nchotomy')).
fof(f84,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X10] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X10)))))),
  file('thm.option.option_3|49|_prove_ltb','thm.option.IS_NONE_DEF|split|0')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 16
% Passive clauses: 32
% Generated clauses: 107
% Final active clauses: 11
% Final passive clauses: 9
% Input formulas: 17
% Initial clauses: 29
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% Fw subsumption resolutions: 6
% Fw demodulations: 1
% Bw demodulations: 4
% 
% Simple tautologies: 9
% Equational tautologies: 3
% Forward subsumptions: 42
% 
% Binary resolution: 1
% Forward superposition: 26
% Backward superposition: 24
% Self superposition: 7
% Equality factoring: 2
% 
% Split clauses: 9
% Split components: 19
% SAT solver clauses: 17
% SAT solver unit clauses: 4
% SAT solver binary clauses: 10
% SAT solver learnt clauses: 1
% 
% Sat splits: 9
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 639
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
