Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rich_list
% (80586)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 88
% Passive clauses: 2997
% Generated clauses: 19854
% Final active clauses: 85
% Final passive clauses: 2797
% Input formulas: 9
% Initial clauses: 14
% 
% Duplicate literals: 1281
% Trivial inequalities: 200
% Fw subsumption resolutions: 2277
% Fw demodulations: 1463
% Bw demodulations: 2
% 
% Simple tautologies: 323
% Equational tautologies: 92
% Forward subsumptions: 8859
% 
% Binary resolution: 100
% Forward superposition: 8952
% Backward superposition: 4782
% Self superposition: 330
% Equality factoring: 248
% Equality resolution: 12
% 
% Split clauses: 1030
% Split components: 2068
% SAT solver clauses: 2328
% SAT solver unit clauses: 281
% SAT solver binary clauses: 616
% 
% Sat splits: 1030
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2322
% TWLsolver calls for satisfiability: 114
% 
% Memory used [KB]: 8955
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f1213,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f64,f66,f285,f286,f36,f54,f67,f75,f38,f57,f1029,f332,f339,f34,f51,f1015,f337,f1188,f43,f62,f45,f60,f69,f76,f349,f37,f56,f33,f49,f47,f35,f52,f50,f48,f1030,f1037,f44,f61,f1211])).
fof(f1211,plain,(
  $false | ($spl24 | $spl132)),
  inference(subsumption_resolution,[],[f65,f1037])).
fof(f65,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | $spl24),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f61,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))) ) | $spl18),
  inference(cnf_transformation,[],[f61_D])).
fof(f61_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f44,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | (s(X0,X3) = s(X0,X4) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))) & (s(X0,X3) != s(X0,X4) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | (s(X0,X3) = s(X0,X4) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))) & ((s(X0,X3) != s(X0,X4) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) <=> (s(X0,X3) = s(X0,X4) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) <=> (s(X0,X3) = s(X0,X4) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1))))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X16,X17,X18,X19] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),X17))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),X16)))))) <=> (s(X6,X18) = s(X6,X19) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X16))))))),
  file('thm.rich_list.IS_PREFIX|split|2','thm.list.isPREFIX_THM|split|2')).
fof(f1037,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))) ) | $spl132),
  inference(cnf_transformation,[],[f1037_D])).
fof(f1037_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f1030,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),sK2))))))) ) | ($spl5 | $spl18)),
  inference(resolution,[],[f52,f61])).
fof(f48,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f50,plain,(
  s(sK0,sK1) != s(sK0,sK3) | $spl3),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  s(sK0,sK1) != s(sK0,sK3) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f52,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | $spl5),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f35,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | s(sK0,sK1) != s(sK0,sK3) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | (s(sK0,sK1) = s(sK0,sK3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))))) & (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | s(sK0,sK1) != s(sK0,sK3) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4])],[f27])).
fof(f27,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) | (s(X0,X1) = s(X0,X3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2)))))) & (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) | s(X0,X1) != s(X0,X3) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ? [X0,X1,X2,X3,X4] : ((p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) | (s(X0,X1) = s(X0,X3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2)))))) & (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) | (s(X0,X1) != s(X0,X3) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2)))))))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) <~> (s(X0,X1) = s(X0,X3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) <=> (s(X0,X1) = s(X0,X3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))))))),
  inference(flattening,[],[f11])).
fof(f11,plain,(
  ~! [X0] : ! [X1,X2,X3,X4] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X4))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) <=> (s(X0,X1) = s(X0,X3) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8)))))) <=> (s(X6,X7) = s(X6,X9) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X10),s('type.list.list'(X6),X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9,X10] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X9),s('type.list.list'(X6),X10))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X7),s('type.list.list'(X6),X8)))))) <=> (s(X6,X7) = s(X6,X9) & p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X6),X10),s('type.list.list'(X6),X8))))))),
  file('thm.rich_list.IS_PREFIX|split|2','thm.rich_list.IS_PREFIX|split|2')).
fof(f47,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | $spl0),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f49,plain,(
  s(sK0,sK1) = s(sK0,sK3) | $spl2),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  s(sK0,sK1) = s(sK0,sK3) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f33,plain,(
  s(sK0,sK1) = s(sK0,sK3) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f28])).
fof(f56,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f56_D])).
fof(f56_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.IS_PREFIX|split|2',aHL_FALSITY)).
fof(f349,plain,(
  $false | ($spl6 | $spl9 | $spl42)),
  inference(subsumption_resolution,[],[f343,f54])).
fof(f343,plain,(
  ~p(s(bool,'T_0')) | ($spl9 | $spl42)),
  inference(backward_demodulation,[],[f337,f56])).
fof(f76,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl28),
  inference(cnf_transformation,[],[f76_D])).
fof(f76_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f69,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | ($spl9 | $spl10)),
  inference(superposition,[],[f56,f57])).
fof(f60,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s(X0,X3) != s(X0,X4)) ) | $spl16),
  inference(cnf_transformation,[],[f60_D])).
fof(f60_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s(X0,X3) != s(X0,X4)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f45,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))) | s(X0,X3) != s(X0,X4)) )),
  inference(cnf_transformation,[],[f31])).
fof(f62,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | s(X0,X3) = s(X0,X4)) ) | $spl20),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1)))))) | s(X0,X3) = s(X0,X4)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f43,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,X3) = s(X0,X4) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X3),s('type.list.list'(X0),X1))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f1188,plain,(
  s(sK0,sK1) = s(sK0,sK3) | ($spl0 | $spl20)),
  inference(resolution,[],[f47,f62])).
fof(f337,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl42),
  inference(cnf_transformation,[],[f337_D])).
fof(f337_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1015,plain,(
  ( ! [X0] : (~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl28 | $spl40)),
  inference(subsumption_resolution,[],[f980,f76])).
fof(f980,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl40)),
  inference(trivial_inequality_removal,[],[f972])).
fof(f972,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | s(sK0,sK1) != s(sK0,sK1) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl40)),
  inference(superposition,[],[f60,f286])).
fof(f51,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | $spl4),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f34,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),sK4),s('type.list.list'(sK0),sK2)))) | p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK3),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))))),
  inference(cnf_transformation,[],[f28])).
fof(f339,plain,(
  s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | $spl44),
  inference(cnf_transformation,[],[f339_D])).
fof(f339_D,plain,(
  s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f332,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl10 | $spl40)),
  inference(duplicate_literal_removal,[],[f292])).
fof(f292,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | ($spl10 | $spl40)),
  inference(superposition,[],[f286,f57])).
fof(f1029,plain,(
  $false | ($spl0 | $spl2 | $spl9 | $spl44)),
  inference(subsumption_resolution,[],[f1028,f56])).
fof(f1028,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl2 | $spl44)),
  inference(forward_demodulation,[],[f1027,f339])).
fof(f1027,plain,(
  p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f47,f49])).
fof(f57,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(cnf_transformation,[],[f57_D])).
fof(f57_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f38,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rich_list.IS_PREFIX|split|2',aHL_BOOL_CASES)).
fof(f75,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl26),
  inference(cnf_transformation,[],[f75_D])).
fof(f75_D,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f67,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) ) | $spl10),
  inference(superposition,[],[f57,f57])).
fof(f54,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f36,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.IS_PREFIX|split|2',aHL_TRUTH)).
fof(f286,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl40),
  inference(cnf_transformation,[],[f286_D])).
fof(f286_D,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f285,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl6 | $spl25 | $spl26)),
  inference(subsumption_resolution,[],[f171,f54])).
fof(f171,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | ($spl25 | $spl26)),
  inference(superposition,[],[f66,f75])).
fof(f66,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | $spl25),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f64,plain,(
  ~p(s(bool,'const.list.isPREFIX_2'(s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK4))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK1),s('type.list.list'(sK0),sK2)))))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f48,f49])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 32
% Passive clauses: 93
% Generated clauses: 1182
% Final active clauses: 22
% Final passive clauses: 40
% Input formulas: 9
% Initial clauses: 14
% 
% Duplicate literals: 107
% Trivial inequalities: 12
% Fw subsumption resolutions: 72
% Fw demodulations: 66
% Bw demodulations: 25
% Condensations: 137
% 
% Simple tautologies: 30
% Equational tautologies: 17
% Forward subsumptions: 463
% 
% Binary resolution: 15
% Forward superposition: 405
% Backward superposition: 149
% Self superposition: 33
% Equality factoring: 32
% Equality resolution: 3
% 
% Split clauses: 17
% Split components: 35
% SAT solver clauses: 190
% SAT solver unit clauses: 16
% SAT solver binary clauses: 15
% SAT solver learnt clauses: 4
% SAT solver learnt literals: 3
% 
% Sat splits: 17
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 186
% TWLsolver calls for satisfiability: 81
% 
% Memory used [KB]: 1663
% Time elapsed: 0.084 s
% ------------------------------
% ------------------------------
% Success in time 0.689 s
