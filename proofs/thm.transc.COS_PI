Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.transc
% (111057)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 346
% Passive clauses: 3463
% Generated clauses: 30241
% Final active clauses: 271
% Final passive clauses: 2394
% Input formulas: 63
% Initial clauses: 80
% 
% Duplicate literals: 269
% Trivial inequalities: 947
% Fw subsumption resolutions: 1489
% Fw demodulations: 9928
% Bw demodulations: 54
% 
% Simple tautologies: 89
% Equational tautologies: 32
% Forward subsumptions: 14313
% Fw demodulations to eq. taut.: 184
% Bw demodulations to eq. taut.: 13
% 
% Binary resolution: 24
% Forward superposition: 9188
% Backward superposition: 7950
% Self superposition: 125
% Equality factoring: 42
% Equality resolution: 85
% 
% Split clauses: 108
% Split components: 216
% SAT solver clauses: 178
% SAT solver unit clauses: 3
% SAT solver binary clauses: 24
% 
% Sat splits: 108
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 178
% TWLsolver calls for satisfiability: 42
% 
% Memory used [KB]: 16630
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.transc
% (111079)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 314
% Passive clauses: 1225
% Generated clauses: 14287
% Final active clauses: 214
% Final passive clauses: 560
% Input formulas: 63
% Initial clauses: 80
% 
% Duplicate literals: 117
% Trivial inequalities: 50
% Fw subsumption resolutions: 139
% Fw demodulations: 3169
% Bw demodulations: 408
% Condensations: 107
% Global subsumptions: 16
% 
% Simple tautologies: 36
% Equational tautologies: 22
% Forward subsumptions: 7714
% Fw demodulations to eq. taut.: 8
% Bw demodulations to eq. taut.: 36
% 
% Binary resolution: 7
% Forward superposition: 6163
% Backward superposition: 2568
% Self superposition: 70
% Equality factoring: 28
% Equality resolution: 29
% 
% Split clauses: 46
% Split components: 92
% SAT solver clauses: 1816
% SAT solver unit clauses: 167
% SAT solver binary clauses: 46
% SAT solver learnt clauses: 34
% SAT solver learnt literals: 5
% 
% Sat splits: 46
% Sat splitting refutations: 9
% 
% TWLsolver clauses: 1750
% TWLsolver calls for satisfiability: 423
% 
% Memory used [KB]: 11513
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.transc
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.transc
% SZS output start Proof for thm.transc
fof(f51838,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f341,f346,f344,f433,f441,f434,f444,f435,f445,f437,f448,f446,f438,f450,f754,f756,f760,f758,f763,f2301,f927,f2308,f675,f2316,f630,f443,f2318,f7913,f7921,f7937,f7917,f7915,f9100,f9230,f9227,f9229,f9254,f9259,f9260,f9261,f9262,f9206,f9290,f9258,f9256,f9362,f9369,f9373,f9371,f9376,f9380,f9378,f9404,f9366,f9364,f9339,f9417,f9415,f9341,f9421,f9419,f9342,f9425,f9423,f9430,f9432,f9434,f9494,f9501,f9505,f9503,f9508,f9512,f9510,f9544,f9498,f9496,f9471,f9565,f9563,f9473,f9569,f9567,f9474,f9573,f9571,f9578,f9580,f9582,f9616,f9617,f9619,f9620,f9623,f9624,f9937,f9938,f9939,f9948,f9949,f9950,f9953,f9954,f9955,f9962,f9968,f9971,f9972,f9974,f10016,f10020,f10022,f10024,f10026,f10030,f10032,f10034,f10036,f10040,f10042,f10046,f10048,f10050,f10052,f10053,f10054,f10055,f10056,f10057,f10059,f10060,f10061,f10062,f10063,f10064,f10066,f10067,f10068,f10069,f10071,f10072,f10074,f10075,f10077,f10078,f10079,f10081,f10082,f10084,f10086,f10087,f10088,f10089,f10090,f10091,f10092,f10093,f10095,f10097,f10098,f10100,f10177,f10179,f10181,f10183,f10185,f10186,f10188,f10212,f10213,f10214,f10216,f10218,f10220,f10222,f10224,f10226,f10230,f10240,f10244,f10250,f10252,f10254,f10256,f10258,f10260,f10261,f10263,f10266,f10267,f10269,f12233,f12278,f12276,f12598,f12653,f12651,f19338,f19339,f19340,f19341,f19342,f19343,f19352,f19344,f19345,f19346,f19356,f19350,f19347,f19355,f19353,f23876,f23880,f23878,f23883,f23887,f23885,f23985,f23989,f23987,f23992,f23996,f23994,f30206,f30289,f30287,f30207,f30293,f30291,f43588,f43591,f43590,f43557,f43558,f43559,f43560,f43598,f43561,f43593,f43597,f43599,f43600,f43601,f43596,f43594,f49922,f50044,f50183,f50185,f50144,f50184,f50188,f50491,f50045,f50441,f50492,f50493,f51799])).
fof(f51799,plain,(
  $false | $spl16),
  inference(subsumption_resolution,[],[f51798,f16593])).
fof(f16593,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f2346])).
fof(f2346,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f224])).
fof(f224,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(backward_demodulation,[],[f149,f144])).
fof(f144,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  file('thm.transc.COS_PI','thm.transc.COS_PI')).
fof(f149,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,axiom,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|13')).
fof(f2321,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl16),
  inference(backward_demodulation,[],[f450,f148])).
fof(f148,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f27])).
fof(f27,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.prim_rec.PRE|split|0')).
fof(f16589,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f16588,f2322])).
fof(f2322,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f149])).
fof(f16588,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(subsumption_resolution,[],[f16562,f2368])).
fof(f2368,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f721])).
fof(f721,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f173,f465])).
fof(f465,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f454,f166])).
fof(f166,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|7')).
fof(f454,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.|48|_0')))))),
  inference(unit_resulting_resolution,[],[f166,f192])).
fof(f192,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X10] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X10))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|18')).
fof(f173,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|14')).
fof(f16562,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f2386,f2322])).
fof(f2386,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1023])).
fof(f1023,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f215,f149])).
fof(f215,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) <=> s('type.num.num',X10) = s('type.num.num',X11))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|19')).
fof(f51798,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f51763,f42195])).
fof(f42195,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl16),
  inference(forward_demodulation,[],[f42183,f16594])).
fof(f16594,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f2347])).
fof(f2347,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f225])).
fof(f225,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(forward_demodulation,[],[f151,f149])).
fof(f151,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,axiom,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.transc.COS_PI','thm.transc.SIN_PI2')).
fof(f42183,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | $spl16),
  inference(superposition,[],[f7814,f181])).
fof(f181,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f59])).
fof(f59,axiom,(
  ! [X8] : s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X8),s('type.realax.real',X8))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X8)))),
  file('thm.transc.COS_PI','thm.real.REAL_DOUBLE')).
fof(f7814,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f7813,f2337])).
fof(f2337,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f176])).
fof(f176,plain,(
  ( ! [X0] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X8] : s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X8))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X8)))),
  file('thm.transc.COS_PI','thm.real.REAL_SUB_LZERO')).
fof(f7813,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f7812,f2336])).
fof(f2336,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f175])).
fof(f175,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X0)))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X8] : s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.realax.real',X8)))),
  file('thm.transc.COS_PI','thm.real.REAL_MUL_LZERO')).
fof(f7812,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f7811,f2349])).
fof(f2349,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f228])).
fof(f228,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))),s('type.realax.real',X0)))) )),
  inference(forward_demodulation,[],[f178,f149])).
fof(f178,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X0)))),
  inference(rectify,[],[f56])).
fof(f56,axiom,(
  ! [X8] : s('type.realax.real',X8) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X8)))),
  file('thm.transc.COS_PI','thm.real.REAL_MUL_LID')).
fof(f7811,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7779,f2347])).
fof(f7779,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real',X0))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0)))))))) ) | $spl16),
  inference(superposition,[],[f209,f2323])).
fof(f2323,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f150])).
fof(f150,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,axiom,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  file('thm.transc.COS_PI','thm.transc.COS_PI2')).
fof(f209,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X1))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X0))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X1)))))))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X8,X9] : s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X8),s('type.realax.real',X9))))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X8))),s('type.realax.real','const.transc.cos_1'(s('type.realax.real',X9))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X8))),s('type.realax.real','const.transc.sin_1'(s('type.realax.real',X9)))))))),
  file('thm.transc.COS_PI','thm.transc.COS_ADD')).
fof(f51763,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2436,f2345])).
fof(f2345,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) | s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f210])).
fof(f210,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real',X1))))) | s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0,X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))),
  inference(ennf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1] : (s('type.realax.real',X1) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))),
  inference(flattening,[],[f114])).
fof(f114,plain,(
  ! [X0,X1] : (~s('type.realax.real',X1) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X1),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X0),s('type.realax.real',X1))))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X8,X9] : (~s('type.realax.real',X9) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.realax.real',X8) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X9),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X8),s('type.realax.real',X9))))))),
  file('thm.transc.COS_PI','thm.real.REAL_DIV_LMUL')).
fof(f2436,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1748])).
fof(f1748,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f428,f221])).
fof(f221,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0,X1] : ((s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f58])).
fof(f58,axiom,(
  ! [X11,X10] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X11))) <=> s('type.num.num',X10) = s('type.num.num',X11))),
  file('thm.transc.COS_PI','thm.real.REAL_INJ')).
fof(f428,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f229,f191])).
fof(f191,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f132])).
fof(f229,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f183,f226])).
fof(f226,plain,(
  ~p(s(bool,'F_0'))),
  inference(subsumption_resolution,[],[f153,f145])).
fof(f145,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.transc.COS_PI',aHL_TRUTH)).
fof(f153,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f66])).
fof(f66,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f9])).
fof(f9,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.transc.COS_PI','thm.bool.NOT_CLAUSES|split|1')).
fof(f183,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_eq|split|2')).
fof(f50493,plain,(
  ( ! [X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X7),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X7))))) | s('type.realax.real',X7) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl156),
  inference(cnf_transformation,[],[f50493_D])).
fof(f50493_D,plain,(
  ( ! [X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X7),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X7))))) | s('type.realax.real',X7) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f50492,plain,(
  ( ! [X4,X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.realax.real',X4) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X2),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X4),s('type.realax.real',X2)))))) ) | $spl154),
  inference(cnf_transformation,[],[f50492_D])).
fof(f50492_D,plain,(
  ( ! [X4,X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.realax.real',X4) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X2),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X4),s('type.realax.real',X2)))))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f50441,plain,(
  ( ! [X6,X7,X5] : (s('type.realax.real',X6) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X5),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X6),s('type.realax.real',X5))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X5),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X5),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X7),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X7))))) | s('type.realax.real',X7) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f6216,f6215])).
fof(f6215,plain,(
  ( ! [X14,X15,X13] : (s('type.realax.real',X15) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X14),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X15),s('type.realax.real',X14))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X13),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X14),s('type.realax.real',X13))))) | s('type.realax.real',X13) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f2345,f2345])).
fof(f6216,plain,(
  ( ! [X17,X16] : (s('type.realax.real',X17) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X16))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X17),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X16))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X16),s('type.realax.real',X16)))) ) | $spl16),
  inference(superposition,[],[f2345,f181])).
fof(f50045,plain,(
  ( ! [X31] : (s('type.realax.real',X31) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X31),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl146),
  inference(cnf_transformation,[],[f50045_D])).
fof(f50045_D,plain,(
  ( ! [X31] : (s('type.realax.real',X31) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X31),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f50491,plain,(
  ( ! [X4,X2,X3] : (s('type.realax.real',X3) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X3),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.realax.real',X4) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X2),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X4),s('type.realax.real',X2)))))) ) | $spl16),
  inference(subsumption_resolution,[],[f50440,f2436])).
fof(f50440,plain,(
  ( ! [X4,X2,X3] : (s('type.realax.real',X3) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X3),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X2),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.realax.real',X4) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X2),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X4),s('type.realax.real',X2))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(superposition,[],[f6216,f6215])).
fof(f50188,plain,(
  ( ! [X23,X21,X20] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X20),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X21),s('type.realax.real',X20))))))) | s('type.realax.real',X20) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X23) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X21),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X23),s('type.realax.real',X21)))))) ) | $spl152),
  inference(cnf_transformation,[],[f50188_D])).
fof(f50188_D,plain,(
  ( ! [X23,X21,X20] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X20),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X21),s('type.realax.real',X20))))))) | s('type.realax.real',X20) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X23) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X21),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X23),s('type.realax.real',X21)))))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f50184,plain,(
  ( ! [X14] : (s('type.realax.real',X14) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X14),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl148),
  inference(cnf_transformation,[],[f50184_D])).
fof(f50184_D,plain,(
  ( ! [X14] : (s('type.realax.real',X14) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X14),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f50144,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.realax.real',X22) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X22),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X20),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X21),s('type.realax.real',X20))))))) | s('type.realax.real',X23) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X21),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X23),s('type.realax.real',X21))))) | s('type.realax.real',X20) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f6214,f6215])).
fof(f6214,plain,(
  ( ! [X12,X11] : (s('type.realax.real',X12) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X11),s('type.realax.real',X11))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X12),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real',X11),s('type.realax.real',X11))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X11)))) ) | $spl16),
  inference(superposition,[],[f2345,f181])).
fof(f50185,plain,(
  ( ! [X15,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X13))) | s('type.realax.real',X15) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X13),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X15),s('type.realax.real',X13)))))) ) | $spl150),
  inference(cnf_transformation,[],[f50185_D])).
fof(f50185_D,plain,(
  ( ! [X15,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X13))) | s('type.realax.real',X15) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X13),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X15),s('type.realax.real',X13)))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f50183,plain,(
  ( ! [X14,X15,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real',X13))) | s('type.realax.real',X14) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X14),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.realax.real',X15) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X13),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X15),s('type.realax.real',X13)))))) ) | $spl16),
  inference(forward_demodulation,[],[f50141,f16596])).
fof(f16596,plain,(
  ( ! [X0] : (s('type.realax.real',X0) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f16589,f2349])).
fof(f50141,plain,(
  ( ! [X14,X15,X13] : (s('type.realax.real',X14) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X14),s('type.realax.real','const.realax.real_add_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X13))))) | s('type.realax.real',X15) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X13),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X15),s('type.realax.real',X13)))))) ) | $spl16),
  inference(superposition,[],[f6214,f16695])).
fof(f16695,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X9))) | s('type.realax.real',X10) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X9),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X10),s('type.realax.real',X9)))))) ) | $spl16),
  inference(backward_demodulation,[],[f16589,f6213])).
fof(f6213,plain,(
  ( ! [X10,X9] : (s('type.realax.real',X10) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X9),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X10),s('type.realax.real',X9))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.realax.real',X9)))) ) | $spl16),
  inference(superposition,[],[f2345,f2349])).
fof(f50044,plain,(
  ( ! [X30,X33,X29,X32] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X32),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X29),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X30),s('type.realax.real',X29))))),s('type.realax.real',X32))))) | s('type.realax.real',X29) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X33) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X30),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X33),s('type.realax.real',X30))))) | s('type.realax.real',X32) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl144),
  inference(cnf_transformation,[],[f50044_D])).
fof(f50044_D,plain,(
  ( ! [X30,X33,X29,X32] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X32),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X29),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X30),s('type.realax.real',X29))))),s('type.realax.real',X32))))) | s('type.realax.real',X29) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X33) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X30),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X33),s('type.realax.real',X30))))) | s('type.realax.real',X32) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f49922,plain,(
  ( ! [X30,X33,X31,X29,X32] : (s('type.realax.real',X31) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X31),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X32),s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X29),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X30),s('type.realax.real',X29))))),s('type.realax.real',X32))))) | s('type.realax.real',X32) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X33) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real',X30),s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X33),s('type.realax.real',X30))))) | s('type.realax.real',X29) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f6215,f6215])).
fof(f43594,plain,(
  ( ! [X2,X3] : (s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK0(X2,X3,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X2,X3,bool,bool))))) ) | $spl136),
  inference(cnf_transformation,[],[f43594_D])).
fof(f43594_D,plain,(
  ( ! [X2,X3] : (s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'T_0') = s(bool,sK0(X2,X3,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X2,X3,bool,bool))))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f43596,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl138),
  inference(cnf_transformation,[],[f43596_D])).
fof(f43596_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f43601,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X20) = s(fun(bool,bool),X21) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X20,X21,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X20,X21,bool,bool))) ) | ($spl16 | $spl19 | $spl29 | $spl91 | $spl95)),
  inference(forward_demodulation,[],[f43564,f12870])).
fof(f12870,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19 | $spl29 | $spl91 | $spl95)),
  inference(backward_demodulation,[],[f12869,f8854])).
fof(f8854,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(superposition,[],[f2338,f2367])).
fof(f2367,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f720])).
fof(f720,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f173,f149])).
fof(f2338,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f177])).
fof(f177,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X10] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|27')).
fof(f12869,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19 | $spl29 | $spl91 | $spl95)),
  inference(forward_demodulation,[],[f12771,f12623])).
fof(f12623,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl19 | $spl29 | $spl91)),
  inference(forward_demodulation,[],[f12531,f12175])).
fof(f12175,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl19 | $spl29)),
  inference(unit_resulting_resolution,[],[f10273,f9303])).
fof(f9303,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl29)),
  inference(subsumption_resolution,[],[f9298,f145])).
fof(f9298,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f9055,f330])).
fof(f330,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f182,f182])).
fof(f182,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.transc.COS_PI',aHL_BOOL_CASES)).
fof(f9055,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f9031,f2494])).
fof(f2494,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f2343,f2321])).
fof(f2343,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f195])).
fof(f195,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X10] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X10))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|30')).
fof(f9031,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f9000,f2342])).
fof(f2342,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f192])).
fof(f9000,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl29)),
  inference(subsumption_resolution,[],[f8944,f8001])).
fof(f8001,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f7915,f2494])).
fof(f8944,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f2495,f2367])).
fof(f2495,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f2344,f2321])).
fof(f2344,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f196])).
fof(f196,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f134])).
fof(f10273,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl16 | $spl19)),
  inference(subsumption_resolution,[],[f2712,f2369])).
fof(f2369,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19)),
  inference(backward_demodulation,[],[f2321,f757])).
fof(f757,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl19),
  inference(cnf_transformation,[],[f757_D])).
fof(f757_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f2712,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19)),
  inference(superposition,[],[f2369,f182])).
fof(f12531,plain,(
  s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl29 | $spl91)),
  inference(unit_resulting_resolution,[],[f12278,f8802])).
fof(f8802,plain,(
  ( ! [X49] : (s(bool,X49) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X49)) ) | ($spl16 | $spl29)),
  inference(subsumption_resolution,[],[f8624,f145])).
fof(f8624,plain,(
  ( ! [X49] : (~p(s(bool,'T_0')) | s(bool,X49) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,X49)) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f8001,f330])).
fof(f12771,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl29 | $spl95)),
  inference(unit_resulting_resolution,[],[f12653,f8797])).
fof(f8797,plain,(
  ( ! [X30] : (s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl16 | $spl29)),
  inference(subsumption_resolution,[],[f8616,f145])).
fof(f8616,plain,(
  ( ! [X30] : (~p(s(bool,'T_0')) | s(bool,X30) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f8090,f330])).
fof(f8090,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl16 | $spl29)),
  inference(forward_demodulation,[],[f8069,f2491])).
fof(f2491,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2271])).
fof(f2271,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f202,f465])).
fof(f202,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X10,X11] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X11),s('type.num.num',X10))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|31')).
fof(f8069,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8011,f2494])).
fof(f8011,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl29)),
  inference(forward_demodulation,[],[f8010,f2361])).
fof(f2361,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f2321,f465])).
fof(f8010,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f7915,f215])).
fof(f43564,plain,(
  ( ! [X21,X20] : (s(bool,'T_0') = s(bool,g(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))))) | s(fun(bool,bool),X20) = s(fun(bool,bool),X21) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X20,X21,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X20,X21,bool,bool))) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f7639,f9440])).
fof(f9440,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl29)),
  inference(subsumption_resolution,[],[f9435,f145])).
fof(f9435,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f8982,f330])).
fof(f8982,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0')))) | ($spl16 | $spl29)),
  inference(backward_demodulation,[],[f8854,f8090])).
fof(f7639,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,g(s(X0,sK0(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,'F_0') != s(bool,f(s(X0,sK0(X1,X2,bool,X0))))) )),
  inference(superposition,[],[f223,f182])).
fof(f223,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK0(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK0(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK0(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK0(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f125])).
fof(f125,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f122])).
fof(f122,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.transc.COS_PI',aHL_EXT)).
fof(f43600,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X18,X19,bool,bool))) ) | ($spl16 | $spl19 | $spl29)),
  inference(forward_demodulation,[],[f43563,f12175])).
fof(f43563,plain,(
  ( ! [X19,X18] : (s(bool,'T_0') = s(bool,g(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(fun(bool,bool),X18) = s(fun(bool,bool),X19) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X18,X19,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X18,X19,bool,bool))) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f7639,f9303])).
fof(f43599,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X16,X17,bool,bool))) ) | ($spl16 | $spl19 | $spl20)),
  inference(forward_demodulation,[],[f43562,f760])).
fof(f43562,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,g(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(fun(bool,bool),X16) = s(fun(bool,bool),X17) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X16,X17,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X16,X17,bool,bool))) ) | ($spl16 | $spl19)),
  inference(superposition,[],[f7639,f8694])).
fof(f8694,plain,(
  ( ! [X52] : (s(bool,X52) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X52)) ) | ($spl16 | $spl19)),
  inference(trivial_inequality_removal,[],[f8659])).
fof(f8659,plain,(
  ( ! [X52] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X52) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X52)) ) | ($spl16 | $spl19)),
  inference(superposition,[],[f2369,f330])).
fof(f43597,plain,(
  ( ! [X6,X4,X5] : (s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'T_0') = s(bool,X6) | s(bool,X6) = s(bool,sK0(X4,X5,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X4,X5,bool,bool))))) ) | $spl140),
  inference(cnf_transformation,[],[f43597_D])).
fof(f43597_D,plain,(
  ( ! [X6,X4,X5] : (s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'T_0') = s(bool,X6) | s(bool,X6) = s(bool,sK0(X4,X5,bool,bool)) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X4,X5,bool,bool))))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f43593,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | $spl134),
  inference(cnf_transformation,[],[f43593_D])).
fof(f43593_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f43561,plain,(
  ( ! [X14,X15,X13] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X13) = s(fun(bool,bool),X14) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X13,X14,bool,bool)))) | s(bool,X15) = s(bool,sK0(X13,X14,bool,bool)) | s(bool,'T_0') = s(bool,X15)) )),
  inference(superposition,[],[f7639,f330])).
fof(f43598,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) | $spl142),
  inference(cnf_transformation,[],[f43598_D])).
fof(f43598_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f43560,plain,(
  ( ! [X12,X10,X11] : (s(bool,'T_0') = s(bool,g(s(bool,X12))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X10,X11,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f7639,f330])).
fof(f43559,plain,(
  ( ! [X8,X7,X9] : (s(bool,'T_0') = s(bool,g(s(bool,X9))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X7,X8,bool,bool)))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,sK0(X7,X8,bool,bool))) )),
  inference(superposition,[],[f7639,f330])).
fof(f43558,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X4) = s(fun(bool,bool),X5) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X4,X5,bool,bool)))) | s(bool,X6) = s(bool,sK0(X4,X5,bool,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f7639,f330])).
fof(f43557,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(fun(bool,bool),X2) = s(fun(bool,bool),X3) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X2,X3,bool,bool)))) | s(bool,'T_0') = s(bool,sK0(X2,X3,bool,bool))) )),
  inference(superposition,[],[f7639,f182])).
fof(f43590,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) | $spl131),
  inference(cnf_transformation,[],[f43590_D])).
fof(f43590_D,plain,(
  s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0'))) <=> ~$spl131),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl131])])).
fof(f43591,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X0,X1,bool,bool))))) ) | $spl132),
  inference(cnf_transformation,[],[f43591_D])).
fof(f43591_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X0,X1,bool,bool))))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f43588,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X0,X1,bool,bool)))) | s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0')))) )),
  inference(duplicate_literal_removal,[],[f43556])).
fof(f43556,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,g(s(bool,'T_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'F_0') != s(bool,f(s(bool,sK0(X0,X1,bool,bool)))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,f(s(bool,'F_0'))) != s(bool,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f7639,f7638])).
fof(f7638,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,sK0(X0,X1,X2,bool)) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0')))) )),
  inference(superposition,[],[f223,f182])).
fof(f30291,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl126),
  inference(cnf_transformation,[],[f30291_D])).
fof(f30291_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl126),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl126])])).
fof(f30293,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl128),
  inference(cnf_transformation,[],[f30293_D])).
fof(f30293_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f30207,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f2482,f16602])).
fof(f16602,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f2371])).
fof(f2371,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f780])).
fof(f780,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f174,f149])).
fof(f174,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|16')).
fof(f2482,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2127])).
fof(f2127,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f180,f182])).
fof(f180,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X10] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|24')).
fof(f30287,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl122),
  inference(cnf_transformation,[],[f30287_D])).
fof(f30287_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl122),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl122])])).
fof(f30289,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl124),
  inference(cnf_transformation,[],[f30289_D])).
fof(f30289_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl124),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl124])])).
fof(f30206,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f2482,f16600])).
fof(f16600,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f2367])).
fof(f23994,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl119),
  inference(cnf_transformation,[],[f23994_D])).
fof(f23994_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl119),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl119])])).
fof(f23996,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl120),
  inference(cnf_transformation,[],[f23996_D])).
fof(f23996_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f23992,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23991,f2338])).
fof(f23991,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23990,f174])).
fof(f23990,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f23953,f16784])).
fof(f16784,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f9080])).
fof(f9080,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f174,f2371])).
fof(f23953,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f3706,f16602])).
fof(f3706,plain,(
  ( ! [X8] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f3705,f174])).
fof(f3705,plain,(
  ( ! [X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3662,f2491])).
fof(f3662,plain,(
  ( ! [X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl16),
  inference(superposition,[],[f2495,f174])).
fof(f23987,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl115),
  inference(cnf_transformation,[],[f23987_D])).
fof(f23987_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f23989,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl116),
  inference(cnf_transformation,[],[f23989_D])).
fof(f23989_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f23985,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23984,f2338])).
fof(f23984,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23983,f174])).
fof(f23983,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f23952,f16761])).
fof(f16761,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f8837])).
fof(f8837,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f174,f2367])).
fof(f23952,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f3706,f16600])).
fof(f23885,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl111),
  inference(cnf_transformation,[],[f23885_D])).
fof(f23885_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f23887,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl112),
  inference(cnf_transformation,[],[f23887_D])).
fof(f23887_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl112),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl112])])).
fof(f23883,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23882,f2338])).
fof(f23882,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23881,f173])).
fof(f23881,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f23849,f16783])).
fof(f16783,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f9079])).
fof(f9079,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f173,f2371])).
fof(f23849,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f3702,f16602])).
fof(f3702,plain,(
  ( ! [X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f3701,f173])).
fof(f3701,plain,(
  ( ! [X7] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3660,f2491])).
fof(f3660,plain,(
  ( ! [X7] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(superposition,[],[f2495,f173])).
fof(f23878,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl107),
  inference(cnf_transformation,[],[f23878_D])).
fof(f23878_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl107),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl107])])).
fof(f23880,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl108),
  inference(cnf_transformation,[],[f23880_D])).
fof(f23880_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f23876,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23875,f2338])).
fof(f23875,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f23874,f173])).
fof(f23874,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(forward_demodulation,[],[f23848,f16760])).
fof(f16760,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(backward_demodulation,[],[f16589,f8836])).
fof(f8836,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f173,f2367])).
fof(f23848,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl16),
  inference(superposition,[],[f3702,f16600])).
fof(f19353,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl100),
  inference(cnf_transformation,[],[f19353_D])).
fof(f19353_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f19355,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl102),
  inference(cnf_transformation,[],[f19355_D])).
fof(f19355_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f19347,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X3) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X3)) ) | $spl16),
  inference(superposition,[],[f330,f16623])).
fof(f16623,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f16589,f2481])).
fof(f2481,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(backward_demodulation,[],[f2321,f2124])).
fof(f2124,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f180,f149])).
fof(f19350,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl96),
  inference(cnf_transformation,[],[f19350_D])).
fof(f19350_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f19356,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X1)) ) | $spl104),
  inference(cnf_transformation,[],[f19356_D])).
fof(f19356_D,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X1)) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f19346,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl16),
  inference(superposition,[],[f330,f16623])).
fof(f19345,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f330,f16623])).
fof(f19344,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f330,f16623])).
fof(f19352,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl98),
  inference(cnf_transformation,[],[f19352_D])).
fof(f19352_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f19343,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(superposition,[],[f182,f16623])).
fof(f19342,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X3) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X3)) ) | $spl16),
  inference(superposition,[],[f16623,f330])).
fof(f19341,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl16),
  inference(superposition,[],[f16623,f330])).
fof(f19340,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f16623,f330])).
fof(f19339,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,X0) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f16623,f330])).
fof(f19338,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl16),
  inference(superposition,[],[f16623,f182])).
fof(f12651,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl92),
  inference(cnf_transformation,[],[f12651_D])).
fof(f12651_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f12653,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl95),
  inference(cnf_transformation,[],[f12653_D])).
fof(f12653_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl95),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl95])])).
fof(f12598,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl16 | $spl29)),
  inference(equality_factoring,[],[f8802])).
fof(f12276,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl88),
  inference(cnf_transformation,[],[f12276_D])).
fof(f12276_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f12278,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl91),
  inference(cnf_transformation,[],[f12278_D])).
fof(f12278_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl91),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl91])])).
fof(f12233,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl16 | $spl29)),
  inference(equality_factoring,[],[f9303])).
fof(f10269,plain,(
  $false | ($spl0 | $spl16 | $spl19)),
  inference(subsumption_resolution,[],[f10268,f2369])).
fof(f10268,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl19)),
  inference(subsumption_resolution,[],[f2712,f344])).
fof(f10267,plain,(
  $false | ($spl0 | $spl16 | $spl19 | $spl20)),
  inference(subsumption_resolution,[],[f2711,f344])).
fof(f2711,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl16 | $spl19 | $spl20)),
  inference(superposition,[],[f2369,f760])).
fof(f10266,plain,(
  $false | ($spl0 | $spl16 | $spl19)),
  inference(subsumption_resolution,[],[f10265,f2369])).
fof(f10265,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl19)),
  inference(forward_demodulation,[],[f10264,f2321])).
fof(f10264,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl19)),
  inference(subsumption_resolution,[],[f818,f344])).
fof(f818,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl19),
  inference(superposition,[],[f757,f182])).
fof(f10263,plain,(
  $false | ($spl0 | $spl19 | $spl20)),
  inference(subsumption_resolution,[],[f817,f344])).
fof(f817,plain,(
  s(bool,'T_0') != s(bool,'F_0') | ($spl19 | $spl20)),
  inference(superposition,[],[f757,f764])).
fof(f764,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl20),
  inference(backward_demodulation,[],[f760,f499])).
fof(f499,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f169,f465])).
fof(f169,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f44])).
fof(f44,axiom,(
  ! [X10] : s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X10))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|32')).
fof(f10261,plain,(
  $false | ($spl0 | $spl16 | $spl29)),
  inference(subsumption_resolution,[],[f2335,f10259])).
fof(f10259,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | ($spl0 | $spl16 | $spl29)),
  inference(subsumption_resolution,[],[f9712,f9720])).
fof(f9720,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16 | $spl29)),
  inference(backward_demodulation,[],[f344,f9055])).
fof(f9712,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f344,f2495])).
fof(f2335,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f172])).
fof(f172,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10)))))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|9')).
fof(f10260,plain,(
  $false | ($spl0 | $spl16 | $spl29)),
  inference(subsumption_resolution,[],[f2334,f10259])).
fof(f2334,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f171])).
fof(f171,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|10')).
fof(f10258,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10257,f145])).
fof(f10257,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9720,f9581])).
fof(f9581,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl64 | $spl76)),
  inference(backward_demodulation,[],[f9496,f9563])).
fof(f10256,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10255,f145])).
fof(f10255,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9719,f9581])).
fof(f9719,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16 | $spl29)),
  inference(backward_demodulation,[],[f344,f8001])).
fof(f10254,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10253,f145])).
fof(f10253,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9718,f9581])).
fof(f9718,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f344,f2362])).
fof(f2362,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f492])).
fof(f492,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(subsumption_resolution,[],[f481,f429])).
fof(f429,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f230,f191])).
fof(f230,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f185,f226])).
fof(f185,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0] : ((s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) <=> p(s(bool,'F_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_eq|split|1')).
fof(f481,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f195,f149])).
fof(f10252,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10251,f145])).
fof(f10251,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9717,f9581])).
fof(f9717,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f344,f3576])).
fof(f3576,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f229,f2494])).
fof(f10250,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10249,f145])).
fof(f10249,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9716,f9581])).
fof(f9716,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f344,f3571])).
fof(f3571,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f230,f2494])).
fof(f10244,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10243,f145])).
fof(f10243,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9704,f9581])).
fof(f9704,plain,(
  ~p(s(bool,'F_0')) | ($spl0 | $spl16 | $spl29)),
  inference(backward_demodulation,[],[f344,f8982])).
fof(f10240,plain,(
  $false | ($spl0 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10239,f145])).
fof(f10239,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9699,f9581])).
fof(f9699,plain,(
  ~p(s(bool,'F_0')) | $spl0),
  inference(backward_demodulation,[],[f344,f2298])).
fof(f2298,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(backward_demodulation,[],[f2271,f582])).
fof(f582,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f428,f195])).
fof(f10230,plain,(
  $false | ($spl0 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10229,f145])).
fof(f10229,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9687,f9581])).
fof(f9687,plain,(
  ~p(s(bool,'F_0')) | $spl0),
  inference(backward_demodulation,[],[f344,f2296])).
fof(f2296,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0'))))) )),
  inference(backward_demodulation,[],[f2271,f594])).
fof(f594,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))))) )),
  inference(unit_resulting_resolution,[],[f429,f195])).
fof(f10226,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10225,f9969])).
fof(f9969,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) = s('type.num.num',X1)) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9740,f9734])).
fof(f9734,plain,(
  ( ! [X145] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9733,f145])).
fof(f9733,plain,(
  ( ! [X145] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9674,f9581])).
fof(f9674,plain,(
  ( ! [X145] : (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))) ) | ($spl0 | $spl16)),
  inference(backward_demodulation,[],[f344,f6851])).
fof(f6851,plain,(
  ( ! [X145] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X145),s('type.num.num','const.arithmetic.ZERO_0'))))) ) | $spl16),
  inference(forward_demodulation,[],[f6850,f6647])).
fof(f6647,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f6516,f215])).
fof(f6516,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6515,f2330])).
fof(f2330,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f164])).
fof(f164,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.transc.COS_PI','thm.arithmetic.ADD|split|0')).
fof(f6515,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6389,f2330])).
fof(f6389,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f208,f2361])).
fof(f208,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X10,X11] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X11))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|2')).
fof(f6850,plain,(
  ( ! [X145] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X145),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X145)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6769,f2491])).
fof(f6769,plain,(
  ( ! [X145] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X145)))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X145)))))) ) | $spl16),
  inference(superposition,[],[f2494,f6516])).
fof(f9740,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f215])).
fof(f10225,plain,(
  s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9931,f9969])).
fof(f9931,plain,(
  ( ! [X19] : (s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7713])).
fof(f7713,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7712,f174])).
fof(f7712,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7666,f2366])).
fof(f2366,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f661])).
fof(f661,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f172,f149])).
fof(f7666,plain,(
  ( ! [X19] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f7038,f174])).
fof(f7038,plain,(
  ( ! [X117] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X117))) | s('type.num.num',X117) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f4297,f6647])).
fof(f4297,plain,(
  ( ! [X18] : (s('type.num.num',X18) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X18) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241,f4294,f4242,f4295,f4243,f4296,f4244,f4246])).
fof(f4246,plain,(
  ( ! [X18] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X18) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X18) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f2474,f2366])).
fof(f4244,plain,(
  ( ! [X14,X15] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))))) | s('type.num.num',X15) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X15) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f2474,f2332])).
fof(f4296,plain,(
  ( ! [X12,X13] : (s('type.num.num',X13) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241,f4294,f4242,f4295,f4243])).
fof(f4243,plain,(
  ( ! [X12,X13] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X13) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X13) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X12)))) ) | $spl16),
  inference(superposition,[],[f2474,f2331])).
fof(f4295,plain,(
  ( ! [X10,X11] : (s('type.num.num',X11) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241,f4294,f4242])).
fof(f4242,plain,(
  ( ! [X10,X11] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X11) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X11) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(superposition,[],[f2474,f2327])).
fof(f4294,plain,(
  ( ! [X8,X9] : (s('type.num.num',X9) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X9) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241])).
fof(f4241,plain,(
  ( ! [X8,X9] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X9) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X9) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f2474,f2326])).
fof(f4240,plain,(
  ( ! [X6,X7] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6))))) | s('type.num.num',X7) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X7) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X6)))) ) | $spl16),
  inference(superposition,[],[f2474,f2330])).
fof(f4239,plain,(
  ( ! [X4,X5] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X4))))) | s('type.num.num',X5) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X5) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f2474,f2329])).
fof(f4208,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f1739,f222])).
fof(f4195,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f1483,f221])).
fof(f4196,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f1483,f219])).
fof(f4197,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f1483,f217])).
fof(f4198,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(unit_resulting_resolution,[],[f1483,f215])).
fof(f4147,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2501,f221])).
fof(f4148,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2501,f219])).
fof(f4149,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2501,f217])).
fof(f4168,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f4150,f2361])).
fof(f4150,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2501,f215])).
fof(f4114,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2500,f221])).
fof(f4115,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2500,f219])).
fof(f4116,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2500,f217])).
fof(f4136,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f4117,f2361])).
fof(f4117,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(unit_resulting_resolution,[],[f2500,f215])).
fof(f3931,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f215,f2368])).
fof(f3605,plain,(
  ( ! [X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3604,f174])).
fof(f3604,plain,(
  ( ! [X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3591,f2491])).
fof(f3591,plain,(
  ( ! [X8] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X8)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))) ) | $spl16),
  inference(superposition,[],[f2494,f174])).
fof(f3603,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3602,f173])).
fof(f3602,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(forward_demodulation,[],[f3589,f2491])).
fof(f3589,plain,(
  ( ! [X7] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))) ) | $spl16),
  inference(superposition,[],[f2494,f173])).
fof(f2699,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2666,f2361])).
fof(f2666,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f215,f2361])).
fof(f2492,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2290])).
fof(f2490,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2270])).
fof(f2566,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f2489,f2322])).
fof(f2489,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f2252])).
fof(f2488,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f2251])).
fof(f2487,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f2250])).
fof(f2486,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f2249])).
fof(f2485,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2215])).
fof(f2484,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2195])).
fof(f2483,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2151])).
fof(f2480,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) | s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2090])).
fof(f2479,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2065])).
fof(f2477,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2028])).
fof(f2476,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f2001])).
fof(f2474,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X0) != s('type.num.num',X1)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1941])).
fof(f2473,plain,(
  ( ! [X5] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1932])).
fof(f2472,plain,(
  ( ! [X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1928])).
fof(f2471,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1927])).
fof(f2470,plain,(
  ( ! [X18] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18))))) | s('type.num.num',X18) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1899])).
fof(f2469,plain,(
  ( ! [X17,X16] : (s('type.num.num',X16) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real',X17) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))),s('type.realax.real',X17)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1898])).
fof(f2468,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X14) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))),s('type.realax.real',X15)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1897])).
fof(f2467,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X12) | s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X13))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))),s('type.realax.real',X13)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1896])).
fof(f2564,plain,(
  ( ! [X21] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21))) | s('type.num.num',X21) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2465,f2321])).
fof(f2465,plain,(
  ( ! [X21] : (s('type.num.num',X21) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1866])).
fof(f2563,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(forward_demodulation,[],[f2464,f2321])).
fof(f2464,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1865])).
fof(f2562,plain,(
  ( ! [X17,X18] : (s('type.num.num',X18) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18)))) ) | $spl16),
  inference(forward_demodulation,[],[f2463,f2321])).
fof(f2463,plain,(
  ( ! [X17,X18] : (s('type.num.num',X18) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1864])).
fof(f2561,plain,(
  ( ! [X15,X16] : (s('type.num.num',X16) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2462,f2321])).
fof(f2462,plain,(
  ( ! [X15,X16] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X16) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1863])).
fof(f2461,plain,(
  ( ! [X14,X13] : (s('type.num.num',X14) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X13))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1862])).
fof(f2560,plain,(
  ( ! [X12,X11] : (s('type.num.num',X12) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12)))) ) | $spl16),
  inference(forward_demodulation,[],[f2460,f2321])).
fof(f2460,plain,(
  ( ! [X12,X11] : (s('type.num.num',X12) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1861])).
fof(f2559,plain,(
  ( ! [X10,X9] : (s('type.num.num',X10) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10)))) ) | $spl16),
  inference(forward_demodulation,[],[f2459,f2321])).
fof(f2459,plain,(
  ( ! [X10,X9] : (s('type.num.num',X10) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1860])).
fof(f2558,plain,(
  ( ! [X8,X7] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8)))) ) | $spl16),
  inference(forward_demodulation,[],[f2458,f2321])).
fof(f2458,plain,(
  ( ! [X8,X7] : (s('type.num.num',X8) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1859])).
fof(f2457,plain,(
  ( ! [X6,X5] : (s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1858])).
fof(f2456,plain,(
  ( ! [X4,X3] : (s('type.num.num',X4) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X3))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X4)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1857])).
fof(f2455,plain,(
  ( ! [X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1856])).
fof(f2454,plain,(
  ( ! [X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1855])).
fof(f2453,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1854])).
fof(f2556,plain,(
  ( ! [X21] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2450,f2321])).
fof(f2450,plain,(
  ( ! [X21] : (s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1768])).
fof(f2555,plain,(
  ( ! [X19,X20] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2449,f2321])).
fof(f2449,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1767])).
fof(f2554,plain,(
  ( ! [X17,X18] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2448,f2321])).
fof(f2448,plain,(
  ( ! [X17,X18] : (s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1766])).
fof(f2553,plain,(
  ( ! [X15,X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2447,f2321])).
fof(f2447,plain,(
  ( ! [X15,X16] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1765])).
fof(f2446,plain,(
  ( ! [X14,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X13))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1764])).
fof(f2552,plain,(
  ( ! [X12,X11] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) ) | $spl16),
  inference(forward_demodulation,[],[f2445,f2321])).
fof(f2445,plain,(
  ( ! [X12,X11] : (s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1763])).
fof(f2551,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9)))) ) | $spl16),
  inference(forward_demodulation,[],[f2444,f2321])).
fof(f2444,plain,(
  ( ! [X10,X9] : (s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1762])).
fof(f2550,plain,(
  ( ! [X8,X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2443,f2321])).
fof(f2443,plain,(
  ( ! [X8,X7] : (s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1761])).
fof(f2442,plain,(
  ( ! [X6,X5] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1760])).
fof(f2441,plain,(
  ( ! [X4,X3] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X3))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1759])).
fof(f2440,plain,(
  ( ! [X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1758])).
fof(f2439,plain,(
  ( ! [X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1757])).
fof(f2438,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1756])).
fof(f2435,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1746])).
fof(f2537,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2427,f2321])).
fof(f2427,plain,(
  ( ! [X21] : (s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1508])).
fof(f2536,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2426,f2321])).
fof(f2426,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1507])).
fof(f2535,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2425,f2321])).
fof(f2425,plain,(
  ( ! [X17,X18] : (s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1506])).
fof(f2534,plain,(
  ( ! [X15,X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2424,f2321])).
fof(f2424,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1505])).
fof(f2423,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1504])).
fof(f2533,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) ) | $spl16),
  inference(forward_demodulation,[],[f2422,f2321])).
fof(f2422,plain,(
  ( ! [X12,X11] : (s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1503])).
fof(f2532,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9)))) ) | $spl16),
  inference(forward_demodulation,[],[f2421,f2321])).
fof(f2421,plain,(
  ( ! [X10,X9] : (s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1502])).
fof(f2531,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2420,f2321])).
fof(f2420,plain,(
  ( ! [X8,X7] : (s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1501])).
fof(f2419,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1500])).
fof(f2418,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1499])).
fof(f2416,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1491])).
fof(f2415,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1489])).
fof(f2413,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1454])).
fof(f2412,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1322])).
fof(f2528,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2409,f2321])).
fof(f2409,plain,(
  ( ! [X21] : (s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1264])).
fof(f2527,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2408,f2321])).
fof(f2408,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1263])).
fof(f2526,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2407,f2321])).
fof(f2407,plain,(
  ( ! [X17,X18] : (s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17))))))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1262])).
fof(f2525,plain,(
  ( ! [X15,X16] : (s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2406,f2321])).
fof(f2406,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1261])).
fof(f2405,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1260])).
fof(f2524,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X11)))) ) | $spl16),
  inference(forward_demodulation,[],[f2404,f2321])).
fof(f2404,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1259])).
fof(f2523,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9)))) ) | $spl16),
  inference(forward_demodulation,[],[f2403,f2321])).
fof(f2403,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1258])).
fof(f2522,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2402,f2321])).
fof(f2402,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1257])).
fof(f2401,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X5)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1256])).
fof(f2400,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1255])).
fof(f2399,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1254])).
fof(f2398,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1253])).
fof(f2397,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1252])).
fof(f2395,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1247])).
fof(f2394,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1245])).
fof(f2391,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1071])).
fof(f2390,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f1069])).
fof(f2389,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(backward_demodulation,[],[f2321,f1068])).
fof(f2519,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2518,f2321])).
fof(f2518,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2385,f2361])).
fof(f2385,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1020])).
fof(f2517,plain,(
  ( ! [X20] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2516,f2361])).
fof(f2516,plain,(
  ( ! [X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f2384,f2321])).
fof(f2384,plain,(
  ( ! [X20] : (s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1018])).
fof(f2515,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2514,f2361])).
fof(f2514,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2383,f2321])).
fof(f2383,plain,(
  ( ! [X19,X18] : (s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1017])).
fof(f2513,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2512,f2361])).
fof(f2512,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2382,f2321])).
fof(f2382,plain,(
  ( ! [X17,X16] : (s('type.num.num',X17) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1016])).
fof(f2511,plain,(
  ( ! [X14,X15] : (s('type.num.num',X15) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))) ) | $spl16),
  inference(forward_demodulation,[],[f2510,f2321])).
fof(f2510,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2381,f2368])).
fof(f2381,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1015])).
fof(f2380,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1014])).
fof(f2509,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(forward_demodulation,[],[f2508,f2321])).
fof(f2508,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(forward_demodulation,[],[f2379,f2361])).
fof(f2379,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1013])).
fof(f2507,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X8)))) ) | $spl16),
  inference(forward_demodulation,[],[f2506,f2321])).
fof(f2506,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) ) | $spl16),
  inference(forward_demodulation,[],[f2378,f2361])).
fof(f2378,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1012])).
fof(f2505,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2504,f2321])).
fof(f2504,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2377,f2361])).
fof(f2377,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1011])).
fof(f2376,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1010])).
fof(f2375,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1009])).
fof(f2501,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2373,f2361])).
fof(f2373,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1003])).
fof(f2500,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f2372,f2361])).
fof(f2372,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f1001])).
fof(f2499,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl16),
  inference(forward_demodulation,[],[f2364,f2321])).
fof(f2364,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f580])).
fof(f2363,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f577])).
fof(f2498,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2357,f2321])).
fof(f2357,plain,(
  ( ! [X5] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f436])).
fof(f2497,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) ) | $spl16),
  inference(forward_demodulation,[],[f2356,f2321])).
fof(f2356,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f432])).
fof(f2496,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f2355,f2321])).
fof(f2355,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f431])).
fof(f2354,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f429])).
fof(f2353,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f428])).
fof(f2348,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f227])).
fof(f2341,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f191])).
fof(f2340,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f180])).
fof(f2339,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f179])).
fof(f2333,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f167])).
fof(f2332,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f166])).
fof(f2331,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f165])).
fof(f2329,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f163])).
fof(f2327,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f161])).
fof(f2326,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f160])).
fof(f2324,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(backward_demodulation,[],[f2321,f158])).
fof(f2293,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num',X2)))) )),
  inference(superposition,[],[f202,f182])).
fof(f2304,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f2292,f2290])).
fof(f2292,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f202,f721])).
fof(f2303,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f2291,f167])).
fof(f2291,plain,(
  ( ! [X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f202,f465])).
fof(f2290,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f202,f149])).
fof(f2302,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2272,f2270])).
fof(f2272,plain,(
  ( ! [X2] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f202,f721])).
fof(f2270,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f202,f149])).
fof(f2249,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1287,f221])).
fof(f2250,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1287,f219])).
fof(f2251,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1287,f217])).
fof(f2252,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1287,f215])).
fof(f2218,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X2)))) )),
  inference(superposition,[],[f201,f182])).
fof(f2223,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2)))) )),
  inference(forward_demodulation,[],[f2217,f2215])).
fof(f2217,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f201,f721])).
fof(f2215,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f201,f149])).
fof(f2222,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2197,f2195])).
fof(f2197,plain,(
  ( ! [X2] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f201,f721])).
fof(f2221,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f2196,f158])).
fof(f2196,plain,(
  ( ! [X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f201,f465])).
fof(f2195,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f201,f149])).
fof(f2151,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f1932,f222])).
fof(f2090,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f1928,f222])).
fof(f2065,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(superposition,[],[f179,f182])).
fof(f2069,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f2064,f2062])).
fof(f2064,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f179,f721])).
fof(f2068,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2063,f162])).
fof(f2063,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f179,f465])).
fof(f2062,plain,(
  s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f179,f149])).
fof(f2028,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f1927,f222])).
fof(f2001,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f177,f182])).
fof(f2005,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f2000,f1998])).
fof(f2000,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f177,f721])).
fof(f2004,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f1999,f159])).
fof(f1999,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f177,f465])).
fof(f1998,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))),s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f177,f149])).
fof(f1979,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f1737,f222])).
fof(f1941,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f1899,f222])).
fof(f1932,plain,(
  ( ! [X5] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1899,f166])).
fof(f1928,plain,(
  ( ! [X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) )),
  inference(superposition,[],[f1899,f164])).
fof(f1927,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f1899,f163])).
fof(f1899,plain,(
  ( ! [X18] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18))))) | s('type.num.num',X18) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f224,f222])).
fof(f1898,plain,(
  ( ! [X17,X16] : (s('type.realax.real',X17) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))),s('type.realax.real',X17))) | s('type.num.num',X16) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f228,f222])).
fof(f1897,plain,(
  ( ! [X14,X15] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))) = s('type.realax.real','const.realax.real_mul_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))),s('type.realax.real',X15))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X14)) )),
  inference(superposition,[],[f175,f222])).
fof(f1896,plain,(
  ( ! [X12,X13] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X13))) = s('type.realax.real','const.real.real_sub_2'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))),s('type.realax.real',X13))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X12)) )),
  inference(superposition,[],[f176,f222])).
fof(f1894,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))) )),
  inference(superposition,[],[f1735,f222])).
fof(f1892,plain,(
  ( ! [X2,X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2))) | s('type.num.num',X0) = s('type.num.num',X2) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(superposition,[],[f221,f222])).
fof(f1871,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num',X0) != s('type.num.num',X2) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2)))) )),
  inference(superposition,[],[f222,f222])).
fof(f1870,plain,(
  ( ! [X27] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X27))) | s('type.num.num',X27) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f222,f822])).
fof(f1868,plain,(
  ( ! [X24] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X24))) | s('type.num.num',X24) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f222,f148])).
fof(f1866,plain,(
  ( ! [X21] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21))) | s('type.num.num',X21) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f222,f661])).
fof(f1865,plain,(
  ( ! [X19,X20] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) )),
  inference(superposition,[],[f222,f172])).
fof(f1864,plain,(
  ( ! [X17,X18] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18))) | s('type.num.num',X18) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) )),
  inference(superposition,[],[f222,f171])).
fof(f1863,plain,(
  ( ! [X15,X16] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X16) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f222,f227])).
fof(f1862,plain,(
  ( ! [X14,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X13))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))) | s('type.num.num',X14) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f222,f166])).
fof(f1861,plain,(
  ( ! [X12,X11] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))) | s('type.num.num',X12) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))) )),
  inference(superposition,[],[f222,f165])).
fof(f1860,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) )),
  inference(superposition,[],[f222,f161])).
fof(f1859,plain,(
  ( ! [X8,X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8))) | s('type.num.num',X8) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f222,f160])).
fof(f1858,plain,(
  ( ! [X6,X5] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f222,f164])).
fof(f1857,plain,(
  ( ! [X4,X3] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X3))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f222,f163])).
fof(f1856,plain,(
  ( ! [X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X2) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f222,f721])).
fof(f1855,plain,(
  ( ! [X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f222,f465])).
fof(f1854,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f222,f149])).
fof(f1772,plain,(
  ( ! [X27] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f221,f822])).
fof(f1770,plain,(
  ( ! [X24] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X24))) | s('type.num.num',X24) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f221,f148])).
fof(f1768,plain,(
  ( ! [X21] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f221,f661])).
fof(f1767,plain,(
  ( ! [X19,X20] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) )),
  inference(superposition,[],[f221,f172])).
fof(f1766,plain,(
  ( ! [X17,X18] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) )),
  inference(superposition,[],[f221,f171])).
fof(f1765,plain,(
  ( ! [X15,X16] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X16))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f221,f227])).
fof(f1764,plain,(
  ( ! [X14,X13] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X13))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f221,f166])).
fof(f1763,plain,(
  ( ! [X12,X11] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))) )),
  inference(superposition,[],[f221,f165])).
fof(f1762,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) )),
  inference(superposition,[],[f221,f161])).
fof(f1761,plain,(
  ( ! [X8,X7] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f221,f160])).
fof(f1760,plain,(
  ( ! [X6,X5] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X5))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f221,f164])).
fof(f1759,plain,(
  ( ! [X4,X3] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X3))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f221,f163])).
fof(f1758,plain,(
  ( ! [X2] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X2))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f221,f721])).
fof(f1757,plain,(
  ( ! [X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f221,f465])).
fof(f1756,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f221,f149])).
fof(f1735,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f230,f221])).
fof(f1737,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f229,f221])).
fof(f1739,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f1213,f221])).
fof(f1740,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f231,f221])).
fof(f1742,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1239,f221])).
fof(f1743,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1241,f221])).
fof(f1745,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1044,f221])).
fof(f1746,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f429,f221])).
fof(f1791,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f1752,f227])).
fof(f1752,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f577,f221])).
fof(f1754,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1479,f221])).
fof(f1755,plain,(
  ( ! [X0] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1481,f221])).
fof(f1711,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1044,f219])).
fof(f1712,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1044,f217])).
fof(f1713,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(unit_resulting_resolution,[],[f1044,f215])).
fof(f1686,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1481,f219])).
fof(f1687,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1481,f217])).
fof(f1688,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1481,f215])).
fof(f1554,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1479,f219])).
fof(f1555,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1479,f217])).
fof(f1556,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1479,f215])).
fof(f1512,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f219,f822])).
fof(f1510,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X24))) | s('type.num.num',X24) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f219,f148])).
fof(f1508,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f219,f661])).
fof(f1507,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) )),
  inference(superposition,[],[f219,f172])).
fof(f1506,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) )),
  inference(superposition,[],[f219,f171])).
fof(f1505,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f219,f227])).
fof(f1504,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X13))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f219,f166])).
fof(f1503,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))) )),
  inference(superposition,[],[f219,f165])).
fof(f1502,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) )),
  inference(superposition,[],[f219,f161])).
fof(f1501,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f219,f160])).
fof(f1500,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X5))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f219,f164])).
fof(f1499,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f219,f163])).
fof(f1479,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f230,f219])).
fof(f1481,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f229,f219])).
fof(f1483,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f1213,f219])).
fof(f1484,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f231,f219])).
fof(f1486,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1239,f219])).
fof(f1487,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1241,f219])).
fof(f1489,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f429,f219])).
fof(f1491,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f428,f219])).
fof(f1531,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f1495,f227])).
fof(f1495,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f577,f219])).
fof(f1435,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1241,f217])).
fof(f1454,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f1436,f149])).
fof(f1436,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1241,f215])).
fof(f1303,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1239,f217])).
fof(f1322,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(forward_demodulation,[],[f1304,f149])).
fof(f1304,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f1239,f215])).
fof(f1268,plain,(
  ( ! [X27] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X27))) | s('type.num.num',X27) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f217,f822])).
fof(f1266,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X24))) | s('type.num.num',X24) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f217,f148])).
fof(f1264,plain,(
  ( ! [X21] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21))) | s('type.num.num',X21) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f217,f661])).
fof(f1263,plain,(
  ( ! [X19,X20] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X19)))))))) )),
  inference(superposition,[],[f217,f172])).
fof(f1262,plain,(
  ( ! [X17,X18] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18))) | s('type.num.num',X18) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X17)))))))) )),
  inference(superposition,[],[f217,f171])).
fof(f1261,plain,(
  ( ! [X15,X16] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X16))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X16) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X15),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f217,f227])).
fof(f1260,plain,(
  ( ! [X14,X13] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X14))) | s('type.num.num',X14) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X13),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f217,f166])).
fof(f1259,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X12))) | s('type.num.num',X12) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X11)))) )),
  inference(superposition,[],[f217,f165])).
fof(f1258,plain,(
  ( ! [X10,X9] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) | s('type.num.num',X10) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) )),
  inference(superposition,[],[f217,f161])).
fof(f1257,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) | s('type.num.num',X8) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f217,f160])).
fof(f1256,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) | s('type.num.num',X6) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X5)))) )),
  inference(superposition,[],[f217,f164])).
fof(f1255,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))) | s('type.num.num',X4) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f217,f163])).
fof(f1254,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X2) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f217,f721])).
fof(f1253,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X1) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f217,f465])).
fof(f1252,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f217,f149])).
fof(f1239,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f230,f217])).
fof(f1241,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))) )),
  inference(unit_resulting_resolution,[],[f229,f217])).
fof(f1243,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(unit_resulting_resolution,[],[f1213,f217])).
fof(f1244,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f231,f217])).
fof(f1245,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f429,f217])).
fof(f1247,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f428,f217])).
fof(f1287,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f1251,f227])).
fof(f1251,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f577,f217])).
fof(f1213,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f1107,f192])).
fof(f1107,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(subsumption_resolution,[],[f1092,f492])).
fof(f1092,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f196,f721])).
fof(f1071,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num',X0) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f215,f721])).
fof(f1069,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f174,f721])).
fof(f1068,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f173,f721])).
fof(f1106,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1067,f398])).
fof(f1067,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f169,f721])).
fof(f1105,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f1066,f385])).
fof(f1066,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f168,f721])).
fof(f1058,plain,(
  ( ! [X26] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f1022,f465])).
fof(f1022,plain,(
  ( ! [X26] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X26))) | s('type.num.num',X26) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(superposition,[],[f215,f822])).
fof(f1020,plain,(
  ( ! [X23] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X23))) | s('type.num.num',X23) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f215,f148])).
fof(f1018,plain,(
  ( ! [X20] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X20))) | s('type.num.num',X20) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f215,f661])).
fof(f1017,plain,(
  ( ! [X19,X18] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19))) | s('type.num.num',X19) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X18)))))))) )),
  inference(superposition,[],[f215,f172])).
fof(f1016,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17))) | s('type.num.num',X17) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X16)))))))) )),
  inference(superposition,[],[f215,f171])).
fof(f1015,plain,(
  ( ! [X14,X15] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num',X15) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X14),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f215,f227])).
fof(f1014,plain,(
  ( ! [X12,X13] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13))) | s('type.num.num',X13) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X12),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f215,f166])).
fof(f1013,plain,(
  ( ! [X10,X11] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))) | s('type.num.num',X11) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))) )),
  inference(superposition,[],[f215,f165])).
fof(f1012,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) | s('type.num.num',X9) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))) )),
  inference(superposition,[],[f215,f161])).
fof(f1011,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))) | s('type.num.num',X7) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f215,f160])).
fof(f1010,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num',X5) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) )),
  inference(superposition,[],[f215,f164])).
fof(f1009,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3))) | s('type.num.num',X3) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f215,f163])).
fof(f1000,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))) )),
  inference(unit_resulting_resolution,[],[f231,f215])).
fof(f1001,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f429,f215])).
fof(f1003,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f428,f215])).
fof(f1044,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(forward_demodulation,[],[f1006,f227])).
fof(f1006,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))) )),
  inference(unit_resulting_resolution,[],[f577,f215])).
fof(f822,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(unit_resulting_resolution,[],[f809,f191])).
fof(f809,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(forward_demodulation,[],[f781,f148])).
fof(f781,plain,(
  s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))))),
  inference(superposition,[],[f174,f465])).
fof(f521,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),
  inference(backward_demodulation,[],[f499,f157])).
fof(f580,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(subsumption_resolution,[],[f548,f226])).
fof(f548,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(superposition,[],[f196,f182])).
fof(f577,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(subsumption_resolution,[],[f545,f492])).
fof(f545,plain,(
  ( ! [X6] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f196,f227])).
fof(f522,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f500,f342])).
fof(f500,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f168,f465])).
fof(f451,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f439,f230])).
fof(f439,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f191,f149])).
fof(f436,plain,(
  ( ! [X5] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X5),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f191,f166])).
fof(f432,plain,(
  ( ! [X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) )),
  inference(superposition,[],[f191,f164])).
fof(f431,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f191,f163])).
fof(f399,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f169,f182])).
fof(f398,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f169,f149])).
fof(f386,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(superposition,[],[f168,f182])).
fof(f385,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f168,f149])).
fof(f342,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f339,f226])).
fof(f339,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f147,f182])).
fof(f334,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f226,f182])).
fof(f222,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X0) != s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f142])).
fof(f219,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f120])).
fof(f120,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) <=> s('type.num.num',X10) = s('type.num.num',X11))),
  file('thm.transc.COS_PI','thm.numeral.numeral_eq|split|7')).
fof(f220,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f141])).
fof(f217,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) | s('type.num.num',X0) = s('type.num.num',X1)) & (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) <=> s('type.num.num',X0) = s('type.num.num',X1))),
  inference(rectify,[],[f54])).
fof(f54,axiom,(
  ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X11))) <=> s('type.num.num',X10) = s('type.num.num',X11))),
  file('thm.transc.COS_PI','thm.numeral.numeral_eq|split|6')).
fof(f218,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f140])).
fof(f216,plain,(
  ( ! [X0,X1] : (s('type.num.num',X0) != s('type.num.num',X1) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f139])).
fof(f231,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(subsumption_resolution,[],[f211,f226])).
fof(f211,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1] : ((s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))),
  inference(nnf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1))) <=> p(s(bool,'F_0')))),
  inference(rectify,[],[f52])).
fof(f52,axiom,(
  ! [X10,X11] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X10))) = s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X11))) <=> p(s(bool,'F_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_eq|split|4')).
fof(f207,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X10,X11] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|12')).
fof(f206,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X10,X11] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|5')).
fof(f205,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X10,X11] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X10),s('type.num.num',X11))))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|8')).
fof(f204,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X10,X11] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X10),s('type.num.num',X11))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|28')).
fof(f203,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X10,X11] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X11))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|22')).
fof(f201,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f105])).
fof(f105,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X10,X11] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X11),s('type.num.num',X10))) = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|25')).
fof(f179,plain,(
  ( ! [X0] : (s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X10] : s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10))) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|21')).
fof(f227,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f170,f149])).
fof(f170,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|11')).
fof(f168,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X10] : s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X10))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|33')).
fof(f167,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X10] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|29')).
fof(f165,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|6')).
fof(f163,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|1')).
fof(f162,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|20')).
fof(f161,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f73])).
fof(f73,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.transc.COS_PI','thm.arithmetic.MULT|split|0')).
fof(f160,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|4')).
fof(f159,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X10] : s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|26')).
fof(f158,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X10] : s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|23')).
fof(f157,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(flattening,[],[f46])).
fof(f46,axiom,(
  ~p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|34')).
fof(f147,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(cnf_transformation,[],[f47])).
fof(f47,axiom,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.transc.COS_PI','thm.numeral.numeral_distrib|split|35')).
fof(f10224,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10223,f9969])).
fof(f10223,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9930,f9969])).
fof(f9930,plain,(
  ( ! [X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6294])).
fof(f6294,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f6293,f174])).
fof(f6293,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f6255,f2366])).
fof(f6255,plain,(
  ( ! [X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f5018,f174])).
fof(f5018,plain,(
  ( ! [X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f4297,f2330])).
fof(f10222,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10221,f9969])).
fof(f10221,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9929,f9969])).
fof(f9929,plain,(
  ( ! [X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6132])).
fof(f6132,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f6131,f174])).
fof(f6131,plain,(
  ( ! [X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f6099,f2330])).
fof(f6099,plain,(
  ( ! [X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X16))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16)))))))) ) | $spl16),
  inference(superposition,[],[f4782,f174])).
fof(f4782,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) ) | $spl16),
  inference(superposition,[],[f4361,f2329])).
fof(f4361,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4))) | s('type.num.num',X4) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f4326,f2326])).
fof(f4326,plain,(
  ( ! [X4,X5] : (s('type.num.num',X4) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X4))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f4294,f2330])).
fof(f10220,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10219,f9969])).
fof(f10219,plain,(
  s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9923,f9969])).
fof(f9923,plain,(
  ( ! [X18] : (s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7710])).
fof(f7710,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7709,f173])).
fof(f7709,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7664,f2366])).
fof(f7664,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f7038,f173])).
fof(f10218,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10217,f9969])).
fof(f10217,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9922,f9969])).
fof(f9922,plain,(
  ( ! [X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6291])).
fof(f6291,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f6290,f173])).
fof(f6290,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f6253,f2366])).
fof(f6253,plain,(
  ( ! [X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f5018,f173])).
fof(f10216,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10215,f9969])).
fof(f10215,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9921,f9969])).
fof(f9921,plain,(
  ( ! [X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6129])).
fof(f6129,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f6128,f173])).
fof(f6128,plain,(
  ( ! [X15] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f6097,f2330])).
fof(f6097,plain,(
  ( ! [X15] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X15))))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X15)))))))) ) | $spl16),
  inference(superposition,[],[f4782,f173])).
fof(f10214,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9917,f9969])).
fof(f9917,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8351])).
fof(f8351,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8159,f217])).
fof(f8159,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8008,f215])).
fof(f8008,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f7915,f219])).
fof(f10213,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9916,f9969])).
fof(f9916,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8350])).
fof(f8350,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8159,f219])).
fof(f10212,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10211,f10102])).
fof(f10102,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9904,f10005])).
fof(f10005,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X1),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9976,f6229])).
fof(f6229,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X1),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(subsumption_resolution,[],[f6219,f1739])).
fof(f6219,plain,(
  ( ! [X1] : (s('type.realax.real',X1) = s('type.realax.real','const.real.|47|_2'(s('type.realax.real',X1),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f2345,f2349])).
fof(f9976,plain,(
  ( ! [X76] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X76)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9975,f9734])).
fof(f9975,plain,(
  ( ! [X76,X74,X75] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X76))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9761,f9969])).
fof(f9761,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X76))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5251])).
fof(f5251,plain,(
  ( ! [X76,X74,X75] : (s('type.num.num',X76) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X74))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X75))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X76))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X74),s('type.num.num',X75)))))))) )),
  inference(superposition,[],[f222,f205])).
fof(f9904,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.real.|47|_2'(s('type.realax.real','const.transc.pi_0'),s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2323])).
fof(f10211,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9915,f10136])).
fof(f10136,plain,(
  ( ! [X27] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X27)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10107,f9969])).
fof(f10107,plain,(
  ( ! [X27] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) = s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X27))) | s('type.num.num',X27) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f1870])).
fof(f9915,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8349])).
fof(f8349,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8159,f221])).
fof(f10188,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10187,f9969])).
fof(f10187,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10130,f10136])).
fof(f10130,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f9444])).
fof(f9444,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))) ) | ($spl16 | $spl29)),
  inference(superposition,[],[f9061,f222])).
fof(f9061,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f9031,f221])).
fof(f10186,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10129,f10136])).
fof(f10129,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f9061])).
fof(f10185,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10184,f9969])).
fof(f10184,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10128,f10136])).
fof(f10128,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f8148])).
fof(f8148,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0)))) ) | $spl29),
  inference(superposition,[],[f8007,f222])).
fof(f8007,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f7915,f221])).
fof(f10183,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10127,f10136])).
fof(f10127,plain,(
  s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f8007])).
fof(f10181,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10180,f9969])).
fof(f10180,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10123,f10136])).
fof(f10123,plain,(
  ( ! [X0] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X0))) | s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f4208])).
fof(f10179,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10178,f9969])).
fof(f10178,plain,(
  ( ! [X0,X1] : (s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10109,f10136])).
fof(f10109,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X1))) | s('type.num.num',X1) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f1979])).
fof(f10177,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10176,f9969])).
fof(f10176,plain,(
  ( ! [X10,X9] : (s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10108,f10136])).
fof(f10108,plain,(
  ( ! [X10,X9] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num',X10))) | s('type.num.num',X10) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X9)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f10102,f1894])).
fof(f10100,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10099,f9969])).
fof(f10099,plain,(
  ( ! [X20] : (s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9900,f9969])).
fof(f9900,plain,(
  ( ! [X20] : (s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4298])).
fof(f4298,plain,(
  ( ! [X19,X20] : (s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241,f4294,f4242,f4295,f4243,f4296,f4244,f4246,f4297,f4247])).
fof(f4247,plain,(
  ( ! [X19,X20] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X20) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X20) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X19)))))))) ) | $spl16),
  inference(superposition,[],[f2474,f2334])).
fof(f10098,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9894,f9734])).
fof(f9894,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2501])).
fof(f10097,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10096,f9969])).
fof(f10096,plain,(
  ( ! [X12] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9881,f822])).
fof(f9881,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5465])).
fof(f5465,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5464,f174])).
fof(f5464,plain,(
  ( ! [X12] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5427,f174])).
fof(f5427,plain,(
  ( ! [X12] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X12))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))))))) ) | $spl16),
  inference(superposition,[],[f4366,f174])).
fof(f4366,plain,(
  ( ! [X24] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X24))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl16),
  inference(forward_demodulation,[],[f4337,f2326])).
fof(f4337,plain,(
  ( ! [X24,X25] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X24))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X25),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X24)))))) ) | $spl16),
  inference(superposition,[],[f4294,f174])).
fof(f10095,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10094,f9969])).
fof(f10094,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9880,f9969])).
fof(f9880,plain,(
  ( ! [X14] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5770])).
fof(f5770,plain,(
  ( ! [X14] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5769,f174])).
fof(f5769,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5703,f174])).
fof(f5703,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(superposition,[],[f5058,f174])).
fof(f5058,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5028,f2366])).
fof(f5028,plain,(
  ( ! [X10] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X10)))))) ) | $spl16),
  inference(superposition,[],[f4297,f174])).
fof(f10093,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9940,f9969])).
fof(f9940,plain,(
  ( ! [X14] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9878])).
fof(f9878,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5684])).
fof(f5684,plain,(
  ( ! [X14] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5683,f174])).
fof(f5683,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5662,f173])).
fof(f5662,plain,(
  ( ! [X14] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X14))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X14)))))))))) ) | $spl16),
  inference(superposition,[],[f5057,f174])).
fof(f5057,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5027,f2366])).
fof(f5027,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))) ) | $spl16),
  inference(superposition,[],[f4297,f173])).
fof(f10092,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9941,f9969])).
fof(f9941,plain,(
  ( ! [X19] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9877])).
fof(f9877,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7946])).
fof(f7946,plain,(
  ( ! [X19] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7945,f173])).
fof(f7945,plain,(
  ( ! [X19] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7944,f174])).
fof(f7944,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7907,f173])).
fof(f7907,plain,(
  ( ! [X19] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X19))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X19)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f174])).
fof(f10091,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9942,f9969])).
fof(f9942,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9876])).
fof(f9876,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7943])).
fof(f7943,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7942,f173])).
fof(f7942,plain,(
  ( ! [X18] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7941,f173])).
fof(f7941,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7905,f173])).
fof(f7905,plain,(
  ( ! [X18] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f173])).
fof(f10090,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9943,f9969])).
fof(f9943,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9875])).
fof(f9875,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7940])).
fof(f7940,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7939,f173])).
fof(f7939,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7938,f207])).
fof(f7938,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7904,f173])).
fof(f7904,plain,(
  ( ! [X17,X16] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X16),s('type.num.num',X17))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X16))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X17)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f207])).
fof(f10089,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9944,f9969])).
fof(f9944,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9874])).
fof(f9874,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7934])).
fof(f7934,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7933,f173])).
fof(f7933,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7932,f205])).
fof(f7932,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7899,f173])).
fof(f7899,plain,(
  ( ! [X12,X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X11),s('type.num.num',X12))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X12)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f205])).
fof(f10088,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9945,f9969])).
fof(f9945,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9873])).
fof(f9873,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7930])).
fof(f7930,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7929,f173])).
fof(f7929,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7928,f206])).
fof(f7928,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7896,f173])).
fof(f7896,plain,(
  ( ! [X8,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f206])).
fof(f10087,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9946,f9969])).
fof(f9946,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9872])).
fof(f9872,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.ZERO_0') | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7926])).
fof(f7926,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7925,f173])).
fof(f7925,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7924,f6517])).
fof(f6517,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | $spl16),
  inference(backward_demodulation,[],[f6516,f208])).
fof(f7924,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7892,f173])).
fof(f7892,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X3)))))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f6517])).
fof(f10086,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10085,f9969])).
fof(f10085,plain,(
  s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9871,f9969])).
fof(f9871,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7947])).
fof(f7947,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7908,f173])).
fof(f7908,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f173])).
fof(f10084,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10083,f9969])).
fof(f10083,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9870,f9969])).
fof(f9870,plain,(
  ( ! [X13] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5763])).
fof(f5763,plain,(
  ( ! [X13] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5762,f173])).
fof(f5762,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5701,f174])).
fof(f5701,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(superposition,[],[f5058,f173])).
fof(f10082,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9947,f9734])).
fof(f9947,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9869])).
fof(f9869,plain,(
  ( ! [X13] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5682])).
fof(f5682,plain,(
  ( ! [X13] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5681,f173])).
fof(f5681,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5660,f173])).
fof(f5660,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X13))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X13)))))))))) ) | $spl16),
  inference(superposition,[],[f5057,f173])).
fof(f10081,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10080,f9969])).
fof(f10080,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9868,f822])).
fof(f9868,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5461])).
fof(f5461,plain,(
  ( ! [X11] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5460,f173])).
fof(f5460,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5425,f174])).
fof(f5425,plain,(
  ( ! [X11] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X11))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X11)))))))))) ) | $spl16),
  inference(superposition,[],[f4366,f173])).
fof(f10079,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9866,f9734])).
fof(f9866,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8352])).
fof(f8352,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8159,f215])).
fof(f10078,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9865,f9734])).
fof(f9865,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4168])).
fof(f10077,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10076,f9969])).
fof(f10076,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9860,f822])).
fof(f9860,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5450])).
fof(f5450,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5449,f205])).
fof(f5449,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5420,f174])).
fof(f5420,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X6),s('type.num.num',X7))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))))))) ) | $spl16),
  inference(superposition,[],[f4366,f205])).
fof(f10075,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9951,f9734])).
fof(f9951,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9859])).
fof(f9859,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5677])).
fof(f5677,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5676,f205])).
fof(f5676,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5655,f173])).
fof(f5655,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))))))) ) | $spl16),
  inference(superposition,[],[f5057,f205])).
fof(f10074,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10073,f9969])).
fof(f10073,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9858,f9969])).
fof(f9858,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5743])).
fof(f5743,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5742,f205])).
fof(f5742,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5696,f174])).
fof(f5696,plain,(
  ( ! [X8,X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X9))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))))))))) ) | $spl16),
  inference(superposition,[],[f5058,f205])).
fof(f10072,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9952,f9734])).
fof(f9952,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9857])).
fof(f9857,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5674])).
fof(f5674,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5673,f206])).
fof(f5673,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5652,f173])).
fof(f5652,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))))))) ) | $spl16),
  inference(superposition,[],[f5057,f206])).
fof(f10071,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10070,f9969])).
fof(f10070,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9856,f9969])).
fof(f9856,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5735])).
fof(f5735,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5734,f206])).
fof(f5734,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f5693,f174])).
fof(f5693,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5))))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X4))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X5)))))))))) ) | $spl16),
  inference(superposition,[],[f5058,f206])).
fof(f10069,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9855,f9969])).
fof(f9855,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8821])).
fof(f8821,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl16 | $spl29)),
  inference(forward_demodulation,[],[f8820,f2368])).
fof(f8820,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8229,f215])).
fof(f8229,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl16 | $spl29)),
  inference(forward_demodulation,[],[f8228,f2368])).
fof(f8228,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8219,f215])).
fof(f8219,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ($spl16 | $spl29)),
  inference(forward_demodulation,[],[f8218,f2322])).
fof(f8218,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f8009,f215])).
fof(f8009,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl29),
  inference(unit_resulting_resolution,[],[f7915,f217])).
fof(f10068,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9854,f9969])).
fof(f9854,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8819])).
fof(f8819,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8229,f217])).
fof(f10067,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9853,f9969])).
fof(f9853,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8818])).
fof(f8818,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8229,f219])).
fof(f10066,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10065,f9976])).
fof(f10065,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9852,f9976])).
fof(f9852,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8817])).
fof(f8817,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) | ($spl16 | $spl29)),
  inference(unit_resulting_resolution,[],[f8229,f221])).
fof(f10064,plain,(
  $false | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9851,f9969])).
fof(f9851,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl29 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f8229])).
fof(f10063,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9839,f9969])).
fof(f9839,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7957])).
fof(f7957,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f1000,f215])).
fof(f10062,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9838,f9969])).
fof(f9838,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7956])).
fof(f7956,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f1000,f217])).
fof(f10061,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9837,f9969])).
fof(f9837,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7955])).
fof(f7955,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f1000,f219])).
fof(f10060,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9836,f9976])).
fof(f9836,plain,(
  ( ! [X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f7954])).
fof(f7954,plain,(
  ( ! [X0,X1] : (s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(unit_resulting_resolution,[],[f1000,f221])).
fof(f10059,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10058,f9969])).
fof(f10058,plain,(
  ( ! [X22] : (s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9835,f9969])).
fof(f9835,plain,(
  ( ! [X22] : (s('type.num.num',X22) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4299])).
fof(f4299,plain,(
  ( ! [X21,X22] : (s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X22) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))))) ) | $spl16),
  inference(global_subsumption,[],[f144,f145,f147,f148,f149,f224,f150,f225,f226,f157,f158,f159,f160,f161,f162,f163,f164,f165,f166,f167,f168,f169,f227,f171,f172,f173,f174,f175,f176,f177,f228,f179,f180,f181,f182,f229,f230,f192,f191,f196,f195,f201,f202,f203,f204,f205,f206,f207,f208,f209,f210,f231,f216,f215,f218,f217,f220,f219,f222,f221,f223,f330,f334,f342,f341,f385,f386,f398,f399,f429,f428,f431,f432,f433,f434,f435,f436,f437,f438,f451,f465,f492,f522,f577,f580,f582,f594,f661,f720,f721,f754,f756,f521,f499,f780,f809,f822,f1044,f1003,f1001,f1000,f1009,f1010,f1011,f1012,f1013,f1014,f1015,f1016,f1017,f1018,f1020,f1058,f1023,f1105,f1106,f1068,f1069,f1071,f1107,f1213,f1287,f1247,f1245,f1244,f1243,f1241,f1239,f1252,f1253,f1254,f1255,f1256,f1257,f1258,f1259,f1260,f1261,f1262,f1263,f1264,f1266,f1268,f1322,f1303,f1454,f1435,f1531,f1491,f1489,f1487,f1486,f1484,f1483,f1481,f1479,f1499,f1500,f1501,f1502,f1503,f1504,f1505,f1506,f1507,f1508,f1510,f1512,f1556,f1555,f1554,f1688,f1687,f1686,f1713,f1712,f1711,f1755,f1754,f1791,f1748,f1746,f1745,f1743,f1742,f1740,f1739,f1737,f1735,f1756,f1757,f1758,f1759,f1760,f1761,f1762,f1763,f1764,f1765,f1766,f1767,f1768,f1770,f1772,f1854,f1855,f1856,f1857,f1858,f1859,f1860,f1861,f1862,f1863,f1864,f1865,f1866,f1868,f1870,f1871,f1892,f1894,f1896,f1897,f1898,f1899,f1927,f1928,f1932,f1941,f1979,f1998,f2004,f2005,f2001,f2028,f2062,f2068,f2069,f2065,f2090,f2124,f2127,f2151,f2195,f2221,f2222,f2215,f2223,f2218,f2252,f2251,f2250,f2249,f2270,f2271,f2296,f2298,f2302,f2290,f2303,f2304,f2293,f927,f675,f630,f450,f2321,f2322,f2323,f2324,f2326,f2327,f2329,f2330,f2331,f2332,f2333,f2334,f2335,f2336,f2337,f2338,f2339,f2340,f2341,f2342,f2494,f2495,f2345,f2346,f2347,f2348,f2349,f2353,f2354,f2496,f2497,f2498,f2361,f2362,f2363,f2499,f2366,f2367,f2368,f2371,f2500,f2501,f2375,f2376,f2505,f2507,f2509,f2380,f2511,f2513,f2515,f2517,f2519,f2386,f2389,f2390,f2391,f2394,f2395,f2397,f2398,f2399,f2400,f2401,f2522,f2523,f2524,f2405,f2525,f2526,f2527,f2528,f2412,f2413,f2415,f2416,f2418,f2419,f2531,f2532,f2533,f2423,f2534,f2535,f2536,f2537,f2435,f2436,f2438,f2439,f2440,f2441,f2442,f2550,f2551,f2552,f2446,f2553,f2554,f2555,f2556,f2453,f2454,f2455,f2456,f2457,f2558,f2559,f2560,f2461,f2561,f2562,f2563,f2564,f2467,f2468,f2469,f2470,f2471,f2472,f2473,f2474,f2476,f2477,f2479,f2480,f2481,f2482,f2483,f2484,f2485,f2486,f2487,f2488,f2566,f2490,f2491,f2492,f2699,f3576,f3571,f3603,f3605,f3702,f3706,f3931,f4136,f4116,f4115,f4114,f4168,f4149,f4148,f4147,f4198,f4197,f4196,f4195,f4208,f4239,f4240,f4241,f4294,f4242,f4295,f4243,f4296,f4244,f4246,f4297,f4247,f4298,f4248])).
fof(f4248,plain,(
  ( ! [X21,X22] : (s('type.realax.real','const.transc.cos_1'(s('type.realax.real','const.transc.pi_0'))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num',X22) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X22) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X21)))))))) ) | $spl16),
  inference(superposition,[],[f2474,f2335])).
fof(f10057,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9834,f9734])).
fof(f9834,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4136])).
fof(f10056,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9833,f9969])).
fof(f9833,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4116])).
fof(f10055,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9832,f9969])).
fof(f9832,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4115])).
fof(f10054,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9831,f9976])).
fof(f9831,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4114])).
fof(f10053,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9825,f9734])).
fof(f9825,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2500])).
fof(f10052,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10051,f9969])).
fof(f10051,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9801,f9969])).
fof(f9801,plain,(
  ( ! [X173] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6884])).
fof(f6884,plain,(
  ( ! [X173] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173)))) ) | $spl16),
  inference(forward_demodulation,[],[f6883,f6647])).
fof(f6883,plain,(
  ( ! [X173] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X173))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6792,f2366])).
fof(f6792,plain,(
  ( ! [X173] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X173))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X173))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f5018,f6516])).
fof(f10050,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10049,f9969])).
fof(f10049,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9800,f9969])).
fof(f9800,plain,(
  ( ! [X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6882])).
fof(f6882,plain,(
  ( ! [X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))) ) | $spl16),
  inference(forward_demodulation,[],[f6881,f6647])).
fof(f6881,plain,(
  ( ! [X172] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X172))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f6791,f2366])).
fof(f6791,plain,(
  ( ! [X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X172))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f5017,f6516])).
fof(f5017,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X0) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f4297,f2329])).
fof(f10048,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10047,f9969])).
fof(f10047,plain,(
  ( ! [X199] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X199)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9797,f9969])).
fof(f9797,plain,(
  ( ! [X198,X199] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X199))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6595])).
fof(f6595,plain,(
  ( ! [X198,X199] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X199)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6594,f2366])).
fof(f6594,plain,(
  ( ! [X198,X199] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X199)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6497,f6516])).
fof(f6497,plain,(
  ( ! [X198,X199] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X198),s('type.num.num',X199))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X198))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X199)))))) ) | $spl16),
  inference(superposition,[],[f4297,f208])).
fof(f10046,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10045,f9969])).
fof(f10045,plain,(
  ( ! [X190] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X190)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9796,f9969])).
fof(f9796,plain,(
  ( ! [X189,X190] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X190))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num',X190)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f6589])).
fof(f6589,plain,(
  ( ! [X189,X190] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X190))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num',X190)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6588,f2326])).
fof(f6588,plain,(
  ( ! [X191,X189,X190] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num',X190))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X191),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X190)))))) ) | $spl16),
  inference(forward_demodulation,[],[f6494,f6516])).
fof(f6494,plain,(
  ( ! [X191,X189,X190] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X189),s('type.num.num',X190))))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X191),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X189))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X190)))))) ) | $spl16),
  inference(superposition,[],[f4294,f208])).
fof(f10042,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10041,f9969])).
fof(f10041,plain,(
  ( ! [X193] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X193)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9787,f9969])).
fof(f9787,plain,(
  ( ! [X192,X193] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X193))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X192),s('type.num.num',X193)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5944])).
fof(f5944,plain,(
  ( ! [X192,X193] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X192),s('type.num.num',X193))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X193)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5907,f2366])).
fof(f5907,plain,(
  ( ! [X192,X193] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X192),s('type.num.num',X193))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X192))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X193)))))) ) | $spl16),
  inference(superposition,[],[f4297,f207])).
fof(f10040,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10039,f9969])).
fof(f10039,plain,(
  ( ! [X184] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X184)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9786,f9969])).
fof(f9786,plain,(
  ( ! [X184,X183] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X184))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num',X184)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5941])).
fof(f5941,plain,(
  ( ! [X184,X183] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X184))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num',X184)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5904,f2326])).
fof(f5904,plain,(
  ( ! [X185,X184,X183] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X183),s('type.num.num',X184))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X185),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X183))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X184)))))) ) | $spl16),
  inference(superposition,[],[f4294,f207])).
fof(f10036,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10035,f9969])).
fof(f10035,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9777,f9969])).
fof(f9777,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5705])).
fof(f5705,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f5058,f174])).
fof(f10034,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10033,f9969])).
fof(f10033,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9776,f9969])).
fof(f9776,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5663])).
fof(f5663,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f5057,f173])).
fof(f10032,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10031,f9969])).
fof(f10031,plain,(
  ( ! [X187] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X187)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9775,f9969])).
fof(f9775,plain,(
  ( ! [X187,X186] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X187))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num',X187)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5633])).
fof(f5633,plain,(
  ( ! [X187,X186] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num',X187))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X187)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5596,f2366])).
fof(f5596,plain,(
  ( ! [X187,X186] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X186),s('type.num.num',X187))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X186))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X187)))))) ) | $spl16),
  inference(superposition,[],[f4297,f206])).
fof(f10030,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10029,f9969])).
fof(f10029,plain,(
  ( ! [X177,X178] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9774,f2327])).
fof(f9774,plain,(
  ( ! [X177,X178] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X178))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5630])).
fof(f5630,plain,(
  ( ! [X177,X178] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X177))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X178))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5593,f2326])).
fof(f5593,plain,(
  ( ! [X177,X178,X179] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X177),s('type.num.num',X178))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X179),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X177))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X178)))))) ) | $spl16),
  inference(superposition,[],[f4294,f206])).
fof(f10026,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10025,f9969])).
fof(f10025,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9766,f9969])).
fof(f9766,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5429])).
fof(f5429,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X0))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f4366,f174])).
fof(f10024,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10023,f9969])).
fof(f10023,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9765,f9969])).
fof(f9765,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5360])).
fof(f5360,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))))) ) | $spl16),
  inference(superposition,[],[f4365,f173])).
fof(f4365,plain,(
  ( ! [X21] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl16),
  inference(forward_demodulation,[],[f4335,f2326])).
fof(f4335,plain,(
  ( ! [X21,X22] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X21))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X21)))))) ) | $spl16),
  inference(superposition,[],[f4294,f173])).
fof(f10022,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10021,f9969])).
fof(f10021,plain,(
  ( ! [X181] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X181)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9764,f9969])).
fof(f9764,plain,(
  ( ! [X180,X181] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X181))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X180),s('type.num.num',X181)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5334])).
fof(f5334,plain,(
  ( ! [X180,X181] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X180),s('type.num.num',X181))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X181)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5300,f2366])).
fof(f5300,plain,(
  ( ! [X180,X181] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X180),s('type.num.num',X181))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X180))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X181)))))) ) | $spl16),
  inference(superposition,[],[f4297,f205])).
fof(f10020,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10019,f9969])).
fof(f10019,plain,(
  ( ! [X171,X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X171),s('type.num.num',X172)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9763,f2331])).
fof(f9763,plain,(
  ( ! [X171,X172] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X171),s('type.num.num',X172)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5331])).
fof(f5331,plain,(
  ( ! [X171,X172] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X171),s('type.num.num',X172)))))) ) | $spl16),
  inference(forward_demodulation,[],[f5297,f2326])).
fof(f5297,plain,(
  ( ! [X173,X171,X172] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X171),s('type.num.num',X172))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X173),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X171))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X172)))))) ) | $spl16),
  inference(superposition,[],[f4294,f205])).
fof(f10016,plain,(
  $false | ($spl0 | $spl16 | $spl37 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f10007,f9976])).
fof(f10007,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ($spl0 | $spl16 | $spl37 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9976,f9308])).
fof(f9308,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl37),
  inference(unit_resulting_resolution,[],[f9256,f221])).
fof(f9974,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9973,f9969])).
fof(f9973,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9755,f9969])).
fof(f9755,plain,(
  ( ! [X10] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X10)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5058])).
fof(f9972,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9957,f9734])).
fof(f9957,plain,(
  ( ! [X9] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9754])).
fof(f9754,plain,(
  ( ! [X9] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f5057])).
fof(f9971,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9970,f9969])).
fof(f9970,plain,(
  ( ! [X24] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X24)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9753,f822])).
fof(f9753,plain,(
  ( ! [X24] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num',X24)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4366])).
fof(f9968,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9967,f2363])).
fof(f9967,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9966,f9734])).
fof(f9966,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9739,f9734])).
fof(f9739,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f207])).
fof(f9962,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9961,f1213])).
fof(f9961,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9735,f9734])).
fof(f9735,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f173])).
fof(f9955,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9822])).
fof(f9822,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2394])).
fof(f9954,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9823])).
fof(f9823,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2415])).
fof(f9953,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9824])).
fof(f9824,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2435])).
fof(f9950,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9862])).
fof(f9862,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4147])).
fof(f9949,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9863])).
fof(f9863,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4148])).
fof(f9948,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9864])).
fof(f9864,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f4149])).
fof(f9939,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9891])).
fof(f9891,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2395])).
fof(f9938,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9892])).
fof(f9892,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2416])).
fof(f9937,plain,(
  $false | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(trivial_inequality_removal,[],[f9893])).
fof(f9893,plain,(
  s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.realax.real','const.real.real_of_num_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl0 | $spl16 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9734,f2436])).
fof(f9624,plain,(
  $false | ($spl19 | $spl20 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f817,f9581])).
fof(f9623,plain,(
  $false | ($spl16 | $spl19 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9622,f2369])).
fof(f9622,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19 | $spl64 | $spl76)),
  inference(forward_demodulation,[],[f9621,f2321])).
fof(f9621,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | ($spl19 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f818,f9581])).
fof(f9620,plain,(
  $false | ($spl16 | $spl19 | $spl20 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f2711,f9581])).
fof(f9619,plain,(
  $false | ($spl16 | $spl19 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9618,f2369])).
fof(f9618,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl16 | $spl19 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f2712,f9581])).
fof(f9617,plain,(
  $false | ($spl16 | $spl19 | $spl20 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9586,f2369])).
fof(f9586,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | ($spl20 | $spl64 | $spl76)),
  inference(backward_demodulation,[],[f9581,f760])).
fof(f9616,plain,(
  $false | ($spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9583,f145])).
fof(f9583,plain,(
  ~p(s(bool,'T_0')) | ($spl64 | $spl76)),
  inference(backward_demodulation,[],[f9581,f226])).
fof(f9582,plain,(
  $false | ($spl3 | $spl64 | $spl76)),
  inference(subsumption_resolution,[],[f9581,f346])).
fof(f9580,plain,(
  $false | ($spl3 | $spl68 | $spl80)),
  inference(subsumption_resolution,[],[f9579,f346])).
fof(f9579,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl68 | $spl80)),
  inference(backward_demodulation,[],[f9503,f9567])).
fof(f9578,plain,(
  $false | ($spl3 | $spl72 | $spl84)),
  inference(subsumption_resolution,[],[f9577,f346])).
fof(f9577,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl72 | $spl84)),
  inference(backward_demodulation,[],[f9510,f9571])).
fof(f9571,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl84),
  inference(cnf_transformation,[],[f9571_D])).
fof(f9571_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f9573,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl86),
  inference(cnf_transformation,[],[f9573_D])).
fof(f9573_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f9474,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f399,f2371])).
fof(f9567,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl80),
  inference(cnf_transformation,[],[f9567_D])).
fof(f9567_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f9569,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl82),
  inference(cnf_transformation,[],[f9569_D])).
fof(f9569_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f9473,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f399,f2367])).
fof(f9563,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl76),
  inference(cnf_transformation,[],[f9563_D])).
fof(f9563_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl76),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl76])])).
fof(f9565,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl78),
  inference(cnf_transformation,[],[f9565_D])).
fof(f9565_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f9471,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f399,f2322])).
fof(f9496,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl64),
  inference(cnf_transformation,[],[f9496_D])).
fof(f9496_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f9498,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl66),
  inference(cnf_transformation,[],[f9498_D])).
fof(f9498_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl66),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl66])])).
fof(f9544,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9543,f2348])).
fof(f9543,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f9542,f1106])).
fof(f9542,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f9462,f169])).
fof(f9462,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f399,f2348])).
fof(f9510,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl72),
  inference(cnf_transformation,[],[f9510_D])).
fof(f9510_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f9512,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl74),
  inference(cnf_transformation,[],[f9512_D])).
fof(f9512_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f9508,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9507,f2371])).
fof(f9507,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9506,f9078])).
fof(f9078,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f169,f2371])).
fof(f9506,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9450,f2390])).
fof(f9450,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f399,f2371])).
fof(f9503,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl68),
  inference(cnf_transformation,[],[f9503_D])).
fof(f9503_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f9505,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl70),
  inference(cnf_transformation,[],[f9505_D])).
fof(f9505_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f9501,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9500,f2367])).
fof(f9500,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9499,f8835])).
fof(f8835,plain,(
  s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f169,f2367])).
fof(f9499,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9449,f2389])).
fof(f9449,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f399,f2367])).
fof(f9494,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9493,f2322])).
fof(f9493,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9492,f1106])).
fof(f9492,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9447,f2368])).
fof(f9447,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f399,f2322])).
fof(f9434,plain,(
  $false | ($spl3 | $spl40 | $spl52)),
  inference(subsumption_resolution,[],[f9433,f346])).
fof(f9433,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl40 | $spl52)),
  inference(backward_demodulation,[],[f9364,f9415])).
fof(f9432,plain,(
  $false | ($spl3 | $spl44 | $spl56)),
  inference(subsumption_resolution,[],[f9431,f346])).
fof(f9431,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl44 | $spl56)),
  inference(backward_demodulation,[],[f9371,f9419])).
fof(f9430,plain,(
  $false | ($spl3 | $spl48 | $spl60)),
  inference(subsumption_resolution,[],[f9429,f346])).
fof(f9429,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl48 | $spl60)),
  inference(backward_demodulation,[],[f9378,f9423])).
fof(f9423,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl60),
  inference(cnf_transformation,[],[f9423_D])).
fof(f9423_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f9425,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl62),
  inference(cnf_transformation,[],[f9425_D])).
fof(f9425_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f9342,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f386,f2371])).
fof(f9419,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl56),
  inference(cnf_transformation,[],[f9419_D])).
fof(f9419_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f9421,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl58),
  inference(cnf_transformation,[],[f9421_D])).
fof(f9421_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f9341,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f386,f2367])).
fof(f9415,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl52),
  inference(cnf_transformation,[],[f9415_D])).
fof(f9415_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f9417,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl54),
  inference(cnf_transformation,[],[f9417_D])).
fof(f9417_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f9339,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f386,f2322])).
fof(f9364,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl40),
  inference(cnf_transformation,[],[f9364_D])).
fof(f9364_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f9366,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl42),
  inference(cnf_transformation,[],[f9366_D])).
fof(f9366_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f9404,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9403,f2348])).
fof(f9403,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f9402,f1105])).
fof(f9402,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(forward_demodulation,[],[f9330,f168])).
fof(f9330,plain,(
  ( ! [X13] : (s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl16),
  inference(superposition,[],[f386,f2348])).
fof(f9378,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl48),
  inference(cnf_transformation,[],[f9378_D])).
fof(f9378_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f9380,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl50),
  inference(cnf_transformation,[],[f9380_D])).
fof(f9380_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f9376,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9375,f2371])).
fof(f9375,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9374,f9077])).
fof(f9077,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f168,f2371])).
fof(f9374,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9318,f2390])).
fof(f9318,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f386,f2371])).
fof(f9371,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl44),
  inference(cnf_transformation,[],[f9371_D])).
fof(f9371_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f9373,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl46),
  inference(cnf_transformation,[],[f9373_D])).
fof(f9373_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f9369,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9368,f2367])).
fof(f9368,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9367,f8834])).
fof(f8834,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f168,f2367])).
fof(f9367,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(forward_demodulation,[],[f9317,f2389])).
fof(f9317,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl16),
  inference(superposition,[],[f386,f2367])).
fof(f9362,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9361,f2322])).
fof(f9361,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9360,f1105])).
fof(f9360,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(forward_demodulation,[],[f9315,f2368])).
fof(f9315,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s(bool,'F_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f386,f2322])).
fof(f9256,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl37),
  inference(cnf_transformation,[],[f9256_D])).
fof(f9256_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f9258,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl39),
  inference(cnf_transformation,[],[f9258_D])).
fof(f9258_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f9290,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9289,f2366])).
fof(f9289,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9219,f6647])).
fof(f9219,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f7038,f2371])).
fof(f9206,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl16),
  inference(superposition,[],[f4527,f2371])).
fof(f4527,plain,(
  ( ! [X0] : (s('type.num.num',X0) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) ) | $spl16),
  inference(superposition,[],[f4360,f2329])).
fof(f4360,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num',X2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(forward_demodulation,[],[f4325,f2326])).
fof(f4325,plain,(
  ( ! [X2,X3] : (s('type.num.num',X2) != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl16),
  inference(superposition,[],[f4294,f2329])).
fof(f9262,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9198,f2335])).
fof(f9198,plain,(
  ( ! [X63] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X63)))))))) ) | $spl16),
  inference(superposition,[],[f4299,f2371])).
fof(f9261,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9197,f2334])).
fof(f9197,plain,(
  ( ! [X62] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X62)))))))) ) | $spl16),
  inference(superposition,[],[f4298,f2371])).
fof(f9260,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9196,f2331])).
fof(f9196,plain,(
  ( ! [X61] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X61))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(superposition,[],[f4296,f2371])).
fof(f9259,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9195,f2327])).
fof(f9195,plain,(
  ( ! [X60] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X60))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(superposition,[],[f4295,f2371])).
fof(f9254,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9194,f2326])).
fof(f9194,plain,(
  ( ! [X59] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl16),
  inference(superposition,[],[f4294,f2371])).
fof(f9229,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl35),
  inference(cnf_transformation,[],[f9229_D])).
fof(f9229_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f9227,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl32),
  inference(cnf_transformation,[],[f9227_D])).
fof(f9227_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f9230,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f9101,f822])).
fof(f9101,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f2519,f2371])).
fof(f9100,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(superposition,[],[f2341,f2371])).
fof(f7915,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl29),
  inference(cnf_transformation,[],[f7915_D])).
fof(f7915_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f7917,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl31),
  inference(cnf_transformation,[],[f7917_D])).
fof(f7917_D,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f7937,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7936,f2389])).
fof(f7936,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7935,f2348])).
fof(f7935,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl16),
  inference(forward_demodulation,[],[f7900,f2389])).
fof(f7900,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X13),s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl16),
  inference(superposition,[],[f7710,f2348])).
fof(f7921,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7920,f2389])).
fof(f7920,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7919,f2389])).
fof(f7919,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7918,f173])).
fof(f7918,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(forward_demodulation,[],[f7888,f2389])).
fof(f7888,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(superposition,[],[f7710,f2368])).
fof(f7913,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7912,f2389])).
fof(f7912,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7911,f2367])).
fof(f7911,plain,(
  s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl16),
  inference(forward_demodulation,[],[f7910,f173])).
fof(f7910,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(forward_demodulation,[],[f7887,f2389])).
fof(f7887,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl16),
  inference(superposition,[],[f7710,f2322])).
fof(f2318,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))))))) ) | $spl26),
  inference(cnf_transformation,[],[f2318_D])).
fof(f2318_D,plain,(
  ( ! [X12] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f443,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | $spl7),
  inference(cnf_transformation,[],[f443_D])).
fof(f443_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f630,plain,(
  ( ! [X12] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X12)))))))) )),
  inference(superposition,[],[f191,f171])).
fof(f2316,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) ) | $spl24),
  inference(cnf_transformation,[],[f2316_D])).
fof(f2316_D,plain,(
  ( ! [X13] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f675,plain,(
  ( ! [X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X13)))))))) )),
  inference(superposition,[],[f191,f172])).
fof(f2308,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl22),
  inference(cnf_transformation,[],[f2308_D])).
fof(f2308_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f927,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f191,f661])).
fof(f2301,plain,(
  $false | $spl7),
  inference(subsumption_resolution,[],[f2300,f145])).
fof(f2300,plain,(
  ~p(s(bool,'T_0')) | $spl7),
  inference(forward_demodulation,[],[f2297,f159])).
fof(f2297,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0')))) | $spl7),
  inference(backward_demodulation,[],[f2271,f479])).
fof(f479,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))))) | $spl7),
  inference(unit_resulting_resolution,[],[f443,f195])).
fof(f763,plain,(
  $false | $spl18),
  inference(subsumption_resolution,[],[f762,f145])).
fof(f762,plain,(
  ~p(s(bool,'T_0')) | $spl18),
  inference(backward_demodulation,[],[f761,f521])).
fof(f761,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl18),
  inference(backward_demodulation,[],[f758,f499])).
fof(f758,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) | $spl18),
  inference(cnf_transformation,[],[f758_D])).
fof(f758_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f760,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | $spl20),
  inference(cnf_transformation,[],[f760_D])).
fof(f760_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f756,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f182,f499])).
fof(f754,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f499,f182])).
fof(f450,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) | $spl16),
  inference(cnf_transformation,[],[f450_D])).
fof(f450_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f438,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f191,f148])).
fof(f446,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f446_D])).
fof(f446_D,plain,(
  ( ! [X6] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f448,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | $spl15),
  inference(cnf_transformation,[],[f448_D])).
fof(f448_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f437,plain,(
  ( ! [X6] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f191,f227])).
fof(f445,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) ) | $spl10),
  inference(cnf_transformation,[],[f445_D])).
fof(f445_D,plain,(
  ( ! [X4] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f435,plain,(
  ( ! [X4] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X4)))) )),
  inference(superposition,[],[f191,f165])).
fof(f444,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) | $spl8),
  inference(cnf_transformation,[],[f444_D])).
fof(f444_D,plain,(
  ( ! [X3] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f434,plain,(
  ( ! [X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X3)))) )),
  inference(superposition,[],[f191,f161])).
fof(f441,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) | $spl4),
  inference(cnf_transformation,[],[f441_D])).
fof(f441_D,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f433,plain,(
  ( ! [X2] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f191,f160])).
fof(f344,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f344_D])).
fof(f344_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f346,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f346_D])).
fof(f346_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f341,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f182])).
% SZS output end Proof for thm.transc
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 797
% Passive clauses: 2740
% Generated clauses: 52222
% Final active clauses: 531
% Final passive clauses: 1085
% Input formulas: 63
% Initial clauses: 80
% 
% Duplicate literals: 208
% Trivial inequalities: 315
% Fw subsumption resolutions: 861
% Fw demodulations: 19881
% Bw demodulations: 1022
% Condensations: 211
% Global subsumptions: 9
% 
% Simple tautologies: 69
% Equational tautologies: 187
% Forward subsumptions: 26236
% Fw demodulations to eq. taut.: 1325
% Bw demodulations to eq. taut.: 23
% 
% Unit resulting resolution: 9022
% Forward superposition: 12650
% Backward superposition: 6976
% Self superposition: 153
% Equality factoring: 39
% Equality resolution: 103
% 
% Split clauses: 69
% Split components: 139
% SAT solver clauses: 3000
% SAT solver unit clauses: 205
% SAT solver binary clauses: 882
% 
% Sat splits: 69
% Sat splitting refutations: 111
% 
% Memory used [KB]: 32110
% Time elapsed: 1.431 s
% ------------------------------
% ------------------------------
% Success in time 2.751 s
