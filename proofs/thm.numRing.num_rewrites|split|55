Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numRing
% SZS output start Proof for thm.numRing
fof(f10718,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f10594])).
fof(f10594,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))))),
  inference(superposition,[],[f175,f248])).
fof(f248,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f55])).
fof(f55,axiom,(
  ! [X10,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))),
  file('thm.numRing.num_rewrites|split|55','thm.numeral.numeral_add|split|5')).
fof(f175,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f158])).
fof(f158,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X7)))))))),
  file('thm.numRing.num_rewrites|split|55','thm.numRing.num_rewrites|split|55')).
% SZS output end Proof for thm.numRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 187
% Passive clauses: 1086
% Generated clauses: 10420
% Final active clauses: 150
% Final passive clauses: 762
% Input formulas: 81
% Initial clauses: 94
% 
% Duplicate literals: 122
% Trivial inequalities: 77
% Fw subsumption resolutions: 352
% Fw demodulations: 1902
% Bw demodulations: 31
% 
% Simple tautologies: 56
% Equational tautologies: 24
% Forward subsumptions: 6741
% Fw demodulations to eq. taut.: 11
% 
% Binary resolution: 24
% Forward superposition: 4682
% Backward superposition: 3071
% Self superposition: 80
% Equality factoring: 32
% Equality resolution: 10
% 
% Split clauses: 27
% Split components: 54
% SAT solver clauses: 52
% SAT solver unit clauses: 2
% SAT solver binary clauses: 43
% 
% Sat splits: 27
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 52
% TWLsolver calls for satisfiability: 16
% 
% Memory used [KB]: 6140
% Time elapsed: 0.196 s
% ------------------------------
% ------------------------------
% Success in time 0.2 s
