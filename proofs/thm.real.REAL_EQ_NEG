Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.real
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.real
% SZS output start Proof for thm.real
fof(f396,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f395,f31,f49,f47,f368,f30,f48,f46])).
fof(f46,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) | $spl0),
  inference(cnf_transformation,[],[f46_D])).
fof(f46_D,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f48,plain,(
  s('type.realax.real',sK0) = s('type.realax.real',sK1) | $spl2),
  inference(cnf_transformation,[],[f48_D])).
fof(f48_D,plain,(
  s('type.realax.real',sK0) = s('type.realax.real',sK1) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f30,plain,(
  s('type.realax.real',sK0) = s('type.realax.real',sK1) | s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1)))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) | s('type.realax.real',sK0) = s('type.realax.real',sK1)) & (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) | s('type.realax.real',sK0) != s('type.realax.real',sK1))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f22])).
fof(f22,plain,(
  ? [X0,X1] : ((s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1))) | s('type.realax.real',X0) != s('type.realax.real',X1)))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ? [X0,X1] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1))) <~> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(ennf_transformation,[],[f11])).
fof(f11,plain,(
  ~! [X0,X1] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X7))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6))) = s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X7))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  file('thm.real.REAL_EQ_NEG','thm.real.REAL_EQ_NEG')).
fof(f368,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f367,f32])).
fof(f32,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.real.REAL_EQ_NEG',aHL_TRUTH)).
fof(f367,plain,(
  ~p(s(bool,'T_0')) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f366,f271])).
fof(f271,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK0))) | $spl0),
  inference(superposition,[],[f266,f87])).
fof(f87,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X0)))) )),
  inference(equality_resolution,[],[f84])).
fof(f84,plain,(
  ( ! [X0,X1] : (s('type.realax.real',X0) != s('type.realax.real',X1) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(subsumption_resolution,[],[f81,f33])).
fof(f33,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.real.REAL_EQ_NEG',aHL_FALSITY)).
fof(f81,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.realax.real',X0) != s('type.realax.real',X1) | s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) )),
  inference(superposition,[],[f43,f34])).
fof(f34,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.real.REAL_EQ_NEG',aHL_BOOL_CASES)).
fof(f43,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | s('type.realax.real',X0) != s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : (((~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) | s('type.realax.real',X0) = s('type.realax.real',X1)) & (s('type.realax.real',X0) != s('type.realax.real',X1) | (p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))))))),
  inference(nnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))))) <=> s('type.realax.real',X0) = s('type.realax.real',X1))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ((p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X6),s('type.realax.real',X7)))) & p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))))) <=> s('type.realax.real',X6) = s('type.realax.real',X7))),
  file('thm.real.REAL_EQ_NEG','thm.real.REAL_LE_ANTISYM')).
fof(f266,plain,(
  ( ! [X0] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',sK0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',sK1)))) ) | $spl0),
  inference(forward_demodulation,[],[f248,f37])).
fof(f37,plain,(
  ( ! [X0,X1] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1)))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0,X1] : s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s(bool,'const.real.real_lte_2'(s('type.realax.real',X7),s('type.realax.real',X6))) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X6))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X7)))))),
  file('thm.real.REAL_EQ_NEG','thm.real.REAL_LE_NEG')).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',sK1))) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0)))))) ) | $spl0),
  inference(superposition,[],[f37,f46])).
fof(f366,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK0)))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f365,f49])).
fof(f365,plain,(
  ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK0)))) | s('type.realax.real',sK0) = s('type.realax.real',sK1) | $spl0),
  inference(subsumption_resolution,[],[f351,f32])).
fof(f351,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK0)))) | s('type.realax.real',sK0) = s('type.realax.real',sK1) | $spl0),
  inference(superposition,[],[f42,f325])).
fof(f325,plain,(
  s(bool,'T_0') = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) | $spl0),
  inference(forward_demodulation,[],[f308,f271])).
fof(f308,plain,(
  s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',sK1))) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',sK0))) | $spl0),
  inference(superposition,[],[f267,f266])).
fof(f267,plain,(
  ( ! [X0] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',sK0),s('type.realax.real',X0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',X0)))) ) | $spl0),
  inference(forward_demodulation,[],[f250,f37])).
fof(f250,plain,(
  ( ! [X0] : (s(bool,'const.real.real_lte_2'(s('type.realax.real',sK1),s('type.realax.real',X0))) = s(bool,'const.real.real_lte_2'(s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',X0))),s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0)))))) ) | $spl0),
  inference(superposition,[],[f37,f46])).
fof(f42,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X0),s('type.realax.real',X1)))) | ~p(s(bool,'const.real.real_lte_2'(s('type.realax.real',X1),s('type.realax.real',X0)))) | s('type.realax.real',X0) = s('type.realax.real',X1)) )),
  inference(cnf_transformation,[],[f28])).
fof(f47,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) | $spl1),
  inference(cnf_transformation,[],[f47_D])).
fof(f47_D,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f49,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK1) | $spl3),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK1) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f31,plain,(
  s('type.realax.real',sK0) != s('type.realax.real',sK1) | s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK1)))),
  inference(cnf_transformation,[],[f23])).
fof(f395,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f394])).
fof(f394,plain,(
  s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) != s('type.realax.real','const.realax.real_neg_1'(s('type.realax.real',sK0))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f47,f48])).
% SZS output end Proof for thm.real
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 76
% Generated clauses: 352
% Final active clauses: 13
% Final passive clauses: 20
% Input formulas: 9
% Initial clauses: 16
% 
% Duplicate literals: 49
% Trivial inequalities: 4
% Fw subsumption resolutions: 11
% Fw demodulations: 35
% 
% Simple tautologies: 23
% Equational tautologies: 14
% Forward subsumptions: 139
% 
% Binary resolution: 7
% Forward superposition: 82
% Backward superposition: 90
% Self superposition: 24
% Equality factoring: 26
% Equality resolution: 2
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 9
% SAT solver unit clauses: 2
% SAT solver binary clauses: 6
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 3
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 7
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 767
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.019 s
