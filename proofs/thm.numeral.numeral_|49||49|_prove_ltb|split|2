Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f5911,plain,(
  $false),
  inference(subsumption_resolution,[],[f60,f401])).
fof(f401,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2)))))))))) )),
  inference(forward_demodulation,[],[f385,f89])).
fof(f89,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))),s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_|49||49|_prove_ltb|split|2','thm.arithmetic.ADD_CLAUSES|split|2')).
fof(f385,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X3))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X2)))))))) )),
  inference(superposition,[],[f91,f88])).
fof(f88,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_|49||49|_prove_ltb|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f91,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num',X7))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))),
  file('thm.numeral.numeral_|49||49|_prove_ltb|split|2','thm.numeral.numeral_9_prove_ltb|split|1')).
fof(f60,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))))))),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK0),s('type.num.num',sK0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num',sK1)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f42])).
fof(f42,plain,(
  ? [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) != s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s(bool,'const.arithmetic.<=_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X6))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7)))))))))),
  file('thm.numeral.numeral_|49||49|_prove_ltb|split|2','thm.numeral.numeral_|49||49|_prove_ltb|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 139
% Passive clauses: 985
% Generated clauses: 5836
% Final active clauses: 72
% Final passive clauses: 596
% Input formulas: 20
% Initial clauses: 33
% 
% Duplicate literals: 440
% Trivial inequalities: 76
% Fw subsumption resolutions: 240
% Fw demodulations: 867
% Bw demodulations: 40
% 
% Simple tautologies: 123
% Equational tautologies: 25
% Forward subsumptions: 2802
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 8
% Forward superposition: 2094
% Backward superposition: 1737
% Self superposition: 92
% Equality factoring: 46
% Equality resolution: 1
% 
% Split clauses: 232
% Split components: 467
% SAT solver clauses: 418
% SAT solver unit clauses: 6
% SAT solver binary clauses: 94
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 232
% Sat splitting refutations: 17
% 
% TWLsolver clauses: 415
% TWLsolver calls for satisfiability: 72
% 
% Memory used [KB]: 3198
% Time elapsed: 0.134 s
% ------------------------------
% ------------------------------
% Success in time 0.136 s
