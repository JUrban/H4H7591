Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f313,plain,(
  $false),
  inference(resolution,[],[f297,f29])).
fof(f29,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f21])).
fof(f21,plain,(
  ? [X0] : ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))))))),
  file('thm.rat.rat_44_prove_ltb','thm.rat.rat_44_prove_ltb')).
fof(f297,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))) )),
  inference(equality_resolution,[],[f225])).
fof(f225,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0))))))) )),
  inference(superposition,[],[f40,f33])).
fof(f33,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0] : s('type.rat.rat',X0) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : s('type.rat.rat',X6) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X6)))))),
  file('thm.rat.rat_44_prove_ltb','thm.rat.rat_type_thm|split|0')).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) & (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))))),
  inference(nnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10,X11] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X10),s('type.frac.frac',X11)))) <=> s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X10))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X11))))),
  file('thm.rat.rat_44_prove_ltb','thm.rat.rat_type_thm|split|1')).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 22
% Passive clauses: 52
% Generated clauses: 278
% Final active clauses: 18
% Final passive clauses: 22
% Input formulas: 10
% Initial clauses: 13
% 
% Duplicate literals: 50
% Trivial inequalities: 3
% Fw subsumption resolutions: 10
% Fw demodulations: 3
% Bw demodulations: 2
% 
% Simple tautologies: 18
% Equational tautologies: 16
% Forward subsumptions: 112
% 
% Binary resolution: 13
% Forward superposition: 75
% Backward superposition: 51
% Self superposition: 25
% Equality factoring: 26
% Equality resolution: 3
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 10
% SAT solver unit clauses: 5
% SAT solver binary clauses: 5
% 
% Sat splits: 5
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 767
% Time elapsed: 0.018 s
% ------------------------------
% ------------------------------
% Success in time 0.02 s
