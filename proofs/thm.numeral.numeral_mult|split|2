Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% (93601)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 171
% Passive clauses: 2165
% Generated clauses: 24276
% Final active clauses: 159
% Final passive clauses: 1804
% Input formulas: 34
% Initial clauses: 49
% 
% Duplicate literals: 248
% Trivial inequalities: 45
% Fw subsumption resolutions: 391
% Fw demodulations: 3117
% Bw demodulations: 11
% 
% Simple tautologies: 117
% Equational tautologies: 18
% Forward subsumptions: 17862
% Fw demodulations to eq. taut.: 304
% 
% Binary resolution: 82
% Forward superposition: 11185
% Backward superposition: 8867
% Self superposition: 215
% Equality factoring: 28
% Equality resolution: 10
% 
% Split clauses: 74
% Split components: 154
% SAT solver clauses: 179
% SAT solver unit clauses: 4
% SAT solver binary clauses: 15
% 
% Sat splits: 74
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 178
% TWLsolver calls for satisfiability: 63
% 
% Memory used [KB]: 29807
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f3732,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f3731,f94,f148,f188,f190,f89,f141,f130,f167,f3707,f3708,f745,f746,f99,f153,f132,f169,f192,f193,f92,f145,f178,f179,f102,f156,f182,f186,f97,f151,f1265,f1303,f134,f171,f2059,f2060,f137,f174])).
fof(f174,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) | $spl52),
  inference(cnf_transformation,[],[f174_D])).
fof(f174_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f137,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7,X6,X8] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X8))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8)))))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.RIGHT_ADD_DISTRIB')).
fof(f2060,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))))) ) | $spl248),
  inference(cnf_transformation,[],[f2060_D])).
fof(f2060_D,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))))) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f2059,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X5))),s('type.num.num',X6))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6)))))) ) | ($spl18 | $spl52)),
  inference(forward_demodulation,[],[f1997,f153])).
fof(f1997,plain,(
  ( ! [X6,X5] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X5),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X5))),s('type.num.num',X6)))) ) | ($spl18 | $spl52)),
  inference(superposition,[],[f174,f153])).
fof(f171,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) ) | $spl46),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f134,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6))),s('type.num.num',X6)))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.MULT|split|1')).
fof(f1303,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | $spl204),
  inference(cnf_transformation,[],[f1303_D])).
fof(f1303_D,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) <=> ~$spl204),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl204])])).
fof(f1265,plain,(
  ( ! [X2,X3] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X3)))))) ) | ($spl38 | $spl46)),
  inference(superposition,[],[f171,f167])).
fof(f151,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) | $spl14),
  inference(cnf_transformation,[],[f151_D])).
fof(f151_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f97,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.ADD_|48|')).
fof(f186,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl62),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f182,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | ($spl4 | $spl14)),
  inference(backward_demodulation,[],[f145,f151])).
fof(f156,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) | $spl24),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f102,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.BIT|49|')).
fof(f179,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | $spl56),
  inference(cnf_transformation,[],[f179_D])).
fof(f179_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f178,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))))))) ) | ($spl24 | $spl42)),
  inference(forward_demodulation,[],[f156,f169])).
fof(f145,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') | $spl4),
  inference(cnf_transformation,[],[f145_D])).
fof(f145_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0') <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f92,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.ALT_ZERO')).
fof(f193,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | $spl68),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f192,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) ) | ($spl4 | $spl56 | $spl62)),
  inference(forward_demodulation,[],[f191,f186])).
fof(f191,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | ($spl4 | $spl56)),
  inference(forward_demodulation,[],[f179,f145])).
fof(f169,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) | $spl42),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f132,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f153,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl18),
  inference(cnf_transformation,[],[f153_D])).
fof(f153_D,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f99,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X11] : s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X11))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X11)))),
  file('thm.numeral.numeral_mult|split|2','thm.numeral.iDUB')).
fof(f746,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))) ) | $spl134),
  inference(cnf_transformation,[],[f746_D])).
fof(f746_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f745,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X0)))))) ) | ($spl18 | $spl42 | $spl68)),
  inference(forward_demodulation,[],[f711,f153])).
fof(f711,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) ) | ($spl42 | $spl68)),
  inference(superposition,[],[f169,f193])).
fof(f3708,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))) ) | $spl340),
  inference(cnf_transformation,[],[f3708_D])).
fof(f3708_D,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))) ) <=> ~$spl340),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl340])])).
fof(f3707,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X4))),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))) ) | ($spl134 | $spl204 | $spl248)),
  inference(forward_demodulation,[],[f3635,f746])).
fof(f3635,plain,(
  ( ! [X4,X5] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num',X4))))),s('type.num.num',X5))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X4),s('type.num.num',X5)))))))) ) | ($spl204 | $spl248)),
  inference(superposition,[],[f1303,f2060])).
fof(f167,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) | $spl38),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f130,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.numeral.numeral_mult|split|2','thm.arithmetic.ADD_SYM')).
fof(f141,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),s('type.num.num',sK1))))) | $spl1),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),s('type.num.num',sK1))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f89,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),s('type.num.num',sK1)))))),
  inference(cnf_transformation,[],[f72])).
fof(f72,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))),s('type.num.num',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f70])).
fof(f70,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))))),s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))))),s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))))),s('type.num.num',X7)))))),
  file('thm.numeral.numeral_mult|split|2','thm.numeral.numeral_mult|split|2')).
fof(f190,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))))) | $spl67),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f188,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))))))))) | ($spl1 | $spl38)),
  inference(forward_demodulation,[],[f141,f167])).
fof(f148,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) | $spl8),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f94,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X11] : s('type.num.num',X11) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X11)))),
  file('thm.numeral.numeral_mult|split|2','thm.numeral.iZ')).
fof(f3731,plain,(
  $false | ($spl8 | $spl67 | $spl340)),
  inference(subsumption_resolution,[],[f3730,f148])).
fof(f3730,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))),s('type.num.num',sK1))))) | ($spl67 | $spl340)),
  inference(backward_demodulation,[],[f3708,f190])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 68
% Passive clauses: 172
% Generated clauses: 3600
% Final active clauses: 60
% Final passive clauses: 83
% Input formulas: 34
% Initial clauses: 49
% 
% Duplicate literals: 46
% Trivial inequalities: 11
% Fw subsumption resolutions: 15
% Fw demodulations: 316
% Bw demodulations: 25
% Condensations: 41
% Global subsumptions: 4
% 
% Simple tautologies: 36
% Equational tautologies: 17
% Forward subsumptions: 2638
% Fw demodulations to eq. taut.: 47
% 
% Binary resolution: 12
% Forward superposition: 1475
% Backward superposition: 1319
% Self superposition: 76
% Equality factoring: 26
% Equality resolution: 5
% 
% Split clauses: 3
% Split components: 6
% SAT solver clauses: 314
% SAT solver unit clauses: 72
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 9
% 
% Sat splits: 3
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 297
% TWLsolver calls for satisfiability: 146
% 
% Memory used [KB]: 5500
% Time elapsed: 0.081 s
% ------------------------------
% ------------------------------
% Success in time 0.696 s
