Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f2513,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2510,f2495,f95,f136,f133,f137,f615,f612,f159,f163,f161,f175,f2504,f2494])).
fof(f2494,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | $spl39),
  inference(cnf_transformation,[],[f2494_D])).
fof(f2494_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f2504,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f2481,f1092])).
fof(f1092,plain,(
  ( ! [X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(resolution,[],[f1062,f101])).
fof(f101,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) & (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))))))))),
  inference(nnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))) <=> ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.EVEN|split|1')).
fof(f1062,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1061,f142])).
fof(f142,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f90,f88])).
fof(f88,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.ALT_ZERO')).
fof(f90,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f10])).
fof(f10,axiom,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.EVEN|split|0')).
fof(f1061,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.ZERO_0'))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(forward_demodulation,[],[f1060,f88])).
fof(f1060,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f1035,f144])).
fof(f144,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f97,f88])).
fof(f97,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f1035,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.|48|_0'))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0)))) )),
  inference(superposition,[],[f129,f88])).
fof(f129,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) & (s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))))),
  inference(nnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) <=> s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7,X6] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6)))))) <=> s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X6))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X7))))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.EVEN_ADD')).
fof(f2481,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | s(bool,'T_0') != s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl1 | $spl2)),
  inference(superposition,[],[f1062,f2468])).
fof(f2468,plain,(
  s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f2444,f137])).
fof(f2444,plain,(
  ~p(s(bool,'T_0')) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | $spl1),
  inference(superposition,[],[f961,f160])).
fof(f160,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))) | $spl1),
  inference(subsumption_resolution,[],[f156,f136])).
fof(f156,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0)))))),
  inference(superposition,[],[f85,f100])).
fof(f100,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numeral.numeral_evenodd|split|2',aHL_BOOL_CASES)).
fof(f85,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f61])).
fof(f61,plain,(
  ? [X0] : p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0] : ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ~! [X0] : ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))))))),
  file('thm.numeral.numeral_evenodd|split|2','thm.numeral.numeral_evenodd|split|2')).
fof(f961,plain,(
  ( ! [X3] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X3)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) )),
  inference(superposition,[],[f128,f809])).
fof(f809,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f808,f143])).
fof(f143,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f96,f88])).
fof(f96,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.ADD_|48|')).
fof(f808,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f458,f127])).
fof(f127,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f458,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f98,f88])).
fof(f98,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.BIT|49|')).
fof(f128,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1)))))) | s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))) = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f82])).
fof(f175,plain,(
  $false | ($spl1 | $spl8)),
  inference(subsumption_resolution,[],[f164,f136])).
fof(f164,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f161,f85])).
fof(f161,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f161_D])).
fof(f161_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f163,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f163_D])).
fof(f163_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f159,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f100])).
fof(f612,plain,(
  ( ! [X3] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) | $spl22),
  inference(cnf_transformation,[],[f612_D])).
fof(f612_D,plain,(
  ( ! [X3] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X3)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f615,plain,(
  ( ! [X9] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) ) | ($spl1 | $spl11)),
  inference(subsumption_resolution,[],[f614,f136])).
fof(f614,plain,(
  ( ! [X9] : (p(s(bool,'F_0')) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) ) | $spl11),
  inference(forward_demodulation,[],[f606,f141])).
fof(f141,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(forward_demodulation,[],[f89,f88])).
fof(f89,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f12])).
fof(f12,axiom,(
  s(bool,'F_0') = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_evenodd|split|2','thm.arithmetic.ODD|split|0')).
fof(f606,plain,(
  ( ! [X9] : (p(s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X9)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) ) | $spl11),
  inference(superposition,[],[f102,f439])).
fof(f439,plain,(
  ( ! [X14] : (s(bool,X14) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X14)) ) | $spl11),
  inference(subsumption_resolution,[],[f293,f163])).
fof(f293,plain,(
  ( ! [X14] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X14) = s(bool,'const.arithmetic.ODD_1'(s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f151,f141])).
fof(f151,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f100,f100])).
fof(f102,plain,(
  ( ! [X0] : (p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) | p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f66])).
fof(f137,plain,(
  p(s(bool,'T_0')) | $spl2),
  inference(cnf_transformation,[],[f137_D])).
fof(f137_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f133,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f122])).
fof(f122,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X8] : ! [X10] : (s(X8,X10) = s(X8,X10) <=> p(s(bool,'T_0')))),
  file('thm.numeral.numeral_evenodd|split|2','thm.bool.REFL_CLAUSE')).
fof(f136,plain,(
  ~p(s(bool,'F_0')) | $spl1),
  inference(cnf_transformation,[],[f136_D])).
fof(f136_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f95,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.numeral.numeral_evenodd|split|2',aHL_FALSITY)).
fof(f2495,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | $spl38),
  inference(cnf_transformation,[],[f2495_D])).
fof(f2495_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f2510,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl1 | $spl2 | $spl22)),
  inference(subsumption_resolution,[],[f2489,f612])).
fof(f2489,plain,(
  ~p(s(bool,'const.arithmetic.EVEN_1'(s('type.num.num',sK0)))) | s(bool,'T_0') = s(bool,'const.arithmetic.EVEN_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',sK0))))) | ($spl1 | $spl2)),
  inference(superposition,[],[f154,f2468])).
fof(f154,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f136,f100])).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 88
% Passive clauses: 431
% Generated clauses: 2401
% Final active clauses: 65
% Final passive clauses: 276
% Input formulas: 29
% Initial clauses: 48
% 
% Duplicate literals: 111
% Trivial inequalities: 25
% Fw subsumption resolutions: 175
% Fw demodulations: 563
% Bw demodulations: 21
% 
% Simple tautologies: 67
% Equational tautologies: 16
% Forward subsumptions: 970
% Fw demodulations to eq. taut.: 10
% 
% Binary resolution: 82
% Forward superposition: 714
% Backward superposition: 570
% Self superposition: 41
% Equality factoring: 28
% 
% Split clauses: 49
% Split components: 98
% SAT solver clauses: 93
% SAT solver unit clauses: 4
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 1
% 
% Sat splits: 49
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 91
% TWLsolver calls for satisfiability: 32
% 
% Memory used [KB]: 1791
% Time elapsed: 0.054 s
% ------------------------------
% ------------------------------
% Success in time 0.06 s
