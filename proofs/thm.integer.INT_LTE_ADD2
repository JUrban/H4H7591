Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (107791)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 119
% Passive clauses: 2653
% Generated clauses: 18117
% Final active clauses: 113
% Final passive clauses: 2418
% Input formulas: 41
% Initial clauses: 55
% 
% Duplicate literals: 845
% Trivial inequalities: 210
% Fw subsumption resolutions: 2107
% Fw demodulations: 2967
% Bw demodulations: 5
% 
% Simple tautologies: 338
% Equational tautologies: 26
% Forward subsumptions: 7774
% 
% Binary resolution: 30
% Forward superposition: 7313
% Backward superposition: 4141
% Self superposition: 219
% Equality factoring: 86
% Equality resolution: 43
% 
% Split clauses: 450
% Split components: 900
% SAT solver clauses: 735
% SAT solver unit clauses: 57
% SAT solver binary clauses: 205
% 
% Sat splits: 450
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 735
% TWLsolver calls for satisfiability: 107
% 
% Memory used [KB]: 13304
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (107810)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 89
% Passive clauses: 698
% Generated clauses: 14051
% Final active clauses: 75
% Final passive clauses: 570
% Input formulas: 41
% Initial clauses: 55
% 
% Duplicate literals: 538
% Trivial inequalities: 115
% Fw subsumption resolutions: 1159
% Fw demodulations: 2917
% Bw demodulations: 48
% Condensations: 905
% 
% Simple tautologies: 159
% Equational tautologies: 21
% Forward subsumptions: 5946
% 
% Binary resolution: 9
% Forward superposition: 4674
% Backward superposition: 2741
% Self superposition: 183
% Equality factoring: 50
% Equality resolution: 13
% 
% Split clauses: 77
% Split components: 156
% SAT solver clauses: 1634
% SAT solver unit clauses: 67
% SAT solver binary clauses: 28
% 
% Sat splits: 77
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1634
% TWLsolver calls for satisfiability: 316
% 
% Memory used [KB]: 15863
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f34978,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f143,f196,f194,f215,f222,f220,f597,f622,f620,f1427,f1430,f1429,f1572,f1590,f1621,f1641,f1648,f2501,f2502,f2506,f2508,f2512,f2480,f2513,f2461,f2531,f2525,f2507,f3068,f2524,f3072,f3073,f3210,f3214,f3307,f3308,f4816,f4798,f4839,f6989,f6998,f6992,f6999,f8609,f8617,f6990,f8618,f8611,f8619,f15873,f15843,f15891,f17369,f17338,f1428,f17388,f34971])).
fof(f34971,plain,(
  $false | $spl11),
  inference(subsumption_resolution,[],[f34970,f622])).
fof(f34970,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))),
  inference(forward_demodulation,[],[f34968,f34946])).
fof(f34946,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f2361,f156])).
fof(f156,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X20,X21] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X20),s('type.integer.int',X21))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X20))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X21)))))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.int_add')).
fof(f2361,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0)))))))) )),
  inference(superposition,[],[f156,f155])).
fof(f155,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X8] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X8))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X7)))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.TINT_ADD_SYM')).
fof(f34968,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))),
  inference(backward_demodulation,[],[f34946,f34594])).
fof(f34594,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))),
  inference(subsumption_resolution,[],[f34549,f141])).
fof(f141,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_LTE_ADD2',aHL_TRUTH)).
fof(f34549,plain,(
  ~p(s(bool,'T_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',sK1)))))),
  inference(superposition,[],[f15214,f216])).
fof(f216,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))),
  inference(subsumption_resolution,[],[f209,f144])).
fof(f144,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f45])).
fof(f45,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_LTE_ADD2',aHL_FALSITY)).
fof(f209,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))),
  inference(superposition,[],[f138,f148])).
fof(f148,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_LTE_ADD2',aHL_BOOL_CASES)).
fof(f138,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f105])).
fof(f105,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(flattening,[],[f104])).
fof(f104,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) & ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(ennf_transformation,[],[f43])).
fof(f43,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.INT_LTE_ADD2')).
fof(f15214,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',X1)))))) )),
  inference(subsumption_resolution,[],[f15181,f144])).
fof(f15181,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',X1)))))) )),
  inference(superposition,[],[f2884,f148])).
fof(f2884,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',X1)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) )),
  inference(subsumption_resolution,[],[f2864,f141])).
fof(f2864,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK3),s('type.integer.int',X1))))))) )),
  inference(superposition,[],[f183,f218])).
fof(f218,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))),
  inference(subsumption_resolution,[],[f211,f144])).
fof(f211,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3)))),
  inference(superposition,[],[f139,f148])).
fof(f139,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK2),s('type.integer.int',sK3))))),
  inference(cnf_transformation,[],[f126])).
fof(f183,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3))))))) )),
  inference(cnf_transformation,[],[f119])).
fof(f119,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(flattening,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(ennf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) => p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.INT_LET_ADD2')).
fof(f17388,plain,(
  ( ! [X28,X29] : (s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X29))) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,X29)) ) | $spl40),
  inference(cnf_transformation,[],[f17388_D])).
fof(f17388_D,plain,(
  ( ! [X28,X29] : (s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X29))) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,X29)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1428,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X3)))) ) | $spl12),
  inference(cnf_transformation,[],[f1428_D])).
fof(f1428_D,plain,(
  ( ! [X3] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X3)))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f17338,plain,(
  ( ! [X140,X141,X139] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X140))) | s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X139))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X141))) | s(bool,'T_0') = s(bool,X141) | s(bool,'T_0') = s(bool,X139)) )),
  inference(duplicate_literal_removal,[],[f16938])).
fof(f16938,plain,(
  ( ! [X140,X141,X139] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X140))) | s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X139))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X141))) | s(bool,'T_0') = s(bool,X141) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X140))) | s(bool,'T_0') = s(bool,X139)) )),
  inference(superposition,[],[f1241,f1241])).
fof(f1241,plain,(
  ( ! [X54,X53] : (s(bool,X54) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X53))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X54))) | s(bool,'T_0') = s(bool,X53)) )),
  inference(forward_demodulation,[],[f965,f149])).
fof(f149,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X12] : ! [X7] : s(X12,X7) = s(X12,'const.combin.I_1'(s(X12,X7)))),
  file('thm.integer.INT_LTE_ADD2','thm.combin.I_THM')).
fof(f965,plain,(
  ( ! [X54,X53] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X53))) | s(bool,X54) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X53))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X54)))) )),
  inference(superposition,[],[f681,f197])).
fof(f197,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f151,f149])).
fof(f151,plain,(
  ( ! [X0,X1] : (s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X12] : ! [X37] : s(X12,'const.combin.I_1'(s(X12,X37))) = s(X12,happ(s(fun(X12,X12),'const.combin.I_0'),s(X12,X37)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_0_1_const.combin.I')).
fof(f681,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(superposition,[],[f561,f561])).
fof(f561,plain,(
  ( ! [X15] : (s(bool,X15) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X15)))) )),
  inference(superposition,[],[f547,f149])).
fof(f547,plain,(
  ( ! [X11] : (s(bool,X11) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(subsumption_resolution,[],[f392,f141])).
fof(f392,plain,(
  ( ! [X11] : (~p(s(bool,'T_0')) | s(bool,X11) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f140,f203])).
fof(f203,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f148,f148])).
fof(f140,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))),
  inference(cnf_transformation,[],[f126])).
fof(f17369,plain,(
  ( ! [X28,X29,X27] : (s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X29))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X27))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X28)) )),
  inference(duplicate_literal_removal,[],[f16737])).
fof(f16737,plain,(
  ( ! [X28,X29,X27] : (s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28))) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X29))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X27))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X27))) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f1241,f1241])).
fof(f15891,plain,(
  ( ! [X26,X25] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X25))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X26))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X26)) ) | $spl38),
  inference(cnf_transformation,[],[f15891_D])).
fof(f15891_D,plain,(
  ( ! [X26,X25] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X25))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X26))) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,X26)) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f15843,plain,(
  ( ! [X127,X128,X126] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X127))) | s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X126))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X128))) | s(bool,'T_0') = s(bool,X128) | s(bool,'T_0') = s(bool,X126)) )),
  inference(duplicate_literal_removal,[],[f15457])).
fof(f15457,plain,(
  ( ! [X127,X128,X126] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X127))) | s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X126))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X128))) | s(bool,'T_0') = s(bool,X128) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X127))) | s(bool,'T_0') = s(bool,X126)) )),
  inference(superposition,[],[f1240,f1240])).
fof(f1240,plain,(
  ( ! [X52,X51] : (s(bool,X52) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X51))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X52))) | s(bool,'T_0') = s(bool,X51)) )),
  inference(forward_demodulation,[],[f964,f149])).
fof(f964,plain,(
  ( ! [X52,X51] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X51))) | s(bool,X52) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X51))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X52)))) )),
  inference(superposition,[],[f681,f150])).
fof(f150,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X39] : ! [X40] : s(X39,X40) = s(X39,happ(s(fun(X39,X39),'_i_0_0'),s(X39,X40)))),
  file('thm.integer.INT_LTE_ADD2','_i0_ax')).
fof(f15873,plain,(
  ( ! [X26,X24,X25] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X25))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X26))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X24))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,X25)) )),
  inference(duplicate_literal_removal,[],[f15264])).
fof(f15264,plain,(
  ( ! [X26,X24,X25] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X25))) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X26))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X24))) | s(bool,'T_0') = s(bool,X26) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X24))) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f1240,f1240])).
fof(f8619,plain,(
  ( ! [X31] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X31)))) ) | $spl36),
  inference(cnf_transformation,[],[f8619_D])).
fof(f8619_D,plain,(
  ( ! [X31] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X31)))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f8611,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | $spl35),
  inference(cnf_transformation,[],[f8611_D])).
fof(f8611_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f8618,plain,(
  ( ! [X31] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X31)))) ) | ($spl14 | $spl16)),
  inference(subsumption_resolution,[],[f8412,f1869])).
fof(f1869,plain,(
  ( ! [X28] : (s(bool,'T_0') != s(bool,X28) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28)))) ) | $spl14),
  inference(forward_demodulation,[],[f1826,f149])).
fof(f1826,plain,(
  ( ! [X28] : (s(bool,X28) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28)))) ) | $spl14),
  inference(superposition,[],[f1429,f197])).
fof(f8412,plain,(
  ( ! [X31] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X31))) | s(bool,'T_0') = s(bool,X31)) ) | ($spl14 | $spl16)),
  inference(superposition,[],[f1869,f8207])).
fof(f8207,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(condensation,[],[f8206])).
fof(f8206,plain,(
  ( ! [X37,X38] : (s(bool,'T_0') = s(bool,X38) | s(bool,X38) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl16),
  inference(trivial_inequality_removal,[],[f8173])).
fof(f8173,plain,(
  ( ! [X37,X38] : (s(bool,X37) != s(bool,X37) | s(bool,'T_0') = s(bool,X38) | s(bool,X38) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X37)) ) | $spl16),
  inference(superposition,[],[f2759,f148])).
fof(f2759,plain,(
  ( ! [X54,X53] : (s(bool,'F_0') != s(bool,X53) | s(bool,'T_0') = s(bool,X54) | s(bool,X54) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X53)))) ) | $spl16),
  inference(superposition,[],[f2502,f197])).
fof(f6990,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) | $spl28),
  inference(cnf_transformation,[],[f6990_D])).
fof(f6990_D,plain,(
  ( ! [X22] : (s(bool,'T_0') = s(bool,X22)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f8617,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl11 | $spl14 | $spl16)),
  inference(subsumption_resolution,[],[f8411,f7234])).
fof(f7234,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl11 | $spl16)),
  inference(superposition,[],[f7015,f148])).
fof(f7015,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | ($spl11 | $spl16)),
  inference(subsumption_resolution,[],[f6831,f622])).
fof(f6831,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | ($spl11 | $spl16)),
  inference(superposition,[],[f622,f6675])).
fof(f6675,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(condensation,[],[f6674])).
fof(f6674,plain,(
  ( ! [X33,X34] : (s(bool,'T_0') = s(bool,X34) | s(bool,X34) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X33)) ) | $spl16),
  inference(trivial_inequality_removal,[],[f6644])).
fof(f6644,plain,(
  ( ! [X33,X34] : (s(bool,X33) != s(bool,X33) | s(bool,'T_0') = s(bool,X34) | s(bool,X34) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X33)) ) | $spl16),
  inference(superposition,[],[f2758,f148])).
fof(f2758,plain,(
  ( ! [X52,X51] : (s(bool,'F_0') != s(bool,X51) | s(bool,'T_0') = s(bool,X52) | s(bool,X52) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X51)))) ) | $spl16),
  inference(superposition,[],[f2502,f150])).
fof(f8411,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X30))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl14 | $spl16)),
  inference(superposition,[],[f1868,f8207])).
fof(f1868,plain,(
  ( ! [X27] : (s(bool,'T_0') != s(bool,X27) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X27)))) ) | $spl14),
  inference(forward_demodulation,[],[f1825,f149])).
fof(f1825,plain,(
  ( ! [X27] : (s(bool,X27) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X27)))) ) | $spl14),
  inference(superposition,[],[f1429,f150])).
fof(f8609,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X22)) ) | ($spl11 | $spl16)),
  inference(subsumption_resolution,[],[f8407,f3394])).
fof(f3394,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl11 | $spl16)),
  inference(superposition,[],[f3078,f148])).
fof(f3078,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | ($spl11 | $spl16)),
  inference(subsumption_resolution,[],[f2964,f622])).
fof(f2964,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | ($spl11 | $spl16)),
  inference(superposition,[],[f622,f2826])).
fof(f2826,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(condensation,[],[f2825])).
fof(f2825,plain,(
  ( ! [X26,X27] : (s(bool,'T_0') = s(bool,X27) | s(bool,X27) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X26)) ) | $spl16),
  inference(trivial_inequality_removal,[],[f2807])).
fof(f2807,plain,(
  ( ! [X26,X27] : (s(bool,X26) != s(bool,X26) | s(bool,'T_0') = s(bool,X27) | s(bool,X27) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X26)) ) | $spl16),
  inference(superposition,[],[f2757,f148])).
fof(f2757,plain,(
  ( ! [X50,X49] : (s(bool,'F_0') != s(bool,X49) | s(bool,'T_0') = s(bool,X50) | s(bool,X50) = s(bool,'const.combin.I_1'(s(bool,X49)))) ) | $spl16),
  inference(superposition,[],[f2502,f149])).
fof(f8407,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22))) | s(bool,'T_0') = s(bool,X22)) ) | $spl16),
  inference(superposition,[],[f1480,f8207])).
fof(f1480,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(duplicate_literal_removal,[],[f1479])).
fof(f1479,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(forward_demodulation,[],[f1104,f149])).
fof(f1104,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.combin.I_1'(s(bool,X0))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(equality_factoring,[],[f681])).
fof(f6999,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X30)))) ) | $spl32),
  inference(cnf_transformation,[],[f6999_D])).
fof(f6999_D,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X30)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f6992,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | $spl31),
  inference(cnf_transformation,[],[f6992_D])).
fof(f6992_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f6998,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X30)))) ) | ($spl14 | $spl16)),
  inference(subsumption_resolution,[],[f6811,f1868])).
fof(f6811,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X30))) | s(bool,'T_0') = s(bool,X30)) ) | ($spl14 | $spl16)),
  inference(superposition,[],[f1868,f6675])).
fof(f6989,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X22)) ) | ($spl11 | $spl16)),
  inference(subsumption_resolution,[],[f6807,f3394])).
fof(f6807,plain,(
  ( ! [X22] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22))) | s(bool,'T_0') = s(bool,X22)) ) | $spl16),
  inference(superposition,[],[f1480,f6675])).
fof(f4839,plain,(
  ( ! [X30,X29] : (s(bool,'const.combin.I_1'(s(bool,X29))) = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X30)) ) | $spl26),
  inference(cnf_transformation,[],[f4839_D])).
fof(f4839_D,plain,(
  ( ! [X30,X29] : (s(bool,'const.combin.I_1'(s(bool,X29))) = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,X30)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f4798,plain,(
  ( ! [X50,X51,X49] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X50))) | s(bool,'const.combin.I_1'(s(bool,X49))) = s(bool,'const.combin.I_1'(s(bool,X51))) | s(bool,'T_0') = s(bool,X51) | s(bool,'T_0') = s(bool,X49)) ) | $spl16),
  inference(duplicate_literal_removal,[],[f4590])).
fof(f4590,plain,(
  ( ! [X50,X51,X49] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X50))) | s(bool,'const.combin.I_1'(s(bool,X49))) = s(bool,'const.combin.I_1'(s(bool,X51))) | s(bool,'T_0') = s(bool,X51) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X50))) | s(bool,'T_0') = s(bool,X49)) ) | $spl16),
  inference(superposition,[],[f3828,f3828])).
fof(f3828,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl16),
  inference(superposition,[],[f3056,f148])).
fof(f3056,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) ) | $spl16),
  inference(condensation,[],[f3055])).
fof(f3055,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X11)))) ) | $spl16),
  inference(subsumption_resolution,[],[f2900,f1480])).
fof(f2900,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X11)))) ) | $spl16),
  inference(superposition,[],[f2826,f681])).
fof(f4816,plain,(
  ( ! [X30,X28,X29] : (s(bool,'const.combin.I_1'(s(bool,X29))) = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X28))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,X29)) ) | $spl16),
  inference(duplicate_literal_removal,[],[f4494])).
fof(f4494,plain,(
  ( ! [X30,X28,X29] : (s(bool,'const.combin.I_1'(s(bool,X29))) = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X28))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X28))) | s(bool,'T_0') = s(bool,X29)) ) | $spl16),
  inference(superposition,[],[f3828,f3828])).
fof(f3308,plain,(
  $false | ($spl11 | $spl12 | $spl16)),
  inference(subsumption_resolution,[],[f3240,f3187])).
fof(f3187,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,X5)) ) | ($spl12 | $spl16)),
  inference(duplicate_literal_removal,[],[f3129])).
fof(f3129,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) ) | ($spl12 | $spl16)),
  inference(superposition,[],[f1428,f2826])).
fof(f3240,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | ($spl11 | $spl12 | $spl16)),
  inference(backward_demodulation,[],[f3187,f3078])).
fof(f3307,plain,(
  $false | ($spl12 | $spl16)),
  inference(subsumption_resolution,[],[f3215,f141])).
fof(f3215,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl16)),
  inference(backward_demodulation,[],[f3187,f144])).
fof(f3214,plain,(
  $false | ($spl7 | $spl12 | $spl14)),
  inference(subsumption_resolution,[],[f3213,f222])).
fof(f3213,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl12 | $spl14)),
  inference(condensation,[],[f3212])).
fof(f3212,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X5)) ) | ($spl12 | $spl14)),
  inference(backward_demodulation,[],[f3211,f287])).
fof(f287,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,X5) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X5)))) )),
  inference(forward_demodulation,[],[f277,f149])).
fof(f277,plain,(
  ( ! [X5] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X5))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X5)))) )),
  inference(superposition,[],[f205,f197])).
fof(f205,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f148,f149])).
fof(f3211,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X0)))) ) | ($spl12 | $spl14)),
  inference(forward_demodulation,[],[f3092,f149])).
fof(f3092,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'const.combin.I_1'(s(bool,X0)))))) ) | ($spl12 | $spl14)),
  inference(unit_resulting_resolution,[],[f1428,f1869])).
fof(f3210,plain,(
  $false | ($spl7 | $spl12 | $spl14)),
  inference(subsumption_resolution,[],[f3209,f222])).
fof(f3209,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl12 | $spl14)),
  inference(condensation,[],[f3208])).
fof(f3208,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,X4)) ) | ($spl12 | $spl14)),
  inference(backward_demodulation,[],[f3207,f286])).
fof(f286,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,X4) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X4)))) )),
  inference(forward_demodulation,[],[f276,f149])).
fof(f276,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X4))) | s(bool,'F_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X4)))) )),
  inference(superposition,[],[f205,f150])).
fof(f3207,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) ) | ($spl12 | $spl14)),
  inference(forward_demodulation,[],[f3093,f149])).
fof(f3093,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'const.combin.I_1'(s(bool,X0)))))) ) | ($spl12 | $spl14)),
  inference(unit_resulting_resolution,[],[f1428,f1868])).
fof(f3073,plain,(
  ( ! [X30,X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X30) | s(bool,X29) = s(bool,X30)) ) | $spl24),
  inference(cnf_transformation,[],[f3073_D])).
fof(f3073_D,plain,(
  ( ! [X30,X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X30) | s(bool,X29) = s(bool,X30)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f3072,plain,(
  ( ! [X30,X28,X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X28))) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X30)) ) | $spl16),
  inference(subsumption_resolution,[],[f2958,f1480])).
fof(f2958,plain,(
  ( ! [X30,X28,X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X28))) | s(bool,X29) = s(bool,X30) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,X28)) ) | $spl16),
  inference(superposition,[],[f1725,f2826])).
fof(f1725,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X1))) | s(bool,X0) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f1480,f203])).
fof(f2524,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | $spl23),
  inference(cnf_transformation,[],[f2524_D])).
fof(f2524_D,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f3068,plain,(
  ( ! [X23] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X23)))) ) | $spl16),
  inference(subsumption_resolution,[],[f2955,f1480])).
fof(f2955,plain,(
  ( ! [X23] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X23))) | s(bool,'T_0') = s(bool,X23)) ) | $spl16),
  inference(superposition,[],[f1480,f2826])).
fof(f2507,plain,(
  ( ! [X10,X8,X9] : (s(bool,X8) != s(bool,X9) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X10) | s(bool,X9) = s(bool,X10)) ) | $spl18),
  inference(cnf_transformation,[],[f2507_D])).
fof(f2507_D,plain,(
  ( ! [X10,X8,X9] : (s(bool,X8) != s(bool,X9) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X10) | s(bool,X9) = s(bool,X10)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2525,plain,(
  s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | $spl22),
  inference(cnf_transformation,[],[f2525_D])).
fof(f2525_D,plain,(
  s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'F_0'))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f2531,plain,(
  ( ! [X52,X53,X51] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,X51) != s(bool,X52) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,'T_0') = s(bool,X51)) ) | $spl7),
  inference(forward_demodulation,[],[f2465,f1642])).
fof(f1642,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | $spl7),
  inference(global_subsumption,[],[f140,f139,f138,f141,f142,f143,f144,f145,f146,f147,f148,f149,f150,f197,f155,f156,f158,f164,f165,f166,f167,f169,f168,f170,f171,f174,f173,f172,f181,f182,f184,f185,f186,f187,f190,f191,f192,f203,f205,f206,f216,f218,f215,f222,f227,f245,f266,f286,f287,f302,f303,f304,f319,f329,f330,f331,f379,f547,f554,f561,f562,f563,f597,f681,f826,f832,f1240,f1241,f1339,f1480,f1481,f1617,f152,f188,f810,f157,f159,f1615,f183,f1618,f613])).
fof(f613,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(duplicate_literal_removal,[],[f559])).
fof(f559,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f547,f148])).
fof(f1618,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))),
  inference(global_subsumption,[],[f140,f139,f138,f141,f142,f143,f144,f145,f146,f147,f148,f149,f150,f197,f152,f155,f156,f157,f158,f159,f164,f165,f166,f167,f169,f168,f170,f171,f174,f173,f172,f181,f182,f183,f184,f185,f186,f187,f188,f190,f191,f192,f203,f205,f206,f216,f218,f215,f227,f245,f266,f286,f287,f302,f303,f304,f319,f329,f330,f331,f379,f547,f561,f562,f563,f597,f681,f810,f826,f1240,f1241,f1339,f1480,f1481,f1615,f1617])).
fof(f1615,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) )),
  inference(condensation,[],[f1614])).
fof(f1614,plain,(
  ( ! [X54,X55,X53] : (s(bool,'T_0') = s(bool,X55) | s('type.pair.prod'('type.num.num','type.num.num'),X53) != s('type.pair.prod'('type.num.num','type.num.num'),X54) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X53),s('type.pair.prod'('type.num.num','type.num.num'),X54)))))) )),
  inference(subsumption_resolution,[],[f1613,f206])).
fof(f1613,plain,(
  ( ! [X54,X55,X53] : (s(bool,'T_0') = s(bool,X55) | p(s(bool,X55)) | s('type.pair.prod'('type.num.num','type.num.num'),X53) != s('type.pair.prod'('type.num.num','type.num.num'),X54) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X53),s('type.pair.prod'('type.num.num','type.num.num'),X54)))))) )),
  inference(forward_demodulation,[],[f1032,f149])).
fof(f1032,plain,(
  ( ! [X54,X55,X53] : (p(s(bool,X55)) | s('type.pair.prod'('type.num.num','type.num.num'),X53) != s('type.pair.prod'('type.num.num','type.num.num'),X54) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X55))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X53),s('type.pair.prod'('type.num.num','type.num.num'),X54)))))) )),
  inference(superposition,[],[f159,f681])).
fof(f159,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1)) )),
  inference(cnf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),X1) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X14,X15] : (s('type.pair.prod'('type.num.num','type.num.num'),X14) = s('type.pair.prod'('type.num.num','type.num.num'),X15) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X14),s('type.pair.prod'('type.num.num','type.num.num'),X15)))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.TINT_EQ_AP')).
fof(f157,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X37,X38] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X37),s('type.pair.prod'('type.num.num','type.num.num'),X38))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X37))),s('type.pair.prod'('type.num.num','type.num.num'),X38)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_0_2_const.integer.tint_eq')).
fof(f810,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(forward_demodulation,[],[f794,f197])).
fof(f794,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.combin.I_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(unit_resulting_resolution,[],[f197,f159])).
fof(f188,plain,(
  ( ! [X6,X4,X2,X0,X10,X8,X7,X5,X3,X1,X11,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) | s(X1,happ(s(fun(X3,X1),X10),s(X3,X11))) = s(X1,'const.quotient.-->_4'(s(fun(X3,X2),X6),s(fun(X0,X1),X8),s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X9),s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X10),s(fun(X2,X3),X5))))),s(X3,X11)))) )),
  inference(cnf_transformation,[],[f123])).
fof(f123,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) | ! [X7,X8,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) | ! [X10,X11] : s(X1,happ(s(fun(X3,X1),X10),s(X3,X11))) = s(X1,'const.quotient.-->_4'(s(fun(X3,X2),X6),s(fun(X0,X1),X8),s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X9),s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X10),s(fun(X2,X3),X5))))),s(X3,X11)))))),
  inference(ennf_transformation,[],[f95])).
fof(f95,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) => ! [X10,X11] : s(X1,happ(s(fun(X3,X1),X10),s(X3,X11))) = s(X1,'const.quotient.-->_4'(s(fun(X3,X2),X6),s(fun(X0,X1),X8),s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X9),s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X10),s(fun(X2,X3),X5))))),s(X3,X11)))))),
  inference(flattening,[],[f94])).
fof(f94,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X2,fun(X2,bool)),X4),s(fun(X2,X3),X5),s(fun(X3,X2),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X7),s(fun(X0,X1),X8),s(fun(X1,X0),X9)))) => ! [X10,X11] : s(X1,happ(s(fun(X3,X1),X10),s(X3,X11))) = s(X1,'const.quotient.-->_4'(s(fun(X3,X2),X6),s(fun(X0,X1),X8),s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X9),s(fun(X2,X1),'_dst_x0x1_2'(s(fun(X3,X1),X10),s(fun(X2,X3),X5))))),s(X3,X11)))))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X22,X28,X12,X27] : ! [X23,X29,X30] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X23),s(fun(X12,X27),X29),s(fun(X27,X12),X30)))) => ! [X24,X31,X32] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X22,fun(X22,bool)),X24),s(fun(X22,X28),X31),s(fun(X28,X22),X32)))) => ! [X25,X5] : s(X28,happ(s(fun(X27,X28),X25),s(X27,X5))) = s(X28,'const.quotient.-->_4'(s(fun(X27,X12),X30),s(fun(X22,X28),X31),s(fun(X12,X22),'_dst_x0x1_2'(s(fun(X28,X22),X32),s(fun(X12,X28),'_dst_x0x1_2'(s(fun(X27,X28),X25),s(fun(X12,X27),X29))))),s(X27,X5)))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.LAMBDA_PRS')).
fof(f152,plain,(
  ( ! [X2,X0,X1] : (s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),'const.bool.RES_FORALL_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),'const.bool.RES_FORALL_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))) = s(bool,happ(s(fun(fun(X0,bool),bool),'const.bool.RES_FORALL_1'(s(fun(X0,bool),X1))),s(fun(X0,bool),X2)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X12] : ! [X37,X38] : s(bool,'const.bool.RES_FORALL_2'(s(fun(X12,bool),X37),s(fun(X12,bool),X38))) = s(bool,happ(s(fun(fun(X12,bool),bool),'const.bool.RES_FORALL_1'(s(fun(X12,bool),X37))),s(fun(X12,bool),X38)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_1_2_const.bool.RES_FORALL')).
fof(f1617,plain,(
  ( ! [X10] : (s(bool,'T_0') = s(bool,X10) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))) )),
  inference(forward_demodulation,[],[f1616,f149])).
fof(f1616,plain,(
  ( ! [X10] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X10)))) )),
  inference(subsumption_resolution,[],[f723,f1480])).
fof(f723,plain,(
  ( ! [X10] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X10)))) )),
  inference(superposition,[],[f206,f561])).
fof(f1481,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(subsumption_resolution,[],[f1100,f1480])).
fof(f1100,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(equality_factoring,[],[f681])).
fof(f1339,plain,(
  s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0')))),
  inference(unit_resulting_resolution,[],[f142,f206])).
fof(f832,plain,(
  ( ! [X17,X16] : (s('type.pair.prod'('type.num.num','type.num.num'),X16) != s('type.pair.prod'('type.num.num','type.num.num'),X17) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X16),s('type.pair.prod'('type.num.num','type.num.num'),X17)))))) ) | $spl7),
  inference(subsumption_resolution,[],[f831,f144])).
fof(f831,plain,(
  ( ! [X17,X16] : (p(s(bool,'F_0')) | s('type.pair.prod'('type.num.num','type.num.num'),X16) != s('type.pair.prod'('type.num.num','type.num.num'),X17) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X16),s('type.pair.prod'('type.num.num','type.num.num'),X17)))))) ) | $spl7),
  inference(forward_demodulation,[],[f809,f554])).
fof(f809,plain,(
  ( ! [X17,X16] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | s('type.pair.prod'('type.num.num','type.num.num'),X16) != s('type.pair.prod'('type.num.num','type.num.num'),X17) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X16),s('type.pair.prod'('type.num.num','type.num.num'),X17)))))) )),
  inference(superposition,[],[f159,f561])).
fof(f826,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | s(bool,'T_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(subsumption_resolution,[],[f803,f144])).
fof(f803,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | s(bool,'T_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(superposition,[],[f159,f148])).
fof(f563,plain,(
  ( ! [X17] : (s(bool,X17) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X17)))) )),
  inference(superposition,[],[f547,f197])).
fof(f562,plain,(
  ( ! [X16] : (s(bool,X16) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X16)))) )),
  inference(superposition,[],[f547,f150])).
fof(f554,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | $spl7),
  inference(unit_resulting_resolution,[],[f222,f547])).
fof(f379,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f141,f203])).
fof(f331,plain,(
  ( ! [X19,X20] : (s(bool,'T_0') = s(bool,X19) | s(bool,X20) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f203,f197])).
fof(f330,plain,(
  ( ! [X17,X18] : (s(bool,'T_0') = s(bool,X17) | s(bool,X18) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17))) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f203,f150])).
fof(f329,plain,(
  ( ! [X15,X16] : (s(bool,'T_0') = s(bool,X15) | s(bool,X16) = s(bool,'const.combin.I_1'(s(bool,X15))) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f203,f149])).
fof(f319,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f203,f203])).
fof(f304,plain,(
  ( ! [X28,X29] : (s(bool,X28) = s(bool,X29) | s(bool,'T_0') = s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X28)))) )),
  inference(superposition,[],[f203,f197])).
fof(f303,plain,(
  ( ! [X26,X27] : (s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X26)))) )),
  inference(superposition,[],[f203,f150])).
fof(f302,plain,(
  ( ! [X24,X25] : (s(bool,X24) = s(bool,X25) | s(bool,'T_0') = s(bool,X25) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X24)))) )),
  inference(superposition,[],[f203,f149])).
fof(f266,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0')))) )),
  inference(unit_resulting_resolution,[],[f145,f206])).
fof(f245,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f197,f148])).
fof(f227,plain,(
  ( ! [X2] : (s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X2))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f150,f148])).
fof(f206,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f144,f148])).
fof(f192,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7,X8] : s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3,X4] : ! [X5,X6,X7,X8] : s(fun(X2,X0),happ(s(fun(X4,fun(X2,X0)),'_dst_x00x11x11_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X4,fun(X2,X1)),X6),s(fun(X4,fun(X2,X3)),X7))),s(X4,X8))) = s(fun(X2,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X3,X0)),X5),s(fun(X2,X1),happ(s(fun(X4,fun(X2,X1)),X6),s(X4,X8))),s(fun(X2,X3),happ(s(fun(X4,fun(X2,X3)),X7),s(X4,X8)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X41,X45,X42,X47,X39] : ! [X43,X40,X46,X44] : s(fun(X42,X41),happ(s(fun(X39,fun(X42,X41)),'_dst_x00x11x11_3'(s(fun(X45,fun(X47,X41)),X43),s(fun(X39,fun(X42,X45)),X40),s(fun(X39,fun(X42,X47)),X46))),s(X39,X44))) = s(fun(X42,X41),'_dst_x0x1x1_3'(s(fun(X45,fun(X47,X41)),X43),s(fun(X42,X45),happ(s(fun(X39,fun(X42,X45)),X40),s(X39,X44))),s(fun(X42,X47),happ(s(fun(X39,fun(X42,X47)),X46),s(X39,X44)))))),
  file('thm.integer.INT_LTE_ADD2','_dst_x00x11x11_ax')).
fof(f191,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f100])).
fof(f100,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X41,X42,X45,X39] : ! [X43,X40,X46,X44] : s(X41,happ(s(fun(X39,X41),'_dst_x0x1x1_3'(s(fun(X42,fun(X45,X41)),X43),s(fun(X39,X42),X40),s(fun(X39,X45),X46))),s(X39,X44))) = s(X41,happ(s(fun(X45,X41),happ(s(fun(X42,fun(X45,X41)),X43),s(X42,happ(s(fun(X39,X42),X40),s(X39,X44))))),s(X45,happ(s(fun(X39,X45),X46),s(X39,X44)))))),
  file('thm.integer.INT_LTE_ADD2','_dst_x0x1x1_ax')).
fof(f190,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))) )),
  inference(cnf_transformation,[],[f99])).
fof(f99,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))),
  inference(flattening,[],[f98])).
fof(f98,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,'const.quotient.-->_4'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6),s(X3,X7))) = s(X0,happ(s(fun(X3,X0),'const.quotient.-->_3'(s(fun(X3,X1),X4),s(fun(X2,X0),X5),s(fun(X1,X2),X6))),s(X3,X7)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X28,X27,X22,X12] : ! [X37,X38,X48,X49] : s(X28,'const.quotient.-->_4'(s(fun(X12,X27),X37),s(fun(X22,X28),X38),s(fun(X27,X22),X48),s(X12,X49))) = s(X28,happ(s(fun(X12,X28),'const.quotient.-->_3'(s(fun(X12,X27),X37),s(fun(X22,X28),X38),s(fun(X27,X22),X48))),s(X12,X49)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_3_4_const.quotient.-->')).
fof(f187,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X4),s(fun(X0,X1),X5),s(fun(X1,X0),X6)))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X3,fun(X3,bool)),X7),s(fun(X3,X2),X8),s(fun(X2,X3),X9)))) | p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(fun(X0,X3),fun(fun(X0,X3),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X4),s(fun(X3,fun(X3,bool)),X7))),s(fun(fun(X0,X3),fun(X1,X2)),'const.quotient.-->_2'(s(fun(X1,X0),X6),s(fun(X3,X2),X8))),s(fun(fun(X1,X2),fun(X0,X3)),'const.quotient.-->_2'(s(fun(X0,X1),X5),s(fun(X2,X3),X9))))))) )),
  inference(cnf_transformation,[],[f122])).
fof(f122,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X4),s(fun(X0,X1),X5),s(fun(X1,X0),X6)))) | ! [X7,X8,X9] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X3,fun(X3,bool)),X7),s(fun(X3,X2),X8),s(fun(X2,X3),X9)))) | p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(fun(X0,X3),fun(fun(X0,X3),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X4),s(fun(X3,fun(X3,bool)),X7))),s(fun(fun(X0,X3),fun(X1,X2)),'const.quotient.-->_2'(s(fun(X1,X0),X6),s(fun(X3,X2),X8))),s(fun(fun(X1,X2),fun(X0,X3)),'const.quotient.-->_2'(s(fun(X0,X1),X5),s(fun(X2,X3),X9))))))))),
  inference(ennf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X4),s(fun(X0,X1),X5),s(fun(X1,X0),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X3,fun(X3,bool)),X7),s(fun(X3,X2),X8),s(fun(X2,X3),X9)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(fun(X0,X3),fun(fun(X0,X3),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X4),s(fun(X3,fun(X3,bool)),X7))),s(fun(fun(X0,X3),fun(X1,X2)),'const.quotient.-->_2'(s(fun(X1,X0),X6),s(fun(X3,X2),X8))),s(fun(fun(X1,X2),fun(X0,X3)),'const.quotient.-->_2'(s(fun(X0,X1),X5),s(fun(X2,X3),X9))))))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X4),s(fun(X0,X1),X5),s(fun(X1,X0),X6)))) => ! [X7,X8,X9] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X3,fun(X3,bool)),X7),s(fun(X3,X2),X8),s(fun(X2,X3),X9)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(fun(X0,X3),fun(fun(X0,X3),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X4),s(fun(X3,fun(X3,bool)),X7))),s(fun(fun(X0,X3),fun(X1,X2)),'const.quotient.-->_2'(s(fun(X1,X0),X6),s(fun(X3,X2),X8))),s(fun(fun(X1,X2),fun(X0,X3)),'const.quotient.-->_2'(s(fun(X0,X1),X5),s(fun(X2,X3),X9))))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12,X27,X28,X22] : ! [X23,X29,X30] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X23),s(fun(X12,X27),X29),s(fun(X27,X12),X30)))) => ! [X24,X31,X32] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X22,fun(X22,bool)),X24),s(fun(X22,X28),X31),s(fun(X28,X22),X32)))) => p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(fun(X12,X22),fun(fun(X12,X22),bool)),'const.quotient.===>_2'(s(fun(X12,fun(X12,bool)),X23),s(fun(X22,fun(X22,bool)),X24))),s(fun(fun(X12,X22),fun(X27,X28)),'const.quotient.-->_2'(s(fun(X27,X12),X30),s(fun(X22,X28),X31))),s(fun(fun(X27,X28),fun(X12,X22)),'const.quotient.-->_2'(s(fun(X12,X27),X29),s(fun(X28,X22),X32))))))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.FUN_QUOTIENT')).
fof(f186,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'_dst_x1x0_2'(s(fun(X0,fun(X2,X1)),X4),s(X2,happ(s(fun(X3,X2),X5),s(X3,X6))))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x01x10_2'(s(fun(X0,fun(X2,X1)),X4),s(fun(X3,X2),X5))),s(X3,X6)))) )),
  inference(cnf_transformation,[],[f91])).
fof(f91,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X0,X1),'_dst_x1x0_2'(s(fun(X0,fun(X2,X1)),X4),s(X2,happ(s(fun(X3,X2),X5),s(X3,X6))))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x01x10_2'(s(fun(X0,fun(X2,X1)),X4),s(fun(X3,X2),X5))),s(X3,X6)))),
  inference(flattening,[],[f90])).
fof(f90,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X0,X1),'_dst_x1x0_2'(s(fun(X0,fun(X2,X1)),X4),s(X2,happ(s(fun(X3,X2),X5),s(X3,X6))))) = s(fun(X0,X1),happ(s(fun(X3,fun(X0,X1)),'_dst_x01x10_2'(s(fun(X0,fun(X2,X1)),X4),s(fun(X3,X2),X5))),s(X3,X6)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X42,X41,X45,X39] : ! [X43,X40,X44] : s(fun(X42,X41),'_dst_x1x0_2'(s(fun(X42,fun(X45,X41)),X43),s(X45,happ(s(fun(X39,X45),X40),s(X39,X44))))) = s(fun(X42,X41),happ(s(fun(X39,fun(X42,X41)),'_dst_x01x10_2'(s(fun(X42,fun(X45,X41)),X43),s(fun(X39,X45),X40))),s(X39,X44)))),
  file('thm.integer.INT_LTE_ADD2','_dst_x01x10_ax')).
fof(f185,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.quotient.-->_3'(s(fun(X0,X2),X4),s(fun(X3,X1),X5),s(fun(X2,X3),X6))) = s(fun(X0,X1),happ(s(fun(fun(X2,X3),fun(X0,X1)),'const.quotient.-->_2'(s(fun(X0,X2),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : s(fun(X0,X1),'const.quotient.-->_3'(s(fun(X0,X2),X4),s(fun(X3,X1),X5),s(fun(X2,X3),X6))) = s(fun(X0,X1),happ(s(fun(fun(X2,X3),fun(X0,X1)),'const.quotient.-->_2'(s(fun(X0,X2),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6] : s(fun(X0,X1),'const.quotient.-->_3'(s(fun(X0,X2),X4),s(fun(X3,X1),X5),s(fun(X2,X3),X6))) = s(fun(X0,X1),happ(s(fun(fun(X2,X3),fun(X0,X1)),'const.quotient.-->_2'(s(fun(X0,X2),X4),s(fun(X3,X1),X5))),s(fun(X2,X3),X6)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X12,X28,X27,X22] : ! [X37,X38,X48] : s(fun(X12,X28),'const.quotient.-->_3'(s(fun(X12,X27),X37),s(fun(X22,X28),X38),s(fun(X27,X22),X48))) = s(fun(X12,X28),happ(s(fun(fun(X27,X22),fun(X12,X28)),'const.quotient.-->_2'(s(fun(X12,X27),X37),s(fun(X22,X28),X38))),s(fun(X27,X22),X48)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_2_3_const.quotient.-->')).
fof(f184,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3)))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3))))))) )),
  inference(cnf_transformation,[],[f121])).
fof(f121,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3)))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(flattening,[],[f120])).
fof(f120,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(ennf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2,X3] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X16,X17,X18,X19] : ((p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X16),s('type.pair.prod'('type.num.num','type.num.num'),X17)))) & p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X18),s('type.pair.prod'('type.num.num','type.num.num'),X19))))) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X16),s('type.pair.prod'('type.num.num','type.num.num'),X18))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X17),s('type.pair.prod'('type.num.num','type.num.num'),X19)))))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.TINT_ADD_WELLDEF')).
fof(f182,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f84])).
fof(f84,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X41,X39,X42] : ! [X43,X40,X44] : s(X41,happ(s(fun(X39,X41),'_dst_x1x0_2'(s(fun(X39,fun(X42,X41)),X43),s(X42,X40))),s(X39,X44))) = s(X41,happ(s(fun(X42,X41),happ(s(fun(X39,fun(X42,X41)),X43),s(X39,X44))),s(X42,X40)))),
  file('thm.integer.INT_LTE_ADD2','_dst_x1x0_ax')).
fof(f181,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5))))) = s(X0,happ(s(fun(X2,X0),'_dst_x0x1_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X41,X42,X39] : ! [X43,X40,X44] : s(X41,happ(s(fun(X42,X41),X43),s(X42,happ(s(fun(X39,X42),X40),s(X39,X44))))) = s(X41,happ(s(fun(X39,X41),'_dst_x0x1_2'(s(fun(X42,X41),X43),s(fun(X39,X42),X40))),s(X39,X44)))),
  file('thm.integer.INT_LTE_ADD2','_dst_x0x1_ax')).
fof(f172,plain,(
  ( ! [X4,X2,X0,X8,X5,X3,X1,X9] : (~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X8))),s(X1,X9)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X8))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X9))))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f135,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) | ! [X8,X9] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X8))),s(X1,X9)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X8))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X9)))))))) & ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,sK7(X5,X4,X3,X2,X1,X0)))),s(X1,sK8(X5,X4,X3,X2,X1,X0))))) & ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,sK7(X5,X4,X3,X2,X1,X0)))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,sK8(X5,X4,X3,X2,X1,X0)))))))) | p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7,sK8])],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) | ! [X8,X9] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X8))),s(X1,X9)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X8))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X9)))))))) & (? [X6,X7] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) & ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7))))))) | p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))))),
  inference(rectify,[],[f133])).
fof(f133,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) | ! [X6,X7] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7)))))))) & (? [X6,X7] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) & ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7))))))) | p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))))),
  inference(nnf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) <=> ! [X6,X7] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7))))))))),
  inference(ennf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) <=> ! [X6,X7] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) => p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7))))))))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) <=> ! [X6,X7] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X7)))) => p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,X7))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X22,X12] : ! [X23,X24,X25,X26] : (p(s(bool,'const.quotient.===>_4'(s(fun(X12,fun(X12,bool)),X23),s(fun(X22,fun(X22,bool)),X24),s(fun(X12,X22),X25),s(fun(X12,X22),X26)))) <=> ! [X7,X8] : (p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X23),s(X12,X7))),s(X12,X8)))) => p(s(bool,happ(s(fun(X22,bool),happ(s(fun(X22,fun(X22,bool)),X24),s(X22,happ(s(fun(X12,X22),X25),s(X12,X7))))),s(X22,happ(s(fun(X12,X22),X26),s(X12,X8))))))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.FUN_REL')).
fof(f173,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,sK7(X5,X4,X3,X2,X1,X0)))),s(X1,sK8(X5,X4,X3,X2,X1,X0)))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f174,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X3),s(X0,happ(s(fun(X1,X0),X4),s(X1,sK7(X5,X4,X3,X2,X1,X0)))))),s(X0,happ(s(fun(X1,X0),X5),s(X1,sK8(X5,X4,X3,X2,X1,X0))))))) | p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))) )),
  inference(cnf_transformation,[],[f135])).
fof(f171,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(bool,'const.quotient.===>_4'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3),s(fun(X0,X1),X4),s(fun(X0,X1),X5))) = s(bool,happ(s(fun(fun(X0,X1),bool),happ(s(fun(fun(X0,X1),fun(fun(X0,X1),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3))),s(fun(X0,X1),X4))),s(fun(X0,X1),X5)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(bool,'const.quotient.===>_4'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3),s(fun(X0,X1),X4),s(fun(X0,X1),X5))) = s(bool,happ(s(fun(fun(X0,X1),bool),happ(s(fun(fun(X0,X1),fun(fun(X0,X1),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3))),s(fun(X0,X1),X4))),s(fun(X0,X1),X5)))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(bool,'const.quotient.===>_4'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3),s(fun(X0,X1),X4),s(fun(X0,X1),X5))) = s(bool,happ(s(fun(fun(X0,X1),bool),happ(s(fun(fun(X0,X1),fun(fun(X0,X1),bool)),'const.quotient.===>_2'(s(fun(X0,fun(X0,bool)),X2),s(fun(X1,fun(X1,bool)),X3))),s(fun(X0,X1),X4))),s(fun(X0,X1),X5)))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X12,X22] : ! [X37,X38,X48,X49] : s(bool,'const.quotient.===>_4'(s(fun(X12,fun(X12,bool)),X37),s(fun(X22,fun(X22,bool)),X38),s(fun(X12,X22),X48),s(fun(X12,X22),X49))) = s(bool,happ(s(fun(fun(X12,X22),bool),happ(s(fun(fun(X12,X22),fun(fun(X12,X22),bool)),'const.quotient.===>_2'(s(fun(X12,fun(X12,bool)),X37),s(fun(X22,fun(X22,bool)),X38))),s(fun(X12,X22),X48))),s(fun(X12,X22),X49)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_2_4_const.quotient.===>')).
fof(f170,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) | s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X7))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X8)))) )),
  inference(cnf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ! [X5,X6,X7,X8] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8)))) | s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X7))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X8)))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ! [X5,X6,X7,X8] : ((~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8))))) | s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X7))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X8)))))),
  inference(ennf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8))))) => s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X7))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X8)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6,X7,X8] : ((p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) & p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X7))),s(X1,X8))))) => s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X7))) = s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X6))),s(X1,X8)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X22,X12] : ! [X33,X34,X35] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X33),s(fun(X12,X22),X34),s(fun(X22,X12),X35)))) => ! [X16,X17,X18,X19] : ((p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X33),s(X12,X16))),s(X12,X17)))) & p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X33),s(X12,X18))),s(X12,X19))))) => s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X33),s(X12,X16))),s(X12,X18))) = s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X33),s(X12,X17))),s(X12,X19)))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.EQUALS_RSP')).
fof(f168,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) )),
  inference(cnf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : ((s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) & (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6))))),
  inference(nnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(ennf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X12,X22] : ! [X33,X34,X35] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X33),s(fun(X12,X22),X34),s(fun(X22,X12),X35)))) => ! [X7,X8] : (s(X22,X7) = s(X22,X8) <=> p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X33),s(X12,happ(s(fun(X22,X12),X35),s(X22,X7))))),s(X12,happ(s(fun(X22,X12),X35),s(X22,X8))))))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.EQUALS_PRS')).
fof(f169,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f132])).
fof(f167,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(X1,bool),X5),s(fun(X1,bool),X6)))) | s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X6)))) )),
  inference(cnf_transformation,[],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ! [X5,X6] : (~p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(X1,bool),X5),s(fun(X1,bool),X6)))) | s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X6)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(X1,bool),X5),s(fun(X1,bool),X6)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X6)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(X1,bool),X5),s(fun(X1,bool),X6)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X1,bool),'const.quotient.respects_1'(s(fun(X1,fun(X1,bool)),X2))),s(fun(X1,bool),X6)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X22,X12] : ! [X33,X34,X35] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X33),s(fun(X12,X22),X34),s(fun(X22,X12),X35)))) => ! [X25,X26] : (p(s(bool,'const.quotient.===>_4'(s(fun(X12,fun(X12,bool)),X33),s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(X12,bool),X25),s(fun(X12,bool),X26)))) => s(bool,'const.bool.RES_FORALL_2'(s(fun(X12,bool),'const.quotient.respects_1'(s(fun(X12,fun(X12,bool)),X33))),s(fun(X12,bool),X25))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X12,bool),'const.quotient.respects_1'(s(fun(X12,fun(X12,bool)),X33))),s(fun(X12,bool),X26)))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.RES_FORALL_RSP')).
fof(f166,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) | ! [X5,X6] : (~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))))))),
  inference(ennf_transformation,[],[f70])).
fof(f70,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))))))),
  inference(flattening,[],[f69])).
fof(f69,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,X6)))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X1,fun(X1,bool)),X2),s(X1,X5))),s(X1,happ(s(fun(X0,X1),X4),s(X0,happ(s(fun(X1,X0),X3),s(X1,X6))))))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X22,X12] : ! [X36,X34,X35] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X36),s(fun(X12,X22),X34),s(fun(X22,X12),X35)))) => ! [X16,X17] : (p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X36),s(X12,X16))),s(X12,X17)))) => p(s(bool,happ(s(fun(X12,bool),happ(s(fun(X12,fun(X12,bool)),X36),s(X12,X16))),s(X12,happ(s(fun(X22,X12),X35),s(X22,happ(s(fun(X12,X22),X34),s(X12,X17))))))))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.REP_ABS_RSP')).
fof(f165,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | s(bool,'|dollar|forall_1'(s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),'const.quotient.respects_1'(s(fun(X0,fun(X0,bool)),X2))),s(fun(X0,bool),'const.quotient.-->_3'(s(fun(X0,X1),X3),s(fun(bool,bool),'const.combin.I_0'),s(fun(X1,bool),X5)))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5] : s(bool,'|dollar|forall_1'(s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),'const.quotient.respects_1'(s(fun(X0,fun(X0,bool)),X2))),s(fun(X0,bool),'const.quotient.-->_3'(s(fun(X0,X1),X3),s(fun(bool,bool),'const.combin.I_0'),s(fun(X1,bool),X5))))))),
  inference(ennf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(bool,'|dollar|forall_1'(s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),'const.quotient.respects_1'(s(fun(X0,fun(X0,bool)),X2))),s(fun(X0,bool),'const.quotient.-->_3'(s(fun(X0,X1),X3),s(fun(bool,bool),'const.combin.I_0'),s(fun(X1,bool),X5))))))),
  inference(flattening,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5] : s(bool,'|dollar|forall_1'(s(fun(X1,bool),X5))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X0,bool),'const.quotient.respects_1'(s(fun(X0,fun(X0,bool)),X2))),s(fun(X0,bool),'const.quotient.-->_3'(s(fun(X0,X1),X3),s(fun(bool,bool),'const.combin.I_0'),s(fun(X1,bool),X5))))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X12,X22] : ! [X33,X34,X35] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),X33),s(fun(X12,X22),X34),s(fun(X22,X12),X35)))) => ! [X25] : s(bool,'|dollar|forall_1'(s(fun(X22,bool),X25))) = s(bool,'const.bool.RES_FORALL_2'(s(fun(X12,bool),'const.quotient.respects_1'(s(fun(X12,fun(X12,bool)),X33))),s(fun(X12,bool),'const.quotient.-->_3'(s(fun(X12,X22),X34),s(fun(bool,bool),'const.combin.I_0'),s(fun(X22,bool),X25))))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.FORALL_PRS')).
fof(f164,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f131])).
fof(f131,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK6(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK6(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f108])).
fof(f108,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.integer.INT_LTE_ADD2',aHL_EXT)).
fof(f158,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X37,X38] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X37),s('type.pair.prod'('type.num.num','type.num.num'),X38))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X37))),s('type.pair.prod'('type.num.num','type.num.num'),X38)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_0_2_const.integer.tint_add')).
fof(f147,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0'),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0'),s('type.integer.int',X0)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X37] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X37))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0'),s('type.integer.int',X37)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_0_1_const.integer.int_REP')).
fof(f146,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),X0))) = s('type.integer.int',happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),X0))) = s('type.integer.int',happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X37] : s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),X37))) = s('type.integer.int',happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s('type.pair.prod'('type.num.num','type.num.num'),X37)))),
  file('thm.integer.INT_LTE_ADD2','ARITY_0_1_const.integer.int_ABS')).
fof(f145,plain,(
  ( ! [X0] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X12,fun(X12,bool)),'|dollar|equals_0'),s(fun(X12,X12),'const.combin.I_0'),s(fun(X12,X12),'const.combin.I_0'))))),
  file('thm.integer.INT_LTE_ADD2','thm.quotient.IDENTITY_QUOTIENT')).
fof(f142,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0'))))),
  inference(cnf_transformation,[],[f14])).
fof(f14,axiom,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.integer.int'),'const.integer.int_ABS_0'),s(fun('type.integer.int','type.pair.prod'('type.num.num','type.num.num')),'const.integer.int_REP_0'))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.int_QUOTIENT')).
fof(f2465,plain,(
  ( ! [X52,X53,X51] : (s(bool,X51) != s(bool,X52) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))))) | s(bool,X52) = s(bool,X53) | s(bool,'T_0') = s(bool,X53) | s(bool,'T_0') = s(bool,X51)) )),
  inference(superposition,[],[f1725,f547])).
fof(f2461,plain,(
  ( ! [X43,X41,X42] : (s(bool,X41) != s(bool,X42) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,X42) = s(bool,X43) | s(bool,'T_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f1725,f148])).
fof(f2513,plain,(
  ( ! [X21,X20] : (s(bool,X20) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X21) | s(bool,X20) = s(bool,X21)) ) | $spl20),
  inference(cnf_transformation,[],[f2513_D])).
fof(f2513_D,plain,(
  ( ! [X21,X20] : (s(bool,X20) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,X21) | s(bool,X20) = s(bool,X21)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2480,plain,(
  ( ! [X24,X23,X22] : (s(bool,X23) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22))) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) )),
  inference(duplicate_literal_removal,[],[f2456])).
fof(f2456,plain,(
  ( ! [X24,X23,X22] : (s(bool,X23) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22))) | s(bool,X23) = s(bool,X24) | s(bool,'T_0') = s(bool,X24) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22)))) )),
  inference(superposition,[],[f1725,f561])).
fof(f2512,plain,(
  ( ! [X21,X19,X20] : (s(bool,X20) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X19))) | s(bool,X20) = s(bool,X21) | s(bool,'T_0') = s(bool,X21)) )),
  inference(subsumption_resolution,[],[f2455,f1480])).
fof(f2455,plain,(
  ( ! [X21,X19,X20] : (s(bool,X20) != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X19))) | s(bool,X20) = s(bool,X21) | s(bool,'T_0') = s(bool,X21) | s(bool,'T_0') = s(bool,X19)) )),
  inference(superposition,[],[f1725,f547])).
fof(f2508,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,X12) != s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X11))) | s(bool,X13) = s(bool,X14) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X12)) )),
  inference(subsumption_resolution,[],[f2453,f1480])).
fof(f2453,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,X12) != s(bool,X13) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X11))) | s(bool,X13) = s(bool,X14) | s(bool,'T_0') = s(bool,X14) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f1725,f203])).
fof(f2506,plain,(
  ( ! [X10,X8,X7,X9] : (s(bool,X8) != s(bool,X9) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X7))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f2452,f1480])).
fof(f2452,plain,(
  ( ! [X10,X8,X7,X9] : (s(bool,X8) != s(bool,X9) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X7))) | s(bool,X9) = s(bool,X10) | s(bool,'T_0') = s(bool,X10) | s(bool,'T_0') = s(bool,X8) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f1725,f203])).
fof(f2502,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X1) = s(bool,X2)) ) | $spl16),
  inference(cnf_transformation,[],[f2502_D])).
fof(f2502_D,plain,(
  ( ! [X2,X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,X2) | s(bool,X1) = s(bool,X2)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2501,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f2450,f1480])).
fof(f2450,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') != s(bool,X1) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f1725,f148])).
fof(f1648,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f201,f810])).
fof(f201,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK4),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK4),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | $spl1),
  inference(forward_demodulation,[],[f200,f155])).
fof(f200,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK5),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK4),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | $spl1),
  inference(forward_demodulation,[],[f199,f158])).
fof(f199,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK4),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | $spl1),
  inference(forward_demodulation,[],[f198,f158])).
fof(f198,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | $spl1),
  inference(forward_demodulation,[],[f194,f157])).
fof(f1641,plain,(
  $false | $spl4),
  inference(subsumption_resolution,[],[f1633,f144])).
fof(f1633,plain,(
  p(s(bool,'F_0')) | $spl4),
  inference(backward_demodulation,[],[f220,f810])).
fof(f1621,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f1620,f1618])).
fof(f1620,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | $spl8),
  inference(forward_demodulation,[],[f1619,f620])).
fof(f1619,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))) ) | $spl8),
  inference(subsumption_resolution,[],[f1582,f1618])).
fof(f1582,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | p(s(bool,'const.quotient.===>_4'(s(fun(X1,fun(X1,bool)),X2),s(fun(X0,fun(X0,bool)),X3),s(fun(X1,X0),X4),s(fun(X1,X0),X5))))) ) | $spl8),
  inference(backward_demodulation,[],[f620,f173])).
fof(f1590,plain,(
  $false | ($spl1 | $spl8 | $spl10)),
  inference(subsumption_resolution,[],[f1589,f141])).
fof(f1589,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl8 | $spl10)),
  inference(forward_demodulation,[],[f1574,f621])).
fof(f621,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | $spl10),
  inference(cnf_transformation,[],[f621_D])).
fof(f621_D,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1574,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) | ($spl1 | $spl8)),
  inference(backward_demodulation,[],[f620,f201])).
fof(f1572,plain,(
  $false | ($spl7 | $spl10)),
  inference(subsumption_resolution,[],[f1571,f222])).
fof(f1571,plain,(
  s(bool,'T_0') = s(bool,'F_0') | ($spl7 | $spl10)),
  inference(backward_demodulation,[],[f621,f554])).
fof(f1429,plain,(
  ( ! [X4] : (s(bool,X4) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl14),
  inference(cnf_transformation,[],[f1429_D])).
fof(f1429_D,plain,(
  ( ! [X4] : (s(bool,X4) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X4)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1430,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X5))) | s(bool,'T_0') = s(bool,X6)) ) | $spl11),
  inference(subsumption_resolution,[],[f1369,f734])).
fof(f734,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) ) | $spl11),
  inference(superposition,[],[f622,f561])).
fof(f1369,plain,(
  ( ! [X6,X5] : (s(bool,X6) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X5))) | s(bool,'T_0') = s(bool,X5) | s(bool,'T_0') = s(bool,X6)) ) | $spl11),
  inference(superposition,[],[f1336,f203])).
fof(f1336,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) ) | $spl11),
  inference(subsumption_resolution,[],[f1099,f734])).
fof(f1099,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(equality_factoring,[],[f681])).
fof(f1427,plain,(
  ( ! [X4,X3] : (s(bool,X4) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X4)) ) | $spl11),
  inference(subsumption_resolution,[],[f1368,f734])).
fof(f1368,plain,(
  ( ! [X4,X3] : (s(bool,X4) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X3))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X3)) ) | $spl11),
  inference(superposition,[],[f1336,f203])).
fof(f620,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) ) | $spl8),
  inference(cnf_transformation,[],[f620_D])).
fof(f620_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f622,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | $spl11),
  inference(cnf_transformation,[],[f622_D])).
fof(f622_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f597,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3))))) | s(bool,X0) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK3)))))) )),
  inference(equality_factoring,[],[f547])).
fof(f220,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f220_D])).
fof(f220_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f222,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f222_D])).
fof(f222_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f215,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f148])).
fof(f194,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | $spl1),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f196,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | $spl2),
  inference(cnf_transformation,[],[f196_D])).
fof(f196_D,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f143,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),sK5))))))),
  inference(cnf_transformation,[],[f127])).
fof(f127,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK5))),s('type.pair.prod'('type.num.num','type.num.num'),sK4))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK4))),s('type.pair.prod'('type.num.num','type.num.num'),sK5)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK4,sK5])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8,X7] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X7))),s('type.pair.prod'('type.num.num','type.num.num'),X8))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),X7)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  file('thm.integer.INT_LTE_ADD2','thm.integer.integer_66_prove_ltb')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 137
% Passive clauses: 1284
% Generated clauses: 34874
% Final active clauses: 113
% Final passive clauses: 1015
% Input formulas: 41
% Initial clauses: 55
% 
% Duplicate literals: 1144
% Trivial inequalities: 228
% Fw subsumption resolutions: 3603
% Fw demodulations: 7941
% Bw demodulations: 135
% Condensations: 3417
% Global subsumptions: 3
% 
% Simple tautologies: 224
% Equational tautologies: 191
% Forward subsumptions: 16739
% Fw demodulations to eq. taut.: 71
% Bw demodulations to eq. taut.: 3
% 
% Unit resulting resolution: 1532
% Forward superposition: 9626
% Backward superposition: 6575
% Self superposition: 290
% Equality factoring: 66
% Equality resolution: 37
% 
% Split clauses: 25
% Split components: 50
% SAT solver clauses: 1349
% SAT solver unit clauses: 184
% SAT solver binary clauses: 329
% 
% Sat splits: 25
% Sat splitting refutations: 10
% 
% Memory used [KB]: 28272
% Time elapsed: 1.743 s
% ------------------------------
% ------------------------------
% Success in time 3.065 s
