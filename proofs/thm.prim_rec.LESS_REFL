Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.prim_rec
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.prim_rec
% SZS output start Proof for thm.prim_rec
fof(f813,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f806,f124,f72,f110,f112,f76,f113,f136,f141,f148])).
fof(f148,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl12),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f141,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl3),
  inference(resolution,[],[f99,f113])).
fof(f99,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7,X8] : ((p(s(bool,X7)) => p(s(bool,X8))) => ((p(s(bool,X8)) => p(s(bool,X7))) => s(bool,X7) = s(bool,X8)))),
  file('thm.prim_rec.LESS_REFL','thm.bool.IMP_ANTISYM_AX')).
fof(f136,plain,(
  $false | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f127,f113])).
fof(f127,plain,(
  p(s(bool,'F_0')) | $spl8),
  inference(backward_demodulation,[],[f124,f69])).
fof(f69,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f42])).
fof(f42,plain,(
  ? [X0] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X6))))),
  file('thm.prim_rec.LESS_REFL','thm.prim_rec.LESS_REFL')).
fof(f113,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f113_D])).
fof(f113_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f76,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.prim_rec.LESS_REFL',aHL_FALSITY)).
fof(f112,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f112_D])).
fof(f112_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f110,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f72,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f19])).
fof(f19,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.prim_rec.LESS_REFL','thm.bool.NOT_CLAUSES|split|2')).
fof(f124,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f124_D])).
fof(f124_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f806,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl12)),
  inference(subsumption_resolution,[],[f794,f148])).
fof(f794,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | ($spl0 | $spl3 | $spl12)),
  inference(superposition,[],[f782,f196])).
fof(f196,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl0 | $spl3 | $spl12)),
  inference(subsumption_resolution,[],[f194,f110])).
fof(f194,plain,(
  ( ! [X4] : (~p(s(bool,'T_0')) | s(bool,X4) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0))) | s(bool,'F_0') = s(bool,X4)) ) | ($spl3 | $spl12)),
  inference(superposition,[],[f171,f123])).
fof(f123,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0))) | $spl3),
  inference(subsumption_resolution,[],[f120,f113])).
fof(f120,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK0)))),
  inference(superposition,[],[f69,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.prim_rec.LESS_REFL',aHL_BOOL_CASES)).
fof(f171,plain,(
  ( ! [X2,X1] : (~p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'F_0') = s(bool,X2)) ) | $spl12),
  inference(resolution,[],[f102,f148])).
fof(f102,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f46])).
fof(f782,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(duplicate_literal_removal,[],[f767])).
fof(f767,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X0))))) )),
  inference(resolution,[],[f105,f104])).
fof(f104,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | (! [X5] : (~p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))) | p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num',X5))))) & p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num',X1)))))) & (! [X2] : ((p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK2(X2,X1,X0))))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',sK2(X2,X1,X0)))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) | p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK1,sK2])],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X4] : (! [X5] : (~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X5))))) & p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X4),s('type.num.num',X1)))))) & (! [X2] : (? [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) | p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(rectify,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | ? [X2] : (! [X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) & p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1)))))) & (! [X2] : (? [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) | ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) | p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : (! [X3] : (~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) | p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) & p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : (! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) & p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> ? [X2] : (! [X3] : (p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X3))))) & p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X0)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X2),s('type.num.num',X1))))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X12,X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X12),s('type.num.num',X6)))) <=> ? [X13] : (! [X14] : (p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num','const.num.SUC_1'(s('type.num.num',X14)))))) => p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',X14))))) & p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',X12)))) & ~p(s(bool,happ(s(fun('type.num.num',bool),X13),s('type.num.num',X6))))))),
  file('thm.prim_rec.LESS_REFL','thm.prim_rec.LESS_DEF')).
fof(f105,plain,(
  ( ! [X0,X1] : (~p(s(bool,happ(s(fun('type.num.num',bool),sK1(X1,X0)),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f67])).
% SZS output end Proof for thm.prim_rec
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 21
% Passive clauses: 119
% Generated clauses: 704
% Final active clauses: 18
% Final passive clauses: 81
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 96
% Trivial inequalities: 7
% Fw subsumption resolutions: 69
% Fw demodulations: 10
% Bw demodulations: 2
% 
% Simple tautologies: 49
% Equational tautologies: 29
% Forward subsumptions: 310
% 
% Binary resolution: 32
% Factoring: 1
% Forward superposition: 140
% Backward superposition: 200
% Self superposition: 46
% Equality factoring: 52
% Equality resolution: 1
% 
% Split clauses: 18
% Split components: 36
% SAT solver clauses: 30
% SAT solver unit clauses: 3
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 1
% 
% Sat splits: 18
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 26
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 895
% Time elapsed: 0.024 s
% ------------------------------
% ------------------------------
% Success in time 0.047 s
