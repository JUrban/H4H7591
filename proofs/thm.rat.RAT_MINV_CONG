Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% (100391)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 1415
% Generated clauses: 22936
% Final active clauses: 137
% Final passive clauses: 989
% Input formulas: 14
% Initial clauses: 20
% 
% Duplicate literals: 1324
% Trivial inequalities: 240
% Fw subsumption resolutions: 3399
% Fw demodulations: 3085
% Bw demodulations: 13
% 
% Simple tautologies: 465
% Equational tautologies: 42
% Forward subsumptions: 9171
% 
% Binary resolution: 317
% Forward superposition: 7028
% Backward superposition: 6955
% Self superposition: 217
% Equality factoring: 138
% Equality resolution: 38
% 
% Split clauses: 883
% Split components: 1782
% SAT solver clauses: 1597
% SAT solver unit clauses: 55
% SAT solver binary clauses: 184
% 
% Sat splits: 882
% 
% TWLsolver clauses: 1596
% TWLsolver calls for satisfiability: 250
% 
% Memory used [KB]: 9850
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 294 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% (100402)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 95
% Passive clauses: 378
% Generated clauses: 11202
% Final active clauses: 89
% Final passive clauses: 248
% Input formulas: 14
% Initial clauses: 20
% 
% Duplicate literals: 1372
% Trivial inequalities: 109
% Fw subsumption resolutions: 1072
% Fw demodulations: 527
% Bw demodulations: 37
% Condensations: 1959
% 
% Simple tautologies: 221
% Equational tautologies: 41
% Forward subsumptions: 4392
% 
% Binary resolution: 96
% Forward superposition: 2711
% Backward superposition: 2663
% Self superposition: 144
% Equality factoring: 121
% Equality resolution: 11
% 
% Split clauses: 251
% Split components: 521
% SAT solver clauses: 1184
% SAT solver unit clauses: 27
% SAT solver binary clauses: 58
% 
% Sat splits: 251
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1184
% TWLsolver calls for satisfiability: 159
% 
% Memory used [KB]: 7164
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f651,plain,(
  $false),
  inference(subsumption_resolution,[],[f650,f45])).
fof(f45,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rat.RAT_MINV_CONG',aHL_TRUTH)).
fof(f650,plain,(
  ~p(s(bool,'T_0'))),
  inference(forward_demodulation,[],[f649,f94])).
fof(f94,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))))) )),
  inference(unit_resulting_resolution,[],[f48,f51])).
fof(f51,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : (s(bool,'T_0') = s(bool,X7) <=> p(s(bool,X7)))),
  file('thm.rat.RAT_MINV_CONG','thm.bool.EQ_CLAUSES|split|0')).
fof(f48,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X8] : p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X8),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X8))))))))),
  file('thm.rat.RAT_MINV_CONG','thm.rat.rat_44_prove_ltb')).
fof(f649,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',sK0),s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))))),
  inference(forward_demodulation,[],[f648,f58])).
fof(f58,plain,(
  ( ! [X0,X1] : (s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0,X1] : s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8,X9] : s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X8),s('type.frac.frac',X9))) = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X9),s('type.frac.frac',X8)))),
  file('thm.rat.RAT_MINV_CONG','thm.rat.RAT_EQUIV_SYM')).
fof(f648,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))),s('type.frac.frac',sK0))))),
  inference(subsumption_resolution,[],[f647,f43])).
fof(f43,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f32])).
fof(f32,plain,(
  ? [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) & s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))))),
  inference(ennf_transformation,[],[f17])).
fof(f17,plain,(
  ~! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ~! [X0] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X6))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X6))) => s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X6))))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X6))))))))))),
  file('thm.rat.RAT_MINV_CONG','thm.rat.RAT_MINV_CONG')).
fof(f647,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))),s('type.frac.frac',sK0)))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f625,f47])).
fof(f47,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rat.RAT_MINV_CONG',aHL_FALSITY)).
fof(f625,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))),s('type.frac.frac',sK0)))) | s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',sK0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f59,f613])).
fof(f613,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0)))))),
  inference(subsumption_resolution,[],[f604,f47])).
fof(f604,plain,(
  p(s(bool,'F_0')) | s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0)))))),
  inference(superposition,[],[f105,f150])).
fof(f150,plain,(
  s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0)))))))))),
  inference(unit_resulting_resolution,[],[f148,f55])).
fof(f55,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f23])).
fof(f23,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f22])).
fof(f22,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.rat.RAT_MINV_CONG','thm.bool.EQ_CLAUSES|split|2')).
fof(f148,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))))))),
  inference(forward_demodulation,[],[f143,f58])).
fof(f143,plain,(
  ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0))))))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0))))))),
  inference(unit_resulting_resolution,[],[f44,f61])).
fof(f61,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1))))) & (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))) | s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1)))))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X1))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X0),s('type.frac.frac',X1)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X10,X11] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X10))) = s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X11))) <=> p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X10),s('type.frac.frac',X11)))))),
  file('thm.rat.RAT_MINV_CONG','thm.rat.RAT_ABS_EQUIV')).
fof(f44,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',sK0))))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',sK0)))))))))),
  inference(cnf_transformation,[],[f36])).
fof(f105,plain,(
  ( ! [X6,X5] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X5)))) | s(bool,'F_0') = s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X5),s('type.frac.frac',X6)))) )),
  inference(superposition,[],[f55,f58])).
fof(f59,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X1))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0)))))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | ~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X1))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0)))))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) | (~p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) | p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X1))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))))))),
  inference(ennf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) => p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X1))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0))) => (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X1),s('type.frac.frac',X0)))) => p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X1))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12,X6] : (~s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X12))) => (p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac',X6),s('type.frac.frac',X12)))) => p(s(bool,'const.rat.rat_equiv_2'(s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X6))),s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X12))))))))),
  file('thm.rat.RAT_MINV_CONG','thm.rat.FRAC_MINV_EQUIV')).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 30
% Passive clauses: 53
% Generated clauses: 595
% Final active clauses: 27
% Final passive clauses: 23
% Input formulas: 14
% Initial clauses: 20
% 
% Duplicate literals: 58
% Trivial inequalities: 10
% Fw subsumption resolutions: 29
% Fw demodulations: 37
% Bw demodulations: 3
% Condensations: 49
% 
% Simple tautologies: 26
% Equational tautologies: 28
% Forward subsumptions: 289
% 
% Unit resulting resolution: 53
% Forward superposition: 98
% Backward superposition: 183
% Self superposition: 25
% Equality factoring: 28
% Equality resolution: 2
% 
% SAT solver clauses: 55
% SAT solver unit clauses: 16
% SAT solver binary clauses: 19
% 
% Memory used [KB]: 1023
% Time elapsed: 0.016 s
% ------------------------------
% ------------------------------
% Success in time 1.333 s
