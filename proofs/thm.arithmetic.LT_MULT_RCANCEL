Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1196,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1192,f914,f737,f32,f51,f33,f53,f49,f446,f451,f511,f1108,f1110,f34,f54,f52,f50,f812,f814,f449,f1012])).
fof(f1012,plain,(
  $false | ($spl16 | $spl18)),
  inference(subsumption_resolution,[],[f1011,f37])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.LT_MULT_RCANCEL',aHL_FALSITY)).
fof(f1011,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl18)),
  inference(forward_demodulation,[],[f1010,f814])).
fof(f1010,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl16),
  inference(subsumption_resolution,[],[f1003,f35])).
fof(f35,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.LT_MULT_RCANCEL','thm.bool.TRUTH')).
fof(f1003,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl16),
  inference(superposition,[],[f280,f453])).
fof(f453,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl16),
  inference(cnf_transformation,[],[f453_D])).
fof(f453_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f280,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(superposition,[],[f45,f43])).
fof(f43,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num',X6)))),
  file('thm.arithmetic.LT_MULT_RCANCEL','thm.arithmetic.MULT_SYM')).
fof(f45,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))))) & ((~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))))),
  inference(nnf_transformation,[],[f20])).
fof(f20,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X8)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X7),s('type.num.num',X8))))))),
  file('thm.arithmetic.LT_MULT_RCANCEL','thm.arithmetic.LT_MULT_LCANCEL')).
fof(f449,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) | $spl10),
  inference(cnf_transformation,[],[f449_D])).
fof(f449_D,plain,(
  ( ! [X9] : (s(bool,'T_0') = s(bool,X9)) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f814,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl18),
  inference(cnf_transformation,[],[f814_D])).
fof(f814_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f812,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f757])).
fof(f757,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f755,f38])).
fof(f38,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.LT_MULT_RCANCEL',aHL_BOOL_CASES)).
fof(f755,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(subsumption_resolution,[],[f751,f35])).
fof(f751,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f52,f55])).
fof(f55,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f38,f38])).
fof(f50,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | $spl1),
  inference(cnf_transformation,[],[f50_D])).
fof(f50_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f52,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl3),
  inference(cnf_transformation,[],[f52_D])).
fof(f52_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f54,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl5),
  inference(cnf_transformation,[],[f54_D])).
fof(f54_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f34,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f24])).
fof(f24,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))) & (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) | (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2)))))))),
  inference(nnf_transformation,[],[f21])).
fof(f21,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <~> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X2),s('type.num.num',X1)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X2))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X7)))))) <=> (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X7)))) & p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num',X8))))))),
  file('thm.arithmetic.LT_MULT_RCANCEL','thm.arithmetic.LT_MULT_RCANCEL')).
fof(f1110,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl28),
  inference(cnf_transformation,[],[f1110_D])).
fof(f1110_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1108,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(duplicate_literal_removal,[],[f1059])).
fof(f1059,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f1035,f38])).
fof(f1035,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(subsumption_resolution,[],[f1031,f35])).
fof(f1031,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | s(bool,'T_0') = s(bool,X0)) ) | $spl5),
  inference(superposition,[],[f54,f55])).
fof(f511,plain,(
  $false | $spl10),
  inference(subsumption_resolution,[],[f455,f35])).
fof(f455,plain,(
  ~p(s(bool,'T_0')) | $spl10),
  inference(backward_demodulation,[],[f449,f37])).
fof(f451,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl12),
  inference(cnf_transformation,[],[f451_D])).
fof(f451_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f446,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(duplicate_literal_removal,[],[f401])).
fof(f401,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,X9)) ) | $spl1),
  inference(superposition,[],[f265,f38])).
fof(f265,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(subsumption_resolution,[],[f260,f35])).
fof(f260,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | s(bool,'T_0') = s(bool,X0)) ) | $spl1),
  inference(superposition,[],[f258,f55])).
fof(f258,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl1),
  inference(forward_demodulation,[],[f50,f43])).
fof(f49,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) | $spl0),
  inference(cnf_transformation,[],[f49_D])).
fof(f49_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f53,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl4),
  inference(cnf_transformation,[],[f53_D])).
fof(f53_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f33,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f51,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl2),
  inference(cnf_transformation,[],[f51_D])).
fof(f51_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f32,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK2),s('type.num.num',sK1))))))),
  inference(cnf_transformation,[],[f25])).
fof(f737,plain,(
  $false | ($spl2 | $spl4 | $spl12)),
  inference(subsumption_resolution,[],[f736,f37])).
fof(f736,plain,(
  p(s(bool,'F_0')) | ($spl2 | $spl4 | $spl12)),
  inference(forward_demodulation,[],[f735,f451])).
fof(f735,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ($spl2 | $spl4)),
  inference(forward_demodulation,[],[f734,f43])).
fof(f734,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f723,f35])).
fof(f723,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | ($spl2 | $spl4)),
  inference(superposition,[],[f376,f64])).
fof(f64,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl4),
  inference(subsumption_resolution,[],[f60,f37])).
fof(f60,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2))) | $spl4),
  inference(superposition,[],[f53,f38])).
fof(f376,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X1))))))) ) | $spl2),
  inference(subsumption_resolution,[],[f370,f35])).
fof(f370,plain,(
  ( ! [X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',X1))))))) ) | $spl2),
  inference(superposition,[],[f47,f63])).
fof(f63,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl2),
  inference(subsumption_resolution,[],[f59,f37])).
fof(f59,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl2),
  inference(superposition,[],[f51,f38])).
fof(f47,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2))))))) )),
  inference(cnf_transformation,[],[f31])).
fof(f914,plain,(
  $false | ($spl0 | $spl17)),
  inference(subsumption_resolution,[],[f907,f454])).
fof(f454,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl17),
  inference(cnf_transformation,[],[f454_D])).
fof(f454_D,plain,(
  s(bool,'T_0') != s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f907,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2))))) | $spl0),
  inference(resolution,[],[f746,f57])).
fof(f57,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f37,f38])).
fof(f746,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK1),s('type.num.num',sK2)))))) | $spl0),
  inference(forward_demodulation,[],[f49,f43])).
fof(f1192,plain,(
  $false | ($spl16 | $spl28)),
  inference(subsumption_resolution,[],[f1191,f37])).
fof(f1191,plain,(
  p(s(bool,'F_0')) | ($spl16 | $spl28)),
  inference(forward_demodulation,[],[f1190,f1110])).
fof(f1190,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl16),
  inference(subsumption_resolution,[],[f1183,f35])).
fof(f1183,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK0),s('type.num.num',sK2)))) | $spl16),
  inference(superposition,[],[f298,f453])).
fof(f298,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(superposition,[],[f46,f43])).
fof(f46,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X2)))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) )),
  inference(cnf_transformation,[],[f31])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 60
% Passive clauses: 287
% Generated clauses: 1179
% Final active clauses: 21
% Final passive clauses: 164
% Input formulas: 10
% Initial clauses: 16
% 
% Duplicate literals: 102
% Trivial inequalities: 12
% Fw subsumption resolutions: 105
% Fw demodulations: 39
% Bw demodulations: 27
% 
% Simple tautologies: 30
% Equational tautologies: 18
% Forward subsumptions: 559
% 
% Binary resolution: 33
% Forward superposition: 516
% Backward superposition: 200
% Self superposition: 38
% Equality factoring: 32
% 
% Split clauses: 22
% Split components: 45
% SAT solver clauses: 54
% SAT solver unit clauses: 2
% SAT solver binary clauses: 22
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 22
% Sat splitting refutations: 15
% 
% TWLsolver clauses: 52
% TWLsolver calls for satisfiability: 18
% 
% Memory used [KB]: 1023
% Time elapsed: 0.036 s
% ------------------------------
% ------------------------------
% Success in time 0.038 s
