Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% (82362)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 168
% Passive clauses: 2424
% Generated clauses: 18475
% Final active clauses: 145
% Final passive clauses: 2037
% Input formulas: 69
% Initial clauses: 83
% 
% Duplicate literals: 377
% Trivial inequalities: 215
% Fw subsumption resolutions: 778
% Fw demodulations: 1828
% Bw demodulations: 21
% 
% Simple tautologies: 226
% Equational tautologies: 23
% Forward subsumptions: 12346
% Fw demodulations to eq. taut.: 72
% 
% Binary resolution: 58
% Forward superposition: 8609
% Backward superposition: 6091
% Self superposition: 281
% Equality factoring: 49
% Equality resolution: 28
% 
% Split clauses: 108
% Split components: 216
% SAT solver clauses: 219
% SAT solver unit clauses: 31
% SAT solver binary clauses: 121
% 
% Sat splits: 108
% Sat splitting refutations: 12
% 
% TWLsolver clauses: 219
% TWLsolver calls for satisfiability: 50
% 
% Memory used [KB]: 20468
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f6638,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6631,f1142,f1185,f239,f327,f1010,f1011,f980,f1003,f216,f312,f241,f329,f983,f1006,f240,f328,f5867,f6030,f208,f293,f274,f356,f6048,f6050,f6022,f6023,f217,f313,f1143,f1186,f525,f539,f218,f314])).
fof(f314,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) ) | $spl24),
  inference(cnf_transformation,[],[f314_D])).
fof(f314_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f218,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X0)))),
  inference(rectify,[],[f62])).
fof(f62,axiom,(
  ! [X10] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10))),s('type.integer.int',X10)))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_ADD_LINV')).
fof(f539,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl172),
  inference(cnf_transformation,[],[f539_D])).
fof(f539_D,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f525,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | ($spl20 | $spl24)),
  inference(superposition,[],[f314,f312])).
fof(f1186,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3)))))) ) | $spl218),
  inference(cnf_transformation,[],[f1186_D])).
fof(f1186_D,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3)))))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f1143,plain,(
  ( ! [X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X3)))))) ) | ($spl172 | $spl210)),
  inference(superposition,[],[f1011,f539])).
fof(f313,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl22),
  inference(cnf_transformation,[],[f313_D])).
fof(f313_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f217,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f63])).
fof(f63,axiom,(
  ! [X10] : s('type.integer.int',X10) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_ADD_RID')).
fof(f6023,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X49),s('type.integer.int',X47))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int',X49))),s('type.integer.int',X47)))) ) | $spl638),
  inference(cnf_transformation,[],[f6023_D])).
fof(f6023_D,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X49),s('type.integer.int',X47))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int',X49))),s('type.integer.int',X47)))) ) <=> ~$spl638),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl638])])).
fof(f6022,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X49),s('type.integer.int',X47))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int',X49))),s('type.integer.int',X47)))) ) | ($spl22 | $spl54 | $spl108 | $spl218)),
  inference(forward_demodulation,[],[f6021,f313])).
fof(f6021,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int',X49))),s('type.integer.int',X47))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X49),s('type.integer.int',X47)))))) ) | ($spl54 | $spl108 | $spl218)),
  inference(forward_demodulation,[],[f5861,f329])).
fof(f5861,plain,(
  ( ! [X47,X48,X49] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X48),s('type.integer.int',X49))),s('type.integer.int',X47))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X48),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X49),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X47)))))))) ) | ($spl108 | $spl218)),
  inference(superposition,[],[f356,f1186])).
fof(f6050,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3)))))) ) | $spl664),
  inference(cnf_transformation,[],[f6050_D])).
fof(f6050_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3)))))) ) <=> ~$spl664),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl664])])).
fof(f6048,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3))))))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3)))))) ) | ($spl108 | $spl638)),
  inference(backward_demodulation,[],[f6023,f356])).
fof(f356,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) ) | $spl108),
  inference(cnf_transformation,[],[f356_D])).
fof(f356_D,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f274,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) )),
  inference(cnf_transformation,[],[f137])).
fof(f137,plain,(
  ! [X0,X1,X2,X3] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7,X8,X9] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X8))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X9)))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_ADD2_SUB2')).
fof(f293,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl1),
  inference(cnf_transformation,[],[f293_D])).
fof(f293_D,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f208,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f168])).
fof(f168,plain,(
  ? [X0,X1,X2] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(ennf_transformation,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1,X2] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X8))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X8)))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_SUB_TRIANGLE')).
fof(f6030,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | $spl645),
  inference(cnf_transformation,[],[f6030_D])).
fof(f6030_D,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) <=> ~$spl645),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl645])])).
fof(f5867,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))) | ($spl1 | $spl108)),
  inference(superposition,[],[f293,f356])).
fof(f328,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1)))) ) | $spl52),
  inference(cnf_transformation,[],[f328_D])).
fof(f328_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1)))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f240,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1)))) )),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  ! [X0,X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1)))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X10,X11] : s('type.integer.int',X10) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int',X11))),s('type.integer.int',X11)))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_SUB_ADD')).
fof(f1006,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))),s('type.integer.int',X4)))) ) | $spl206),
  inference(cnf_transformation,[],[f1006_D])).
fof(f1006_D,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))),s('type.integer.int',X4)))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f983,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X4))))),s('type.integer.int',X4)))) ) | ($spl52 | $spl54)),
  inference(superposition,[],[f329,f328])).
fof(f329,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) | $spl54),
  inference(cnf_transformation,[],[f329_D])).
fof(f329_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f241,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X10,X11] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int',X11))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X11)))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.int_sub')).
fof(f312,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl20),
  inference(cnf_transformation,[],[f312_D])).
fof(f312_D,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f216,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f64])).
fof(f64,axiom,(
  ! [X10] : s('type.integer.int',X10) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10)))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_NEGNEG')).
fof(f1003,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl202),
  inference(cnf_transformation,[],[f1003_D])).
fof(f1003_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f980,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | ($spl20 | $spl54)),
  inference(superposition,[],[f329,f312])).
fof(f1011,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X4)))) ) | $spl210),
  inference(cnf_transformation,[],[f1011_D])).
fof(f1011_D,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X4)))) ) <=> ~$spl210),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl210])])).
fof(f1010,plain,(
  ( ! [X4,X3] : (s('type.integer.int',X3) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X4))),s('type.integer.int',X4)))) ) | ($spl202 | $spl206)),
  inference(backward_demodulation,[],[f1003,f1006])).
fof(f327,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) | $spl50),
  inference(cnf_transformation,[],[f327_D])).
fof(f327_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f239,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0,X1] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X11] : s('type.integer.int',X10) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X11),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int',X11)))))),
  file('thm.integer.INT_SUB_TRIANGLE','thm.integer.INT_SUB_ADD2')).
fof(f1185,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) ) | $spl216),
  inference(cnf_transformation,[],[f1185_D])).
fof(f1185_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f1142,plain,(
  ( ! [X2,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X1)))))) ) | ($spl50 | $spl210)),
  inference(superposition,[],[f1011,f327])).
fof(f6631,plain,(
  $false | ($spl216 | $spl645 | $spl664)),
  inference(trivial_inequality_removal,[],[f6630])).
fof(f6630,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) | ($spl216 | $spl645 | $spl664)),
  inference(forward_demodulation,[],[f6467,f1185])).
fof(f6467,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK2))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK2))))))) | ($spl645 | $spl664)),
  inference(superposition,[],[f6030,f6050])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 86
% Passive clauses: 395
% Generated clauses: 6400
% Final active clauses: 73
% Final passive clauses: 249
% Input formulas: 69
% Initial clauses: 83
% 
% Duplicate literals: 116
% Trivial inequalities: 42
% Fw subsumption resolutions: 58
% Fw demodulations: 394
% Bw demodulations: 71
% Condensations: 126
% 
% Simple tautologies: 74
% Equational tautologies: 18
% Forward subsumptions: 4657
% Fw demodulations to eq. taut.: 10
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 24
% Forward superposition: 2743
% Backward superposition: 2174
% Self superposition: 134
% Equality factoring: 28
% Equality resolution: 5
% 
% Split clauses: 10
% Split components: 20
% SAT solver clauses: 576
% SAT solver unit clauses: 117
% SAT solver binary clauses: 32
% SAT solver learnt clauses: 1
% 
% Sat splits: 10
% Sat splitting refutations: 6
% 
% TWLsolver clauses: 575
% TWLsolver calls for satisfiability: 368
% 
% Memory used [KB]: 10234
% Time elapsed: 0.201 s
% ------------------------------
% ------------------------------
% Success in time 0.83 s
