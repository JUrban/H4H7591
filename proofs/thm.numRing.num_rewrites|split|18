Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numRing
% SZS output start Proof for thm.numRing
fof(f918,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f900,f847,f177,f275,f273,f176,f274,f272])).
fof(f272,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) | $spl0),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f274,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK0) | $spl2),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK0) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f176,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',sK0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f160])).
fof(f160,plain,(
  ? [X0] : ((s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ? [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <~> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X6))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X6))),
  file('thm.numRing.num_rewrites|split|18','thm.numRing.num_rewrites|split|18')).
fof(f273,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) | $spl1),
  inference(cnf_transformation,[],[f273_D])).
fof(f273_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f275,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK0) | $spl3),
  inference(cnf_transformation,[],[f275_D])).
fof(f275_D,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK0) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f177,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',sK0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK0)))),
  inference(cnf_transformation,[],[f161])).
fof(f847,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f841,f391])).
fof(f391,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl3),
  inference(backward_demodulation,[],[f376,f275])).
fof(f376,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.ZERO_0')),
  inference(superposition,[],[f193,f190])).
fof(f190,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f79])).
fof(f79,axiom,(
  ! [X9] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X9)))),
  file('thm.numRing.num_rewrites|split|18','thm.numeral.numeral_mult|split|0')).
fof(f193,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X9] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')))),
  file('thm.numRing.num_rewrites|split|18','thm.numeral.numeral_distrib|split|4')).
fof(f841,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl0),
  inference(trivial_inequality_removal,[],[f839])).
fof(f839,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl0),
  inference(superposition,[],[f745,f272])).
fof(f745,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(forward_demodulation,[],[f230,f376])).
fof(f230,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f166])).
fof(f166,plain,(
  ! [X0] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0)) & (s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))))),
  inference(nnf_transformation,[],[f124])).
fof(f124,plain,(
  ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X0))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9))) <=> s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num',X9))),
  file('thm.numRing.num_rewrites|split|18','thm.numeral.numeral_distrib|split|17')).
fof(f900,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f899,f872])).
fof(f872,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0'))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f273,f848])).
fof(f848,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl2),
  inference(forward_demodulation,[],[f274,f376])).
fof(f899,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.num.|48|_0')))),
  inference(forward_demodulation,[],[f898,f376])).
fof(f898,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(trivial_inequality_removal,[],[f876])).
fof(f876,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0') | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f746,f376])).
fof(f746,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f231,f376])).
fof(f231,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))) | s('type.num.num','const.arithmetic.ZERO_0') != s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f166])).
% SZS output end Proof for thm.numRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 65
% Passive clauses: 143
% Generated clauses: 736
% Final active clauses: 42
% Final passive clauses: 60
% Input formulas: 81
% Initial clauses: 95
% 
% Duplicate literals: 1
% Trivial inequalities: 10
% Fw subsumption resolutions: 24
% Fw demodulations: 51
% Bw demodulations: 16
% 
% Simple tautologies: 5
% Equational tautologies: 3
% Forward subsumptions: 483
% 
% Binary resolution: 4
% Forward superposition: 292
% Backward superposition: 208
% Self superposition: 14
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 18
% Split components: 36
% SAT solver clauses: 32
% SAT solver unit clauses: 2
% SAT solver binary clauses: 27
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 18
% Sat splitting refutations: 11
% 
% TWLsolver clauses: 23
% TWLsolver calls for satisfiability: 7
% 
% Memory used [KB]: 1023
% Time elapsed: 0.023 s
% ------------------------------
% ------------------------------
% Success in time 0.029 s
