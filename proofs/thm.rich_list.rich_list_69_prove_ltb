Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rich_list
% (104814)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 79
% Passive clauses: 2462
% Generated clauses: 15698
% Final active clauses: 73
% Final passive clauses: 2280
% Input formulas: 12
% Initial clauses: 15
% 
% Duplicate literals: 1054
% Trivial inequalities: 170
% Fw subsumption resolutions: 2119
% Fw demodulations: 950
% Bw demodulations: 3
% 
% Simple tautologies: 277
% Equational tautologies: 98
% Forward subsumptions: 6539
% 
% Binary resolution: 79
% Forward superposition: 6858
% Backward superposition: 3779
% Self superposition: 351
% Equality factoring: 274
% Equality resolution: 10
% 
% Split clauses: 766
% Split components: 1537
% SAT solver clauses: 2131
% SAT solver unit clauses: 310
% SAT solver binary clauses: 576
% 
% Sat splits: 766
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 2127
% TWLsolver calls for satisfiability: 101
% 
% Memory used [KB]: 8315
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (104837)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 74
% Passive clauses: 303
% Generated clauses: 11988
% Final active clauses: 66
% Final passive clauses: 181
% Input formulas: 12
% Initial clauses: 15
% 
% Duplicate literals: 1418
% Trivial inequalities: 50
% Fw subsumption resolutions: 837
% Fw demodulations: 1118
% Bw demodulations: 45
% Condensations: 1834
% 
% Simple tautologies: 149
% Equational tautologies: 41
% Forward subsumptions: 4695
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 14
% Forward superposition: 2811
% Backward superposition: 3216
% Self superposition: 179
% Equality factoring: 118
% 
% Split clauses: 210
% Split components: 420
% SAT solver clauses: 944
% SAT solver unit clauses: 20
% SAT solver binary clauses: 59
% 
% Sat splits: 210
% Sat splitting refutations: 23
% 
% TWLsolver clauses: 944
% TWLsolver calls for satisfiability: 96
% 
% Memory used [KB]: 9338
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f1351,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f61,f64,f62,f272,f299,f297,f714,f717,f716,f785,f1182,f1183,f1185,f1201,f1234,f1235,f1236,f1237,f1238,f1239,f715,f1349,f1350])).
fof(f1350,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f1346,f62])).
fof(f1346,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,sK2(X21,X20,bool,X19))) ) | $spl0),
  inference(superposition,[],[f1241,f62])).
fof(f1241,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,sK2(X3,X2,X1,X0)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,sK2(X3,X2,X1,X0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f1220,f42])).
fof(f42,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.rich_list.rich_list_69_prove_ltb',aHL_FALSITY)).
fof(f1220,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s(X1,sK2(X3,X2,X1,X0)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,sK2(X3,X2,X1,X0))))) ) | $spl0),
  inference(backward_demodulation,[],[f62,f53])).
fof(f53,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) | s(X1,sK2(X3,X2,X1,X0)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,sK2(X3,X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) | ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X5)))) & (s(X1,sK2(X3,X2,X1,X0)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,sK2(X3,X2,X1,X0)))) | p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) | ! [X5] : s(X1,X5) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X5)))) & (? [X4] : s(X1,X4) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X4))) | p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))))))),
  inference(rectify,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) | ! [X4] : s(X1,X4) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X4)))) & (? [X4] : s(X1,X4) != s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X4))) | p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) <=> ! [X4] : s(X1,X4) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X4))))),
  inference(flattening,[],[f27])).
fof(f27,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) <=> ! [X4] : s(X1,X4) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X4))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6,X13] : ! [X14,X15] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X6,fun(X13,X13)),X14),s(X6,X15)))) <=> ! [X8] : s(X13,X8) = s(X13,happ(s(fun(X13,X13),happ(s(fun(X6,fun(X13,X13)),X14),s(X6,X15))),s(X13,X8))))),
  file('thm.rich_list.rich_list_69_prove_ltb','thm.operator.LEFT_ID_DEF')).
fof(f1349,plain,(
  $false | $spl0),
  inference(subsumption_resolution,[],[f1339,f62])).
fof(f1339,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,happ(s(fun(bool,bool),happ(s(fun(X21,fun(bool,bool)),X20),s(X21,X19))),s(bool,'F_0')))) ) | $spl0),
  inference(superposition,[],[f1241,f62])).
fof(f715,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f715_D])).
fof(f715_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1239,plain,(
  ( ! [X37,X36] : (s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'F_0'))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool))))) ) | $spl18),
  inference(cnf_transformation,[],[f1239_D])).
fof(f1239_D,plain,(
  ( ! [X37,X36] : (s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'F_0'))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1238,plain,(
  ( ! [X37,X35,X36] : (s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'F_0'))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)))) | s(bool,'T_0') = s(bool,X35)) ) | ($spl0 | $spl7)),
  inference(subsumption_resolution,[],[f1214,f42])).
fof(f1214,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,'F_0')) | s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'F_0'))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)))) | s(bool,'T_0') = s(bool,X35)) ) | ($spl0 | $spl7)),
  inference(backward_demodulation,[],[f62,f1190])).
fof(f1190,plain,(
  ( ! [X37,X35,X36] : (s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'F_0'))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)))) | p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X36,X36)),X37),s(bool,X35)))) | s(bool,'T_0') = s(bool,X35)) ) | $spl7),
  inference(backward_demodulation,[],[f793,f1152])).
fof(f1152,plain,(
  ( ! [X37,X35,X36] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X36,X36)),X37),s(bool,X35)))) | s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)) != s(X36,happ(s(fun(X36,X36),happ(s(fun(bool,fun(X36,X36)),X37),s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))),s(X36,sK2('const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')),X37,X36,bool)))) | s(bool,'T_0') = s(bool,X35)) )),
  inference(superposition,[],[f53,f242])).
fof(f242,plain,(
  ( ! [X9] : (s(bool,X9) = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(subsumption_resolution,[],[f142,f40])).
fof(f40,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.rich_list.rich_list_69_prove_ltb',aHL_TRUTH)).
fof(f142,plain,(
  ( ! [X9] : (~p(s(bool,'T_0')) | s(bool,X9) = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s(bool,'T_0') = s(bool,X9)) )),
  inference(superposition,[],[f39,f55])).
fof(f55,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f43,f43])).
fof(f43,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.rich_list.rich_list_69_prove_ltb',aHL_BOOL_CASES)).
fof(f39,plain,(
  ~p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ~p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f29])).
fof(f29,plain,(
  ? [X0] : ~p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.APPEND_0'),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(ennf_transformation,[],[f14])).
fof(f14,plain,(
  ~! [X0] : p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.APPEND_0'),s('type.list.list'(X0),'const.list.NIL_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(X6),fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.APPEND_0'),s('type.list.list'(X6),'const.list.NIL_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : p(s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(X6),fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.APPEND_0'),s('type.list.list'(X6),'const.list.NIL_0'))))),
  file('thm.rich_list.rich_list_69_prove_ltb','thm.rich_list.rich_list_69_prove_ltb')).
fof(f793,plain,(
  s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl7),
  inference(unit_resulting_resolution,[],[f299,f42,f134])).
fof(f134,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f40,f55])).
fof(f1237,plain,(
  ( ! [X31,X32] : (s(X31,sK2('F_0',X32,X31,bool)) != s(X31,happ(s(fun(X31,X31),happ(s(fun(bool,fun(X31,X31)),X32),s(bool,'F_0'))),s(X31,sK2('F_0',X32,X31,bool))))) ) | $spl16),
  inference(cnf_transformation,[],[f1237_D])).
fof(f1237_D,plain,(
  ( ! [X31,X32] : (s(X31,sK2('F_0',X32,X31,bool)) != s(X31,happ(s(fun(X31,X31),happ(s(fun(bool,fun(X31,X31)),X32),s(bool,'F_0'))),s(X31,sK2('F_0',X32,X31,bool))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f1236,plain,(
  ( ! [X30,X31,X32] : (s(X31,sK2('F_0',X32,X31,bool)) != s(X31,happ(s(fun(X31,X31),happ(s(fun(bool,fun(X31,X31)),X32),s(bool,'F_0'))),s(X31,sK2('F_0',X32,X31,bool)))) | s(bool,'T_0') = s(bool,X30)) ) | $spl0),
  inference(subsumption_resolution,[],[f1213,f42])).
fof(f1213,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,'F_0')) | s(X31,sK2('F_0',X32,X31,bool)) != s(X31,happ(s(fun(X31,X31),happ(s(fun(bool,fun(X31,X31)),X32),s(bool,'F_0'))),s(X31,sK2('F_0',X32,X31,bool)))) | s(bool,'T_0') = s(bool,X30)) ) | $spl0),
  inference(backward_demodulation,[],[f62,f1150])).
fof(f1150,plain,(
  ( ! [X30,X31,X32] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X31,X31)),X32),s(bool,X30)))) | s(X31,sK2('F_0',X32,X31,bool)) != s(X31,happ(s(fun(X31,X31),happ(s(fun(bool,fun(X31,X31)),X32),s(bool,'F_0'))),s(X31,sK2('F_0',X32,X31,bool)))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f53,f43])).
fof(f1235,plain,(
  ( ! [X2,X1] : (s(X1,sK2('T_0',X2,X1,bool)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,'T_0'))),s(X1,sK2('T_0',X2,X1,bool))))) ) | $spl14),
  inference(cnf_transformation,[],[f1235_D])).
fof(f1235_D,plain,(
  ( ! [X2,X1] : (s(X1,sK2('T_0',X2,X1,bool)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,'T_0'))),s(X1,sK2('T_0',X2,X1,bool))))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1234,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | s(X1,sK2('T_0',X2,X1,bool)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,'T_0'))),s(X1,sK2('T_0',X2,X1,bool))))) ) | $spl0),
  inference(subsumption_resolution,[],[f1223,f42])).
fof(f1223,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,'F_0')) | s(X1,sK2('T_0',X2,X1,bool)) != s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,'T_0'))),s(X1,sK2('T_0',X2,X1,bool))))) ) | $spl0),
  inference(condensation,[],[f1212])).
fof(f1212,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'F_0')) | s(X23,sK2('T_0',X24,X23,bool)) != s(X23,happ(s(fun(X23,X23),happ(s(fun(bool,fun(X23,X23)),X24),s(bool,'T_0'))),s(X23,sK2('T_0',X24,X23,bool)))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | $spl0),
  inference(backward_demodulation,[],[f62,f1148])).
fof(f1148,plain,(
  ( ! [X24,X23,X25,X22] : (p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X23,X23)),X24),s(bool,X22)))) | s(X23,sK2('T_0',X24,X23,bool)) != s(X23,happ(s(fun(X23,X23),happ(s(fun(bool,fun(X23,X23)),X24),s(bool,'T_0'))),s(X23,sK2('T_0',X24,X23,bool)))) | s(bool,X22) = s(bool,X25) | s(bool,'T_0') = s(bool,X25)) )),
  inference(superposition,[],[f53,f55])).
fof(f1201,plain,(
  $false | ($spl2 | $spl7)),
  inference(subsumption_resolution,[],[f63,f1195])).
fof(f1195,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(subsumption_resolution,[],[f354,f299])).
fof(f354,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl7),
  inference(superposition,[],[f299,f43])).
fof(f63,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl2),
  inference(cnf_transformation,[],[f63_D])).
fof(f63_D,plain,(
  s(bool,'T_0') = s(bool,'F_0') <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f1185,plain,(
  s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | $spl13),
  inference(cnf_transformation,[],[f1185_D])).
fof(f1185_D,plain,(
  s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f1183,plain,(
  ( ! [X0] : (s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f1160,f57])).
fof(f57,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f42,f43])).
fof(f1160,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f53,f242])).
fof(f1182,plain,(
  $false | $spl3),
  inference(subsumption_resolution,[],[f1180,f44])).
fof(f44,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(flattening,[],[f16])).
fof(f16,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),X1)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X6] : ! [X9] : s('type.list.list'(X6),X9) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.NIL_0'),s('type.list.list'(X6),X9)))),
  file('thm.rich_list.rich_list_69_prove_ltb','thm.list.APPEND|split|0')).
fof(f1180,plain,(
  s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),'const.list.APPEND_2'(s('type.list.list'(sK0),'const.list.NIL_0'),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | $spl3),
  inference(superposition,[],[f1173,f49])).
fof(f49,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.APPEND_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))) )),
  inference(cnf_transformation,[],[f22])).
fof(f22,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.APPEND_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),happ(s(fun('type.list.list'(X0),'type.list.list'(X0)),happ(s(fun('type.list.list'(X0),fun('type.list.list'(X0),'type.list.list'(X0))),'const.list.APPEND_0'),s('type.list.list'(X0),X1))),s('type.list.list'(X0),X2)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : ! [X16,X17] : s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X16),s('type.list.list'(X6),X17))) = s('type.list.list'(X6),happ(s(fun('type.list.list'(X6),'type.list.list'(X6)),happ(s(fun('type.list.list'(X6),fun('type.list.list'(X6),'type.list.list'(X6))),'const.list.APPEND_0'),s('type.list.list'(X6),X16))),s('type.list.list'(X6),X17)))),
  file('thm.rich_list.rich_list_69_prove_ltb','ARITY_0_2_const.list.APPEND')).
fof(f1173,plain,(
  s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | $spl3),
  inference(subsumption_resolution,[],[f1159,f42])).
fof(f1159,plain,(
  p(s(bool,'F_0')) | s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))) != s('type.list.list'(sK0),happ(s(fun('type.list.list'(sK0),'type.list.list'(sK0)),happ(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.list.list'(sK0),sK2('const.list.NIL_0','const.list.APPEND_0','type.list.list'(sK0),'type.list.list'(sK0))))) | $spl3),
  inference(superposition,[],[f53,f243])).
fof(f243,plain,(
  s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl3),
  inference(unit_resulting_resolution,[],[f64,f242])).
fof(f785,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f724,f40])).
fof(f724,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f715,f42])).
fof(f716,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))),s(X1,X2))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0')))) ) | $spl10),
  inference(cnf_transformation,[],[f716_D])).
fof(f716_D,plain,(
  ( ! [X2,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))),s(X1,X2))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0')))) ) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f717,plain,(
  ( ! [X26,X24,X27,X25] : (s(X25,X26) = s(X25,happ(s(fun(X25,X25),happ(s(fun(bool,fun(X25,X25)),X27),s(bool,'F_0'))),s(X25,X26))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X25,X25)),X27),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X24)) ) | $spl3),
  inference(forward_demodulation,[],[f709,f243])).
fof(f709,plain,(
  ( ! [X26,X24,X27,X25] : (s(X25,X26) = s(X25,happ(s(fun(X25,X25),happ(s(fun(bool,fun(X25,X25)),X27),s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))),s(X25,X26))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X25,X25)),X27),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X24)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f635])).
fof(f635,plain,(
  ( ! [X26,X24,X27,X25] : (s(X25,X26) = s(X25,happ(s(fun(X25,X25),happ(s(fun(bool,fun(X25,X25)),X27),s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))))),s(X25,X26))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X25,X25)),X27),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X24) | s(bool,'T_0') = s(bool,X24)) ) | $spl3),
  inference(superposition,[],[f596,f242])).
fof(f596,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,X0))),s(X1,X3))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X2),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(condensation,[],[f595])).
fof(f595,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X2),s(bool,'F_0'))) | s(X1,X3) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,X4))),s(X1,X3))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f477])).
fof(f477,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X2),s(bool,'F_0'))) | s(X1,X3) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,X4))),s(X1,X3))) | s(bool,'T_0') = s(bool,X4) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f425,f43])).
fof(f425,plain,(
  ( ! [X6,X4,X8,X7,X5] : (s(X4,X6) = s(X4,happ(s(fun(X4,X4),happ(s(fun(bool,fun(X4,X4)),X5),s(bool,X7))),s(X4,X6))) | s(bool,X8) = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X4,X4)),X5),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X7) | s(bool,'T_0') = s(bool,X8)) ) | $spl3),
  inference(subsumption_resolution,[],[f419,f40])).
fof(f419,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | s(X4,X6) = s(X4,happ(s(fun(X4,X4),happ(s(fun(bool,fun(X4,X4)),X5),s(bool,X7))),s(X4,X6))) | s(bool,'T_0') = s(bool,X7) | s(bool,X8) = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X4,X4)),X5),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X8)) ) | $spl3),
  inference(superposition,[],[f379,f55])).
fof(f379,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X2),s(bool,'F_0')))) | s(X1,X3) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,X0))),s(X1,X3))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(forward_demodulation,[],[f358,f243])).
fof(f358,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X2),s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')))))) | s(X1,X3) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X2),s(bool,X0))),s(X1,X3))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f52,f242])).
fof(f52,plain,(
  ( ! [X2,X0,X5,X3,X1] : (~p(s(bool,'const.operator.LEFT_ID_2'(s(fun(X0,fun(X1,X1)),X2),s(X0,X3)))) | s(X1,X5) = s(X1,happ(s(fun(X1,X1),happ(s(fun(X0,fun(X1,X1)),X2),s(X0,X3))),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f38])).
fof(f714,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))),s(X1,X2))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(duplicate_literal_removal,[],[f630])).
fof(f630,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X1,X1),happ(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))),s(X1,X2))) | s(bool,'F_0') = s(bool,'const.operator.LEFT_ID_2'(s(fun(bool,fun(X1,X1)),X3),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl3),
  inference(superposition,[],[f596,f43])).
fof(f297,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')))) ) | $spl4),
  inference(cnf_transformation,[],[f297_D])).
fof(f297_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f299,plain,(
  s(bool,'T_0') != s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | $spl7),
  inference(cnf_transformation,[],[f299_D])).
fof(f299_D,plain,(
  s(bool,'T_0') != s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f272,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0'))) | s(bool,X0) = s(bool,'const.operator.LEFT_ID_2'(s(fun('type.list.list'(sK0),fun('type.list.list'(sK0),'type.list.list'(sK0))),'const.list.APPEND_0'),s('type.list.list'(sK0),'const.list.NIL_0')))) )),
  inference(equality_factoring,[],[f242])).
fof(f62,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl0),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f64,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f61,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f43])).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 35
% Passive clauses: 213
% Generated clauses: 1390
% Final active clauses: 13
% Final passive clauses: 23
% Input formulas: 12
% Initial clauses: 15
% 
% Duplicate literals: 111
% Trivial inequalities: 9
% Fw subsumption resolutions: 38
% Fw demodulations: 61
% Bw demodulations: 87
% Condensations: 163
% Global subsumptions: 1
% 
% Simple tautologies: 26
% Equational tautologies: 34
% Forward subsumptions: 721
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 31
% Forward superposition: 452
% Backward superposition: 216
% Self superposition: 60
% Equality factoring: 36
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 237
% SAT solver unit clauses: 16
% SAT solver binary clauses: 45
% 
% Sat splits: 8
% Sat splitting refutations: 5
% 
% Memory used [KB]: 2430
% Time elapsed: 0.125 s
% ------------------------------
% ------------------------------
% Success in time 1.439 s
