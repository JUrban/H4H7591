Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integral
% (69218)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 925
% Passive clauses: 7790
% Generated clauses: 27058
% Final active clauses: 833
% Final passive clauses: 6065
% Input formulas: 61
% Initial clauses: 224
% 
% Duplicate literals: 619
% Trivial inequalities: 140
% Fw subsumption resolutions: 2838
% Fw demodulations: 2156
% Bw demodulations: 87
% 
% Simple tautologies: 308
% Equational tautologies: 61
% Forward subsumptions: 11732
% 
% Binary resolution: 9067
% Factoring: 1447
% Forward superposition: 3935
% Backward superposition: 6164
% Self superposition: 49
% Equality factoring: 38
% Equality resolution: 26
% 
% Split clauses: 1243
% Split components: 2497
% SAT solver clauses: 1838
% SAT solver unit clauses: 17
% SAT solver binary clauses: 196
% 
% Sat splits: 1243
% Sat splitting refutations: 7
% 
% TWLsolver clauses: 1836
% TWLsolver calls for satisfiability: 444
% 
% Memory used [KB]: 10746
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integral
% SZS output start Proof for thm.integral
fof(f2919,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f2918,f312,f552,f691,f694,f309,f550,f333,f561,f2667,f2669,f2651,f310,f548,f553,f555,f447,f604,f708,f713,f337,f563,f389,f577,f2692,f435,f597,f707,f712,f311,f546])).
fof(f546,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15)))) | $spl1),
  inference(cnf_transformation,[],[f546_D])).
fof(f546_D,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f311,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15))))),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f152])).
fof(f152,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X3))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))),s('type.num.num',X3)))))),
  inference(flattening,[],[f151])).
fof(f151,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X3))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) & ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))),s('type.num.num',X3)))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),X2)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num',X3))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X2))),s('type.num.num',X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s(fun('type.num.num','type.realax.real'),X8)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X8),s('type.num.num',X9))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X8))),s('type.num.num',X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s(fun('type.num.num','type.realax.real'),X8)))) & s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X8),s('type.num.num',X9))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9)))))) => p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X8))),s('type.num.num',X9)))))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.integral.DIVISION_DSIZE_LE')).
fof(f712,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15))) | $spl214),
  inference(cnf_transformation,[],[f712_D])).
fof(f712_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15))) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f707,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15))) | ($spl1 | $spl16)),
  inference(resolution,[],[f563,f546])).
fof(f597,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) | $spl50),
  inference(cnf_transformation,[],[f597_D])).
fof(f597_D,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f435,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))) )),
  inference(cnf_transformation,[],[f262])).
fof(f262,plain,(
  ! [X0,X1] : ((p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0))))) & (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))))))),
  inference(nnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X10,X9] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X10),s('type.num.num',X9)))) <=> p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X9),s('type.num.num',X10)))))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.arithmetic.NOT_LESS')).
fof(f2692,plain,(
  $false | ($spl9 | $spl50 | $spl214 | $spl1045)),
  inference(subsumption_resolution,[],[f2691,f555])).
fof(f2691,plain,(
  p(s(bool,'F_0')) | ($spl50 | $spl214 | $spl1045)),
  inference(forward_demodulation,[],[f2671,f712])).
fof(f2671,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14))),s('type.num.num',sK15)))) | ($spl50 | $spl1045)),
  inference(resolution,[],[f2669,f597])).
fof(f577,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) ) | $spl20),
  inference(cnf_transformation,[],[f577_D])).
fof(f577_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f389,plain,(
  ( ! [X0] : (~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X0))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X0))))),
  inference(flattening,[],[f107])).
fof(f107,plain,(
  ! [X0] : ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X0),s('type.realax.real',X0))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X15] : ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',X15),s('type.realax.real',X15))))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.realax.REAL_LT_REFL')).
fof(f563,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl16),
  inference(cnf_transformation,[],[f563_D])).
fof(f563_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f337,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.bool.EQ_CLAUSES|split|2')).
fof(f713,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | $spl216),
  inference(cnf_transformation,[],[f713_D])).
fof(f713_D,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f708,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.realax.real_lt_2'(s('type.realax.real',X1),s('type.realax.real',X1)))) ) | ($spl16 | $spl20)),
  inference(resolution,[],[f563,f577])).
fof(f604,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) | $spl64),
  inference(cnf_transformation,[],[f604_D])).
fof(f604_D,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f447,plain,(
  ( ! [X6,X2,X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK19(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK19(X2,X1,X0)))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK19(X2,X1,X0)))))))))) | (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',sK20(X2,X1,X0)),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',sK20(X2,X1,X0))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19,sK20])],[f270])).
fof(f270,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X6))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))))))) & ! [X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X5)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(rectify,[],[f269])).
fof(f269,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & (s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(flattening,[],[f268])).
fof(f268,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) | (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3)))))) & ((s('type.realax.real',X1) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) | ? [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & ~p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) | ? [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) & s('type.realax.real',X2) != s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))) | p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(nnf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) | s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(ennf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X1),s('type.realax.real',X2))),s(fun('type.num.num','type.realax.real'),X0)))) <=> (s('type.realax.real',X1) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.|48|_0'))) & ! [X4] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X4))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))))))) & ! [X3] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X0)))))) => s('type.realax.real',X2) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X0),s('type.num.num',X3))))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X22,X6,X7] : (p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X6),s('type.realax.real',X7))),s(fun('type.num.num','type.realax.real'),X22)))) <=> (s('type.realax.real',X6) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num','const.num.|48|_0'))) & ! [X9] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X22)))))) => p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num',X9))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))))))) & ! [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),X22)))))) => s('type.realax.real',X7) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),X22),s('type.num.num',X9))))))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.transc.DIVISION_THM')).
fof(f555,plain,(
  ~p(s(bool,'F_0')) | $spl9),
  inference(cnf_transformation,[],[f555_D])).
fof(f555_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f553,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f315,f312])).
fof(f315,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f206])).
fof(f206,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f64])).
fof(f64,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f33])).
fof(f33,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.bool.NOT_CLAUSES|split|2')).
fof(f548,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))) | $spl2),
  inference(cnf_transformation,[],[f548_D])).
fof(f548_D,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f310,plain,(
  s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15))) = s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK15)))))),
  inference(cnf_transformation,[],[f205])).
fof(f2651,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK14))))) ) | $spl1034),
  inference(cnf_transformation,[],[f2651_D])).
fof(f2651_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK14))))) ) <=> ~$spl1034),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1034])])).
fof(f2669,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK15),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14)))))) | $spl1045),
  inference(cnf_transformation,[],[f2669_D])).
fof(f2669_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK15),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14)))))) <=> ~$spl1045),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1045])])).
fof(f2667,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK15),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK14))))) ) | ($spl2 | $spl9 | $spl64 | $spl216)),
  inference(subsumption_resolution,[],[f2666,f555])).
fof(f2666,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK15),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK14))))) ) | ($spl2 | $spl64 | $spl216)),
  inference(forward_demodulation,[],[f2638,f713])).
fof(f2638,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.realax.real_lt_2'(s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15))),s('type.realax.real',happ(s(fun('type.num.num','type.realax.real'),sK14),s('type.num.num',sK15)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK15),s('type.num.num','const.transc.dsize_1'(s(fun('type.num.num','type.realax.real'),sK14)))))) | ~p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',X0),s('type.realax.real',X1))),s(fun('type.num.num','type.realax.real'),sK14))))) ) | ($spl2 | $spl64)),
  inference(superposition,[],[f604,f548])).
fof(f561,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f561_D])).
fof(f561_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f333,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.bool.EQ_CLAUSES|split|1')).
fof(f550,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14)))) | $spl4),
  inference(cnf_transformation,[],[f550_D])).
fof(f550_D,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f309,plain,(
  p(s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14))))),
  inference(cnf_transformation,[],[f205])).
fof(f694,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14))) | $spl212),
  inference(cnf_transformation,[],[f694_D])).
fof(f694_D,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14))) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f691,plain,(
  s(bool,'T_0') = s(bool,'const.transc.division_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),'const.pair.,_2'(s('type.realax.real',sK12),s('type.realax.real',sK13))),s(fun('type.num.num','type.realax.real'),sK14))) | ($spl4 | $spl12)),
  inference(resolution,[],[f561,f550])).
fof(f552,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f552_D])).
fof(f552_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f312,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integral.DIVISION_DSIZE_LE','thm.bool.TRUTH')).
fof(f2918,plain,(
  $false | ($spl6 | $spl212 | $spl1034)),
  inference(subsumption_resolution,[],[f2901,f552])).
fof(f2901,plain,(
  ~p(s(bool,'T_0')) | ($spl212 | $spl1034)),
  inference(superposition,[],[f2651,f694])).
% SZS output end Proof for thm.integral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 218
% Passive clauses: 560
% Generated clauses: 2545
% Final active clauses: 209
% Final passive clauses: 336
% Input formulas: 61
% Initial clauses: 224
% 
% Duplicate literals: 72
% Trivial inequalities: 3
% Fw subsumption resolutions: 166
% Fw demodulations: 144
% Bw demodulations: 13
% Condensations: 24
% Global subsumptions: 22
% 
% Simple tautologies: 200
% Equational tautologies: 5
% Forward subsumptions: 666
% 
% Binary resolution: 903
% Factoring: 46
% Forward superposition: 270
% Backward superposition: 86
% Self superposition: 4
% Equality factoring: 2
% Equality resolution: 3
% 
% Split clauses: 8
% Split components: 18
% SAT solver clauses: 922
% SAT solver unit clauses: 226
% SAT solver binary clauses: 73
% SAT solver learnt clauses: 45
% SAT solver learnt literals: 10
% 
% Sat splits: 8
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 833
% TWLsolver calls for satisfiability: 1742
% 
% Memory used [KB]: 3326
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.655 s
