Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f7391,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f7318])).
fof(f7318,plain,(
  s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1)))))),
  inference(superposition,[],[f83,f2234])).
fof(f2234,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X7)))))))) )),
  inference(forward_demodulation,[],[f2179,f486])).
fof(f486,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f475,f124])).
fof(f124,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6)))))),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f475,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f474,f146])).
fof(f146,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f90,f86])).
fof(f86,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.ALT_ZERO')).
fof(f90,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X7] : s('type.num.num',X7) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.|48|_0')))),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.ADD_|48|')).
fof(f474,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f379,f124])).
fof(f379,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f93,f86])).
fof(f93,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.BIT|49|')).
fof(f2179,plain,(
  ( ! [X6,X7] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X7)))))))) )),
  inference(superposition,[],[f125,f1731])).
fof(f1731,plain,(
  ( ! [X4,X3] : (s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X3),s('type.num.num',X4))))) = s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X4)))))) )),
  inference(superposition,[],[f128,f91])).
fof(f91,plain,(
  ( ! [X0] : (s('type.num.num','const.numeral.iSQR_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : s('type.num.num','const.numeral.iSQR_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X8] : s('type.num.num','const.numeral.iSQR_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X8),s('type.num.num',X8)))),
  file('thm.numeral.numeral_exp|split|1','thm.numeral.iSQR')).
fof(f128,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X0))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X2),s('type.num.num',X1)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X9,X10,X6] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X9))),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X10)))))),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.EXP_ADD')).
fof(f125,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X7,X6] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X7),s('type.num.num',X6)))))),
  file('thm.numeral.numeral_exp|split|1','thm.arithmetic.EXP|split|1')).
fof(f83,plain,(
  s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',sK0),s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f62])).
fof(f62,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f32])).
fof(f32,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X0),s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num','const.numeral.iSQR_1'(s('type.num.num','const.arithmetic.EXP_2'(s('type.num.num',X6),s('type.num.num',X7)))))))),
  file('thm.numeral.numeral_exp|split|1','thm.numeral.numeral_exp|split|1')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 111
% Passive clauses: 587
% Generated clauses: 7098
% Final active clauses: 104
% Final passive clauses: 374
% Input formulas: 30
% Initial clauses: 46
% 
% Duplicate literals: 160
% Trivial inequalities: 39
% Fw subsumption resolutions: 233
% Fw demodulations: 589
% Bw demodulations: 6
% 
% Simple tautologies: 99
% Equational tautologies: 18
% Forward subsumptions: 5225
% Fw demodulations to eq. taut.: 49
% 
% Binary resolution: 65
% Forward superposition: 3413
% Backward superposition: 2510
% Self superposition: 113
% Equality factoring: 28
% Equality resolution: 8
% 
% Split clauses: 58
% Split components: 122
% SAT solver clauses: 126
% SAT solver unit clauses: 5
% SAT solver binary clauses: 20
% 
% Sat splits: 58
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 125
% TWLsolver calls for satisfiability: 51
% 
% Memory used [KB]: 9210
% Time elapsed: 0.170 s
% ------------------------------
% ------------------------------
% Success in time 0.173 s
