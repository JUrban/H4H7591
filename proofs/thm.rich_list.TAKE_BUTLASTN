Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rich_list
% (109471)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1036
% Passive clauses: 6260
% Generated clauses: 35812
% Final active clauses: 1011
% Final passive clauses: 4932
% Input formulas: 517
% Initial clauses: 859
% 
% Duplicate literals: 225
% Trivial inequalities: 65
% Fw subsumption resolutions: 1623
% Fw demodulations: 2699
% Bw demodulations: 11
% 
% Simple tautologies: 284
% Equational tautologies: 27
% Forward subsumptions: 24387
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 6337
% Factoring: 1249
% Forward superposition: 12251
% Backward superposition: 10305
% Self superposition: 42
% Equality factoring: 2
% Equality resolution: 9
% 
% Split clauses: 302
% Split components: 606
% SAT solver clauses: 510
% SAT solver unit clauses: 17
% SAT solver binary clauses: 69
% 
% Sat splits: 302
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 509
% TWLsolver calls for satisfiability: 393
% 
% Memory used [KB]: 18805
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rich_list
% (109485)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 635
% Passive clauses: 4307
% Generated clauses: 30268
% Final active clauses: 622
% Final passive clauses: 3567
% Input formulas: 517
% Initial clauses: 859
% 
% Duplicate literals: 108
% Trivial inequalities: 48
% Fw subsumption resolutions: 998
% Fw demodulations: 3892
% Bw demodulations: 117
% Condensations: 67
% Global subsumptions: 37
% 
% Simple tautologies: 292
% Equational tautologies: 17
% Forward subsumptions: 15609
% Fw demodulations to eq. taut.: 17
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 2692
% Factoring: 133
% Forward superposition: 10394
% Backward superposition: 6645
% Self superposition: 88
% Equality factoring: 2
% Equality resolution: 12
% 
% Split clauses: 17
% Split components: 34
% SAT solver clauses: 5800
% SAT solver unit clauses: 1128
% SAT solver binary clauses: 269
% SAT solver learnt clauses: 74
% SAT solver learnt literals: 18
% 
% Sat splits: 17
% 
% TWLsolver clauses: 5654
% TWLsolver calls for satisfiability: 4918
% 
% Memory used [KB]: 32494
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f128130,plain,(
  $false),
  inference(subsumption_resolution,[],[f128128,f25482])).
fof(f25482,plain,(
  ( ! [X2,X0] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),'=_1'(s('type.list.list'(X0),X2))),s('type.list.list'(X0),X2))))) )),
  inference(forward_demodulation,[],[f25282,f2026])).
fof(f2026,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f760])).
fof(f760,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f759])).
fof(f759,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f298])).
fof(f298,axiom,(
  ! [X6] : ! [X14,X12] : s('type.list.list'(X6),X12) = s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X12)))))),
  file('thm.rich_list.TAKE_BUTLASTN','thm.list.TL')).
fof(f25282,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun('type.list.list'(X0),bool),'=_1'(s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X1),s('type.list.list'(X0),X2))))))),s('type.list.list'(X0),X2))))) )),
  inference(unit_resulting_resolution,[],[f2026,f2481])).
fof(f2481,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(cnf_transformation,[],[f1717])).
fof(f1717,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) & (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2))))))),
  inference(nnf_transformation,[],[f1273])).
fof(f1273,plain,(
  ! [X0,X1,X2] : (p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) <=> s(X0,X1) = s(X0,X2))),
  inference(rectify,[],[f380])).
fof(f380,axiom,(
  ! [X68,X69,X70] : (p(s(bool,happ(s(fun(X68,bool),'=_1'(s(X68,X69))),s(X68,X70)))) <=> s(X68,X69) = s(X68,X70))),
  file('thm.rich_list.TAKE_BUTLASTN',arity_1_HL_EQ)).
fof(f128128,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK13),bool),'=_1'(s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))),s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))))),
  inference(backward_demodulation,[],[f128126,f24694])).
fof(f24694,plain,(
  ~p(s(bool,happ(s(fun('type.list.list'(sK13),bool),'=_1'(s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))))),s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15))))))),
  inference(unit_resulting_resolution,[],[f1777,f2480])).
fof(f2480,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),'=_1'(s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(cnf_transformation,[],[f1717])).
fof(f1777,plain,(
  s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15)))),
  inference(cnf_transformation,[],[f1516])).
fof(f1516,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK14),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15)))))) & s('type.list.list'(sK13),'const.list.TAKE_2'(s('type.num.num',sK14),s('type.list.list'(sK13),sK15))) != s('type.list.list'(sK13),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK13),sK15))),s('type.num.num',sK14))),s('type.list.list'(sK13),sK15)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14,sK15])],[f1314])).
fof(f1314,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) & s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) != s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(ennf_transformation,[],[f520])).
fof(f520,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(flattening,[],[f519])).
fof(f519,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) => s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))),s('type.list.list'(X0),X2))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))),s('type.list.list'(X6),X8))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) => s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))),s('type.list.list'(X6),X8))))),
  file('thm.rich_list.TAKE_BUTLASTN','thm.rich_list.TAKE_BUTLASTN')).
fof(f128126,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.TAKE_2'(s('type.num.num',X4),s('type.list.list'(X3),X5))) = s('type.list.list'(X3),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))),s('type.num.num',X4))),s('type.list.list'(X3),X5)))) )),
  inference(forward_demodulation,[],[f128014,f2039])).
fof(f2039,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f786])).
fof(f786,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f785])).
fof(f785,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num',X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f102])).
fof(f102,axiom,(
  ! [X6] : ! [X7,X8] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num',X7))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.TAKE_BUTLASTN','thm.list.LENGTH_DROP')).
fof(f128014,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.TAKE_2'(s('type.num.num',X4),s('type.list.list'(X3),X5))) = s('type.list.list'(X3),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.DROP_2'(s('type.num.num',X4),s('type.list.list'(X3),X5))))),s('type.list.list'(X3),X5)))) )),
  inference(superposition,[],[f2035,f2045])).
fof(f2045,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f798])).
fof(f798,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f797])).
fof(f797,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.TAKE_2'(s('type.num.num',X1),s('type.list.list'(X0),X2))),s('type.list.list'(X0),'const.list.DROP_2'(s('type.num.num',X1),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f146])).
fof(f146,axiom,(
  ! [X6] : ! [X7,X8] : s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.TAKE_2'(s('type.num.num',X7),s('type.list.list'(X6),X8))),s('type.list.list'(X6),'const.list.DROP_2'(s('type.num.num',X7),s('type.list.list'(X6),X8)))))),
  file('thm.rich_list.TAKE_BUTLASTN','thm.list.TAKE_DROP')).
fof(f2035,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f778])).
fof(f778,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f777])).
fof(f777,plain,(
  ! [X0] : ! [X1,X2] : s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f83])).
fof(f83,axiom,(
  ! [X6] : ! [X22,X21] : s('type.list.list'(X6),X21) = s('type.list.list'(X6),'const.rich_list.BUTLASTN_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22))),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X21),s('type.list.list'(X6),X22)))))),
  file('thm.rich_list.TAKE_BUTLASTN','thm.rich_list.BUTLASTN_LENGTH_APPEND')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1364
% Passive clauses: 17991
% Generated clauses: 130187
% Final active clauses: 1126
% Final passive clauses: 6833
% Input formulas: 517
% Initial clauses: 859
% Discarded non-redundant clauses: 3431
% 
% Duplicate literals: 12
% Trivial inequalities: 100
% Fw subsumption resolutions: 2798
% Fw demodulations: 32796
% Bw demodulations: 5458
% Condensations: 49
% Global subsumptions: 12
% 
% Simple tautologies: 171
% Equational tautologies: 58
% Forward subsumptions: 72588
% Fw demodulations to eq. taut.: 1308
% Bw demodulations to eq. taut.: 53
% 
% Unit resulting resolution: 27254
% Factoring: 3
% Forward superposition: 31756
% Backward superposition: 23474
% Self superposition: 193
% Equality factoring: 2
% Equality resolution: 21
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 20089
% SAT solver unit clauses: 7924
% SAT solver binary clauses: 9087
% 
% Sat splits: 13
% Sat splitting refutations: 2058
% 
% Memory used [KB]: 62557
% Time elapsed: 5.415 s
% ------------------------------
% ------------------------------
% Success in time 6.78 s
