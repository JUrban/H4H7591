Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.seq
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.seq
% SZS output start Proof for thm.seq
fof(f68,plain,(
  $false),
  inference(subsumption_resolution,[],[f67,f21])).
fof(f21,plain,(
  ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))) & ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f13])).
fof(f13,plain,(
  ? [X0,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) & ~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))))),
  inference(ennf_transformation,[],[f8])).
fof(f8,plain,(
  ~! [X0,X1] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) => p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X7)))) => p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X7)))) => p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X6)))))),
  file('thm.seq.SUM_SUMMABLE','thm.seq.SUM_SUMMABLE')).
fof(f67,plain,(
  p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(subsumption_resolution,[],[f65,f22])).
fof(f22,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.seq.SUM_SUMMABLE',aHL_TRUTH)).
fof(f65,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),sK0))))),
  inference(superposition,[],[f26,f36])).
fof(f36,plain,(
  s(bool,'T_0') = s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))),
  inference(subsumption_resolution,[],[f32,f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f9])).
fof(f9,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.seq.SUM_SUMMABLE',aHL_FALSITY)).
fof(f32,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1)))),
  inference(superposition,[],[f20,f24])).
fof(f24,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.seq.SUM_SUMMABLE',aHL_BOOL_CASES)).
fof(f20,plain,(
  p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),sK0),s('type.realax.real',sK1))))),
  inference(cnf_transformation,[],[f15])).
fof(f26,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0))))) )),
  inference(cnf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0] : ((~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))) | p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',sK2(X0)))))) & (! [X1] : ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2])],[f17])).
fof(f17,plain,(
  ! [X0] : ((~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))) | ? [X2] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X2))))) & (! [X1] : ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(rectify,[],[f16])).
fof(f16,plain,(
  ! [X0] : ((~p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))) | ? [X1] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1))))) & (! [X1] : ~p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))) | p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0))))))),
  inference(nnf_transformation,[],[f10])).
fof(f10,plain,(
  ! [X0] : (p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X0)))) <=> ? [X1] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X0),s('type.realax.real',X1)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : (p(s(bool,'const.seq.summable_1'(s(fun('type.num.num','type.realax.real'),X6)))) <=> ? [X8] : p(s(bool,'const.seq.sums_2'(s(fun('type.num.num','type.realax.real'),X6),s('type.realax.real',X8)))))),
  file('thm.seq.SUM_SUMMABLE','thm.seq.summable')).
% SZS output end Proof for thm.seq
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 12
% Passive clauses: 21
% Generated clauses: 50
% Final active clauses: 8
% Final passive clauses: 3
% Input formulas: 6
% Initial clauses: 8
% 
% Duplicate literals: 1
% Fw subsumption resolutions: 5
% Bw demodulations: 3
% 
% Simple tautologies: 2
% Equational tautologies: 2
% Forward subsumptions: 17
% 
% Binary resolution: 2
% Forward superposition: 11
% Backward superposition: 10
% Self superposition: 4
% Equality factoring: 2
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.013 s
% ------------------------------
% ------------------------------
% Success in time 0.015 s
