Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.measure
% (46545)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 152
% Passive clauses: 2089
% Generated clauses: 22013
% Final active clauses: 128
% Final passive clauses: 1760
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 1055
% Trivial inequalities: 344
% Fw subsumption resolutions: 3796
% Fw demodulations: 2513
% Bw demodulations: 18
% 
% Simple tautologies: 537
% Equational tautologies: 61
% Forward subsumptions: 9549
% Bw demodulations to eq. taut.: 3
% 
% Binary resolution: 483
% Forward superposition: 5982
% Backward superposition: 7238
% Self superposition: 228
% Equality factoring: 179
% Equality resolution: 33
% 
% Split clauses: 1399
% Split components: 2916
% SAT solver clauses: 2247
% SAT solver unit clauses: 33
% SAT solver binary clauses: 225
% 
% Sat splits: 1399
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2246
% TWLsolver calls for satisfiability: 206
% 
% Memory used [KB]: 10362
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.measure
% (46783)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 105
% Passive clauses: 471
% Generated clauses: 9807
% Final active clauses: 72
% Final passive clauses: 169
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 1140
% Trivial inequalities: 118
% Fw subsumption resolutions: 1022
% Fw demodulations: 349
% Bw demodulations: 161
% Condensations: 1763
% Global subsumptions: 4
% 
% Simple tautologies: 272
% Equational tautologies: 45
% Forward subsumptions: 3409
% Bw demodulations to eq. taut.: 66
% 
% Binary resolution: 179
% Forward superposition: 1593
% Backward superposition: 2568
% Self superposition: 149
% Equality factoring: 136
% Equality resolution: 24
% 
% Split clauses: 257
% Split components: 520
% SAT solver clauses: 1111
% SAT solver unit clauses: 48
% SAT solver binary clauses: 61
% SAT solver learnt clauses: 8
% 
% Sat splits: 257
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1095
% TWLsolver calls for satisfiability: 265
% 
% Memory used [KB]: 6908
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.measure
% (46864)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 413
% Passive clauses: 3207
% Generated clauses: 121857
% Final active clauses: 53
% Final passive clauses: 129
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 7560
% Trivial inequalities: 953
% Fw subsumption resolutions: 10339
% Fw demodulations: 13167
% Bw demodulations: 1543
% Condensations: 15464
% Global subsumptions: 1898
% 
% Simple tautologies: 1132
% Equational tautologies: 2904
% Forward subsumptions: 61519
% Fw demodulations to eq. taut.: 189
% Bw demodulations to eq. taut.: 221
% 
% Unit resulting resolution: 12941
% Forward superposition: 23515
% Backward superposition: 20283
% Self superposition: 690
% Equality factoring: 438
% Equality resolution: 70
% 
% Split clauses: 365
% Split components: 754
% SAT solver clauses: 7771
% SAT solver unit clauses: 72
% SAT solver binary clauses: 613
% 
% Sat splits: 365
% Sat splitting refutations: 1933
% 
% Memory used [KB]: 60510
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.measure
% (46997)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 934
% Passive clauses: 31177
% Generated clauses: 130891
% Final active clauses: 112
% Final passive clauses: 14298
% Input formulas: 21
% Initial clauses: 53
% 
% Selected by SInE selection: 21
% SInE iterations: 1
% 
% Duplicate literals: 3020
% Trivial inequalities: 2729
% Fw subsumption resolutions: 18777
% Fw demodulations: 12073
% Bw demodulations: 566
% 
% Simple tautologies: 2958
% Equational tautologies: 97
% Forward subsumptions: 50111
% Bw demodulations to eq. taut.: 22
% 
% Binary resolution: 16886
% Factoring: 5
% Forward superposition: 38277
% Backward superposition: 26802
% Self superposition: 213
% Equality factoring: 142
% Equality resolution: 104
% 
% Split clauses: 10246
% Split components: 22159
% SAT solver clauses: 10494
% SAT solver unit clauses: 24
% SAT solver binary clauses: 3566
% 
% Sat splits: 10246
% Sat splitting refutations: 162
% 
% Memory used [KB]: 28912
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.measure
% (47159)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 84
% Passive clauses: 905
% Generated clauses: 11268
% Final active clauses: 68
% Final passive clauses: 720
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 504
% Trivial inequalities: 333
% Fw subsumption resolutions: 2235
% Fw demodulations: 270
% Bw demodulations: 87
% Global subsumptions: 46
% 
% Simple tautologies: 559
% Equational tautologies: 76
% Forward subsumptions: 6099
% Bw demodulations to eq. taut.: 6
% 
% Unit resulting resolution: 454
% Forward superposition: 3335
% Backward superposition: 3657
% Self superposition: 98
% Equality factoring: 86
% Equality resolution: 10
% 
% Split clauses: 18
% Split components: 37
% SAT solver clauses: 1106
% SAT solver unit clauses: 123
% SAT solver binary clauses: 95
% 
% Sat splits: 18
% Sat splitting refutations: 135
% 
% Memory used [KB]: 6012
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.measure
% (47200)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 938
% Passive clauses: 4328
% Generated clauses: 29418
% Final active clauses: 929
% Final passive clauses: 3369
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 843
% Trivial inequalities: 1499
% Fw subsumption resolutions: 1531
% Fw demodulations: 894
% Bw demodulations: 9
% Condensations: 111
% Global subsumptions: 2
% 
% Simple tautologies: 596
% Forward subsumptions: 19690
% Backward subsumptions: 46
% 
% Binary resolution: 8188
% Factoring: 33
% Forward superposition: 12270
% Backward superposition: 4038
% Equality factoring: 2
% Equality resolution: 53
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 4334
% SAT solver unit clauses: 13
% SAT solver binary clauses: 109
% 
% Sat splits: 2
% 
% Memory used [KB]: 20340
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.measure
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.measure
% SZS output start Proof for thm.measure
fof(f780,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f86,f140,f85,f142,f84,f144,f157,f156,f155,f154,f167,f153,f152,f151,f148,f147,f165,f146,f145,f161,f162,f170,f169,f193,f192,f189,f188,f187,f184,f183,f200,f182,f181,f196,f197,f203,f202,f231,f230,f227,f226,f225,f224,f221,f220,f217,f216,f215,f214,f211,f210,f209,f208,f236,f207,f240,f206,f242,f232,f233,f238,f503,f502,f499,f498,f497,f496,f495,f494,f493,f492,f491,f490,f486,f485,f482,f481,f478,f477,f476,f475,f474,f473,f472,f471,f470,f469,f468,f467,f466,f465,f464,f463,f460,f459,f458,f457,f514,f507,f508,f519,f552,f551,f550,f549,f548,f544,f541,f540,f539,f538,f537,f536,f535,f534,f533,f530,f529,f560,f528,f527,f556,f557,f566,f565,f770,f777,f772,f774,f778,f779])).
fof(f779,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | ~p(s(bool,'F_0'))),
  introduced(theory_axiom,[])).
fof(f778,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))))),
  introduced(theory_axiom,[])).
fof(f774,plain,(
  p(s(bool,'F_0')) | $spl34),
  inference(cnf_transformation,[],[f774_D])).
fof(f774_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f772,plain,(
  ~p(s(bool,'T_0')) | $spl33),
  inference(cnf_transformation,[],[f772_D])).
fof(f772_D,plain,(
  ~p(s(bool,'T_0')) <=> ~$spl33),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl33])])).
fof(f777,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ($spl10 | $spl14 | $spl22 | $spl26)),
  inference(duplicate_literal_removal,[],[f776])).
fof(f776,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ($spl10 | $spl14 | $spl22 | $spl26)),
  inference(forward_demodulation,[],[f775,f169])).
fof(f775,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'F_0')) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) | ($spl14 | $spl22 | $spl26)),
  inference(forward_demodulation,[],[f764,f202])).
fof(f764,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) | ($spl22 | $spl26)),
  inference(superposition,[],[f553,f519])).
fof(f553,plain,(
  ( ! [X0] : (p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),X0))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),X0)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),X0))))) ) | $spl22),
  inference(resolution,[],[f242,f122])).
fof(f122,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((~p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))) | ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4))))) | p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(flattening,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : ((p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4))))) => p(s(bool,'const.bool.IN_2'(s(fun(X0,X1),X6),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X20] : ((p(s(bool,'const.bool.IN_2'(s(fun(X6,X7),X20),s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X9))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11)))))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10)))))) & p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X9),s(fun(fun(X6,bool),bool),X10))))) => p(s(bool,'const.bool.IN_2'(s(fun(X6,X7),X20),s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11)))))))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.measure.MEASURABLE_UP_LIFT')).
fof(f770,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'T_0')) | ($spl10 | $spl14 | $spl18 | $spl22)),
  inference(forward_demodulation,[],[f769,f238])).
fof(f769,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | ($spl10 | $spl14 | $spl22)),
  inference(duplicate_literal_removal,[],[f768])).
fof(f768,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'T_0')) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | ($spl10 | $spl14 | $spl22)),
  inference(forward_demodulation,[],[f767,f169])).
fof(f767,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | ($spl14 | $spl22)),
  inference(forward_demodulation,[],[f759,f202])).
fof(f759,plain,(
  ~p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4)))))) | ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl22),
  inference(resolution,[],[f553,f120])).
fof(f120,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.IN_2'(s(X0,sK6(X2,X1,X0)),s(fun(X0,bool),X2)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & ((p(s(bool,'const.bool.IN_2'(s(X0,sK6(X2,X1,X0)),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,sK6(X2,X1,X0)),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6])],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X4] : (~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2)))))) & (? [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) & ~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (~p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) <=> ! [X3] : (p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X1)))) => p(s(bool,'const.bool.IN_2'(s(X0,X3),s(fun(X0,bool),X2))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X21,X12] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X6,bool),X21),s(fun(X6,bool),X12)))) <=> ! [X13] : (p(s(bool,'const.bool.IN_2'(s(X6,X13),s(fun(X6,bool),X21)))) => p(s(bool,'const.bool.IN_2'(s(X6,X13),s(fun(X6,bool),X12))))))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.pred_set.SUBSET_DEF')).
fof(f565,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl30),
  inference(cnf_transformation,[],[f565_D])).
fof(f565_D,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f566,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(global_subsumption,[],[f86,f85,f84,f242,f552,f544,f541,f540,f539,f530,f529,f528,f527,f553,f556,f557,f558])).
fof(f558,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(superposition,[],[f242,f90])).
fof(f90,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.measure.MEASURABLE_UP_SUBSET',aHL_BOOL_CASES)).
fof(f557,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(resolution,[],[f242,f92])).
fof(f92,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.EQ_CLAUSES|split|0')).
fof(f556,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(resolution,[],[f242,f94])).
fof(f94,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X12] : (s(bool,'T_0') = s(bool,X12) <=> p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.EQ_CLAUSES|split|1')).
fof(f527,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f242,f92])).
fof(f528,plain,(
  s(bool,'T_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f242,f94])).
fof(f560,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl29),
  inference(cnf_transformation,[],[f560_D])).
fof(f560_D,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f529,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f242,f95])).
fof(f95,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.EQ_CLAUSES|split|3')).
fof(f530,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f242,f97])).
fof(f97,plain,(
  ( ! [X0] : (s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f30])).
fof(f30,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X12] : (s(bool,'F_0') = s(bool,X12) <=> ~p(s(bool,X12)))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.EQ_CLAUSES|split|2')).
fof(f533,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f89,f238,f242,f130])).
fof(f130,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | ~p(s(bool,X1)) | p(s(bool,X3))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | ~p(s(bool,X0)) | p(s(bool,X2)))))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | (((p(s(bool,X0)) & ~p(s(bool,X2))) | (~p(s(bool,X1)) | p(s(bool,X3)))) & ((p(s(bool,X1)) & ~p(s(bool,X3))) | (~p(s(bool,X0)) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2,X3] : (s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3)) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) != s(bool,X1) | (p(s(bool,X1)) & s(bool,X2) != s(bool,X3))) | ((~p(s(bool,X0)) | p(s(bool,X2))) <=> (~p(s(bool,X1)) | p(s(bool,X3)))))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : ((s(bool,X0) = s(bool,X1) & (p(s(bool,X1)) => s(bool,X2) = s(bool,X3))) => ((p(s(bool,X0)) => p(s(bool,X2))) <=> (p(s(bool,X1)) => p(s(bool,X3)))))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X13,X18,X14,X19] : ((s(bool,X13) = s(bool,X18) & (p(s(bool,X18)) => s(bool,X14) = s(bool,X19))) => ((p(s(bool,X13)) => p(s(bool,X14))) <=> (p(s(bool,X18)) => p(s(bool,X19)))))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.IMP_CONG')).
fof(f89,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.measure.MEASURABLE_UP_SUBSET',aHL_FALSITY)).
fof(f534,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f88,f169,f242,f132])).
fof(f132,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X1)) | ~p(s(bool,X2)) | p(s(bool,X3)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f83])).
fof(f88,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.bool.TRUTH')).
fof(f535,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f87,f169,f242,f132])).
fof(f87,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.measure.MEASURABLE_UP_SUBSET',aHL_TRUTH)).
fof(f536,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f88,f202,f242,f132])).
fof(f537,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f87,f202,f242,f132])).
fof(f538,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f89,f238,f242,f134])).
fof(f134,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f83])).
fof(f539,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f89,f89,f88,f242,f135])).
fof(f135,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) != s(bool,X1) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f83])).
fof(f540,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f89,f89,f87,f242,f135])).
fof(f541,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f89,f89,f242,f242,f135])).
fof(f544,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f89,f89,f242,f242,f135])).
fof(f548,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f88,f169,f242,f136])).
fof(f136,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X2) != s(bool,X3) | ~p(s(bool,X0)) | ~p(s(bool,X3)) | p(s(bool,X2)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f83])).
fof(f549,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f87,f169,f242,f136])).
fof(f550,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f88,f202,f242,f136])).
fof(f551,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl22)),
  inference(unit_resulting_resolution,[],[f89,f87,f202,f242,f136])).
fof(f552,plain,(
  s(bool,'F_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl22),
  inference(unit_resulting_resolution,[],[f89,f89,f242,f138])).
fof(f138,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) != s(bool,X1) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X2))) )),
  inference(duplicate_literal_removal,[],[f133])).
fof(f133,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | ~p(s(bool,X0)) | p(s(bool,X1)) | p(s(bool,X1)) | s(bool,X0) != s(bool,X1)) )),
  inference(cnf_transformation,[],[f83])).
fof(f519,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl26),
  inference(cnf_transformation,[],[f519_D])).
fof(f519_D,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f508,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(resolution,[],[f240,f96])).
fof(f96,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f507,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(resolution,[],[f240,f98])).
fof(f98,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f62])).
fof(f514,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl25),
  inference(cnf_transformation,[],[f514_D])).
fof(f514_D,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f457,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f240,f91])).
fof(f91,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f59])).
fof(f458,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f240,f93])).
fof(f93,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f60])).
fof(f459,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f240,f96])).
fof(f460,plain,(
  s(bool,'F_0') = s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f240,f98])).
fof(f463,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f89,f238,f240,f130])).
fof(f464,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f89,f238,f240,f130])).
fof(f465,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f88,f169,f240,f132])).
fof(f466,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f88,f169,f240,f132])).
fof(f467,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f87,f169,f240,f132])).
fof(f468,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f87,f169,f240,f132])).
fof(f469,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f88,f202,f240,f132])).
fof(f470,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f88,f202,f240,f132])).
fof(f471,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f87,f202,f240,f132])).
fof(f472,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f87,f202,f240,f132])).
fof(f473,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f89,f238,f240,f134])).
fof(f474,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl18 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f89,f238,f240,f134])).
fof(f475,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f88,f88,f240,f135])).
fof(f476,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f87,f88,f240,f135])).
fof(f477,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f88,f87,f240,f135])).
fof(f478,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f87,f87,f240,f135])).
fof(f481,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f88,f240,f88,f240,f135])).
fof(f482,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f87,f240,f88,f240,f135])).
fof(f485,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f88,f240,f87,f240,f135])).
fof(f486,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f87,f240,f87,f240,f135])).
fof(f490,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f88,f169,f240,f136])).
fof(f491,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f88,f169,f240,f136])).
fof(f492,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f87,f169,f240,f136])).
fof(f493,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl10 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f87,f169,f240,f136])).
fof(f494,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f88,f202,f240,f136])).
fof(f495,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f88,f202,f240,f136])).
fof(f496,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f88,f87,f202,f240,f136])).
fof(f497,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | ($spl14 | $spl21)),
  inference(unit_resulting_resolution,[],[f87,f87,f202,f240,f136])).
fof(f498,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f88,f240,f138])).
fof(f499,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f89,f87,f240,f138])).
fof(f502,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f88,f240,f240,f138])).
fof(f503,plain,(
  s(bool,'T_0') != s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl21),
  inference(unit_resulting_resolution,[],[f87,f240,f240,f138])).
fof(f238,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl18),
  inference(cnf_transformation,[],[f238_D])).
fof(f238_D,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f233,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(resolution,[],[f140,f96])).
fof(f232,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(resolution,[],[f140,f98])).
fof(f242,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl22),
  inference(cnf_transformation,[],[f242_D])).
fof(f242_D,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f206,plain,(
  p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f119])).
fof(f119,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.bool.IN_2'(s(X0,sK6(X2,X1,X0)),s(fun(X0,bool),X1)))) | p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f240,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl21),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) <=> ~$spl21),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl21])])).
fof(f207,plain,(
  ~p(s(bool,'const.bool.IN_2'(s(fun(sK0,sK1),sK6('const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)),fun(sK0,sK1))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f120])).
fof(f236,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl17),
  inference(cnf_transformation,[],[f236_D])).
fof(f236_D,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) <=> ~$spl17),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl17])])).
fof(f208,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f91])).
fof(f209,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f93])).
fof(f210,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f96])).
fof(f211,plain,(
  s(bool,'F_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f140,f98])).
fof(f214,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f88,f88,f140,f135])).
fof(f215,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f87,f88,f140,f135])).
fof(f216,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f88,f87,f140,f135])).
fof(f217,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f87,f87,f140,f135])).
fof(f220,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f88,f140,f88,f140,f135])).
fof(f221,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f87,f140,f88,f140,f135])).
fof(f224,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f88,f140,f87,f140,f135])).
fof(f225,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f87,f140,f87,f140,f135])).
fof(f226,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f88,f140,f138])).
fof(f227,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f89,f87,f140,f138])).
fof(f230,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f88,f140,f140,f138])).
fof(f231,plain,(
  s(bool,'T_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))) | $spl1),
  inference(unit_resulting_resolution,[],[f87,f140,f140,f138])).
fof(f202,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl14),
  inference(cnf_transformation,[],[f202_D])).
fof(f202_D,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f203,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(global_subsumption,[],[f86,f85,f84,f142,f193,f192,f189,f188,f187,f184,f183,f182,f181,f196,f197,f198])).
fof(f198,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(superposition,[],[f142,f90])).
fof(f197,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(resolution,[],[f142,f92])).
fof(f196,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(resolution,[],[f142,f94])).
fof(f181,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f142,f92])).
fof(f182,plain,(
  s(bool,'T_0') = s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f142,f94])).
fof(f200,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl13),
  inference(cnf_transformation,[],[f200_D])).
fof(f200_D,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f183,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f142,f95])).
fof(f184,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f142,f97])).
fof(f187,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f89,f89,f88,f142,f135])).
fof(f188,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f89,f89,f87,f142,f135])).
fof(f189,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f89,f89,f142,f142,f135])).
fof(f192,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f89,f89,f142,f142,f135])).
fof(f193,plain,(
  s(bool,'F_0') != s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))) | $spl2),
  inference(unit_resulting_resolution,[],[f89,f89,f142,f138])).
fof(f169,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl10),
  inference(cnf_transformation,[],[f169_D])).
fof(f169_D,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f170,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(global_subsumption,[],[f86,f85,f84,f144,f157,f156,f155,f154,f153,f152,f151,f148,f147,f146,f145,f158,f161,f162,f163])).
fof(f163,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(superposition,[],[f144,f90])).
fof(f158,plain,(
  ( ! [X0] : (~p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),sK3)))) | p(s(bool,'const.bool.IN_2'(s(fun(sK0,bool),X0),s(fun(fun(sK0,bool),bool),sK4))))) ) | $spl4),
  inference(resolution,[],[f144,f118])).
fof(f118,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(X0,bool),X1),s(fun(X0,bool),X2)))) | ~p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X1)))) | p(s(bool,'const.bool.IN_2'(s(X0,X4),s(fun(X0,bool),X2))))) )),
  inference(cnf_transformation,[],[f78])).
fof(f162,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(resolution,[],[f144,f92])).
fof(f161,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(resolution,[],[f144,f94])).
fof(f145,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f144,f92])).
fof(f146,plain,(
  s(bool,'T_0') = s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f144,f94])).
fof(f165,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl7),
  inference(cnf_transformation,[],[f165_D])).
fof(f165_D,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f147,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f144,f95])).
fof(f148,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f144,f97])).
fof(f151,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f88,f144,f135])).
fof(f152,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f87,f144,f135])).
fof(f153,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f144,f144,f135])).
fof(f167,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f154,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f88,f144,f135])).
fof(f155,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f87,f144,f135])).
fof(f156,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f144,f144,f135])).
fof(f157,plain,(
  s(bool,'F_0') != s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))) | $spl4),
  inference(unit_resulting_resolution,[],[f89,f89,f144,f138])).
fof(f144,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) | $spl4),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f84,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4))))),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,bool),bool),sK3),s(fun(fun(sK0,bool),bool),sK4)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4)))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2,X3,X4,X5] : (p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4)))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5))),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))))))) & ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5))),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2,X3,X4,X5] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5))),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,bool),bool),X3),s(fun(fun(X0,bool),bool),X4)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X3))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5))),s(fun(fun(X0,X1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X0,bool),fun(fun(X0,bool),bool)),'const.pair.,_2'(s(fun(X0,bool),X2),s(fun(fun(X0,bool),bool),X4))),s('type.pair.prod'(fun(X1,bool),fun(fun(X1,bool),bool)),X5)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X9),s(fun(fun(X6,bool),bool),X10)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X9))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11))),s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11] : ((p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,bool),bool),X9),s(fun(fun(X6,bool),bool),X10)))) & p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10))))))) => p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X9))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11))),s(fun(fun(X6,X7),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(X6,bool),fun(fun(X6,bool),bool)),'const.pair.,_2'(s(fun(X6,bool),X8),s(fun(fun(X6,bool),bool),X10))),s('type.pair.prod'(fun(X7,bool),fun(fun(X7,bool),bool)),X11)))))))),
  file('thm.measure.MEASURABLE_UP_SUBSET','thm.measure.MEASURABLE_UP_SUBSET')).
fof(f142,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4)))))) | $spl2),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4)))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f85,plain,(
  p(s(bool,'const.measure.sigma_algebra_1'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))))))),
  inference(cnf_transformation,[],[f58])).
fof(f140,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) | $spl1),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f86,plain,(
  ~p(s(bool,'const.pred_set.SUBSET_2'(s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK3))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))),s(fun(fun(sK0,sK1),bool),'const.measure.measurable_2'(s('type.pair.prod'(fun(sK0,bool),fun(fun(sK0,bool),bool)),'const.pair.,_2'(s(fun(sK0,bool),sK2),s(fun(fun(sK0,bool),bool),sK4))),s('type.pair.prod'(fun(sK1,bool),fun(fun(sK1,bool),bool)),sK5))))))),
  inference(cnf_transformation,[],[f58])).
% SZS output end Proof for thm.measure
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 22
% Generated clauses: 622
% Final active clauses: 39
% Final passive clauses: 5
% Input formulas: 21
% Initial clauses: 53
% 
% Duplicate literals: 5
% Trivial inequalities: 10
% Fw demodulations: 143
% Bw demodulations: 5
% Global subsumptions: 3
% 
% Simple tautologies: 31
% Equational tautologies: 2
% Forward subsumptions: 320
% 
% Binary resolution: 37
% Unit resulting resolution: 263
% Forward superposition: 18
% Backward superposition: 121
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 251
% SAT solver unit clauses: 6
% SAT solver binary clauses: 165
% 
% Sat splits: 2
% 
% Memory used [KB]: 1535
% Time elapsed: 0.023 s
% ------------------------------
% ------------------------------
% Success in time 18.043 s
