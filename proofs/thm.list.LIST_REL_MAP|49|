Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% (110483)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 164
% Passive clauses: 3228
% Generated clauses: 15290
% Final active clauses: 158
% Final passive clauses: 2875
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 710
% Trivial inequalities: 166
% Fw subsumption resolutions: 1946
% Fw demodulations: 2422
% Bw demodulations: 2
% 
% Simple tautologies: 256
% Equational tautologies: 20
% Forward subsumptions: 5707
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 619
% Forward superposition: 5766
% Backward superposition: 3331
% Self superposition: 98
% Equality factoring: 32
% Equality resolution: 42
% 
% Split clauses: 444
% Split components: 895
% SAT solver clauses: 1016
% SAT solver unit clauses: 18
% SAT solver binary clauses: 147
% 
% Sat splits: 444
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1015
% TWLsolver calls for satisfiability: 245
% 
% Memory used [KB]: 12792
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (110501)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 86
% Passive clauses: 1388
% Generated clauses: 7418
% Final active clauses: 82
% Final passive clauses: 1291
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 310
% Trivial inequalities: 45
% Fw subsumption resolutions: 270
% Fw demodulations: 725
% Bw demodulations: 13
% Condensations: 414
% 
% Simple tautologies: 70
% Equational tautologies: 19
% Forward subsumptions: 2292
% Fw demodulations to eq. taut.: 8
% 
% Binary resolution: 123
% Forward superposition: 2236
% Backward superposition: 1656
% Self superposition: 95
% Equality factoring: 34
% Equality resolution: 10
% 
% Split clauses: 62
% Split components: 133
% SAT solver clauses: 1863
% SAT solver unit clauses: 37
% SAT solver binary clauses: 45
% 
% Sat splits: 62
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1863
% TWLsolver calls for satisfiability: 256
% 
% Memory used [KB]: 17270
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% (110520)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 370
% Passive clauses: 8898
% Generated clauses: 82699
% Final active clauses: 77
% Final passive clauses: 758
% Input formulas: 19
% Initial clauses: 40
% Discarded non-redundant clauses: 282
% 
% Duplicate literals: 4825
% Trivial inequalities: 453
% Fw subsumption resolutions: 6606
% Fw demodulations: 9829
% Bw demodulations: 5827
% Condensations: 7855
% Global subsumptions: 1309
% 
% Simple tautologies: 764
% Equational tautologies: 1028
% Forward subsumptions: 39364
% Fw demodulations to eq. taut.: 11
% Bw demodulations to eq. taut.: 246
% 
% Unit resulting resolution: 2832
% Forward superposition: 17006
% Backward superposition: 13113
% Self superposition: 472
% Equality factoring: 262
% Equality resolution: 74
% 
% Split clauses: 171
% Split components: 358
% SAT solver clauses: 11977
% SAT solver unit clauses: 58
% SAT solver binary clauses: 1562
% 
% Sat splits: 171
% Sat splitting refutations: 1426
% 
% Memory used [KB]: 49508
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.list
% (110777)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 759
% Passive clauses: 24444
% Generated clauses: 79604
% Final active clauses: 73
% Final passive clauses: 18372
% Input formulas: 19
% Initial clauses: 39
% 
% Selected by SInE selection: 18
% SInE iterations: 1
% 
% Duplicate literals: 1124
% Trivial inequalities: 2798
% Fw subsumption resolutions: 7877
% Fw demodulations: 8351
% Bw demodulations: 528
% 
% Simple tautologies: 1969
% Equational tautologies: 98
% Forward subsumptions: 28770
% Bw demodulations to eq. taut.: 73
% 
% Binary resolution: 11613
% Factoring: 10
% Forward superposition: 26309
% Backward superposition: 16667
% Self superposition: 110
% Equality factoring: 17
% Equality resolution: 206
% 
% Split clauses: 5106
% Split components: 10760
% SAT solver clauses: 5141
% SAT solver unit clauses: 13
% SAT solver binary clauses: 723
% 
% Sat splits: 5106
% Sat splitting refutations: 30
% 
% Memory used [KB]: 49636
% Time elapsed: 4.0000 s
% ------------------------------
% ------------------------------
% remaining time: 142 next slice time: 6
lrs+1002_2:3_br=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:sas=minisat:stl=30:sac=on:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none:sp=reverse_arity:urr=on_4 on thm.list
% (110897)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 65
% Passive clauses: 1487
% Generated clauses: 8139
% Final active clauses: 59
% Final passive clauses: 1360
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 306
% Trivial inequalities: 249
% Fw subsumption resolutions: 1106
% Fw demodulations: 393
% Bw demodulations: 40
% Global subsumptions: 1
% 
% Simple tautologies: 338
% Equational tautologies: 37
% Forward subsumptions: 4101
% Fw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 76
% Forward superposition: 2926
% Backward superposition: 2781
% Self superposition: 110
% Equality factoring: 50
% Equality resolution: 10
% 
% Split clauses: 15
% Split components: 31
% SAT solver clauses: 1523
% SAT solver unit clauses: 34
% SAT solver binary clauses: 107
% 
% Sat splits: 15
% Sat splitting refutations: 18
% 
% Memory used [KB]: 10106
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 135 next slice time: 15
lrs+1011_12_bs=on:bsr=unit_only:cond=on:gs=on:gsaa=from_current:gsssp=full:nwc=1.1:sas=minisat:stl=60:sos=all:sac=on:sdd=off:sser=off:sfr=on:ssfp=100000:ssfq=1.2:ssnc=none:sp=reverse_arity:updr=off_14 on thm.list
% (110930)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 281
% Passive clauses: 3072
% Generated clauses: 14502
% Final active clauses: 87
% Final passive clauses: 530
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 222
% Trivial inequalities: 612
% Fw subsumption resolutions: 939
% Bw subsumption resolutions: 53
% Fw demodulations: 1713
% Bw demodulations: 28
% Condensations: 189
% 
% Simple tautologies: 527
% Equational tautologies: 12
% Forward subsumptions: 7225
% Backward subsumptions: 272
% 
% Binary resolution: 2317
% Factoring: 6
% Forward superposition: 6002
% Backward superposition: 2296
% Self superposition: 28
% Equality factoring: 10
% Equality resolution: 44
% 
% Split clauses: 4
% Split components: 8
% SAT solver clauses: 3078
% SAT solver unit clauses: 2
% SAT solver binary clauses: 33
% 
% Sat splits: 4
% 
% Memory used [KB]: 14967
% Time elapsed: 1.600 s
% ------------------------------
% ------------------------------
% remaining time: 119 next slice time: 9
lrs+10_8:1_bd=preordered:bs=on:ccuc=first:fsr=off:fde=unused:gs=on:gsaa=from_current:gsem=on:gsssp=full:nwc=1:nicw=on:sas=minisat:stl=120:sos=on:sscc=on:sser=off:sfr=on:ssfp=4000:ssfq=1.0:ssnc=none:sp=reverse_arity:urr=on_7 on thm.list
% (110979)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 168
% Passive clauses: 1878
% Generated clauses: 5547
% Final active clauses: 82
% Final passive clauses: 1343
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 104
% Trivial inequalities: 53
% Fw demodulations: 1519
% Bw demodulations: 14
% Global subsumptions: 10
% 
% Simple tautologies: 28
% Equational tautologies: 15
% Forward subsumptions: 1838
% Backward subsumptions: 456
% 
% Binary resolution: 257
% Unit resulting resolution: 315
% Forward superposition: 1955
% Backward superposition: 776
% Self superposition: 14
% Equality resolution: 35
% 
% Split clauses: 28
% Split components: 61
% SAT solver clauses: 2065
% SAT solver unit clauses: 6
% SAT solver binary clauses: 166
% 
% Sat splits: 28
% Sat splitting refutations: 10
% 
% Memory used [KB]: 22131
% Time elapsed: 1.0000 s
% ------------------------------
% ------------------------------
% remaining time: 109 next slice time: 85
lrs+1_5:4_cond=on:fsr=off:fde=none:gs=on:gsem=on:lwlo=on:nm=64:nwc=1:stl=60:sos=all:spl=off_80 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f28111,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f28065])).
fof(f28065,plain,(
  s(bool,'F_0') != s(bool,'F_0')),
  inference(resolution,[],[f27866,f83])).
fof(f83,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP|49|','thm.bool.EQ_CLAUSES|split|2')).
fof(f27866,plain,(
  p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f27865,f565])).
fof(f565,plain,(
  s(bool,'T_0') != s(bool,'F_0')),
  inference(global_subsumption,[],[f554,f461,f200,f133,f150])).
fof(f150,plain,(
  s(bool,'T_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(global_subsumption,[],[f143,f149])).
fof(f149,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))))),
  inference(trivial_inequality_removal,[],[f141])).
fof(f141,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f131,f84])).
fof(f84,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f60])).
fof(f131,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f72,f84])).
fof(f72,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X2,bool)),X6),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X4))),s('type.list.list'(X2),X3))) != s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'const.combin.o_2'(s(fun(X0,fun(X2,bool)),X6),s(fun(X1,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X2,bool)),X6),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X4))),s('type.list.list'(X2),X3))) = s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'const.combin.o_2'(s(fun(X0,fun(X2,bool)),X6),s(fun(X1,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(flattening,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2] : ! [X3,X4,X5,X6] : s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X2,bool)),X6),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X5),s('type.list.list'(X1),X4))),s('type.list.list'(X2),X3))) = s(bool,'const.list.LIST_REL_3'(s(fun(X1,fun(X2,bool)),'const.combin.o_2'(s(fun(X0,fun(X2,bool)),X6),s(fun(X1,X0),X5))),s('type.list.list'(X1),X4),s('type.list.list'(X2),X3)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X8,bool)),X12),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X10))),s('type.list.list'(X8),X9))) = s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X8,bool)),'const.combin.o_2'(s(fun(X6,fun(X8,bool)),X12),s(fun(X7,X6),X11))),s('type.list.list'(X7),X10),s('type.list.list'(X8),X9)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ! [X9,X10,X11,X12] : s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X8,bool)),X12),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X11),s('type.list.list'(X7),X10))),s('type.list.list'(X8),X9))) = s(bool,'const.list.LIST_REL_3'(s(fun(X7,fun(X8,bool)),'const.combin.o_2'(s(fun(X6,fun(X8,bool)),X12),s(fun(X7,X6),X11))),s('type.list.list'(X7),X10),s('type.list.list'(X8),X9)))),
  file('thm.list.LIST_REL_MAP|49|','thm.list.LIST_REL_MAP|49|')).
fof(f143,plain,(
  s(bool,'T_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f131,f80])).
fof(f80,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f25])).
fof(f25,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP|49|','thm.bool.EQ_CLAUSES|split|1')).
fof(f133,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f72,f80])).
fof(f200,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f196,f133,f150])).
fof(f196,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f135,f76])).
fof(f76,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.list.LIST_REL_MAP|49|',aHL_BOOL_CASES)).
fof(f135,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f72,f76])).
fof(f461,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f147,f81])).
fof(f81,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X15] : (s(bool,'F_0') = s(bool,X15) <=> ~p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP|49|','thm.bool.EQ_CLAUSES|split|3')).
fof(f147,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f146])).
fof(f146,plain,(
  s(bool,'F_0') != s(bool,'F_0') | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f131,f76])).
fof(f554,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,'F_0') | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(sK2,bool)),X1),s('type.list.list'(X0),X2),s('type.list.list'(sK2),sK3))))) )),
  inference(superposition,[],[f403,f84])).
fof(f403,plain,(
  ( ! [X6,X8,X7] : (s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(sK2,bool)),X8),s('type.list.list'(X6),X7),s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X7)))) )),
  inference(resolution,[],[f355,f77])).
fof(f77,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X15] : (s(bool,'T_0') = s(bool,X15) <=> p(s(bool,X15)))),
  file('thm.list.LIST_REL_MAP|49|','thm.bool.EQ_CLAUSES|split|0')).
fof(f355,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(sK2,bool)),X2),s('type.list.list'(X0),X1),s('type.list.list'(sK2),sK3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(superposition,[],[f334,f92])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8])],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X6] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(rectify,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))))) & (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(flattening,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3,X4] : ((~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4))))))))) & ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) | ? [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))))),
  inference(nnf_transformation,[],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4))) & ! [X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) => p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X5),s('type.list.list'(X1),X4)))))))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X8] : ! [X12,X10,X9] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X6,fun(X8,bool)),X12),s('type.list.list'(X6),X10),s('type.list.list'(X8),X9)))) <=> (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X10))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X9))) & ! [X23] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X10)))))) => p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X6,fun(X8,bool)),X12),s(X6,'const.list.EL_2'(s('type.num.num',X23),s('type.list.list'(X6),X10))))),s(X8,'const.list.EL_2'(s('type.num.num',X23),s('type.list.list'(X8),X9)))))))))),
  file('thm.list.LIST_REL_MAP|49|','thm.list.LIST_REL_EL_EQN')).
fof(f334,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(duplicate_literal_removal,[],[f333])).
fof(f333,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f311,f89])).
fof(f89,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))) )),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ! [X0,X1,X2,X3] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(flattening,[],[f34])).
fof(f34,plain,(
  ! [X0,X1] : ! [X2,X3] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X3),s('type.list.list'(X1),X2)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X8,X6] : ! [X22,X11] : s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.MAP_2'(s(fun(X6,X8),X11),s('type.list.list'(X6),X22)))))),
  file('thm.list.LIST_REL_MAP|49|','thm.list.LENGTH_MAP')).
fof(f311,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)))))),
  inference(resolution,[],[f270,f92])).
fof(f270,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f149,f92])).
fof(f27865,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f27864,f27435])).
fof(f27435,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(trivial_inequality_removal,[],[f25825])).
fof(f25825,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(backward_demodulation,[],[f25666,f3790])).
fof(f3790,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))),
  inference(resolution,[],[f338,f82])).
fof(f82,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f59])).
fof(f338,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f335])).
fof(f335,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | ~p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(backward_demodulation,[],[f334,f175])).
fof(f175,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f152,f103])).
fof(f103,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X2,X0),'const.combin.o_2'(s(fun(X1,X0),X3),s(fun(X2,X1),X4))),s(X2,X5)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X8,X7,X6] : ! [X24,X25,X26] : s(X8,'const.combin.o_3'(s(fun(X7,X8),X24),s(fun(X6,X7),X25),s(X6,X26))) = s(X8,happ(s(fun(X6,X8),'const.combin.o_2'(s(fun(X7,X8),X24),s(fun(X6,X7),X25))),s(X6,X26)))),
  file('thm.list.LIST_REL_MAP|49|','ARITY_2_3_const.combin.o')).
fof(f152,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f133,f95])).
fof(f95,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.list.list'(X1),X4)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f25666,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f25117,f461,f25109])).
fof(f25109,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f25108,f540,f11206])).
fof(f11206,plain,(
  p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f11168,f199])).
fof(f199,plain,(
  ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f193])).
fof(f193,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f135,f80])).
fof(f11168,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f294,f540])).
fof(f294,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3))))))) )),
  inference(forward_demodulation,[],[f271,f103])).
fof(f271,plain,(
  ( ! [X0] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s(sK1,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))) )),
  inference(resolution,[],[f149,f93])).
fof(f93,plain,(
  ( ! [X6,X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X0),X3))))),s(X1,'const.list.EL_2'(s('type.num.num',X6),s('type.list.list'(X1),X4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X6),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4))))) )),
  inference(cnf_transformation,[],[f67])).
fof(f540,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f539])).
fof(f539,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f538,f334])).
fof(f538,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(forward_demodulation,[],[f537,f89])).
fof(f537,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)))))),
  inference(forward_demodulation,[],[f515,f89])).
fof(f515,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)))))),
  inference(resolution,[],[f199,f94])).
fof(f94,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.list.LIST_REL_3'(s(fun(X0,fun(X1,bool)),X2),s('type.list.list'(X0),X3),s('type.list.list'(X1),X4)))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(X4,X3,X2,X1,X0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X4)))) )),
  inference(cnf_transformation,[],[f67])).
fof(f25108,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(forward_demodulation,[],[f25096,f102])).
fof(f102,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,'const.combin.o_3'(s(fun(X1,X0),X3),s(fun(X2,X1),X4),s(X2,X5))) = s(X0,happ(s(fun(X1,X0),X3),s(X1,happ(s(fun(X2,X1),X4),s(X2,X5)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X8,X6,X7] : ! [X11,X21,X13] : s(X8,'const.combin.o_3'(s(fun(X6,X8),X11),s(fun(X7,X6),X21),s(X7,X13))) = s(X8,happ(s(fun(X6,X8),X11),s(X6,happ(s(fun(X7,X6),X21),s(X7,X13)))))),
  file('thm.list.LIST_REL_MAP|49|','thm.combin.o_THM')).
fof(f25096,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(superposition,[],[f543,f90])).
fof(f90,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3))))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1,X2,X3] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) | ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(ennf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X3)))))) => ! [X4] : s(X0,happ(s(fun(X1,X0),X4),s(X1,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X1),X3))))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X3))))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X8,X6] : ! [X23,X22] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X23),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X22)))))) => ! [X11] : s(X8,happ(s(fun(X6,X8),X11),s(X6,'const.list.EL_2'(s('type.num.num',X23),s('type.list.list'(X6),X22))))) = s(X8,'const.list.EL_2'(s('type.num.num',X23),s('type.list.list'(X8),'const.list.MAP_2'(s(fun(X6,X8),X11),s('type.list.list'(X6),X22))))))),
  file('thm.list.LIST_REL_MAP|49|','thm.list.EL_MAP')).
fof(f543,plain,(
  ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f542])).
fof(f542,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3))))))),
  inference(forward_demodulation,[],[f541,f334])).
fof(f541,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3))))))),
  inference(forward_demodulation,[],[f516,f89])).
fof(f516,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | ~p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)),sK6,sK2,sK0)),s('type.list.list'(sK2),sK3)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4)))))),
  inference(resolution,[],[f199,f95])).
fof(f25117,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(backward_demodulation,[],[f25109,f147])).
fof(f27864,plain,(
  p(s(bool,happ(s(fun(sK2,bool),'const.combin.o_3'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f27863,f102])).
fof(f27863,plain,(
  p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,happ(s(fun(sK1,sK0),sK5),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'T_0') = s(bool,'F_0')),
  inference(forward_demodulation,[],[f26637,f27646])).
fof(f27646,plain,(
  ( ! [X2,X3] : (s(X2,happ(s(fun(sK1,X2),X3),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))) = s(X2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK1,X2),X3),s('type.list.list'(sK1),sK4)))))) )),
  inference(global_subsumption,[],[f26162,f8617,f131,f133,f461,f25109])).
fof(f8617,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | s(X2,happ(s(fun(sK1,X2),X3),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))) = s(X2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK1,X2),X3),s('type.list.list'(sK1),sK4)))))) )),
  inference(resolution,[],[f613,f90])).
fof(f613,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f611])).
fof(f611,plain,(
  s(bool,'T_0') != s(bool,'T_0') | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f337,f76])).
fof(f337,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(trivial_inequality_removal,[],[f336])).
fof(f336,plain,(
  s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))))))),
  inference(backward_demodulation,[],[f334,f151])).
fof(f151,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4))) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f133,f94])).
fof(f26162,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'F_0') | s(X2,happ(s(fun(sK1,X2),X3),s(sK1,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK1),sK4))))) = s(X2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(X2),'const.list.MAP_2'(s(fun(sK1,X2),X3),s('type.list.list'(sK1),sK4)))))) )),
  inference(backward_demodulation,[],[f25666,f8617])).
fof(f26637,plain,(
  s(bool,'T_0') = s(bool,'F_0') | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3))))))),
  inference(backward_demodulation,[],[f25666,f16669])).
fof(f16669,plain,(
  p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f16628,f796])).
fof(f796,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(global_subsumption,[],[f750,f728,f565,f147,f153])).
fof(f153,plain,(
  s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f133,f77])).
fof(f728,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | ~p(s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f197,f80])).
fof(f197,plain,(
  s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f195])).
fof(f195,plain,(
  s(bool,'T_0') != s(bool,'T_0') | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f135,f76])).
fof(f750,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f77,f197])).
fof(f16628,plain,(
  s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',sK8(sK3,sK4,'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5)),sK2,sK1)),s('type.list.list'(sK2),sK3)))))) | s(bool,'F_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))),
  inference(resolution,[],[f591,f613])).
fof(f591,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK1),sK4)))))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3))))))) )),
  inference(forward_demodulation,[],[f569,f89])).
fof(f569,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,happ(s(fun(sK2,bool),happ(s(fun(sK0,fun(sK2,bool)),sK6),s(sK0,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))),s(sK2,'const.list.EL_2'(s('type.num.num',X0),s('type.list.list'(sK2),sK3)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))))))))) )),
  inference(resolution,[],[f224,f93])).
fof(f224,plain,(
  p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3)))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(trivial_inequality_removal,[],[f216])).
fof(f216,plain,(
  s(bool,'F_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3))) | p(s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))))),
  inference(superposition,[],[f136,f84])).
fof(f136,plain,(
  s(bool,'F_0') != s(bool,'const.list.LIST_REL_3'(s(fun(sK0,fun(sK2,bool)),sK6),s('type.list.list'(sK0),'const.list.MAP_2'(s(fun(sK1,sK0),sK5),s('type.list.list'(sK1),sK4))),s('type.list.list'(sK2),sK3))) | s(bool,'T_0') = s(bool,'const.list.LIST_REL_3'(s(fun(sK1,fun(sK2,bool)),'const.combin.o_2'(s(fun(sK0,fun(sK2,bool)),sK6),s(fun(sK1,sK0),sK5))),s('type.list.list'(sK1),sK4),s('type.list.list'(sK2),sK3)))),
  inference(superposition,[],[f72,f76])).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 552
% Passive clauses: 8384
% Generated clauses: 27712
% Final active clauses: 358
% Final passive clauses: 5653
% Input formulas: 19
% Initial clauses: 40
% 
% Duplicate literals: 658
% Trivial inequalities: 1444
% Fw demodulations: 2351
% Bw demodulations: 2070
% Condensations: 1269
% Global subsumptions: 407
% 
% Simple tautologies: 910
% Equational tautologies: 9
% Forward subsumptions: 12269
% Bw demodulations to eq. taut.: 331
% 
% Binary resolution: 4349
% Factoring: 3
% Forward superposition: 11687
% Backward superposition: 3370
% Self superposition: 28
% Equality resolution: 98
% 
% SAT solver clauses: 10355
% SAT solver unit clauses: 885
% SAT solver binary clauses: 586
% SAT solver learnt clauses: 822
% SAT solver learnt literals: 2084
% 
% TWLsolver clauses: 8791
% TWLsolver calls for satisfiability: 253875
% 
% Memory used [KB]: 51811
% Time elapsed: 3.560 s
% ------------------------------
% ------------------------------
% Success in time 22.616 s
