Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.complex
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.complex
% SZS output start Proof for thm.complex
fof(f2564,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f2558])).
fof(f2558,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'('type.realax.real','type.realax.real'),sK0)))),
  inference(superposition,[],[f27,f1867])).
fof(f1867,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f1859,f30])).
fof(f30,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f7])).
fof(f7,axiom,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.complex.COMPLEX_POW_2','thm.arithmetic.TWO')).
fof(f1859,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(superposition,[],[f37,f32])).
fof(f32,plain,(
  ( ! [X0] : (s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f15])).
fof(f15,plain,(
  ! [X0] : s('type.pair.prod'('type.realax.real','type.realax.real'),X0) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : s('type.pair.prod'('type.realax.real','type.realax.real'),X6) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.complex.COMPLEX_POW_2','thm.complex.COMPLEX_POW_|49|')).
fof(f37,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1))))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num',X1)))))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X9] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.num.num',X9)))))),
  file('thm.complex.COMPLEX_POW_2','thm.complex.complex_pow_def|split|1')).
fof(f27,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.pair.prod'('type.realax.real','type.realax.real'),sK0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),sK0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f22])).
fof(f22,plain,(
  ? [X0] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) != s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(ennf_transformation,[],[f13])).
fof(f13,plain,(
  ~! [X0] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.pair.prod'('type.realax.real','type.realax.real'),X0))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X0),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_mul_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.pair.prod'('type.realax.real','type.realax.real'),X6))) = s('type.pair.prod'('type.realax.real','type.realax.real'),'const.complex.complex_pow_2'(s('type.pair.prod'('type.realax.real','type.realax.real'),X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.complex.COMPLEX_POW_2','thm.complex.COMPLEX_POW_2')).
% SZS output end Proof for thm.complex
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 467
% Generated clauses: 2422
% Final active clauses: 24
% Final passive clauses: 430
% Input formulas: 11
% Initial clauses: 12
% 
% Duplicate literals: 291
% Trivial inequalities: 32
% Fw subsumption resolutions: 100
% Fw demodulations: 1
% 
% Simple tautologies: 91
% Equational tautologies: 80
% Forward subsumptions: 995
% 
% Binary resolution: 12
% Forward superposition: 725
% Backward superposition: 809
% Self superposition: 237
% Equality factoring: 202
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 367
% SAT solver unit clauses: 217
% SAT solver binary clauses: 82
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 367
% TWLsolver calls for satisfiability: 11
% 
% Memory used [KB]: 1407
% Time elapsed: 0.086 s
% ------------------------------
% ------------------------------
% Success in time 0.087 s
