Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (124247)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 150
% Passive clauses: 4359
% Generated clauses: 18714
% Final active clauses: 114
% Final passive clauses: 3871
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 846
% Trivial inequalities: 171
% Fw subsumption resolutions: 2039
% Fw demodulations: 1804
% Bw demodulations: 31
% 
% Simple tautologies: 248
% Equational tautologies: 79
% Forward subsumptions: 7998
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 323
% Factoring: 2
% Forward superposition: 7333
% Backward superposition: 5504
% Self superposition: 254
% Equality factoring: 186
% Equality resolution: 17
% 
% Split clauses: 467
% Split components: 955
% SAT solver clauses: 1235
% SAT solver unit clauses: 26
% SAT solver binary clauses: 237
% 
% Sat splits: 467
% Sat splitting refutations: 8
% 
% TWLsolver clauses: 1230
% TWLsolver calls for satisfiability: 169
% 
% Memory used [KB]: 12409
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (124285)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 121
% Passive clauses: 1058
% Generated clauses: 12937
% Final active clauses: 99
% Final passive clauses: 776
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 441
% Trivial inequalities: 114
% Fw subsumption resolutions: 628
% Fw demodulations: 2001
% Bw demodulations: 272
% Condensations: 993
% 
% Simple tautologies: 146
% Equational tautologies: 23
% Forward subsumptions: 6096
% 
% Binary resolution: 71
% Factoring: 1
% Forward superposition: 4155
% Backward superposition: 3101
% Self superposition: 117
% Equality factoring: 50
% Equality resolution: 18
% 
% Split clauses: 53
% Split components: 107
% SAT solver clauses: 1466
% SAT solver unit clauses: 41
% SAT solver binary clauses: 40
% 
% Sat splits: 53
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1466
% TWLsolver calls for satisfiability: 283
% 
% Memory used [KB]: 17142
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f5178,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f69,f104,f103,f68,f106,f67,f108,f102,f137,f142,f155,f159,f157,f172,f176,f891,f894,f892,f1005,f1008,f1006,f1321,f1370,f1368,f2683,f2684,f2701,f2798,f2815,f2813,f2846,f2849,f2854,f2829,f2851,f2852,f2857,f2858,f2982,f2983,f3160,f3102,f3162,f3507,f3536,f4055,f3987,f4057,f4095,f4175,f4872,f4854,f4845,f140,f4917,f4743,f5111,f3188,f4087,f4084,f5112,f156,f5129,f5130,f5131,f5134,f5137,f5138,f5139,f5140,f5141,f5142,f5143,f5144,f5145,f5146,f5147,f5148,f5149,f5150,f5172])).
fof(f5172,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f5171,f70])).
fof(f70,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65',aHL_TRUTH)).
fof(f5171,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f5152,f138])).
fof(f138,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f135,f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65',aHL_FALSITY)).
fof(f135,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(superposition,[],[f115,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65',aHL_BOOL_CASES)).
fof(f115,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f108,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X31,X30] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X31),s('type.num.num',X30))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X30),s('type.num.num',X31)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.GREATER_EQ')).
fof(f5152,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f103,f113])).
fof(f113,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f111,f94])).
fof(f111,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(backward_demodulation,[],[f94,f84])).
fof(f84,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),sK20(X2,X1,X0)))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK20,sK21,sK22,sK23,sK24,sK25,sK26,sK27,sK28,sK29,sK30,sK31,sK32,sK33,sK34,sK35,sK36])],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34,X35,X36] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X20)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),X20))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))) & (! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.quantHeuristics.LIST_LENGTH_2|48||split|64')).
fof(f5150,plain,(
  $false | ($spl38 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f4148,f4140,f4141,f4128,f4097,f4107,f4119,f3161])).
fof(f3161,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl38),
  inference(cnf_transformation,[],[f3161_D])).
fof(f3161_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4119,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f70,f4057,f1521])).
fof(f4107,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f73,f4057,f158])).
fof(f4097,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(unit_resulting_resolution,[],[f4057,f77])).
fof(f4128,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl43),
  inference(superposition,[],[f4057,f94])).
fof(f4141,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl43),
  inference(trivial_inequality_removal,[],[f4130])).
fof(f4130,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X1) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X1)) ) | $spl43),
  inference(superposition,[],[f4057,f131])).
fof(f4140,plain,(
  ( ! [X4] : (s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(trivial_inequality_removal,[],[f4133])).
fof(f4133,plain,(
  ( ! [X4] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | $spl43),
  inference(superposition,[],[f4057,f131])).
fof(f4148,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl43),
  inference(forward_demodulation,[],[f4106,f94])).
fof(f4106,plain,(
  ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) | $spl43),
  inference(unit_resulting_resolution,[],[f4057,f133])).
fof(f2939,plain,(
  ( ! [X30,X28,X26,X24,X37,X35,X33,X39,X41,X23,X21,X31,X29,X27,X25,X38,X36,X34,X32,X42,X40,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X25))),s('type.num.num',X22)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X24),X26))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK39(X21,X22,X23,X20)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X24),X26) != s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X27),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X28),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X29),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X30),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X31),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X32),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X33),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X34),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X35),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X36),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X37),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X38),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X39),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X40),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X41),s('type.list.list'(X24),'const.list.CONS_2'(s(X24,X42),s('type.list.list'(X24),X25))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21)))) )),
  inference(superposition,[],[f113,f89])).
fof(f2940,plain,(
  ( ! [X61,X59,X57,X47,X45,X43,X64,X54,X52,X50,X48,X62,X60,X58,X56,X46,X44,X65,X55,X53,X51,X49,X63] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X48))),s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X47),X49))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),sK40(X44,X45,X46,X43)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X47),X49) != s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X50),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X51),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X52),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X53),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X54),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X55),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X56),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X57),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X58),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X59),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X60),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X61),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X62),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X63),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X64),s('type.list.list'(X47),'const.list.CONS_2'(s(X47,X65),s('type.list.list'(X47),X48))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X43),X46))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num',X44)))) )),
  inference(superposition,[],[f113,f90])).
fof(f3251,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK21(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK22(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK23(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK24(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK25(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK26(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK27(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK28(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK30(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK31(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK32(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK33(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK34(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK35(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK36(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK20(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f72])).
fof(f2979,plain,(
  ( ! [X212,X210,X208,X216,X218,X220,X222,X225,X215,X213,X211,X209,X217,X219,X221,X223,X207,X224,X214] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X209))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X207),X209) != s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X210),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X211),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X212),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X213),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X214),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X215),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X216),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X217),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X218),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X219),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X220),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X221),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X222),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X223),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X224),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X225),s('type.list.list'(X207),X208)))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2978,f72])).
fof(f2978,plain,(
  ( ! [X212,X210,X208,X216,X218,X220,X222,X225,X215,X213,X211,X209,X217,X219,X221,X223,X207,X224,X214] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X209))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X207),X209) != s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X210),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X211),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X212),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X213),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X214),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X215),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X216),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X217),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X218),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X219),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X220),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X221),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X222),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X223),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X224),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X225),s('type.list.list'(X207),X208)))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2948,f839])).
fof(f2948,plain,(
  ( ! [X212,X210,X208,X216,X218,X220,X222,X225,X215,X213,X211,X209,X217,X219,X221,X223,X207,X224,X214] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X208))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X207),X209))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X207),X209) != s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X210),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X211),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X212),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X213),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X214),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X215),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X216),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X217),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X218),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X219),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X220),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X221),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X222),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X223),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X224),s('type.list.list'(X207),'const.list.CONS_2'(s(X207,X225),s('type.list.list'(X207),X208)))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f72])).
fof(f1613,plain,(
  ( ! [X37,X38] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK20(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1587,f498])).
fof(f1587,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK20(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f112,f72])).
fof(f3245,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK21(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK22(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK23(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK24(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK25(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK26(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK27(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK28(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK29(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK30(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK31(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK32(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK33(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK34(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK35(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK36(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),sK20(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f2942,plain,(
  ( ! [X94,X92,X90,X88,X101,X99,X97,X103,X105,X87,X95,X93,X91,X89,X102,X100,X98,X96,X106,X104,X86] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X89))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X87),s('type.num.num',X86)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X88),X90))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X86),s('type.num.num',X87))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X88),X90) != s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X91),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X92),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X93),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X94),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X95),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X96),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X97),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X98),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X99),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X100),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X101),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X102),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X103),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X104),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X105),s('type.list.list'(X88),'const.list.CONS_2'(s(X88,X106),s('type.list.list'(X88),X89)))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f95])).
fof(f1581,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK20(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f112,f95])).
fof(f2954,plain,(
  ( ! [X61,X59,X57,X70,X68,X66,X64,X54,X52,X62,X60,X58,X56,X71,X69,X67,X65,X55,X53,X63] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X53))),s('type.num.num',X54)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X52),X55))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X52),X55) != s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X56),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X57),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X58),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X59),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X60),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X61),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X62),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X63),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X64),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X65),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X66),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X67),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X68),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X69),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X70),s('type.list.list'(X52),'const.list.CONS_2'(s(X52,X71),s('type.list.list'(X52),X53)))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f498])).
fof(f889,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f873,f70])).
fof(f873,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f85,f131])).
fof(f85,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK37(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK37(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK38(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK37,sK38])],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X35,X36] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X35),s(X6,X7)))) & p(s(bool,X36))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X35),s(X6,X7)))) & p(s(bool,X36))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f964,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK37('const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6))))) )),
  inference(superposition,[],[f85,f498])).
fof(f1067,plain,(
  ( ! [X4,X2,X3,X1] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X2,bool),X3),s(X2,sK37('const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X3,X2))))) | ~p(s(bool,happ(s(fun(X2,bool),X3),s(X2,X4))))) )),
  inference(superposition,[],[f85,f839])).
fof(f883,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X45),s('type.num.num',X44)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK37('const.arithmetic.<=_2'(s('type.num.num',X44),s('type.num.num',X45)),X47,X46))))) | ~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48))))) )),
  inference(superposition,[],[f85,f94])).
fof(f884,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X50),s('type.num.num',X49)))) | p(s(bool,happ(s(fun(X51,bool),X52),s(X51,sK37('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X49))),s('type.num.num',X50)),X52,X51))))) | ~p(s(bool,happ(s(fun(X51,bool),X52),s(X51,X53))))) )),
  inference(superposition,[],[f85,f114])).
fof(f885,plain,(
  ( ! [X57,X54,X56,X55] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X54),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X55,bool),X56),s(X55,sK37('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X54)),X56,X55))))) | ~p(s(bool,happ(s(fun(X55,bool),X56),s(X55,X57))))) )),
  inference(superposition,[],[f85,f486])).
fof(f886,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X59),s('type.num.num',X58)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK37('const.prim_rec.<_2'(s('type.num.num',X58),s('type.num.num',X59)),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f85,f93])).
fof(f1518,plain,(
  ( ! [X6,X4,X2,X5,X3] : (p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK37('const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f1472,f70])).
fof(f1472,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK37('const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6)))) | s(bool,'F_0') = s(bool,X2)) )),
  inference(superposition,[],[f85,f227])).
fof(f887,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,X63)) | p(s(bool,happ(s(fun(X65,bool),X66),s(X65,sK37('const.bool.COND_3'(s(bool,'T_0'),s(bool,X63),s(bool,X64)),X66,X65))))) | ~p(s(bool,happ(s(fun(X65,bool),X66),s(X65,X67))))) )),
  inference(superposition,[],[f85,f80])).
fof(f888,plain,(
  ( ! [X70,X68,X72,X71,X69] : (~p(s(bool,X69)) | p(s(bool,happ(s(fun(X70,bool),X71),s(X70,sK37('const.bool.COND_3'(s(bool,'F_0'),s(bool,X68),s(bool,X69)),X71,X70))))) | ~p(s(bool,happ(s(fun(X70,bool),X71),s(X70,X72))))) )),
  inference(superposition,[],[f85,f81])).
fof(f87,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK38(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f996,plain,(
  ( ! [X47,X45,X48,X46,X44] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X44),s('type.num.num',X45)))) | p(s(bool,happ(s(fun(X46,bool),X47),s(X46,sK38('const.arithmetic.>=_2'(s('type.num.num',X44),s('type.num.num','const.num.SUC_1'(s('type.num.num',X45)))),X47,X46))))) | ~p(s(bool,happ(s(fun(X46,bool),X47),s(X46,X48))))) )),
  inference(superposition,[],[f87,f498])).
fof(f997,plain,(
  ( ! [X52,X50,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X50),s('type.num.num',X49)))) | p(s(bool,happ(s(fun(X51,bool),X52),s(X51,sK38('const.arithmetic.<=_2'(s('type.num.num',X49),s('type.num.num',X50)),X52,X51))))) | ~p(s(bool,happ(s(fun(X51,bool),X52),s(X51,X53))))) )),
  inference(superposition,[],[f87,f94])).
fof(f998,plain,(
  ( ! [X57,X54,X58,X56,X55] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X55),s('type.num.num',X54)))) | p(s(bool,happ(s(fun(X56,bool),X57),s(X56,sK38('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X54))),s('type.num.num',X55)),X57,X56))))) | ~p(s(bool,happ(s(fun(X56,bool),X57),s(X56,X58))))) )),
  inference(superposition,[],[f87,f114])).
fof(f999,plain,(
  ( ! [X61,X59,X62,X60] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X59),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK38('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X59)),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f87,f486])).
fof(f1000,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X64),s('type.num.num',X63)))) | p(s(bool,happ(s(fun(X65,bool),X66),s(X65,sK38('const.prim_rec.<_2'(s('type.num.num',X63),s('type.num.num',X64)),X66,X65))))) | ~p(s(bool,happ(s(fun(X65,bool),X66),s(X65,X67))))) )),
  inference(superposition,[],[f87,f93])).
fof(f1001,plain,(
  ( ! [X70,X68,X72,X71,X69] : (~p(s(bool,X68)) | p(s(bool,happ(s(fun(X70,bool),X71),s(X70,sK38('const.bool.COND_3'(s(bool,'T_0'),s(bool,X68),s(bool,X69)),X71,X70))))) | ~p(s(bool,happ(s(fun(X70,bool),X71),s(X70,X72))))) )),
  inference(superposition,[],[f87,f80])).
fof(f1002,plain,(
  ( ! [X76,X74,X77,X75,X73] : (~p(s(bool,X74)) | p(s(bool,happ(s(fun(X75,bool),X76),s(X75,sK38('const.bool.COND_3'(s(bool,'F_0'),s(bool,X73),s(bool,X74)),X76,X75))))) | ~p(s(bool,happ(s(fun(X75,bool),X76),s(X75,X77))))) )),
  inference(superposition,[],[f87,f81])).
fof(f1003,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f986,f70])).
fof(f986,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38(X0,X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3)))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f87,f131])).
fof(f1068,plain,(
  ( ! [X6,X8,X7,X5] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X6,bool),X7),s(X6,sK38('const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))),X7,X6))))) | ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8))))) )),
  inference(superposition,[],[f87,f839])).
fof(f1519,plain,(
  ( ! [X10,X8,X7,X11,X9] : (p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK38('const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11)))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1473,f70])).
fof(f1473,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK38('const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)),X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11)))) | s(bool,'F_0') = s(bool,X7)) )),
  inference(superposition,[],[f87,f227])).
fof(f3278,plain,(
  ( ! [X6,X4,X5,X3] : (s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X5,X3)),s('type.list.list'(X3),sK20(X4,X5,X3)))))))))))))))))))))))))))))))))) | s(bool,X6) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(subsumption_resolution,[],[f3258,f70])).
fof(f3258,plain,(
  ( ! [X6,X4,X5,X3] : (~p(s(bool,'T_0')) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X5,X3)),s('type.list.list'(X3),sK20(X4,X5,X3)))))))))))))))))))))))))))))))))) | s(bool,X6) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f110,f131])).
fof(f3255,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2)))))) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(X4,X2,X3)),s('type.list.list'(X3),sK20(X4,X2,X3))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f3254,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),sK20(X1,'const.num.|48|_0',X0))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3253,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X45),X46) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK21(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK22(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK23(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK24(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK25(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK26(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK27(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK28(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK29(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK30(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK31(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK32(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK33(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK34(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK35(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK36(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),sK20(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3252,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK21(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK22(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK23(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK24(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK25(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK26(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK27(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK28(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK29(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK30(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK31(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK32(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK33(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK34(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK35(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK36(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),sK20(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3277,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK21(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK22(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK23(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK24(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK25(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK26(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK27(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK28(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK30(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK31(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK32(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK33(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK34(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK35(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK36(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK20(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3250,f75])).
fof(f3250,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK21(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK22(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK23(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK24(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK25(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK26(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK27(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK28(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK29(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK30(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK31(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK32(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK33(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK34(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK35(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK36(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK20(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f71])).
fof(f3276,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK21(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK22(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK23(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK24(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK25(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK26(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK27(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK28(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK30(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK31(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK32(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK33(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK34(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK35(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK36(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK20(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3249,f75])).
fof(f3249,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK21(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK22(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK23(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK24(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK25(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK26(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK27(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK28(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK29(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK30(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK31(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK32(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK33(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK34(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK35(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK36(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK20(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f74])).
fof(f3275,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK21(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK22(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK23(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK24(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK25(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK26(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK27(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK28(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK30(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK31(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK32(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK33(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK34(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK35(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK36(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK20(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3248,f75])).
fof(f3248,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK21(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK22(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK23(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK24(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK25(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK26(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK27(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK28(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK29(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK30(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK31(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK32(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK33(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK34(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK35(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK36(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK20(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f76])).
fof(f3247,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK21(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK22(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK23(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK24(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK25(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK26(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK27(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK28(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK29(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK30(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK31(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK32(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK33(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK34(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK35(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK36(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),sK20(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f362])).
fof(f3244,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK21(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK22(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK23(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK24(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK25(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK26(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK27(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK28(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK29(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK30(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK31(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK32(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK33(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK34(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK35(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK36(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),sK20(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3243,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK21(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK22(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK23(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK24(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK25(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK26(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK27(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK28(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK29(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK30(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK31(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK32(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK33(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK34(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK35(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK36(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),sK20(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3242,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X7),X8) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK21(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK22(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK23(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK24(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK25(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK26(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK27(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK28(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK29(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK30(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK31(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK32(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK33(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK34(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK35(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK36(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),sK20(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3274,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK21(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK22(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK23(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK24(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK25(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK26(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK27(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK28(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK30(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK31(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK32(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK33(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK34(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK35(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK36(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK20(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3241,f75])).
fof(f3241,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK21(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK22(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK23(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK24(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK25(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK26(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK27(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK28(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK29(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK30(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK31(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK32(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK33(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK34(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK35(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK36(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK20(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f455])).
fof(f3240,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X7),sK40(X8,X9,X10,X7)) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK21(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK22(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK23(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK24(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK25(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK26(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK27(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK28(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK29(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK30(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK31(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK32(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK33(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK34(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK35(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK36(sK40(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),sK20(sK40(X8,X9,X10,X7),X11,X7)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3239,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X2),sK39(X3,X4,X5,X2)) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK21(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK22(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK23(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK24(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK25(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK26(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK27(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK28(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK29(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK30(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK31(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK32(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK33(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK34(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK35(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK36(sK39(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),sK20(sK39(X3,X4,X5,X2),X6,X2)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3238,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),sK20('const.list.NIL_0',X1,X0))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f455])).
fof(f3273,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.list.list'(X15),X17) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK27('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK28('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK20('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3237,f81])).
fof(f3237,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X15),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17))) = s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK21('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK22('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK23('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK24('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK25('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK26('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK27('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK28('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK29('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK30('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK31('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK32('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK33('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK34('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK35('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),'const.list.CONS_2'(s(X15,sK36('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)),s('type.list.list'(X15),sK20('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3272,plain,(
  ( ! [X14,X12,X13,X11] : (s('type.list.list'(X11),X12) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK21('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK25('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK27('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK28('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK20('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3236,f80])).
fof(f3236,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X11),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK21('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK22('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK23('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK24('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK25('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK26('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK27('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK28('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK29('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK30('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK31('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK32('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK33('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK34('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK35('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK36('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)),s('type.list.list'(X11),sK20('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3235,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK21('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK22('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK23('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK24('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK25('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK26('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK27('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK28('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK29('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK30('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK31('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK32('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK33('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK34('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK35('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK36('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),sK20('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f110,f91])).
fof(f3271,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK20(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3270,f1187])).
fof(f3270,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X3),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK20(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3234,f455])).
fof(f3234,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X3),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK21(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK22(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK23(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK24(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK25(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK26(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK27(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK28(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK29(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK30(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK31(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK32(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK33(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK34(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK35(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK36(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK20(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f1187])).
fof(f3269,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK20(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f3268,f1116])).
fof(f3268,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK20(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f3233,f455])).
fof(f3233,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK20(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f110,f1116])).
fof(f2986,plain,(
  ( ! [X127,X125,X123,X121,X111,X128,X130,X118,X116,X114,X112,X126,X124,X122,X120,X131,X129,X119,X117,X115,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X111),X114) != s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X115),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X116),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X117),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X118),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X119),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X120),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X121),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X122),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X123),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X124),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X125),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X126),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X127),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X128),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X129),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X130),s('type.list.list'(X111),X112))))))))))))))))))))))))))))))))) | s(bool,X131) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))),s('type.num.num',X113))) | s(bool,'T_0') = s(bool,X131)) )),
  inference(subsumption_resolution,[],[f2957,f70])).
fof(f2957,plain,(
  ( ! [X127,X125,X123,X121,X111,X128,X130,X118,X116,X114,X112,X126,X124,X122,X120,X131,X129,X119,X117,X115,X113] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X114))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X113),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X111),X114) != s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X115),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X116),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X117),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X118),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X119),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X120),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X121),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X122),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X123),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X124),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X125),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X126),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X127),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X128),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X129),s('type.list.list'(X111),'const.list.CONS_2'(s(X111,X130),s('type.list.list'(X111),X112))))))))))))))))))))))))))))))))) | s(bool,X131) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X111),X112))),s('type.num.num',X113))) | s(bool,'T_0') = s(bool,X131)) )),
  inference(superposition,[],[f113,f131])).
fof(f2937,plain,(
  ( ! [X61,X59,X57,X47,X45,X43,X41,X54,X52,X50,X48,X62,X60,X58,X56,X46,X44,X42,X55,X53,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X42),s('type.num.num',X45)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X45),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X41),X46) != s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X47),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X48),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X49),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X50),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X51),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X52),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X53),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X54),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X55),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X56),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X57),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X58),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X59),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X60),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X61),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,X62),s('type.list.list'(X41),sK40(X42,X43,X44,X41)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X44))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X42)))) )),
  inference(superposition,[],[f113,f90])).
fof(f2936,plain,(
  ( ! [X30,X28,X26,X24,X37,X35,X33,X39,X23,X21,X19,X31,X29,X27,X25,X38,X36,X34,X32,X40,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X21),s('type.num.num',X23)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X19),X24) != s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X25),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X26),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X27),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X28),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X29),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X30),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X31),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X32),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X33),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X34),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X35),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X36),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X37),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X38),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X39),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X40),s('type.list.list'(X19),sK39(X20,X21,X22,X19)))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X22))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X20)))) )),
  inference(superposition,[],[f113,f89])).
fof(f2932,plain,(
  ( ! [X61,X59,X57,X47,X45,X43,X41,X54,X52,X50,X48,X60,X58,X56,X46,X44,X42,X40,X53,X51,X49,X55] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))),s('type.num.num',X44)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X45))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X40),X45) != s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X46),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X47),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X48),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X49),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X50),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X51),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X52),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X53),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X54),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X55),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X56),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X57),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X58),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X59),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X60),s('type.list.list'(X40),'const.list.CONS_2'(s(X40,X61),s('type.list.list'(X40),'const.list.APPEND_2'(s('type.list.list'(X40),sK39(X41,X42,X43,X40)),s('type.list.list'(X40),sK40(X41,X42,X43,X40)))))))))))))))))))))))))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X40),X43))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X41)))) )),
  inference(superposition,[],[f113,f91])).
fof(f2967,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),'const.list.NIL_0'))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f2966,f1116])).
fof(f2966,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))))))))))))))))))))))))) )),
  inference(forward_demodulation,[],[f2930,f455])).
fof(f2930,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X19,X17,X7,X5,X3,X1,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))))))))))))))))))))))))) )),
  inference(superposition,[],[f113,f1116])).
fof(f2385,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f92])).
fof(f2384,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2381,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK39(X13,X14,X15,X12)),s('type.list.list'(X12),sK40(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2376,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK39(X13,X14,X15,X12)),s('type.list.list'(X12),sK40(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2371,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X16),s('type.list.list'(X12),X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK39(X13,X14,X15,X12)),s('type.list.list'(X12),sK40(X13,X14,X15,X12)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f2468,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2467,f75])).
fof(f2467,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2344,f81])).
fof(f2344,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f455,f455,f81,f92])).
fof(f2457,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2456,f75])).
fof(f2456,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2455,f95])).
fof(f2455,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f2454,f81])).
fof(f2454,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f2348,f81])).
fof(f2348,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f81,f455,f81,f92])).
fof(f2401,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f2400,f75])).
fof(f2400,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f2399,f81])).
fof(f2399,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))))) )),
  inference(forward_demodulation,[],[f2364,f81])).
fof(f2364,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f455,f81,f81,f92])).
fof(f2388,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f2387,f81])).
fof(f2387,plain,(
  ( ! [X4,X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f2386,f81])).
fof(f2386,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f2368,f81])).
fof(f2368,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f81,f81,f81,f92])).
fof(f1617,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK20(X5,X6,X4)))),s('type.num.num',X6)))) | s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(subsumption_resolution,[],[f1596,f70])).
fof(f1596,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),sK20(X5,X6,X4)))),s('type.num.num',X6)))) | s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X5))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f112,f131])).
fof(f1591,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK20(X4,X2,X3)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f95])).
fof(f1590,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(X1,'const.num.|48|_0',X0)))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f112,f75])).
fof(f1615,plain,(
  ( ! [X45,X43,X46,X44] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK20(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num',X44)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1589,f81])).
fof(f1589,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK20(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44))))))) )),
  inference(superposition,[],[f112,f81])).
fof(f1614,plain,(
  ( ! [X39,X41,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK20(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num',X39)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1588,f80])).
fof(f1588,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK20(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40))))))) )),
  inference(superposition,[],[f112,f80])).
fof(f1612,plain,(
  ( ! [X35,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK20(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1611,f71])).
fof(f1611,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK20(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f1586,f75])).
fof(f1586,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK20(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f71])).
fof(f1610,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK20(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1609,f74])).
fof(f1609,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK20(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(forward_demodulation,[],[f1585,f75])).
fof(f1585,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK20(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(superposition,[],[f112,f74])).
fof(f1608,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK20(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1607,f76])).
fof(f1607,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK20(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(forward_demodulation,[],[f1584,f75])).
fof(f1584,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK20(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(superposition,[],[f112,f76])).
fof(f1606,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK20(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num',X26)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1583,f362])).
fof(f1583,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK20(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f362])).
fof(f1605,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK20(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(forward_demodulation,[],[f1580,f75])).
fof(f1580,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK20(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f112,f75])).
fof(f1579,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK20(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))),X13)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK40(X10,X11,X12,X9))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f112,f90])).
fof(f1578,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK20(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))),X7)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK39(X4,X5,X6,X3))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f112,f89])).
fof(f1604,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK20(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) )),
  inference(forward_demodulation,[],[f1603,f455])).
fof(f1603,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK20(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(forward_demodulation,[],[f1577,f75])).
fof(f1577,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK20(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(superposition,[],[f112,f455])).
fof(f1576,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK20(sK40(X8,X9,X10,X7),X11,X7)))),s('type.num.num',X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f112,f90])).
fof(f1575,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK20(sK39(X3,X4,X5,X2),X6,X2)))),s('type.num.num',X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f112,f89])).
fof(f1574,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20('const.list.NIL_0',X1,X0)))),s('type.num.num',X1))))) )),
  inference(superposition,[],[f112,f455])).
fof(f1573,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK20('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))),s('type.num.num',X18))))) )),
  inference(superposition,[],[f112,f81])).
fof(f1572,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK20('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))),s('type.num.num',X14))))) )),
  inference(superposition,[],[f112,f80])).
fof(f1571,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK20('const.list.APPEND_2'(s('type.list.list'(X6),sK39(X7,X8,X9,X6)),s('type.list.list'(X6),sK40(X7,X8,X9,X6))),X10,X6)))),s('type.num.num',X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f112,f91])).
fof(f1602,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK20(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f1570,f455])).
fof(f1570,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK20(sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f112,f1187])).
fof(f1601,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f1569,f455])).
fof(f1569,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f1116])).
fof(f1566,plain,(
  ( ! [X45,X46,X44] : (s(bool,X46) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X44),s(bool,X45))) | s(bool,'F_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X44)) )),
  inference(subsumption_resolution,[],[f1545,f70])).
fof(f1545,plain,(
  ( ! [X45,X46,X44] : (~p(s(bool,'T_0')) | s(bool,X46) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X44),s(bool,X45))) | s(bool,'F_0') = s(bool,X46) | s(bool,'F_0') = s(bool,X44)) )),
  inference(superposition,[],[f1521,f227])).
fof(f1551,plain,(
  ( ! [X4,X2,X3] : (s(bool,X2) = s(bool,X3) | s(bool,'F_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(subsumption_resolution,[],[f1528,f70])).
fof(f1528,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'T_0')) | s(bool,X2) = s(bool,X3) | s(bool,'F_0') = s(bool,X3) | s(bool,X2) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f1521,f131])).
fof(f1521,plain,(
  ( ! [X20,X18] : (~p(s(bool,X20)) | s(bool,X18) = s(bool,X20) | s(bool,'F_0') = s(bool,X18)) )),
  inference(forward_demodulation,[],[f1520,f80])).
fof(f1520,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X18),s(bool,X19))) | s(bool,'F_0') = s(bool,X18)) )),
  inference(subsumption_resolution,[],[f1476,f70])).
fof(f1476,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'T_0')) | ~p(s(bool,X20)) | s(bool,X20) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X18),s(bool,X19))) | s(bool,'F_0') = s(bool,X18)) )),
  inference(superposition,[],[f100,f227])).
fof(f1444,plain,(
  ( ! [X52,X50,X51] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X51),s(bool,X52))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X50),s(bool,X51)))) )),
  inference(superposition,[],[f227,f81])).
fof(f1443,plain,(
  ( ! [X47,X48,X49] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X49))) | s(bool,'F_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X47),s(bool,X48)))) )),
  inference(superposition,[],[f227,f80])).
fof(f1418,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,'const.bool.COND_3'(s(bool,X0),s(bool,X1),s(bool,X2))) | s(bool,'F_0') = s(bool,X1) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f227,f131])).
fof(f1408,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) | s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK39(X13,X14,X15,X12)),s('type.list.list'(X12),sK40(X13,X14,X15,X12)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f78,f91])).
fof(f1407,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.NIL_0') != s('type.list.list'(X8),X11) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.APPEND_2'(s('type.list.list'(X8),sK39(X9,X10,X11,X8)),s('type.list.list'(X8),sK40(X9,X10,X11,X8)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f79,f91])).
fof(f1406,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK39('const.list.LENGTH_1'(s('type.list.list'(X4),X7)),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X4),sK39(X5,X6,X7,X4)),s('type.list.list'(X4),sK40(X5,X6,X7,X4))),X4)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X4),X7))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X5)))) )),
  inference(superposition,[],[f1116,f91])).
fof(f1405,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X3)),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X1,X2,X3,X0)),s('type.list.list'(X0),sK40(X1,X2,X3,X0))),X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f1187,f91])).
fof(f1416,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),sK40('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(forward_demodulation,[],[f1401,f1116])).
fof(f1401,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)),s('type.list.list'(X0),sK40('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f91])).
fof(f1415,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f1402,f1187])).
fof(f1402,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f91])).
fof(f1246,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,f(s(X16,sK41(X17,X18,bool,X16)))) | s(fun(X16,bool),X17) = s(fun(X16,bool),X18) | s(bool,'T_0') = s(bool,g(s(X16,sK41(X17,X18,bool,X16))))) )),
  inference(superposition,[],[f101,f77])).
fof(f1244,plain,(
  ( ! [X10,X8,X11,X9] : (s(bool,X11) != s(bool,f(s(X8,sK41(X9,X10,bool,X8)))) | s(fun(X8,bool),X9) = s(fun(X8,bool),X10) | s(bool,'T_0') = s(bool,g(s(X8,sK41(X9,X10,bool,X8)))) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f101,f131])).
fof(f1242,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') != s(bool,f(s(X0,sK41(X1,X2,bool,X0)))) | s(fun(X0,bool),X1) = s(fun(X0,bool),X2) | s(bool,X3) = s(bool,g(s(X0,sK41(X1,X2,bool,X0)))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f101,f131])).
fof(f1241,plain,(
  ( ! [X17,X18,X16] : (s(X18,f(s(bool,'F_0'))) != s(X18,g(s(bool,'F_0'))) | s(fun(bool,X18),X16) = s(fun(bool,X18),X17) | s(bool,'T_0') = s(bool,sK41(X16,X17,X18,bool))) )),
  inference(superposition,[],[f101,f77])).
fof(f1239,plain,(
  ( ! [X10,X8,X11,X9] : (s(X10,f(s(bool,X11))) != s(X10,g(s(bool,X11))) | s(fun(bool,X10),X8) = s(fun(bool,X10),X9) | s(bool,'T_0') = s(bool,sK41(X8,X9,X10,bool)) | s(bool,'T_0') = s(bool,X11)) )),
  inference(superposition,[],[f101,f131])).
fof(f1237,plain,(
  ( ! [X2,X0,X3,X1] : (s(X2,f(s(bool,'T_0'))) != s(X2,g(s(bool,'T_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,X3) = s(bool,sK41(X0,X1,X2,bool)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f101,f131])).
fof(f1222,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK39('const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),'const.num.|48|_0',sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f1116,f1187])).
fof(f1220,plain,(
  ( ! [X8,X7,X9] : (s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X7),X9)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X7),X8),s('type.list.list'(X7),X9)),X7))) )),
  inference(superposition,[],[f1187,f81])).
fof(f1219,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X4),X5)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))) )),
  inference(superposition,[],[f1187,f80])).
fof(f1218,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f1187,f1187])).
fof(f1217,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f1187,f1116])).
fof(f1190,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))))) )),
  inference(superposition,[],[f1163,f81])).
fof(f1189,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))))) )),
  inference(superposition,[],[f1163,f80])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))))) )),
  inference(superposition,[],[f1163,f1116])).
fof(f1187,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))) )),
  inference(unit_resulting_resolution,[],[f1163,f78])).
fof(f1164,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X1) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK40(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f78,f90])).
fof(f1162,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f90])).
fof(f1163,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f90])).
fof(f1147,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(X5),'const.list.NIL_0') = s('type.list.list'(X5),sK39('const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))) )),
  inference(superposition,[],[f1116,f81])).
fof(f1146,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK39('const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))) )),
  inference(superposition,[],[f1116,f80])).
fof(f1145,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),'const.num.|48|_0',sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f1116,f1116])).
fof(f1118,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK39('const.list.LENGTH_1'(s('type.list.list'(X3),X5)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X3))))) )),
  inference(superposition,[],[f1091,f81])).
fof(f1117,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(superposition,[],[f1091,f80])).
fof(f1116,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))) )),
  inference(unit_resulting_resolution,[],[f1091,f78])).
fof(f1093,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK39(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f78,f89])).
fof(f1091,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f89])).
fof(f1092,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f362,f89])).
fof(f1065,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f839,f77])).
fof(f1063,plain,(
  ( ! [X6,X5] : (s(bool,X6) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f839,f131])).
fof(f1061,plain,(
  ( ! [X2,X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X2) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f839,f131])).
fof(f962,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f498,f77])).
fof(f960,plain,(
  ( ! [X10,X8,X9] : (s(bool,X10) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f498,f131])).
fof(f958,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,X4) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f498,f131])).
fof(f844,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X10)))) )),
  inference(superposition,[],[f486,f77])).
fof(f842,plain,(
  ( ! [X6,X7] : (s(bool,X7) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) | s(bool,'T_0') = s(bool,X7)) )),
  inference(superposition,[],[f486,f131])).
fof(f840,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X3) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f486,f131])).
fof(f839,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f486,f94])).
fof(f827,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f646,f70])).
fof(f646,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f100,f131])).
fof(f631,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X2),s(X1,X3))) | s(bool,X0) = s(bool,X4) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f80,f131])).
fof(f566,plain,(
  ( ! [X28,X29,X27] : (s(bool,'T_0') = s(bool,X28) | s(bool,X29) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X27),s(bool,X28))) | s(bool,'T_0') = s(bool,X29)) )),
  inference(superposition,[],[f131,f81])).
fof(f565,plain,(
  ( ! [X26,X24,X25] : (s(bool,'T_0') = s(bool,X24) | s(bool,X26) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X25))) | s(bool,'T_0') = s(bool,X26)) )),
  inference(superposition,[],[f131,f80])).
fof(f564,plain,(
  ( ! [X23,X21,X22] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X22),s('type.num.num',X21))) | s(bool,X23) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X21),s('type.num.num',X22))) | s(bool,'T_0') = s(bool,X23)) )),
  inference(superposition,[],[f131,f93])).
fof(f563,plain,(
  ( ! [X19,X20,X18] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X18))) | s(bool,X20) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X18))),s('type.num.num',X19))) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f131,f114])).
fof(f562,plain,(
  ( ! [X17,X15,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X16),s('type.num.num',X15))) | s(bool,X17) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X15),s('type.num.num',X16))) | s(bool,'T_0') = s(bool,X17)) )),
  inference(superposition,[],[f131,f94])).
fof(f551,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f131,f131])).
fof(f535,plain,(
  ( ! [X35,X36,X34] : (s(bool,X35) = s(bool,X36) | s(bool,'T_0') = s(bool,X36) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X34),s(bool,X35)))) )),
  inference(superposition,[],[f131,f81])).
fof(f534,plain,(
  ( ! [X33,X31,X32] : (s(bool,X31) = s(bool,X33) | s(bool,'T_0') = s(bool,X33) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X31),s(bool,X32)))) )),
  inference(superposition,[],[f131,f80])).
fof(f533,plain,(
  ( ! [X30,X28,X29] : (s(bool,X30) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X29),s('type.num.num',X28))) | s(bool,'T_0') = s(bool,X30) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X28),s('type.num.num',X29)))) )),
  inference(superposition,[],[f131,f93])).
fof(f532,plain,(
  ( ! [X26,X27,X25] : (s(bool,X27) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X26),s('type.num.num',X25))) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X25))),s('type.num.num',X26)))) )),
  inference(superposition,[],[f131,f114])).
fof(f531,plain,(
  ( ! [X24,X23,X22] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,'T_0') = s(bool,X24) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X22),s('type.num.num',X23)))) )),
  inference(superposition,[],[f131,f94])).
fof(f499,plain,(
  ( ! [X4,X5] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5)))) )),
  inference(superposition,[],[f114,f77])).
fof(f498,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f114,f94])).
fof(f486,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f114,f72])).
fof(f455,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f451,f81])).
fof(f451,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f81,f79])).
fof(f449,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) | s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)))) )),
  inference(superposition,[],[f78,f81])).
fof(f448,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f78,f80])).
fof(f362,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f95,f75])).
fof(f344,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f94,f77])).
fof(f302,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f93,f77])).
fof(f264,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f81,f77])).
fof(f242,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f81,f77])).
fof(f227,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1))) | s(bool,'F_0') = s(bool,X0)) )),
  inference(superposition,[],[f80,f77])).
fof(f81,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X33,X34] : s(X6,X34) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X33),s(X6,X34)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.bool.COND_CLAUSES|split|1')).
fof(f112,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f109,f94])).
fof(f109,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(X2,X1,X0)))))))) )),
  inference(backward_demodulation,[],[f94,f82])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),sK20(X2,X1,X0))))))))))))))))))))))))))))))))))) )),
  inference(backward_demodulation,[],[f94,f83])).
fof(f114,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f96,f93])).
fof(f96,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X30,X31] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X30),s('type.num.num',X31))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X30))),s('type.num.num',X31)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.LESS_EQ')).
fof(f93,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X30,X31] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X30),s('type.num.num',X31))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X31),s('type.num.num',X30)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.GREATER_DEF')).
fof(f158,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f152,f73])).
fof(f152,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f97,f77])).
fof(f133,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f73,f77])).
fof(f131,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f77,f77])).
fof(f101,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK41(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK41(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK41(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK41(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK41])],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65',aHL_EXT)).
fof(f97,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X33,X34] : ((p(s(bool,X33)) => p(s(bool,X34))) => ((p(s(bool,X34)) => p(s(bool,X33))) => s(bool,X33) = s(bool,X34)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.bool.IMP_ANTISYM_AX')).
fof(f100,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f95,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X30,X31] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X30),s('type.num.num',X31))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X31),s('type.num.num',X30)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.ADD_SYM')).
fof(f89,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)),s('type.list.list'(X0),sK40(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK39,sK40])],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X26,X27] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num',X27))) <=> ? [X28,X29] : (s('type.num.num',X26) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X28))) & s('type.num.num',X27) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X29))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X28),s('type.list.list'(X6),X29)))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.list.LENGTH_EQ_SUM')).
fof(f90,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK40(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f91,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK39(X3,X2,X1,X0)),s('type.list.list'(X0),sK40(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f82,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK20(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f83,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK21(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK22(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK23(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK24(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK25(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK26(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK27(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK28(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK29(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK30(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK31(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK32(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK33(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK34(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK35(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK36(X2,X1,X0)),s('type.list.list'(X0),sK20(X2,X1,X0)))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f80,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X33,X34] : s(X6,X33) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X33),s(X6,X34)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.bool.COND_CLAUSES|split|0')).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.list.LENGTH_NIL')).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X32] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X32),s('type.num.num',X32)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f75,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X31] : s('type.num.num',X31) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X31)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.ADD|split|0')).
fof(f74,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X31] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X31)))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.arithmetic.MULT|split|0')).
fof(f72,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.numeral.numeral_suc|split|0')).
fof(f71,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f16])).
fof(f16,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.prim_rec.PRE|split|0')).
fof(f5149,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4123,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107,f4119])).
fof(f2850,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl30),
  inference(cnf_transformation,[],[f2850_D])).
fof(f2850_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f4123,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f73,f142,f4057,f2303])).
fof(f2303,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,X12)) | s(bool,X11) = s(bool,X12) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X13)) ) | $spl6),
  inference(subsumption_resolution,[],[f2009,f73])).
fof(f2009,plain,(
  ( ! [X12,X13,X11] : (p(s(bool,'F_0')) | p(s(bool,X12)) | s(bool,X11) = s(bool,X12) | s(bool,X11) = s(bool,X13) | s(bool,'F_0') = s(bool,X13)) ) | $spl6),
  inference(superposition,[],[f97,f1636])).
fof(f1636,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'F_0') = s(bool,X1) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f1558,f1558])).
fof(f1558,plain,(
  ( ! [X24] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X24)) ) | $spl6),
  inference(subsumption_resolution,[],[f1536,f70])).
fof(f1536,plain,(
  ( ! [X24] : (~p(s(bool,'T_0')) | s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X24)) ) | $spl6),
  inference(superposition,[],[f1521,f138])).
fof(f5148,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4120,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107,f4119])).
fof(f4120,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4057,f1636])).
fof(f5147,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107,f4119])).
fof(f5146,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4115,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107])).
fof(f4115,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f73,f142,f4057,f2303])).
fof(f5145,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4114,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107])).
fof(f4114,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4057,f1636])).
fof(f5144,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097,f4107])).
fof(f5143,plain,(
  $false | ($spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4102,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097])).
fof(f4102,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4057,f131])).
fof(f5142,plain,(
  $false | ($spl11 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f4098,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097])).
fof(f4098,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl11 | $spl43)),
  inference(unit_resulting_resolution,[],[f142,f4057,f131])).
fof(f5141,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128,f4097])).
fof(f5140,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141,f4128])).
fof(f5139,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140,f4141])).
fof(f5138,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148,f4140])).
fof(f5137,plain,(
  $false | ($spl6 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f5136,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148])).
fof(f5136,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl43)),
  inference(condensation,[],[f5135])).
fof(f5135,plain,(
  ( ! [X6] : (s(bool,'F_0') = s(bool,X6) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl43)),
  inference(subsumption_resolution,[],[f4135,f77])).
fof(f4135,plain,(
  ( ! [X6] : (s(bool,'T_0') != s(bool,X6) | s(bool,'F_0') = s(bool,X6) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl43)),
  inference(superposition,[],[f4057,f1636])).
fof(f5134,plain,(
  $false | ($spl6 | $spl30 | $spl43)),
  inference(global_subsumption,[],[f5133,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148])).
fof(f5133,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl43)),
  inference(condensation,[],[f5132])).
fof(f5132,plain,(
  ( ! [X7] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl6 | $spl43)),
  inference(subsumption_resolution,[],[f4136,f77])).
fof(f4136,plain,(
  ( ! [X7] : (s(bool,'T_0') != s(bool,X7) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,X7)) ) | ($spl6 | $spl43)),
  inference(superposition,[],[f4057,f1636])).
fof(f5131,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f2850,f4148])).
fof(f5130,plain,(
  $false | ($spl30 | $spl43)),
  inference(global_subsumption,[],[f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f93,f114,f110,f113,f112,f94,f73,f81,f227,f242,f264,f302,f344,f362,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f891,f894,f958,f960,f962,f1005,f1008,f1061,f1063,f1065,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1606,f1608,f1610,f1612,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3247,f3275,f3276,f3277,f3252,f3253,f3254,f3255,f3278,f4057,f1519,f1068,f1003,f1002,f1001,f1000,f999,f998,f997,f996,f87,f888,f887,f1518,f886,f885,f884,f883,f1067,f964,f85,f889,f2954,f1581,f2942,f3245,f1613,f2979,f3251,f2940,f2939,f4148,f2850])).
fof(f5129,plain,(
  $false | ($spl6 | $spl30 | $spl39)),
  inference(subsumption_resolution,[],[f5128,f73])).
fof(f5128,plain,(
  p(s(bool,'F_0')) | ($spl6 | $spl30 | $spl39)),
  inference(forward_demodulation,[],[f2850,f3413])).
fof(f3413,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | ($spl6 | $spl39)),
  inference(superposition,[],[f94,f3286])).
fof(f3286,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | ($spl6 | $spl39)),
  inference(unit_resulting_resolution,[],[f3162,f1717])).
fof(f1717,plain,(
  ( ! [X19,X20] : (s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19)))) ) | $spl6),
  inference(forward_demodulation,[],[f1629,f138])).
fof(f1629,plain,(
  ( ! [X19,X20] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20)))) ) | $spl6),
  inference(superposition,[],[f1558,f94])).
fof(f156,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f156_D])).
fof(f156_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f5112,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7))) ) | $spl50),
  inference(cnf_transformation,[],[f5112_D])).
fof(f5112_D,plain,(
  ( ! [X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f4084,plain,(
  ( ! [X4,X5] : (s(bool,X5) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X5)) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(forward_demodulation,[],[f4083,f94])).
fof(f4083,plain,(
  ( ! [X4,X5] : (p(s(bool,X5)) | s(bool,X5) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3962,f133])).
fof(f3962,plain,(
  ( ! [X4,X5] : (p(s(bool,X4)) | p(s(bool,X5)) | s(bool,X5) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X4)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f97,f3448])).
fof(f3448,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3406,f142])).
fof(f3406,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'F_0') | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X0)) ) | ($spl6 | $spl39)),
  inference(superposition,[],[f3286,f131])).
fof(f4087,plain,(
  ( ! [X6,X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | p(s(bool,X7)) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(forward_demodulation,[],[f4086,f94])).
fof(f4086,plain,(
  ( ! [X6,X7] : (p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3963,f133])).
fof(f3963,plain,(
  ( ! [X6,X7] : (p(s(bool,X6)) | p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,'T_0') = s(bool,X6)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f97,f3448])).
fof(f3188,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl40),
  inference(cnf_transformation,[],[f3188_D])).
fof(f3188_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f5111,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) | $spl48),
  inference(cnf_transformation,[],[f5111_D])).
fof(f5111_D,plain,(
  ( ! [X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f4743,plain,(
  ( ! [X0,X1] : (s(bool,X1) != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X1)) ) | ($spl6 | $spl31)),
  inference(equality_factoring,[],[f2929])).
fof(f2929,plain,(
  ( ! [X21,X20] : (s(bool,X20) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X20) = s(bool,X21) | s(bool,'F_0') = s(bool,X21)) ) | ($spl6 | $spl31)),
  inference(subsumption_resolution,[],[f2910,f73])).
fof(f2910,plain,(
  ( ! [X21,X20] : (p(s(bool,'F_0')) | s(bool,X20) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X20) = s(bool,X21) | s(bool,'F_0') = s(bool,X21)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2303,f2869])).
fof(f2869,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl31),
  inference(unit_resulting_resolution,[],[f73,f2851,f97])).
fof(f4917,plain,(
  ( ! [X35,X33] : (s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl46),
  inference(cnf_transformation,[],[f4917_D])).
fof(f4917_D,plain,(
  ( ! [X35,X33] : (s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f140,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f4845,plain,(
  ( ! [X30,X31,X29] : (s(bool,'F_0') = s(bool,X30) | s(bool,X31) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X29) = s(bool,X31) | s(bool,X29) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4446])).
fof(f4446,plain,(
  ( ! [X30,X31,X29] : (s(bool,'F_0') = s(bool,X30) | s(bool,X31) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X29) = s(bool,X31) | s(bool,X29) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X30)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2929,f2929])).
fof(f4854,plain,(
  ( ! [X39,X41,X40] : (s(bool,X40) = s(bool,X41) | s(bool,X41) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39) | s(bool,X40) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4395])).
fof(f4395,plain,(
  ( ! [X39,X41,X40] : (s(bool,X40) = s(bool,X41) | s(bool,X41) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39) | s(bool,X40) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X39)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2929,f2929])).
fof(f4872,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35)) ) | ($spl6 | $spl31)),
  inference(duplicate_literal_removal,[],[f4353])).
fof(f4353,plain,(
  ( ! [X35,X33,X34] : (s(bool,'F_0') = s(bool,X34) | s(bool,X33) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'F_0') = s(bool,X34) | s(bool,X35) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X33) = s(bool,X35)) ) | ($spl6 | $spl31)),
  inference(superposition,[],[f2929,f2929])).
fof(f4175,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl20)),
  inference(subsumption_resolution,[],[f4174,f70])).
fof(f4174,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6 | $spl20)),
  inference(forward_demodulation,[],[f4150,f138])).
fof(f4150,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4 | $spl20)),
  inference(unit_resulting_resolution,[],[f106,f3531,f113])).
fof(f3531,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ($spl1 | $spl20)),
  inference(global_subsumption,[],[f3518,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f131,f133,f137,f155,f158,f159,f85,f87,f93,f114,f103,f110,f113,f112,f94,f73,f81,f227,f242,f264,f284,f302,f344,f362,f447,f448,f449,f455,f486,f498,f499,f531,f532,f533,f534,f535,f551,f562,f563,f564,f565,f566,f631,f827,f839,f840,f842,f844,f889,f891,f894,f883,f884,f885,f886,f887,f888,f958,f960,f962,f964,f1003,f1005,f1008,f996,f997,f998,f999,f1000,f1001,f1002,f1061,f1063,f1065,f1067,f1068,f1092,f1091,f1093,f1116,f1117,f1118,f1145,f1146,f1147,f1163,f1162,f1164,f1187,f1188,f1189,f1190,f1217,f1218,f1219,f1220,f1222,f1237,f1239,f1241,f1242,f1244,f1246,f1259,f1260,f1321,f1415,f1416,f1405,f1406,f1407,f1408,f1418,f1443,f1444,f1518,f1519,f1521,f1551,f1566,f1601,f1602,f1571,f1572,f1573,f1574,f1575,f1576,f1604,f1578,f1579,f1605,f1581,f1606,f1608,f1610,f1612,f1613,f1614,f1615,f1590,f1591,f1617,f2388,f2401,f2457,f2468,f2371,f2376,f2381,f2384,f2385,f2967,f2932,f2936,f2937,f2939,f2940,f2942,f2979,f2954,f2986,f3269,f3271,f3235,f3272,f3273,f3238,f3239,f3240,f3274,f3242,f3243,f3244,f3245,f3247,f3275,f3276,f3277,f3251,f3252,f3253,f3254,f3255,f3278])).
fof(f1260,plain,(
  ( ! [X26,X27] : (s(bool,X27) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X26),s(bool,X27)))) ) | $spl1),
  inference(superposition,[],[f447,f81])).
fof(f1259,plain,(
  ( ! [X24,X25] : (s(bool,X24) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X24),s(bool,X25)))) ) | $spl1),
  inference(superposition,[],[f447,f80])).
fof(f447,plain,(
  ( ! [X3] : (s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl1),
  inference(subsumption_resolution,[],[f438,f73])).
fof(f438,plain,(
  ( ! [X3] : (p(s(bool,'F_0')) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'T_0') = s(bool,X3)) ) | $spl1),
  inference(superposition,[],[f158,f284])).
fof(f284,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f73,f103,f97])).
fof(f3518,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK21(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK22(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK23(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK24(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK25(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK26(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK27(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK28(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK29(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK30(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK31(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK32(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK33(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK34(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK35(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK36(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK20(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))))))))))))))))))))))))) ) | $spl20),
  inference(backward_demodulation,[],[f1368,f3251])).
fof(f4095,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | $spl44),
  inference(cnf_transformation,[],[f4095_D])).
fof(f4095_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f4057,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | $spl43),
  inference(cnf_transformation,[],[f4057_D])).
fof(f4057_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) <=> ~$spl43),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl43])])).
fof(f3987,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X0) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl11 | $spl39)),
  inference(equality_factoring,[],[f3448])).
fof(f4055,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0')))) ) | ($spl6 | $spl11 | $spl39)),
  inference(condensation,[],[f4054])).
fof(f4054,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X34) = s(bool,X35) | s(bool,'F_0') = s(bool,X35)) ) | ($spl6 | $spl11 | $spl39)),
  inference(subsumption_resolution,[],[f3931,f1984])).
fof(f1984,plain,(
  ( ! [X8,X7] : (s(bool,'T_0') != s(bool,X7) | s(bool,X7) = s(bool,X8) | s(bool,'F_0') = s(bool,X8)) ) | ($spl6 | $spl11)),
  inference(superposition,[],[f142,f1636])).
fof(f3931,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.num.|48|_0'))) | s(bool,X34) = s(bool,X35) | s(bool,'F_0') = s(bool,X35) | s(bool,'T_0') = s(bool,X34)) ) | ($spl6 | $spl11 | $spl39)),
  inference(superposition,[],[f1984,f3448])).
fof(f3536,plain,(
  $false | ($spl4 | $spl34)),
  inference(subsumption_resolution,[],[f106,f2858])).
fof(f3507,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f3506,f2860])).
fof(f2860,plain,(
  ( ! [X39,X37,X35,X33,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),sK20(sK2,sK1,sK0))))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f2834,f70])).
fof(f2834,plain,(
  ( ! [X39,X37,X35,X33,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40] : (~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X33),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),sK20(sK2,sK1,sK0))))))))))))))))))))))))))))))))))) ) | ($spl0 | $spl2)),
  inference(superposition,[],[f2699,f2730])).
fof(f2730,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK20(sK2,sK1,sK0)))),s('type.num.num',sK1))) | $spl0),
  inference(unit_resulting_resolution,[],[f70,f2702,f100])).
fof(f2702,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK20(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(unit_resulting_resolution,[],[f102,f112])).
fof(f2699,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f104,f94])).
fof(f3506,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK35(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK2,sK1,sK0)),s('type.list.list'(sK0),sK20(sK2,sK1,sK0)))))))))))))))))))))))))))))))))) | $spl0),
  inference(subsumption_resolution,[],[f3466,f70])).
fof(f3466,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK21(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK22(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK23(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK24(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK25(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK26(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK27(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK28(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK29(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK30(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK31(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK32(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK33(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK34(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK35(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK36(sK2,sK1,sK0)),s('type.list.list'(sK0),sK20(sK2,sK1,sK0)))))))))))))))))))))))))))))))))) | $spl0),
  inference(superposition,[],[f110,f2707])).
fof(f2707,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f70,f102,f100])).
fof(f3162,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl39),
  inference(cnf_transformation,[],[f3162_D])).
fof(f3162_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f3102,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl31),
  inference(equality_factoring,[],[f2881])).
fof(f2881,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl31),
  inference(subsumption_resolution,[],[f2872,f70])).
fof(f2872,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl31),
  inference(superposition,[],[f2851,f131])).
fof(f3160,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | ($spl6 | $spl11 | $spl31)),
  inference(condensation,[],[f3159])).
fof(f3159,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X42) = s(bool,X43) | s(bool,'F_0') = s(bool,X43)) ) | ($spl6 | $spl11 | $spl31)),
  inference(subsumption_resolution,[],[f3045,f1984])).
fof(f3045,plain,(
  ( ! [X43,X42] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X42) = s(bool,X43) | s(bool,'F_0') = s(bool,X43) | s(bool,'T_0') = s(bool,X42)) ) | ($spl6 | $spl11 | $spl31)),
  inference(superposition,[],[f1984,f2881])).
fof(f2983,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) | $spl36),
  inference(cnf_transformation,[],[f2983_D])).
fof(f2983_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f2982,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl6 | $spl14)),
  inference(subsumption_resolution,[],[f2951,f157])).
fof(f2951,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X17,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,X0)) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | s('type.list.list'(sK0),X1) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | $spl6),
  inference(superposition,[],[f113,f1558])).
fof(f2858,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) | $spl34),
  inference(cnf_transformation,[],[f2858_D])).
fof(f2858_D,plain,(
  ( ! [X6,X4,X2,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK3)))))))))))))))))))))))))))))))))) ) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f2857,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl2 | $spl6 | $spl14)),
  inference(subsumption_resolution,[],[f2832,f157])).
fof(f2832,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9,X16] : (~p(s(bool,X0)) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | s(bool,'F_0') = s(bool,X0)) ) | ($spl2 | $spl6)),
  inference(superposition,[],[f2699,f1558])).
fof(f2852,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))) ) | $spl32),
  inference(cnf_transformation,[],[f2852_D])).
fof(f2852_D,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2851,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl31),
  inference(cnf_transformation,[],[f2851_D])).
fof(f2851_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f2829,plain,(
  ( ! [X6,X4,X2,X0,X14,X12,X10,X8,X7,X5,X3,X1,X15,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2699,f455])).
fof(f2854,plain,(
  ( ! [X39,X37,X35,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40,X49] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f2853,f1187])).
fof(f2853,plain,(
  ( ! [X39,X37,X35,X33,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(sK0),X33)),X33,sK0))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2825,f455])).
fof(f2825,plain,(
  ( ! [X39,X37,X35,X33,X47,X45,X43,X41,X48,X38,X36,X34,X46,X44,X42,X40,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X34),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X35),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X36),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X37),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X38),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X39),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X40),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X41),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X42),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X43),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X44),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X45),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X46),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X47),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X48),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X49),s('type.list.list'(sK0),sK40('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(sK0),X33)),X33,sK0))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2699,f1187])).
fof(f2849,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f2848,f1116])).
fof(f2848,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),X16)),'const.num.|48|_0',X16,sK0))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f2824,f455])).
fof(f2824,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X19,X17,X31,X29,X27,X25,X32,X22,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X20),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X21),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X22),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X23),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X24),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X25),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X26),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X27),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X28),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X29),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X30),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X31),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X32),s('type.list.list'(sK0),sK39('const.list.LENGTH_1'(s('type.list.list'(sK0),X16)),'const.num.|48|_0',X16,sK0))))))))))))))))))))))))))))))))))) ) | $spl2),
  inference(superposition,[],[f2699,f1116])).
fof(f2846,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f2845,f70])).
fof(f2845,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f2822,f138])).
fof(f2822,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f2699])).
fof(f2813,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | $spl26),
  inference(cnf_transformation,[],[f2813_D])).
fof(f2813_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f2815,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl29),
  inference(cnf_transformation,[],[f2815_D])).
fof(f2815_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f2798,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | $spl4),
  inference(superposition,[],[f78,f106])).
fof(f2701,plain,(
  $false | ($spl0 | $spl6 | $spl11 | $spl23)),
  inference(subsumption_resolution,[],[f2700,f73])).
fof(f2700,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl6 | $spl11 | $spl23)),
  inference(forward_demodulation,[],[f102,f2630])).
fof(f2630,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | ($spl6 | $spl11 | $spl23)),
  inference(unit_resulting_resolution,[],[f73,f1370,f142,f2303])).
fof(f2684,plain,(
  ( ! [X66,X67] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'F_0') = s(bool,X67) | s(bool,X66) = s(bool,X67)) ) | $spl24),
  inference(cnf_transformation,[],[f2684_D])).
fof(f2684_D,plain,(
  ( ! [X66,X67] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,'F_0') = s(bool,X67) | s(bool,X66) = s(bool,X67)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2683,plain,(
  ( ! [X66,X67,X65] : (s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X66) = s(bool,X67) | s(bool,'F_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X65)) ) | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f2654,f133])).
fof(f2654,plain,(
  ( ! [X66,X67,X65] : (p(s(bool,X65)) | s(bool,X66) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X66) = s(bool,X67) | s(bool,'F_0') = s(bool,X67) | s(bool,'T_0') = s(bool,X65)) ) | ($spl1 | $spl6)),
  inference(superposition,[],[f2303,f447])).
fof(f1368,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) | $spl20),
  inference(cnf_transformation,[],[f1368_D])).
fof(f1368_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f1370,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | $spl23),
  inference(cnf_transformation,[],[f1370_D])).
fof(f1370_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f1321,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) ) | $spl1),
  inference(equality_factoring,[],[f447])).
fof(f1006,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl18),
  inference(cnf_transformation,[],[f1006_D])).
fof(f1006_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f1008,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1007])).
fof(f1007,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK38('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f992,f158])).
fof(f992,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK38('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f87,f131])).
fof(f1005,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK38('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1004])).
fof(f1004,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK38('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f991,f158])).
fof(f991,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK38('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f87,f131])).
fof(f892,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl16),
  inference(cnf_transformation,[],[f892_D])).
fof(f892_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f894,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f893])).
fof(f893,plain,(
  ( ! [X30,X33,X31,X29,X32] : (p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK37('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(subsumption_resolution,[],[f879,f158])).
fof(f879,plain,(
  ( ! [X30,X33,X31,X29,X32] : (~p(s(bool,X29)) | p(s(bool,happ(s(fun(X30,bool),X31),s(X30,sK37('T_0',X31,X30))))) | ~p(s(bool,happ(s(fun(X30,bool),X31),s(X30,X32)))) | s(bool,X29) = s(bool,X33) | s(bool,'T_0') = s(bool,X33)) )),
  inference(superposition,[],[f85,f131])).
fof(f891,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK37('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f890])).
fof(f890,plain,(
  ( ! [X28,X26,X24,X27,X25] : (p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK37('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(subsumption_resolution,[],[f878,f158])).
fof(f878,plain,(
  ( ! [X28,X26,X24,X27,X25] : (~p(s(bool,X24)) | p(s(bool,happ(s(fun(X25,bool),X26),s(X25,sK37('T_0',X26,X25))))) | ~p(s(bool,happ(s(fun(X25,bool),X26),s(X25,X27)))) | s(bool,X24) = s(bool,X28) | s(bool,'T_0') = s(bool,X28)) )),
  inference(superposition,[],[f85,f131])).
fof(f176,plain,(
  $false | ($spl1 | $spl12)),
  inference(subsumption_resolution,[],[f166,f70])).
fof(f166,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl12)),
  inference(backward_demodulation,[],[f156,f103])).
fof(f172,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f161,f70])).
fof(f161,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f156,f73])).
fof(f157,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f157_D])).
fof(f157_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f159,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f153,f133])).
fof(f153,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f155,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f151,f133])).
fof(f151,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f142,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f137,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f77])).
fof(f102,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl0),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f108,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl6),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f67,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),X3)))))))))))))))))))))))))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8,sK9,sK10,sK11,sK12,sK13,sK14,sK15,sK16,sK17,sK18,sK19])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ? [X20,X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34,X35,X36] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X20)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X21),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X22),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X23),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X24),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X25),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X26),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X27),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X28),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X29),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X30),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X31),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X32),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X33),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X34),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X35),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X36),s('type.list.list'(X0),X20))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | ! [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3))))))))))))))))))))))))))))))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <~> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X9),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X15),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X16),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X17),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X18),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X19),s('type.list.list'(X0),X3)))))))))))))))))))))))))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ? [X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20,X21,X22,X23,X24,X25] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X15),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X16),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X17),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X18),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X19),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X20),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X21),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X22),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X24),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X25),s('type.list.list'(X6),X9)))))))))))))))))))))))))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_2|48||split|65','thm.quantHeuristics.LIST_LENGTH_2|48||split|65')).
fof(f106,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | $spl4),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f68,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK19),s('type.list.list'(sK0),sK3))))))))))))))))))))))))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f103,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) | $spl1),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl2),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  ( ! [X6,X4,X14,X12,X10,X8,X19,X17,X7,X5,X3,X15,X13,X11,X9,X18,X16] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X11),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X12),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X13),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X14),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X15),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X16),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X17),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X18),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X19),s('type.list.list'(sK0),X3))))))))))))))))))))))))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))))))) )),
  inference(cnf_transformation,[],[f54])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 80
% Passive clauses: 427
% Generated clauses: 5180
% Final active clauses: 50
% Final passive clauses: 224
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 299
% Trivial inequalities: 24
% Fw subsumption resolutions: 221
% Fw demodulations: 779
% Bw demodulations: 84
% Condensations: 425
% Global subsumptions: 20
% 
% Simple tautologies: 54
% Equational tautologies: 96
% Forward subsumptions: 2788
% Bw demodulations to eq. taut.: 1
% 
% Unit resulting resolution: 256
% Factoring: 1
% Forward superposition: 1285
% Backward superposition: 1414
% Self superposition: 91
% Equality factoring: 78
% Equality resolution: 3
% 
% Split clauses: 28
% Split components: 56
% SAT solver clauses: 531
% SAT solver unit clauses: 49
% SAT solver binary clauses: 132
% 
% Sat splits: 28
% Sat splitting refutations: 26
% 
% Memory used [KB]: 9850
% Time elapsed: 0.266 s
% ------------------------------
% ------------------------------
% Success in time 1.59 s
