Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.integer
% (146005)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1130
% Passive clauses: 9350
% Generated clauses: 24805
% Final active clauses: 1029
% Final passive clauses: 7590
% Input formulas: 133
% Initial clauses: 369
% 
% Duplicate literals: 195
% Trivial inequalities: 72
% Fw subsumption resolutions: 1467
% Fw demodulations: 3234
% Bw demodulations: 99
% 
% Simple tautologies: 288
% Equational tautologies: 24
% Forward subsumptions: 9966
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 8785
% Factoring: 818
% Forward superposition: 3641
% Backward superposition: 5901
% Self superposition: 64
% Equality factoring: 2
% Equality resolution: 24
% 
% Split clauses: 320
% Split components: 641
% SAT solver clauses: 574
% SAT solver unit clauses: 15
% SAT solver binary clauses: 108
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 320
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 568
% TWLsolver calls for satisfiability: 410
% 
% Memory used [KB]: 16630
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (146022)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 488
% Passive clauses: 3102
% Generated clauses: 14432
% Final active clauses: 468
% Final passive clauses: 2547
% Input formulas: 133
% Initial clauses: 369
% 
% Duplicate literals: 98
% Trivial inequalities: 11
% Fw subsumption resolutions: 523
% Fw demodulations: 1691
% Bw demodulations: 87
% Condensations: 55
% Global subsumptions: 23
% 
% Simple tautologies: 273
% Equational tautologies: 8
% Forward subsumptions: 4654
% Fw demodulations to eq. taut.: 9
% 
% Binary resolution: 2450
% Factoring: 89
% Forward superposition: 2343
% Backward superposition: 3187
% Self superposition: 72
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 39
% Split components: 78
% SAT solver clauses: 4113
% SAT solver unit clauses: 380
% SAT solver binary clauses: 141
% SAT solver learnt clauses: 46
% SAT solver learnt literals: 18
% 
% Sat splits: 39
% 
% TWLsolver clauses: 4021
% TWLsolver calls for satisfiability: 3280
% 
% Memory used [KB]: 22387
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 137 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% (146051)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 827
% Passive clauses: 5265
% Generated clauses: 277172
% Final active clauses: 700
% Final passive clauses: 1779
% Input formulas: 133
% Initial clauses: 369
% Discarded non-redundant clauses: 36986
% 
% Duplicate literals: 13
% Trivial inequalities: 11
% Fw subsumption resolutions: 1026
% Fw demodulations: 149742
% Bw demodulations: 1126
% Condensations: 97
% Global subsumptions: 313
% 
% Simple tautologies: 114
% Equational tautologies: 45
% Forward subsumptions: 37342
% Fw demodulations to eq. taut.: 47055
% Bw demodulations to eq. taut.: 18
% 
% Unit resulting resolution: 116392
% Factoring: 3
% Forward superposition: 2813
% Backward superposition: 2778
% Self superposition: 73
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 44
% Split components: 88
% SAT solver clauses: 7039
% SAT solver unit clauses: 2151
% SAT solver binary clauses: 3006
% 
% Sat splits: 44
% Sat splitting refutations: 1371
% 
% Memory used [KB]: 103239
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f87043,plain,(
  $false),
  inference(subsumption_resolution,[],[f87041,f348])).
fof(f348,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f254])).
fof(f254,plain,(
  s('type.integer.int',sK12) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f210])).
fof(f210,plain,(
  ? [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f136])).
fof(f136,plain,(
  ~! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(flattening,[],[f135])).
fof(f135,plain,(
  ~! [X0,X1] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))),s('type.integer.int',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))),s('type.integer.int',X6))))),
  file('thm.integer.INT_MOD_MOD','thm.integer.INT_MOD_MOD')).
fof(f87041,plain,(
  s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(trivial_inequality_removal,[],[f87018])).
fof(f87018,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) | s('type.integer.int',sK12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f349,f13645])).
fof(f13645,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(duplicate_literal_removal,[],[f13354])).
fof(f13354,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X1))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f356,f360])).
fof(f360,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ((~p(s(bool,sK15(X1,X0))) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,sK15(X1,X0)))) & ((~p(s(bool,sK16(X1,X0))) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) | p(s(bool,sK16(X1,X0)))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,sK15(X1,X0)),s(bool,sK16(X1,X0)))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f264])).
fof(f264,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((~p(s(bool,X2)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X2))) & ? [X3] : ((~p(s(bool,X3)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))) | p(s(bool,X3))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(flattening,[],[f263])).
fof(f263,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : (((~p(s(bool,X2)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ((~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | p(s(bool,X2)))) & ? [X3] : (((~p(s(bool,X3)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & ((~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))))) | p(s(bool,X3)))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(nnf_transformation,[],[f216])).
fof(f216,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(ennf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(flattening,[],[f144])).
fof(f144,plain,(
  ! [X0] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X1] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & ? [X2] : ((p(s(bool,X2)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X3] : ((p(s(bool,X3)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X0)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3))))))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X9] : (~s('type.integer.int',X9) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => ! [X8] : (s('type.integer.int',X8) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',X9))),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9))))) & ? [X15] : ((p(s(bool,X15)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9)))))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X16] : ((p(s(bool,X16)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9)))))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X8),s('type.integer.int',X9))),s('type.integer.int',X9)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X15),s(bool,X16))))))))),
  file('thm.integer.INT_MOD_MOD','thm.integer.INT_DIVISION')).
fof(f356,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))),s('type.integer.int',X2))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))),s('type.integer.int',X2))))),
  inference(ennf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X2) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))),s('type.integer.int',X2))))),
  inference(flattening,[],[f138])).
fof(f138,plain,(
  ! [X0,X1,X2] : (~s('type.integer.int',X2) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))),s('type.integer.int',X2))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X10,X9,X6] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X10),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',X6))),s('type.integer.int',X10))),s('type.integer.int',X6))))),
  file('thm.integer.INT_MOD_MOD','thm.integer.INT_MOD_ADD_MULTIPLES')).
fof(f349,plain,(
  s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))),s('type.integer.int',sK12)))),
  inference(cnf_transformation,[],[f254])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 1209
% Passive clauses: 40897
% Generated clauses: 87225
% Final active clauses: 359
% Final passive clauses: 23505
% Input formulas: 133
% Initial clauses: 192
% 
% Selected by SInE selection: 47
% SInE iterations: 1
% 
% Duplicate literals: 1953
% Trivial inequalities: 227
% Fw subsumption resolutions: 5826
% Fw demodulations: 2447
% Bw demodulations: 51
% 
% Simple tautologies: 2088
% Equational tautologies: 32
% Forward subsumptions: 29029
% Fw demodulations to eq. taut.: 1
% 
% Binary resolution: 46154
% Factoring: 184
% Forward superposition: 20833
% Backward superposition: 5499
% Self superposition: 249
% Equality factoring: 8
% Equality resolution: 28
% 
% Split clauses: 4943
% Split components: 10149
% SAT solver clauses: 5015
% SAT solver unit clauses: 5
% SAT solver binary clauses: 3612
% 
% Sat splits: 4943
% Sat splitting refutations: 22
% 
% Memory used [KB]: 38762
% Time elapsed: 2.198 s
% ------------------------------
% ------------------------------
% Success in time 13.91 s
