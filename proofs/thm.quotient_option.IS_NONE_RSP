Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.quotient_option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_option
% SZS output start Proof for thm.quotient_option
fof(f2895,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f896,f894,f101,f142,f847,f846,f2609,f2606,f2270,f2269,f580,f192,f189,f193,f191,f2857,f2894,f2241])).
fof(f2241,plain,(
  $false | ($spl3 | $spl8 | $spl24)),
  inference(subsumption_resolution,[],[f2222,f102])).
fof(f102,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f33])).
fof(f33,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f23])).
fof(f23,axiom,(
  ! [X7] : s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),'const.option.NONE_0')))),
  file('thm.quotient_option.IS_NONE_RSP','thm.option.IS_NONE_DEF|split|1')).
fof(f2222,plain,(
  s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | ($spl3 | $spl8 | $spl24)),
  inference(backward_demodulation,[],[f2207,f194])).
fof(f194,plain,(
  s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) | $spl8),
  inference(backward_demodulation,[],[f191,f94])).
fof(f94,plain,(
  s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6)))),
  inference(cnf_transformation,[],[f71])).
fof(f71,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK1,fun(sK1,bool)),sK2),s(fun(sK1,sK0),sK3),s(fun(sK0,sK1),sK4)))) & (p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),sK6)))) & s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6])],[f64])).
fof(f64,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) & ? [X5,X6] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.option.option'(X1),X5),s('type.option.option'(X1),X6)))) & s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X5))) != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X6)))))),
  inference(ennf_transformation,[],[f29])).
fof(f29,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.option.option'(X1),X5),s('type.option.option'(X1),X6)))) => s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X5))) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X6)))))),
  inference(flattening,[],[f28])).
fof(f28,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X1,fun(X1,bool)),X2),s(fun(X1,X0),X3),s(fun(X0,X1),X4)))) => ! [X5,X6] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X1,fun(X1,bool)),X2),s('type.option.option'(X1),X5),s('type.option.option'(X1),X6)))) => s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X5))) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X1),X6)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.option.option'(X7),X11),s('type.option.option'(X7),X12)))) => s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),X11))) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),X12)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X7,fun(X7,bool)),X8),s(fun(X7,X6),X9),s(fun(X6,X7),X10)))) => ! [X11,X12] : (p(s(bool,'const.option.OPTREL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.option.option'(X7),X11),s('type.option.option'(X7),X12)))) => s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),X11))) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),X12)))))),
  file('thm.quotient_option.IS_NONE_RSP','thm.quotient_option.IS_NONE_RSP')).
fof(f2207,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) | ($spl3 | $spl24)),
  inference(subsumption_resolution,[],[f2162,f145])).
fof(f145,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl3),
  inference(resolution,[],[f104,f142])).
fof(f104,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X13] : (s(bool,'T_0') = s(bool,X13) <=> p(s(bool,X13)))),
  file('thm.quotient_option.IS_NONE_RSP','thm.bool.EQ_CLAUSES|split|0')).
fof(f2162,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) | $spl24),
  inference(superposition,[],[f933,f894])).
fof(f933,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),X1),s('type.option.option'(X0),'const.option.NONE_0'))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f134,f131])).
fof(f131,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK7(X1,X0)))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK7(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK7])],[f53])).
fof(f53,plain,(
  ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(flattening,[],[f52])).
fof(f52,plain,(
  ! [X0] : ! [X1] : (s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1) | ? [X2] : s('type.option.option'(X0),X1) = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7] : ! [X14] : (s('type.option.option'(X7),'const.option.NONE_0') = s('type.option.option'(X7),X14) | ? [X11] : s('type.option.option'(X7),X14) = s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X11))))),
  file('thm.quotient_option.IS_NONE_RSP','thm.option.option_nchotomy')).
fof(f134,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),'const.option.NONE_0')))) )),
  inference(cnf_transformation,[],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(flattening,[],[f56])).
fof(f56,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1))),s('type.option.option'(X0),'const.option.NONE_0')))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X7] : ! [X11,X8] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X11))),s('type.option.option'(X7),'const.option.NONE_0')))),
  file('thm.quotient_option.IS_NONE_RSP','thm.quotient_option.OPTION_REL_def|split|1')).
fof(f2894,plain,(
  $false | ($spl9 | $spl22)),
  inference(subsumption_resolution,[],[f2874,f102])).
fof(f2874,plain,(
  s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),'const.option.NONE_0'))) | ($spl9 | $spl22)),
  inference(backward_demodulation,[],[f846,f190])).
fof(f190,plain,(
  s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6))) | $spl9),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f2857,plain,(
  $false | ($spl3 | $spl23 | $spl72)),
  inference(subsumption_resolution,[],[f2856,f845])).
fof(f845,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK6) | $spl23),
  inference(cnf_transformation,[],[f845_D])).
fof(f845_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') != s('type.option.option'(sK1),sK6) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f2856,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) | ($spl3 | $spl72)),
  inference(subsumption_resolution,[],[f2810,f145])).
fof(f2810,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) | $spl72),
  inference(superposition,[],[f1170,f2606])).
fof(f1170,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),X1))) | s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),X1)) )),
  inference(superposition,[],[f135,f131])).
fof(f135,plain,(
  ( ! [X2,X0,X1] : (s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f58])).
fof(f58,plain,(
  ! [X0] : ! [X1,X2] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X0,fun(X0,bool)),X2),s('type.option.option'(X0),'const.option.NONE_0'),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X7] : ! [X12,X8] : s(bool,'F_0') = s(bool,'const.option.OPTREL_3'(s(fun(X7,fun(X7,bool)),X8),s('type.option.option'(X7),'const.option.NONE_0'),s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X12)))))),
  file('thm.quotient_option.IS_NONE_RSP','thm.quotient_option.OPTION_REL_def|split|2')).
fof(f191,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6))) | $spl8),
  inference(cnf_transformation,[],[f191_D])).
fof(f191_D,plain,(
  s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f193,plain,(
  s(bool,'F_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) | $spl11),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  s(bool,'F_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f189,plain,(
  s(bool,'F_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) | s(bool,'T_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK6)))),
  inference(superposition,[],[f94,f103])).
fof(f103,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quotient_option.IS_NONE_RSP',aHL_BOOL_CASES)).
fof(f192,plain,(
  s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) | $spl10),
  inference(cnf_transformation,[],[f192_D])).
fof(f192_D,plain,(
  s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f580,plain,(
  s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5))) | $spl19),
  inference(resolution,[],[f572,f109])).
fof(f109,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X13] : (s(bool,'F_0') = s(bool,X13) <=> ~p(s(bool,X13)))),
  file('thm.quotient_option.IS_NONE_RSP','thm.bool.EQ_CLAUSES|split|2')).
fof(f572,plain,(
  ~p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5)))) | $spl19),
  inference(cnf_transformation,[],[f572_D])).
fof(f572_D,plain,(
  ~p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5)))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f2269,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) | $spl54),
  inference(cnf_transformation,[],[f2269_D])).
fof(f2269_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f2270,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) | ($spl3 | $spl18)),
  inference(subsumption_resolution,[],[f2260,f142])).
fof(f2260,plain,(
  p(s(bool,'F_0')) | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK5) | $spl18),
  inference(superposition,[],[f571,f797])).
fof(f797,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X2),X3))) | s('type.option.option'(X2),'const.option.NONE_0') = s('type.option.option'(X2),X3)) )),
  inference(superposition,[],[f129,f131])).
fof(f129,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ! [X0] : ! [X1] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X7] : ! [X11] : s(bool,'F_0') = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X7),'const.option.SOME_1'(s(X7,X11)))))),
  file('thm.quotient_option.IS_NONE_RSP','thm.option.IS_NONE_DEF|split|0')).
fof(f571,plain,(
  p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5)))) | $spl18),
  inference(cnf_transformation,[],[f571_D])).
fof(f571_D,plain,(
  p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(sK1),sK5)))) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2606,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6))) | $spl72),
  inference(cnf_transformation,[],[f2606_D])).
fof(f2606_D,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6))) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f2609,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6))) | ($spl3 | $spl54)),
  inference(subsumption_resolution,[],[f2608,f142])).
fof(f2608,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6))) | ($spl3 | $spl54)),
  inference(forward_demodulation,[],[f2600,f129])).
fof(f2600,plain,(
  ( ! [X4,X5] : (p(s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X4),'const.option.SOME_1'(s(X4,X5)))))) | s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6)))) ) | ($spl3 | $spl54)),
  inference(superposition,[],[f2591,f433])).
fof(f433,plain,(
  ( ! [X35,X33,X34] : (s(bool,X35) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X33),'const.option.SOME_1'(s(X33,X34))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl3),
  inference(trivial_inequality_removal,[],[f396])).
fof(f396,plain,(
  ( ! [X35,X33,X34] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X35) = s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X33),'const.option.SOME_1'(s(X33,X34))))) | s(bool,'T_0') = s(bool,X35)) ) | $spl3),
  inference(superposition,[],[f188,f155])).
fof(f155,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f103,f103])).
fof(f188,plain,(
  ( ! [X8,X9] : (s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9)))))) ) | $spl3),
  inference(subsumption_resolution,[],[f185,f142])).
fof(f185,plain,(
  ( ! [X8,X9] : (p(s(bool,'F_0')) | s(bool,'T_0') != s(bool,'const.option.IS_NONE_1'(s('type.option.option'(X8),'const.option.SOME_1'(s(X8,X9)))))) )),
  inference(superposition,[],[f104,f129])).
fof(f2591,plain,(
  p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),'const.option.NONE_0'),s('type.option.option'(sK1),sK6)))) | $spl54),
  inference(forward_demodulation,[],[f93,f2269])).
fof(f93,plain,(
  p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),sK6))))),
  inference(cnf_transformation,[],[f71])).
fof(f846,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) | $spl22),
  inference(cnf_transformation,[],[f846_D])).
fof(f846_D,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f847,plain,(
  s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) | ($spl3 | $spl8)),
  inference(subsumption_resolution,[],[f816,f145])).
fof(f816,plain,(
  s(bool,'T_0') = s(bool,'F_0') | s('type.option.option'(sK1),'const.option.NONE_0') = s('type.option.option'(sK1),sK6) | $spl8),
  inference(superposition,[],[f191,f797])).
fof(f142,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f101,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quotient_option.IS_NONE_RSP',aHL_FALSITY)).
fof(f894,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),'const.option.NONE_0'))) | $spl24),
  inference(cnf_transformation,[],[f894_D])).
fof(f894_D,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),'const.option.NONE_0'))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f896,plain,(
  s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),'const.option.NONE_0'))) | ($spl3 | $spl22)),
  inference(subsumption_resolution,[],[f889,f142])).
fof(f889,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),'const.option.NONE_0'))) | $spl22),
  inference(superposition,[],[f855,f103])).
fof(f855,plain,(
  p(s(bool,'const.option.OPTREL_3'(s(fun(sK1,fun(sK1,bool)),sK2),s('type.option.option'(sK1),sK5),s('type.option.option'(sK1),'const.option.NONE_0')))) | $spl22),
  inference(backward_demodulation,[],[f846,f93])).
% SZS output end Proof for thm.quotient_option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 71
% Passive clauses: 318
% Generated clauses: 2768
% Final active clauses: 47
% Final passive clauses: 172
% Input formulas: 26
% Initial clauses: 46
% 
% Duplicate literals: 200
% Trivial inequalities: 49
% Fw subsumption resolutions: 238
% Fw demodulations: 119
% Bw demodulations: 20
% 
% Simple tautologies: 125
% Equational tautologies: 21
% Forward subsumptions: 1602
% 
% Binary resolution: 33
% Forward superposition: 872
% Backward superposition: 1045
% Self superposition: 46
% Equality factoring: 36
% Equality resolution: 10
% 
% Split clauses: 71
% Split components: 147
% SAT solver clauses: 153
% SAT solver unit clauses: 7
% SAT solver binary clauses: 41
% SAT solver learnt clauses: 3
% SAT solver learnt literals: 3
% 
% Sat splits: 71
% Sat splitting refutations: 13
% 
% TWLsolver clauses: 148
% TWLsolver calls for satisfiability: 43
% 
% Memory used [KB]: 2558
% Time elapsed: 0.067 s
% ------------------------------
% ------------------------------
% Success in time 0.069 s
