Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (99904)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 115
% Passive clauses: 2500
% Generated clauses: 16471
% Final active clauses: 111
% Final passive clauses: 2287
% Input formulas: 42
% Initial clauses: 51
% 
% Duplicate literals: 755
% Trivial inequalities: 198
% Fw subsumption resolutions: 1938
% Fw demodulations: 2827
% Bw demodulations: 2
% 
% Simple tautologies: 287
% Equational tautologies: 26
% Forward subsumptions: 7343
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 28
% Forward superposition: 6622
% Backward superposition: 3654
% Self superposition: 224
% Equality factoring: 86
% Equality resolution: 39
% 
% Split clauses: 437
% Split components: 874
% SAT solver clauses: 690
% SAT solver unit clauses: 56
% SAT solver binary clauses: 210
% 
% Sat splits: 437
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 690
% TWLsolver calls for satisfiability: 87
% 
% Memory used [KB]: 12281
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (99925)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 91
% Passive clauses: 739
% Generated clauses: 12214
% Final active clauses: 78
% Final passive clauses: 583
% Input formulas: 42
% Initial clauses: 51
% 
% Duplicate literals: 635
% Trivial inequalities: 183
% Fw subsumption resolutions: 896
% Fw demodulations: 1519
% Bw demodulations: 75
% Condensations: 1389
% 
% Simple tautologies: 152
% Equational tautologies: 25
% Forward subsumptions: 5305
% Fw demodulations to eq. taut.: 2
% 
% Binary resolution: 16
% Forward superposition: 4123
% Backward superposition: 2961
% Self superposition: 211
% Equality factoring: 86
% Equality resolution: 20
% 
% Split clauses: 16
% Split components: 32
% SAT solver clauses: 1313
% SAT solver unit clauses: 68
% SAT solver binary clauses: 39
% 
% Sat splits: 16
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 1313
% TWLsolver calls for satisfiability: 297
% 
% Memory used [KB]: 14200
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f38009,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f138,f189,f187,f209,f212,f210,f802,f2250,f2195,f2253,f2266,f13821,f13827,f13844,f13846,f13856,f13676,f13823,f13909,f17171,f17177,f17178,f17211,f17217,f17014,f17173,f17270,f20479,f20483,f20481,f21467,f21468,f21469,f21470,f36284,f36290,f36291,f36329,f36342,f36343,f36136,f36286,f36405,f37614,f37620,f37621,f37660,f37673,f37674,f2251,f37462,f37616,f37736,f37995,f37996])).
fof(f37996,plain,(
  $false | $spl25),
  inference(subsumption_resolution,[],[f37982,f20287])).
fof(f20287,plain,(
  ( ! [X0,X1] : (s(bool,'T_0') = s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1)))) )),
  inference(unit_resulting_resolution,[],[f19792,f203])).
fof(f203,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f139,f144])).
fof(f144,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_NEG_SUB',aHL_BOOL_CASES)).
fof(f139,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_NEG_SUB',aHL_FALSITY)).
fof(f19792,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f19791,f176])).
fof(f176,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0,X1,X2] : ! [X3,X4,X5] : s(X0,happ(s(fun(X1,X0),'_dst_x1x0_2'(s(fun(X1,fun(X2,X0)),X3),s(X2,X4))),s(X1,X5))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X3),s(X1,X5))),s(X2,X4)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X39,X37,X40] : ! [X41,X38,X42] : s(X39,happ(s(fun(X37,X39),'_dst_x1x0_2'(s(fun(X37,fun(X40,X39)),X41),s(X40,X38))),s(X37,X42))) = s(X39,happ(s(fun(X40,X39),happ(s(fun(X37,fun(X40,X39)),X41),s(X37,X42))),s(X40,X38)))),
  file('thm.integer.INT_NEG_SUB','_dst_x1x0_ax')).
fof(f19791,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X1))))) )),
  inference(forward_demodulation,[],[f19790,f190])).
fof(f190,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(forward_demodulation,[],[f147,f145])).
fof(f145,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f52])).
fof(f52,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(flattening,[],[f51])).
fof(f51,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,'const.combin.I_1'(s(X0,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X8] : ! [X6] : s(X8,X6) = s(X8,'const.combin.I_1'(s(X8,X6)))),
  file('thm.integer.INT_NEG_SUB','thm.combin.I_THM')).
fof(f147,plain,(
  ( ! [X0,X1] : (s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0,X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(flattening,[],[f55])).
fof(f55,plain,(
  ! [X0] : ! [X1] : s(X0,'const.combin.I_1'(s(X0,X1))) = s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1)))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X8] : ! [X35] : s(X8,'const.combin.I_1'(s(X8,X35))) = s(X8,happ(s(fun(X8,X8),'const.combin.I_0'),s(X8,X35)))),
  file('thm.integer.INT_NEG_SUB','ARITY_0_1_const.combin.I')).
fof(f19790,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))))) )),
  inference(forward_demodulation,[],[f19497,f176])).
fof(f19497,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X1))))) )),
  inference(unit_resulting_resolution,[],[f190,f9626])).
fof(f9626,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f9625,f190])).
fof(f9625,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X2)))) | s(X0,X1) != s(X0,X2)) )),
  inference(forward_demodulation,[],[f9624,f190])).
fof(f9624,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2))))))) )),
  inference(subsumption_resolution,[],[f9596,f136])).
fof(f136,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_NEG_SUB',aHL_TRUTH)).
fof(f9596,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | s(X0,X1) != s(X0,X2) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2))))))) )),
  inference(superposition,[],[f162,f248])).
fof(f248,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0')))) )),
  inference(unit_resulting_resolution,[],[f141,f203])).
fof(f141,plain,(
  ( ! [X0] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))) )),
  inference(cnf_transformation,[],[f48])).
fof(f48,plain,(
  ! [X0] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(fun(X0,X0),'const.combin.I_0'),s(fun(X0,X0),'const.combin.I_0'))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X8] : p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),'|dollar|equals_0'),s(fun(X8,X8),'const.combin.I_0'),s(fun(X8,X8),'const.combin.I_0'))))),
  file('thm.integer.INT_NEG_SUB','thm.quotient.IDENTITY_QUOTIENT')).
fof(f162,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : ((s(X1,X5) != s(X1,X6) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))) & (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6))))),
  inference(nnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(ennf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(flattening,[],[f76])).
fof(f76,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : (s(X1,X5) = s(X1,X6) <=> p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))))))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8,X20] : ! [X31,X32,X33] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X8,fun(X8,bool)),X31),s(fun(X8,X20),X32),s(fun(X20,X8),X33)))) => ! [X6,X7] : (s(X20,X6) = s(X20,X7) <=> p(s(bool,happ(s(fun(X8,bool),happ(s(fun(X8,fun(X8,bool)),X31),s(X8,happ(s(fun(X20,X8),X33),s(X20,X6))))),s(X8,happ(s(fun(X20,X8),X33),s(X20,X7))))))))),
  file('thm.integer.INT_NEG_SUB','thm.quotient.EQUALS_PRS')).
fof(f37982,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl25),
  inference(backward_demodulation,[],[f37960,f36286])).
fof(f37960,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(backward_demodulation,[],[f37828,f3903])).
fof(f3903,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1)))) )),
  inference(superposition,[],[f866,f140])).
fof(f140,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X6] : s('type.integer.int',X6) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6)))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.INT_NEGNEG')).
fof(f866,plain,(
  ( ! [X6,X7] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int',X7)))))) )),
  inference(superposition,[],[f140,f191])).
fof(f191,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))) )),
  inference(forward_demodulation,[],[f152,f151])).
fof(f151,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.int_sub')).
fof(f152,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1)))))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X7))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X6))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X7)))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.INT_NEG_ADD')).
fof(f37828,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))),s('type.integer.int',X0)))) )),
  inference(superposition,[],[f37781,f151])).
fof(f37781,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X3),s('type.integer.int',X2)))) )),
  inference(superposition,[],[f2352,f154])).
fof(f154,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X18,X19] : s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X18),s('type.integer.int',X19))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X18))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X19)))))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.int_add')).
fof(f2352,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_ABS_1'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X1))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.int_REP_1'(s('type.integer.int',X0)))))))) )),
  inference(superposition,[],[f154,f153])).
fof(f153,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X6)))),
  file('thm.integer.INT_NEG_SUB','thm.integer.TINT_ADD_SYM')).
fof(f37995,plain,(
  $false | ($spl7 | $spl19)),
  inference(subsumption_resolution,[],[f37994,f212])).
fof(f37994,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl19),
  inference(forward_demodulation,[],[f37965,f20287])).
fof(f37965,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))) | $spl19),
  inference(backward_demodulation,[],[f37960,f34801])).
fof(f34801,plain,(
  s(bool,'F_0') = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | $spl19),
  inference(forward_demodulation,[],[f34774,f190])).
fof(f34774,plain,(
  s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f17173,f34200,f349])).
fof(f349,plain,(
  ( ! [X2,X1] : (p(s(bool,X1)) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f136,f200])).
fof(f200,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f144,f144])).
fof(f34200,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))))),
  inference(unit_resulting_resolution,[],[f135,f10096])).
fof(f10096,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,X1))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(forward_demodulation,[],[f10095,f190])).
fof(f10095,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,X2)))) | s(X0,X1) = s(X0,X2)) )),
  inference(forward_demodulation,[],[f10094,f190])).
fof(f10094,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2)))))) | s(X0,X1) = s(X0,X2)) )),
  inference(subsumption_resolution,[],[f10066,f136])).
fof(f10066,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),'|dollar|equals_0'),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X1))))),s(X0,happ(s(fun(X0,X0),'const.combin.I_0'),s(X0,X2)))))) | s(X0,X1) = s(X0,X2)) )),
  inference(superposition,[],[f163,f248])).
fof(f163,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X2),s(X0,happ(s(fun(X1,X0),X4),s(X1,X5))))),s(X0,happ(s(fun(X1,X0),X4),s(X1,X6)))))) | s(X1,X5) = s(X1,X6)) )),
  inference(cnf_transformation,[],[f129])).
fof(f135,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))),
  inference(cnf_transformation,[],[f125])).
fof(f125,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f106])).
fof(f106,plain,(
  ? [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(ennf_transformation,[],[f44])).
fof(f44,plain,(
  ~! [X0,X1] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X6),s('type.integer.int',X7)))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.INT_NEG_SUB')).
fof(f37736,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) ) | $spl30),
  inference(cnf_transformation,[],[f37736_D])).
fof(f37736_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f37616,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | $spl29),
  inference(cnf_transformation,[],[f37616_D])).
fof(f37616_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f37462,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) )),
  inference(equality_factoring,[],[f34867])).
fof(f34867,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f34838,f136])).
fof(f34838,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f34439,f200])).
fof(f34439,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))))),
  inference(forward_demodulation,[],[f34205,f176])).
fof(f34205,plain,(
  ~p(s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))))),
  inference(unit_resulting_resolution,[],[f135,f10096])).
fof(f2251,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,X30)) ) | $spl8),
  inference(cnf_transformation,[],[f2251_D])).
fof(f2251_D,plain,(
  ( ! [X30] : (s(bool,'T_0') = s(bool,X30)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f37674,plain,(
  ( ! [X249] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X249)) )),
  inference(subsumption_resolution,[],[f37322,f16558])).
fof(f16558,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f16353,f145])).
fof(f16353,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X0)))) )),
  inference(condensation,[],[f16352])).
fof(f16352,plain,(
  ( ! [X92,X93] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X93))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,X93)) )),
  inference(duplicate_literal_removal,[],[f16102])).
fof(f16102,plain,(
  ( ! [X92,X93] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X93))) | s(bool,'T_0') = s(bool,X92) | s(bool,'T_0') = s(bool,X93) | s(bool,'T_0') = s(bool,X92)) )),
  inference(superposition,[],[f1135,f307])).
fof(f307,plain,(
  ( ! [X19,X20] : (s(bool,X20) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X19))) | s(bool,'T_0') = s(bool,X19) | s(bool,'T_0') = s(bool,X20)) )),
  inference(superposition,[],[f200,f190])).
fof(f1135,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f1117])).
fof(f1117,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f280])).
fof(f280,plain,(
  ( ! [X23,X22] : (s(bool,X22) = s(bool,X23) | s(bool,'T_0') = s(bool,X23) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X22)))) )),
  inference(superposition,[],[f200,f145])).
fof(f37322,plain,(
  ( ! [X249] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X249) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X249)))) )),
  inference(superposition,[],[f16558,f34867])).
fof(f37673,plain,(
  ( ! [X242] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X242)) )),
  inference(subsumption_resolution,[],[f37317,f13050])).
fof(f13050,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f12883,f145])).
fof(f12883,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X0)))) )),
  inference(condensation,[],[f12882])).
fof(f12882,plain,(
  ( ! [X87,X86] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X87))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X87)) )),
  inference(duplicate_literal_removal,[],[f12659])).
fof(f12659,plain,(
  ( ! [X87,X86] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X87))) | s(bool,'T_0') = s(bool,X86) | s(bool,'T_0') = s(bool,X87) | s(bool,'T_0') = s(bool,X86)) )),
  inference(superposition,[],[f1135,f306])).
fof(f306,plain,(
  ( ! [X17,X18] : (s(bool,X18) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X17))) | s(bool,'T_0') = s(bool,X17) | s(bool,'T_0') = s(bool,X18)) )),
  inference(superposition,[],[f200,f146])).
fof(f146,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f53])).
fof(f53,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X37] : ! [X38] : s(X37,X38) = s(X37,happ(s(fun(X37,X37),'_i_0_0'),s(X37,X38)))),
  file('thm.integer.INT_NEG_SUB','_i0_ax')).
fof(f37317,plain,(
  ( ! [X242] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X242) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X242)))) )),
  inference(superposition,[],[f13050,f34867])).
fof(f37660,plain,(
  ( ! [X144] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X144)) )),
  inference(subsumption_resolution,[],[f37292,f1999])).
fof(f1999,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(forward_demodulation,[],[f1928,f145])).
fof(f1928,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(condensation,[],[f1927])).
fof(f1927,plain,(
  ( ! [X41,X42] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X42))) | s(bool,'T_0') = s(bool,X41) | s(bool,'T_0') = s(bool,X42)) )),
  inference(duplicate_literal_removal,[],[f1856])).
fof(f1856,plain,(
  ( ! [X41,X42] : (s(bool,'const.combin.I_1'(s(bool,'T_0'))) != s(bool,'const.combin.I_1'(s(bool,X42))) | s(bool,'T_0') = s(bool,X41) | s(bool,'T_0') = s(bool,X42) | s(bool,'T_0') = s(bool,X41)) )),
  inference(superposition,[],[f1135,f305])).
fof(f305,plain,(
  ( ! [X15,X16] : (s(bool,X16) = s(bool,'const.combin.I_1'(s(bool,X15))) | s(bool,'T_0') = s(bool,X15) | s(bool,'T_0') = s(bool,X16)) )),
  inference(superposition,[],[f200,f145])).
fof(f37292,plain,(
  ( ! [X144] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X144) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X144)))) )),
  inference(superposition,[],[f1999,f34867])).
fof(f37621,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f37248,f16558])).
fof(f37248,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1385,f34867])).
fof(f1385,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,X30) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X30)))) )),
  inference(forward_demodulation,[],[f1342,f145])).
fof(f1342,plain,(
  ( ! [X30] : (s(bool,X30) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X30)))) )),
  inference(superposition,[],[f1135,f190])).
fof(f37620,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f37247,f13050])).
fof(f37247,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1384,f34867])).
fof(f1384,plain,(
  ( ! [X29] : (s(bool,'T_0') != s(bool,X29) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X29)))) )),
  inference(forward_demodulation,[],[f1341,f145])).
fof(f1341,plain,(
  ( ! [X29] : (s(bool,X29) != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X29)))) )),
  inference(superposition,[],[f1135,f146])).
fof(f37614,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f37245,f1999])).
fof(f37245,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),'_dst_x1x0_2'(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1294,f34867])).
fof(f1294,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X37)))) ) | $spl7),
  inference(subsumption_resolution,[],[f1044,f212])).
fof(f1044,plain,(
  ( ! [X37] : (s(bool,'T_0') != s(bool,X37) | s(bool,'T_0') = s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X37)))) ) | $spl7),
  inference(superposition,[],[f212,f280])).
fof(f36405,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) ) | $spl26),
  inference(cnf_transformation,[],[f36405_D])).
fof(f36405_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f36286,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | $spl25),
  inference(cnf_transformation,[],[f36286_D])).
fof(f36286_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) <=> ~$spl25),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl25])])).
fof(f36136,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1)))))))) )),
  inference(equality_factoring,[],[f34805])).
fof(f34805,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f34776,f136])).
fof(f34776,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f34200,f200])).
fof(f36343,plain,(
  ( ! [X248] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X248)) )),
  inference(subsumption_resolution,[],[f35995,f16558])).
fof(f35995,plain,(
  ( ! [X248] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X248) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X248)))) )),
  inference(superposition,[],[f16558,f34805])).
fof(f36342,plain,(
  ( ! [X241] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X241)) )),
  inference(subsumption_resolution,[],[f35990,f13050])).
fof(f35990,plain,(
  ( ! [X241] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X241) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X241)))) )),
  inference(superposition,[],[f13050,f34805])).
fof(f36329,plain,(
  ( ! [X143] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X143)) )),
  inference(subsumption_resolution,[],[f35965,f1999])).
fof(f35965,plain,(
  ( ! [X143] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X143) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X143)))) )),
  inference(superposition,[],[f1999,f34805])).
fof(f36291,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f35922,f16558])).
fof(f35922,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1385,f34805])).
fof(f36290,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f35921,f13050])).
fof(f35921,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1384,f34805])).
fof(f36284,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f35919,f1999])).
fof(f35919,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun('type.integer.int',bool),happ(s(fun('type.integer.int',fun('type.integer.int',bool)),'|dollar|equals_0'),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK1),s('type.integer.int',sK0))))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK0),s('type.integer.int',sK1))))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1294,f34805])).
fof(f21470,plain,(
  $false | ($spl8 | $spl19)),
  inference(subsumption_resolution,[],[f20726,f2251])).
fof(f20726,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | ($spl8 | $spl19)),
  inference(backward_demodulation,[],[f2251,f17173])).
fof(f21469,plain,(
  $false | ($spl8 | $spl15)),
  inference(subsumption_resolution,[],[f20706,f2251])).
fof(f20706,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'T_0'))) | ($spl8 | $spl15)),
  inference(backward_demodulation,[],[f2251,f13823])).
fof(f21468,plain,(
  $false | ($spl8 | $spl11)),
  inference(subsumption_resolution,[],[f20592,f2251])).
fof(f20592,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'T_0'))) | ($spl8 | $spl11)),
  inference(backward_demodulation,[],[f2251,f2253])).
fof(f21467,plain,(
  $false | $spl8),
  inference(subsumption_resolution,[],[f20575,f136])).
fof(f20575,plain,(
  ~p(s(bool,'T_0')) | $spl8),
  inference(backward_demodulation,[],[f2251,f139])).
fof(f20481,plain,(
  p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | $spl22),
  inference(cnf_transformation,[],[f20481_D])).
fof(f20481_D,plain,(
  p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f20483,plain,(
  ( ! [X90] : (s(bool,'T_0') = s(bool,X90) | p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0'))))) )),
  inference(forward_demodulation,[],[f20482,f145])).
fof(f20482,plain,(
  ( ! [X90] : (p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X90)))) )),
  inference(forward_demodulation,[],[f20322,f184])).
fof(f184,plain,(
  ( ! [X6,X4,X2,X0,X7,X5,X3,X1] : (s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))) )),
  inference(cnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1,X2,X3] : ! [X4,X5,X6,X7] : s(X0,happ(s(fun(X3,X0),'_dst_x0x1x1_3'(s(fun(X1,fun(X2,X0)),X4),s(fun(X3,X1),X5),s(fun(X3,X2),X6))),s(X3,X7))) = s(X0,happ(s(fun(X2,X0),happ(s(fun(X1,fun(X2,X0)),X4),s(X1,happ(s(fun(X3,X1),X5),s(X3,X7))))),s(X2,happ(s(fun(X3,X2),X6),s(X3,X7)))))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X39,X40,X43,X37] : ! [X41,X38,X44,X42] : s(X39,happ(s(fun(X37,X39),'_dst_x0x1x1_3'(s(fun(X40,fun(X43,X39)),X41),s(fun(X37,X40),X38),s(fun(X37,X43),X44))),s(X37,X42))) = s(X39,happ(s(fun(X43,X39),happ(s(fun(X40,fun(X43,X39)),X41),s(X40,happ(s(fun(X37,X40),X38),s(X37,X42))))),s(X43,happ(s(fun(X37,X43),X44),s(X37,X42)))))),
  file('thm.integer.INT_NEG_SUB','_dst_x0x1x1_ax')).
fof(f20322,plain,(
  ( ! [X90] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))))),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X90)))) )),
  inference(superposition,[],[f19792,f17096])).
fof(f17096,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) )),
  inference(condensation,[],[f17095])).
fof(f17095,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(duplicate_literal_removal,[],[f16688])).
fof(f16688,plain,(
  ( ! [X12,X11] : (s(bool,X12) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(superposition,[],[f16422,f280])).
fof(f16422,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f16421])).
fof(f16421,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f15972])).
fof(f15972,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f307,f144])).
fof(f20479,plain,(
  ( ! [X89] : (p(s(bool,happ(s(fun(bool,bool),'_dst_x0x1x1_3'(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(fun(bool,bool),'const.combin.I_0'),s(fun(bool,bool),'const.combin.I_0'))),s(bool,'F_0')))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(forward_demodulation,[],[f20321,f184])).
fof(f20321,plain,(
  ( ! [X89] : (p(s(bool,happ(s(fun(bool,bool),happ(s(fun(bool,fun(bool,bool)),'|dollar|equals_0'),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))))),s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))))) | s(bool,'T_0') = s(bool,X89)) )),
  inference(superposition,[],[f19792,f16422])).
fof(f17270,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) ) | $spl20),
  inference(cnf_transformation,[],[f17270_D])).
fof(f17270_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f17173,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | $spl19),
  inference(cnf_transformation,[],[f17173_D])).
fof(f17173_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f17014,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f16422])).
fof(f17217,plain,(
  ( ! [X186] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X186)) )),
  inference(subsumption_resolution,[],[f16885,f13050])).
fof(f16885,plain,(
  ( ! [X186] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X186) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X186)))) )),
  inference(superposition,[],[f13050,f16422])).
fof(f17211,plain,(
  ( ! [X137] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X137)) )),
  inference(subsumption_resolution,[],[f16870,f1999])).
fof(f16870,plain,(
  ( ! [X137] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X137) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X137)))) )),
  inference(superposition,[],[f1999,f16422])).
fof(f17178,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(subsumption_resolution,[],[f16832,f16558])).
fof(f16832,plain,(
  ( ! [X75] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X75))) | s(bool,'T_0') = s(bool,X75)) )),
  inference(superposition,[],[f1385,f16422])).
fof(f17177,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(subsumption_resolution,[],[f16831,f13050])).
fof(f16831,plain,(
  ( ! [X74] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X74))) | s(bool,'T_0') = s(bool,X74)) )),
  inference(superposition,[],[f1384,f16422])).
fof(f17171,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(subsumption_resolution,[],[f16829,f1999])).
fof(f16829,plain,(
  ( ! [X72] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X72))) | s(bool,'T_0') = s(bool,X72)) ) | $spl7),
  inference(superposition,[],[f1294,f16422])).
fof(f13909,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) ) | $spl16),
  inference(cnf_transformation,[],[f13909_D])).
fof(f13909_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f13823,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | $spl15),
  inference(cnf_transformation,[],[f13823_D])).
fof(f13823_D,plain,(
  s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f13676,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f12944])).
fof(f12944,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f12943])).
fof(f12943,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f12542])).
fof(f12542,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f306,f144])).
fof(f13856,plain,(
  ( ! [X129] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X129)) )),
  inference(subsumption_resolution,[],[f13548,f1999])).
fof(f13548,plain,(
  ( ! [X129] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X129) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X129)))) )),
  inference(superposition,[],[f1999,f12944])).
fof(f13846,plain,(
  ( ! [X108] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(forward_demodulation,[],[f13845,f190])).
fof(f13845,plain,(
  ( ! [X108] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(subsumption_resolution,[],[f13536,f1999])).
fof(f13536,plain,(
  ( ! [X108] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X108))) | s(bool,'T_0') = s(bool,X108)) )),
  inference(superposition,[],[f11679,f12944])).
fof(f11679,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X0)))) )),
  inference(condensation,[],[f11678])).
fof(f11678,plain,(
  ( ! [X12,X11] : (s(bool,X12) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(duplicate_literal_removal,[],[f11573])).
fof(f11573,plain,(
  ( ! [X12,X11] : (s(bool,X12) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,X11) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X12)))) )),
  inference(superposition,[],[f10906,f280])).
fof(f10906,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(duplicate_literal_removal,[],[f10888])).
fof(f10888,plain,(
  ( ! [X0] : (s(bool,X0) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f282])).
fof(f282,plain,(
  ( ! [X26,X27] : (s(bool,X26) = s(bool,X27) | s(bool,'T_0') = s(bool,X27) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,X26)))) )),
  inference(superposition,[],[f200,f190])).
fof(f13844,plain,(
  ( ! [X107] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(forward_demodulation,[],[f13690,f190])).
fof(f13690,plain,(
  ( ! [X107] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X107)) )),
  inference(duplicate_literal_removal,[],[f13535])).
fof(f13535,plain,(
  ( ! [X107] : (s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) != s(bool,happ(s(fun(bool,bool),'const.combin.I_0'),s(bool,'T_0'))) | s(bool,'T_0') = s(bool,X107) | s(bool,'T_0') = s(bool,X107)) )),
  inference(superposition,[],[f10906,f12944])).
fof(f13827,plain,(
  ( ! [X70] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(subsumption_resolution,[],[f13513,f13050])).
fof(f13513,plain,(
  ( ! [X70] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X70))) | s(bool,'T_0') = s(bool,X70)) )),
  inference(superposition,[],[f1384,f12944])).
fof(f13821,plain,(
  ( ! [X68] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X68)) ) | $spl7),
  inference(subsumption_resolution,[],[f13511,f1999])).
fof(f13511,plain,(
  ( ! [X68] : (s(bool,'T_0') != s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X68))) | s(bool,'T_0') = s(bool,X68)) ) | $spl7),
  inference(superposition,[],[f1294,f12944])).
fof(f2266,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) ) | $spl12),
  inference(cnf_transformation,[],[f2266_D])).
fof(f2266_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f2253,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | $spl11),
  inference(cnf_transformation,[],[f2253_D])).
fof(f2253_D,plain,(
  s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f2195,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0')))) )),
  inference(equality_factoring,[],[f1964])).
fof(f1964,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(condensation,[],[f1963])).
fof(f1963,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1)) )),
  inference(duplicate_literal_removal,[],[f1802])).
fof(f1802,plain,(
  ( ! [X0,X1] : (s(bool,X1) = s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f305,f144])).
fof(f2250,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X30)) ) | $spl7),
  inference(subsumption_resolution,[],[f2142,f1999])).
fof(f2142,plain,(
  ( ! [X30] : (s(bool,'T_0') != s(bool,'const.combin.I_1'(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,'const.combin.I_1'(s(bool,X30))) | s(bool,'T_0') = s(bool,X30)) ) | $spl7),
  inference(superposition,[],[f1294,f1964])).
fof(f802,plain,(
  $false | $spl1),
  inference(subsumption_resolution,[],[f801,f136])).
fof(f801,plain,(
  ~p(s(bool,'T_0')) | $spl1),
  inference(backward_demodulation,[],[f790,f195])).
fof(f195,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f194,f153])).
fof(f194,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f193,f156])).
fof(f156,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X35,X36] : s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X35),s('type.pair.prod'('type.num.num','type.num.num'),X36))) = s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X35))),s('type.pair.prod'('type.num.num','type.num.num'),X36)))),
  file('thm.integer.INT_NEG_SUB','ARITY_0_2_const.integer.tint_add')).
fof(f193,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.integer.tint_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f192,f156])).
fof(f192,plain,(
  ~p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(forward_demodulation,[],[f187,f155])).
fof(f155,plain,(
  ( ! [X0,X1] : (s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X35,X36] : s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X35),s('type.pair.prod'('type.num.num','type.num.num'),X36))) = s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),X35))),s('type.pair.prod'('type.num.num','type.num.num'),X36)))),
  file('thm.integer.INT_NEG_SUB','ARITY_0_2_const.integer.tint_eq')).
fof(f790,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(unit_resulting_resolution,[],[f770,f203])).
fof(f770,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(forward_demodulation,[],[f756,f190])).
fof(f756,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'const.combin.I_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))) )),
  inference(unit_resulting_resolution,[],[f190,f157])).
fof(f157,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1)) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) != s('type.pair.prod'('type.num.num','type.num.num'),X1) | p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(ennf_transformation,[],[f67])).
fof(f67,plain,(
  ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),X0) = s('type.pair.prod'('type.num.num','type.num.num'),X1) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X12,X13] : (s('type.pair.prod'('type.num.num','type.num.num'),X12) = s('type.pair.prod'('type.num.num','type.num.num'),X13) => p(s(bool,'const.integer.tint_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X13)))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.TINT_EQ_AP')).
fof(f210,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl4),
  inference(cnf_transformation,[],[f210_D])).
fof(f210_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f212,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl7),
  inference(cnf_transformation,[],[f212_D])).
fof(f212_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f209,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f144])).
fof(f187,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f187_D])).
fof(f187_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f189,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | $spl2),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f138,plain,(
  p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0')))))))) | ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(cnf_transformation,[],[f126])).
fof(f126,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK3))),s('type.pair.prod'('type.num.num','type.num.num'),sK2))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK2,sK3])],[f107])).
fof(f107,plain,(
  ? [X0,X1] : ~p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) | p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X1))),s('type.pair.prod'('type.num.num','type.num.num'),X0))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X0))),s('type.pair.prod'('type.num.num','type.num.num'),X1)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X7,X6] : p(s(bool,happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X6))),s('type.pair.prod'('type.num.num','type.num.num'),X7))))),s('type.pair.prod'('type.num.num','type.num.num'),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),happ(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s('type.pair.prod'('type.num.num','type.num.num'),X7))),s('type.pair.prod'('type.num.num','type.num.num'),X6)))))) => p(s(bool,happ(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'_dst_x0x1_2'(s(fun(fun('type.pair.prod'('type.num.num','type.num.num'),bool),bool),'const.bool.RES_FORALL_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),bool),'const.quotient.respects_1'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'))))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'_dst_x00x11x11_3'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),bool)),'const.integer.tint_eq_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'_dst_x01x10_2'(s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'),s(fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num')),'_i_0_0'))),s(fun('type.pair.prod'('type.num.num','type.num.num'),fun('type.pair.prod'('type.num.num','type.num.num'),'type.pair.prod'('type.num.num','type.num.num'))),'const.integer.tint_add_0'))))))))),
  file('thm.integer.INT_NEG_SUB','thm.integer.integer_66_prove_ltb')).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 162
% Passive clauses: 2145
% Generated clauses: 38367
% Final active clauses: 103
% Final passive clauses: 1145
% Input formulas: 42
% Initial clauses: 51
% 
% Duplicate literals: 1639
% Trivial inequalities: 293
% Fw subsumption resolutions: 3081
% Fw demodulations: 7134
% Bw demodulations: 867
% Condensations: 3625
% 
% Simple tautologies: 308
% Equational tautologies: 223
% Forward subsumptions: 19845
% Fw demodulations to eq. taut.: 42
% Bw demodulations to eq. taut.: 26
% 
% Unit resulting resolution: 1499
% Forward superposition: 11076
% Backward superposition: 7846
% Self superposition: 305
% Equality factoring: 103
% Equality resolution: 24
% 
% Split clauses: 32
% Split components: 64
% SAT solver clauses: 2218
% SAT solver unit clauses: 259
% SAT solver binary clauses: 808
% 
% Sat splits: 32
% Sat splitting refutations: 7
% 
% Memory used [KB]: 24434
% Time elapsed: 2.120 s
% ------------------------------
% ------------------------------
% Success in time 3.433 s
