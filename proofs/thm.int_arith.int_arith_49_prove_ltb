Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.int_arith
% (87875)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 781
% Passive clauses: 8080
% Generated clauses: 22502
% Final active clauses: 766
% Final passive clauses: 6905
% Input formulas: 52
% Initial clauses: 212
% 
% Duplicate literals: 919
% Trivial inequalities: 49
% Fw subsumption resolutions: 2628
% Fw demodulations: 635
% Bw demodulations: 14
% 
% Simple tautologies: 286
% Equational tautologies: 74
% Forward subsumptions: 9037
% 
% Binary resolution: 9525
% Factoring: 1440
% Forward superposition: 3524
% Backward superposition: 3161
% Self superposition: 50
% Equality factoring: 54
% Equality resolution: 11
% 
% Split clauses: 670
% Split components: 1347
% SAT solver clauses: 1165
% SAT solver unit clauses: 24
% SAT solver binary clauses: 220
% 
% Sat splits: 670
% 
% TWLsolver clauses: 1164
% TWLsolver calls for satisfiability: 517
% 
% Memory used [KB]: 8699
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.int_arith
% (87897)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 416
% Passive clauses: 1891
% Generated clauses: 10254
% Final active clauses: 408
% Final passive clauses: 1470
% Input formulas: 52
% Initial clauses: 212
% 
% Duplicate literals: 264
% Trivial inequalities: 102
% Fw subsumption resolutions: 909
% Fw demodulations: 322
% Bw demodulations: 13
% Condensations: 207
% Global subsumptions: 22
% 
% Simple tautologies: 310
% Equational tautologies: 24
% Forward subsumptions: 4004
% 
% Binary resolution: 3004
% Factoring: 197
% Forward superposition: 1548
% Backward superposition: 1449
% Self superposition: 38
% Equality factoring: 32
% Equality resolution: 20
% 
% Split clauses: 74
% Split components: 153
% SAT solver clauses: 2450
% SAT solver unit clauses: 215
% SAT solver binary clauses: 76
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 74
% 
% TWLsolver clauses: 2362
% TWLsolver calls for satisfiability: 1743
% 
% Memory used [KB]: 9722
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f1443,plain,(
  $false),
  inference(unit_resulting_resolution,[],[f270,f1184,f272,f401])).
fof(f401,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0,X1,X2] : (s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f152])).
fof(f152,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f118])).
fof(f118,plain,(
  ! [X0,X1,X2] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f117])).
fof(f117,plain,(
  ! [X0,X1,X2] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f42])).
fof(f42,axiom,(
  ! [X6,X7,X8] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))),
  file('thm.int_arith.int_arith_49_prove_ltb','thm.integer.INT_MUL_DIV')).
fof(f272,plain,(
  s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))),s('type.integer.int',sK13))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))))),
  inference(cnf_transformation,[],[f173])).
fof(f173,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK12))),s('type.integer.int',sK13))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14])],[f129])).
fof(f129,plain,(
  ? [X0,X1,X2] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f128])).
fof(f128,plain,(
  ? [X0,X1,X2] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) & s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ~! [X0,X1,X2] : ((s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f54])).
fof(f54,plain,(
  ~! [X0,X1,X2] : ((~s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X1),s('type.integer.int',X0))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((~s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X7),s('type.integer.int',X6))))) => s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int',X7))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))),
  file('thm.int_arith.int_arith_49_prove_ltb','thm.int_arith.int_arith_49_prove_ltb')).
fof(f1184,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK13)))),
  inference(subsumption_resolution,[],[f1183,f270])).
fof(f1183,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(subsumption_resolution,[],[f1181,f273])).
fof(f273,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.int_arith.int_arith_49_prove_ltb',aHL_TRUTH)).
fof(f1181,plain,(
  ~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',sK12),s('type.integer.int',sK13))) | s('type.integer.int',sK13) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f357,f530])).
fof(f530,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13),s('type.integer.int',sK12)))),
  inference(unit_resulting_resolution,[],[f271,f293])).
fof(f293,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f71])).
fof(f71,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X9] : (s(bool,'T_0') = s(bool,X9) <=> p(s(bool,X9)))),
  file('thm.int_arith.int_arith_49_prove_ltb','thm.bool.EQ_CLAUSES|split|1')).
fof(f271,plain,(
  p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',sK13),s('type.integer.int',sK12))))),
  inference(cnf_transformation,[],[f173])).
fof(f357,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f215])).
fof(f215,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(flattening,[],[f214])).
fof(f214,plain,(
  ! [X0,X1] : ((~p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) | ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) & (((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))),
  inference(nnf_transformation,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(flattening,[],[f102])).
fof(f102,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X0),s('type.integer.int',X1)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X1),s('type.integer.int',X0))) & ~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(rectify,[],[f43])).
fof(f43,axiom,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_divides_2'(s('type.integer.int',X6),s('type.integer.int',X7)))) <=> ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mod_2'(s('type.integer.int',X7),s('type.integer.int',X6))) & ~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) | (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X7) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  file('thm.int_arith.int_arith_49_prove_ltb','thm.integer.INT_DIVIDES_MOD|48|')).
fof(f270,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f173])).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 218
% Passive clauses: 309
% Generated clauses: 1177
% Final active clauses: 216
% Final passive clauses: 91
% Input formulas: 52
% Initial clauses: 212
% 
% Duplicate literals: 7
% Trivial inequalities: 7
% Fw subsumption resolutions: 31
% Fw demodulations: 88
% Bw demodulations: 2
% Condensations: 6
% 
% Simple tautologies: 76
% Equational tautologies: 15
% Forward subsumptions: 631
% 
% Unit resulting resolution: 702
% Factoring: 1
% Forward superposition: 67
% Backward superposition: 47
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 3
% 
% SAT solver clauses: 311
% SAT solver unit clauses: 198
% SAT solver binary clauses: 43
% 
% Memory used [KB]: 1407
% Time elapsed: 0.023 s
% ------------------------------
% ------------------------------
% Success in time 1.34 s
