Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f4428,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4425,f4103,f220,f401,f221,f403,f399,f222,f404,f402,f400,f4165])).
fof(f4165,plain,(
  $false | ($spl1 | $spl2)),
  inference(trivial_inequality_removal,[],[f4162])).
fof(f4162,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat',sK12) | ($spl1 | $spl2)),
  inference(superposition,[],[f4143,f4157])).
fof(f4157,plain,(
  ( ! [X0] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))) ) | $spl2),
  inference(equality_resolution,[],[f4108])).
fof(f4108,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) != s('type.rat.rat',X0) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl2),
  inference(forward_demodulation,[],[f4104,f402])).
fof(f4104,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl2),
  inference(backward_demodulation,[],[f402,f278])).
fof(f278,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0,X1] : (((s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(flattening,[],[f166])).
fof(f166,plain,(
  ! [X0,X1] : (((s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ((s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) <=> s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))))),
  inference(rectify,[],[f29])).
fof(f29,axiom,(
  ! [X6,X7] : ((s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) <=> s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))))),
  file('thm.rat.RAT_NO_ZERODIV_NEG','thm.rat.RAT_NO_ZERODIV')).
fof(f4143,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f399,f402])).
fof(f400,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl0),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f402,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f404,plain,(
  s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl4),
  inference(cnf_transformation,[],[f404_D])).
fof(f404_D,plain,(
  s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f222,plain,(
  s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | (s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',sK13) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13])],[f140])).
fof(f140,plain,(
  ? [X0,X1] : ((s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(flattening,[],[f139])).
fof(f139,plain,(
  ? [X0,X1] : ((s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) & (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),
  inference(nnf_transformation,[],[f97])).
fof(f97,plain,(
  ? [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) <~> (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(ennf_transformation,[],[f41])).
fof(f41,plain,(
  ~! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) <=> (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(flattening,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) <=> (~s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ~s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))) <=> (~s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ~s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (~s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X6),s('type.rat.rat',X7))) <=> (~s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) & ~s('type.rat.rat',X7) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.rat.RAT_NO_ZERODIV_NEG','thm.rat.RAT_NO_ZERODIV_NEG')).
fof(f399,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | $spl1),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f403,plain,(
  s('type.rat.rat',sK13) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl5),
  inference(cnf_transformation,[],[f403_D])).
fof(f403_D,plain,(
  s('type.rat.rat',sK13) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f221,plain,(
  s('type.rat.rat',sK13) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(cnf_transformation,[],[f141])).
fof(f401,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f220,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13)))),
  inference(cnf_transformation,[],[f141])).
fof(f4103,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f4102,f403])).
fof(f4102,plain,(
  s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f4101,f401])).
fof(f4101,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(trivial_inequality_removal,[],[f4100])).
fof(f4100,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(superposition,[],[f280,f400])).
fof(f280,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',X1) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f167])).
fof(f4425,plain,(
  $false | ($spl1 | $spl4)),
  inference(trivial_inequality_removal,[],[f4419])).
fof(f4419,plain,(
  s('type.rat.rat',sK13) != s('type.rat.rat',sK13) | ($spl1 | $spl4)),
  inference(superposition,[],[f4205,f4411])).
fof(f4411,plain,(
  ( ! [X0] : (s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',sK13)))) ) | $spl4),
  inference(equality_resolution,[],[f4344])).
fof(f4344,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK13) != s('type.rat.rat',X1) | s('type.rat.rat',sK13) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl4),
  inference(forward_demodulation,[],[f4343,f404])).
fof(f4343,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK13) != s('type.rat.rat',X1) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) ) | $spl4),
  inference(forward_demodulation,[],[f279,f404])).
fof(f279,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',X1) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))) )),
  inference(cnf_transformation,[],[f167])).
fof(f4205,plain,(
  s('type.rat.rat',sK13) != s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK13))) | ($spl1 | $spl4)),
  inference(forward_demodulation,[],[f399,f404])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 363
% Passive clauses: 1324
% Generated clauses: 4207
% Final active clauses: 352
% Final passive clauses: 804
% Input formulas: 38
% Initial clauses: 175
% 
% Duplicate literals: 152
% Trivial inequalities: 26
% Fw subsumption resolutions: 286
% Fw demodulations: 20
% Bw demodulations: 4
% 
% Simple tautologies: 157
% Equational tautologies: 29
% Forward subsumptions: 2201
% 
% Binary resolution: 2530
% Factoring: 757
% Forward superposition: 125
% Backward superposition: 67
% Self superposition: 5
% Equality factoring: 2
% Equality resolution: 13
% 
% Split clauses: 97
% Split components: 196
% SAT solver clauses: 175
% SAT solver unit clauses: 7
% SAT solver binary clauses: 33
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 97
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 173
% TWLsolver calls for satisfiability: 143
% 
% Memory used [KB]: 2046
% Time elapsed: 0.059 s
% ------------------------------
% ------------------------------
% Success in time 0.063 s
