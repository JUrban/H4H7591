Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.integer
% (77529)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 930
% Passive clauses: 7965
% Generated clauses: 25003
% Final active clauses: 883
% Final passive clauses: 6442
% Input formulas: 60
% Initial clauses: 228
% 
% Duplicate literals: 674
% Trivial inequalities: 27
% Fw subsumption resolutions: 2894
% Fw demodulations: 1801
% Bw demodulations: 45
% 
% Simple tautologies: 285
% Equational tautologies: 82
% Forward subsumptions: 10764
% 
% Binary resolution: 9249
% Factoring: 1955
% Forward superposition: 4167
% Backward superposition: 3670
% Self superposition: 46
% Equality factoring: 28
% Equality resolution: 16
% 
% Split clauses: 451
% Split components: 945
% SAT solver clauses: 986
% SAT solver unit clauses: 21
% SAT solver binary clauses: 134
% 
% Sat splits: 451
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 984
% TWLsolver calls for satisfiability: 591
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.integer
% (77543)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 512
% Passive clauses: 2927
% Generated clauses: 13772
% Final active clauses: 508
% Final passive clauses: 2414
% Input formulas: 60
% Initial clauses: 228
% 
% Duplicate literals: 294
% Trivial inequalities: 36
% Fw subsumption resolutions: 1154
% Fw demodulations: 644
% Bw demodulations: 5
% Condensations: 379
% Global subsumptions: 22
% 
% Simple tautologies: 285
% Equational tautologies: 17
% Forward subsumptions: 4548
% 
% Binary resolution: 3738
% Factoring: 355
% Forward superposition: 2020
% Backward superposition: 1844
% Self superposition: 42
% Equality factoring: 26
% Equality resolution: 12
% 
% Split clauses: 70
% Split components: 145
% SAT solver clauses: 3711
% SAT solver unit clauses: 228
% SAT solver binary clauses: 82
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 70
% 
% TWLsolver clauses: 3623
% TWLsolver calls for satisfiability: 2109
% 
% Memory used [KB]: 14456
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.integer
% (77555)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1355
% Passive clauses: 8123
% Generated clauses: 288386
% Final active clauses: 806
% Final passive clauses: 2753
% Input formulas: 60
% Initial clauses: 228
% Discarded non-redundant clauses: 431
% 
% Duplicate literals: 4171
% Trivial inequalities: 141
% Fw subsumption resolutions: 3932
% Fw demodulations: 135805
% Bw demodulations: 2332
% Condensations: 10162
% Global subsumptions: 1173
% 
% Simple tautologies: 1009
% Equational tautologies: 278
% Forward subsumptions: 99837
% Fw demodulations to eq. taut.: 17659
% Bw demodulations to eq. taut.: 56
% 
% Unit resulting resolution: 63281
% Factoring: 5
% Forward superposition: 27600
% Backward superposition: 35549
% Self superposition: 226
% Equality factoring: 92
% Equality resolution: 48
% 
% Split clauses: 399
% Split components: 823
% SAT solver clauses: 12096
% SAT solver unit clauses: 1163
% SAT solver binary clauses: 3050
% 
% Sat splits: 399
% Sat splitting refutations: 2000
% 
% Memory used [KB]: 137780
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.integer
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.integer
% SZS output start Proof for thm.integer
fof(f33943,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f540,f544,f547,f553,f551,f549,f586,f711,f601,f838,f869,f870,f1016,f906,f1042,f1043,f1062,f1187,f1189,f1316,f1318,f1319,f599,f1320,f598,f1388,f1389,f1391,f1188,f1427,f871,f1428,f1563,f1572,f1806,f1808,f2136,f2149,f2498,f2499,f2503,f2509,f2512,f2544,f2549,f2547,f2546,f2551,f2554,f2556,f2557,f2561,f2553,f2562,f2563,f2564,f2676,f2687,f2688,f2147,f2691,f2692,f2146,f2719,f2720,f2726,f2727,f2858,f2859,f2908,f2674,f2911,f2677,f2675,f3909,f4182,f4183,f4361,f546,f4362,f4375,f4376,f2511,f4590,f4599,f4591,f4601,f4592,f4603,f4622,f4630,f4623,f4632,f4624,f4634,f4760,f4759,f4754,f4752,f4743,f4742,f4741,f4833,f4834,f4835,f4836,f4837,f4838,f4856,f4862,f4857,f4864,f4858,f4866,f5414,f5415,f5416,f5417,f5418,f5419,f5420,f5422,f5424,f5426,f5427,f5428,f5429,f5430,f5431,f5432,f5433,f5434,f5435,f5436,f5437,f5447,f5448,f5449,f5450,f5451,f5452,f5697,f5694,f5693,f5684,f5761,f5762,f5763,f5764,f5884,f5887,f5890,f5899,f5885,f5901,f5888,f5903,f5891,f5906,f5907,f5910,f5911,f5914,f5915,f5795,f5918,f5916,f5919,f5921,f5917,f5920,f6039,f5421,f6041,f5423,f6043,f5425,f6044,f6157,f6814,f6815,f6816,f6817,f7265,f7266,f542,f7269,f541,f7457,f7458,f7517,f1321,f6155,f7520,f1322,f6156,f7876,f7877,f7878,f7879,f7880,f7881,f8407,f2689,f8812,f9645,f9655,f9646,f9657,f9785,f9674,f9789,f9787,f9862,f9654,f10551,f10552,f10553,f10554,f10555,f10556,f11918,f14298,f14304,f14302,f14417,f14419,f14447,f14454,f14448,f14456,f18226,f18237,f18227,f18413,f18424,f18414,f23787,f23788,f23790,f23791,f23793,f23794,f29081,f29082,f29214,f29217,f29215,f29242,f9786,f29367,f6158,f29481,f29531,f7267,f7270,f29863,f29883,f545,f29870,f8820,f30133,f30263,f30256,f30247,f30246,f30245,f30344,f30345,f30346,f30347,f30348,f30349,f30357,f30137,f30360,f30365,f30369,f30370,f30366,f30430,f30434,f4296,f4297,f4298,f30435,f30436,f29216,f30437,f30438,f30368,f30441,f30445,f895,f30446,f1174,f30449,f30450,f2497,f839,f30451,f4373,f596,f30126,f30453,f30452,f597,f14809,f14433,f14428,f30455,f14305,f14418,f30454,f30706,f30596,f716,f714,f30712,f30834,f1809,f1172,f30836,f1810,f1173,f30844,f1317,f31721,f31722,f31888,f31889,f32330,f32331,f32333,f32334,f32356,f32369,f32344,f32357,f32370,f18239,f32359,f32371,f18426,f32360,f32372,f32346,f32715,f713,f712,f33298,f33299,f33314,f4597,f33315,f33316,f1175,f1302,f33717,f2504,f33718,f33739,f33856,f33855,f33854,f33845,f33926,f33927,f33928,f33929])).
fof(f33929,plain,(
  $false | ($spl12 | $spl15 | $spl304)),
  inference(subsumption_resolution,[],[f33847,f33728])).
fof(f33728,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33727,f1190])).
fof(f1190,plain,(
  ( ! [X4] : (~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X4) | p(s(bool,X4))) ) | $spl15),
  inference(resolution,[],[f598,f297])).
fof(f297,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | p(s(bool,X2)) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0,X1,X2] : (~sP0(X0,X1,X2) | ((p(s(bool,X2)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,X2)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(rectify,[],[f193])).
fof(f193,plain,(
  ! [X3,X1,X4] : (~sP0(X3,X1,X4) | ((p(s(bool,X4)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,X4)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  inference(flattening,[],[f192])).
fof(f192,plain,(
  ! [X3,X1,X4] : (~sP0(X3,X1,X4) | ((p(s(bool,X4)) | (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & (~p(s(bool,X4)) | (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))))),
  inference(nnf_transformation,[],[f171])).
fof(f171,plain,(
  ! [X3,X1,X4] : (~sP0(X3,X1,X4) | (p(s(bool,X4)) <~> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP0])])).
fof(f33727,plain,(
  ( ! [X0] : (sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | ($spl12 | $spl304)),
  inference(subsumption_resolution,[],[f33726,f522])).
fof(f522,plain,(
  p(s(bool,'T_0'))),
  inference(trivial_inequality_removal,[],[f339])).
fof(f339,plain,(
  ( ! [X0,X1] : (p(s(bool,'T_0')) | s(X0,X1) != s(X0,X1)) )),
  inference(cnf_transformation,[],[f210])).
fof(f210,plain,(
  ! [X0,X1] : ((s(X0,X1) != s(X0,X1) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | s(X0,X1) = s(X0,X1)))),
  inference(nnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0,X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(flattening,[],[f77])).
fof(f77,plain,(
  ! [X0] : ! [X1] : (s(X0,X1) = s(X0,X1) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f32])).
fof(f32,axiom,(
  ! [X11] : ! [X12] : (s(X11,X12) = s(X11,X12) <=> p(s(bool,'T_0')))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.REFL_CLAUSE')).
fof(f33726,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | ($spl12 | $spl304)),
  inference(forward_demodulation,[],[f33725,f30618])).
fof(f30618,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl12),
  inference(resolution,[],[f597,f346])).
fof(f346,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.EQ_CLAUSES|split|1')).
fof(f33725,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl304),
  inference(subsumption_resolution,[],[f33709,f521])).
fof(f521,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int',X0))))),
  inference(rectify,[],[f48])).
fof(f48,axiom,(
  ! [X12] : p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X12),s('type.integer.int',X12))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_LE_REFL')).
fof(f33709,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl304),
  inference(trivial_inequality_removal,[],[f33704])).
fof(f33704,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl304),
  inference(superposition,[],[f33553,f352])).
fof(f352,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f47])).
fof(f47,axiom,(
  ! [X12] : s('type.integer.int',X12) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_ADD_RID')).
fof(f33553,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X0))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl304),
  inference(forward_demodulation,[],[f33533,f303])).
fof(f303,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X0)))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X13,X12] : s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X13))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X13),s('type.integer.int',X12)))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_MUL_SYM')).
fof(f33533,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',X0))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl304),
  inference(equality_resolution,[],[f33299])).
fof(f33847,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33728,f516])).
fof(f516,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f291])).
fof(f291,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f140])).
fof(f140,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f30])).
fof(f30,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.NOT_CLAUSES|split|1')).
fof(f33928,plain,(
  $false | ($spl12 | $spl15 | $spl304)),
  inference(subsumption_resolution,[],[f33846,f33728])).
fof(f33846,plain,(
  ~p(s(bool,'T_0')) | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33728,f514])).
fof(f514,plain,(
  ~p(s(bool,'F_0')) | ~p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f290])).
fof(f290,plain,(
  (p(s(bool,'F_0')) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')))),
  inference(nnf_transformation,[],[f139])).
fof(f139,plain,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  inference(flattening,[],[f31])).
fof(f31,axiom,(
  ~p(s(bool,'F_0')) <=> p(s(bool,'T_0'))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.NOT_CLAUSES|split|2')).
fof(f33927,plain,(
  $false | ($spl12 | $spl15 | $spl304)),
  inference(subsumption_resolution,[],[f33843,f33728])).
fof(f33843,plain,(
  ( ! [X242] : (~p(s(bool,X242))) ) | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33728,f508])).
fof(f508,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f167])).
fof(f167,plain,(
  ! [X0] : ((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f132])).
fof(f132,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(flattening,[],[f131])).
fof(f131,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) => ~p(s(bool,X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X8] : ((p(s(bool,X8)) => p(s(bool,'F_0'))) => ~p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_F')).
fof(f33926,plain,(
  $false | ($spl12 | $spl15 | $spl304)),
  inference(subsumption_resolution,[],[f33837,f33728])).
fof(f33837,plain,(
  ( ! [X236] : (~p(s(bool,X236))) ) | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33728,f458])).
fof(f458,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f261])).
fof(f261,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | ~p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f260])).
fof(f260,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'F_0'))) | ~p(s(bool,X0))) & (p(s(bool,X0)) | (~p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f111])).
fof(f111,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X8] : ((p(s(bool,X8)) => p(s(bool,'F_0'))) <=> ~p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_CLAUSES|split|4')).
fof(f33845,plain,(
  $false | ($spl12 | $spl15 | $spl304)),
  inference(resolution,[],[f33728,f512])).
fof(f512,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f138])).
fof(f138,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.integer.INT_DIV_LMUL',aHL_FALSITY)).
fof(f33854,plain,(
  $false | ($spl12 | $spl15 | $spl177 | $spl304)),
  inference(resolution,[],[f33728,f6156])).
fof(f33855,plain,(
  $false | ($spl12 | $spl15 | $spl211 | $spl304)),
  inference(resolution,[],[f33728,f9789])).
fof(f33856,plain,(
  $false | ($spl12 | $spl15 | $spl23 | $spl304)),
  inference(resolution,[],[f33728,f716])).
fof(f33739,plain,(
  $false | ($spl12 | $spl15 | $spl221 | $spl304)),
  inference(subsumption_resolution,[],[f33738,f512])).
fof(f33738,plain,(
  p(s(bool,'F_0')) | ($spl12 | $spl15 | $spl221 | $spl304)),
  inference(forward_demodulation,[],[f33732,f30735])).
fof(f30735,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl15),
  inference(resolution,[],[f598,f342])).
fof(f342,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f211])).
fof(f211,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f79])).
fof(f79,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f37])).
fof(f37,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.EQ_CLAUSES|split|3')).
fof(f33732,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl12 | $spl221 | $spl304)),
  inference(resolution,[],[f33727,f14307])).
fof(f14307,plain,(
  ( ! [X6,X5] : (~sP0(X6,X5,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int',X6))))) ) | $spl221),
  inference(resolution,[],[f14304,f297])).
fof(f33718,plain,(
  ( ! [X24] : (sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24)) ) | $spl308),
  inference(cnf_transformation,[],[f33718_D])).
fof(f33718_D,plain,(
  ( ! [X24] : (sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24)) ) <=> ~$spl308),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl308])])).
fof(f2504,plain,(
  ( ! [X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27)))) ) | $spl64),
  inference(cnf_transformation,[],[f2504_D])).
fof(f2504_D,plain,(
  ( ! [X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27)))) ) <=> ~$spl64),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl64])])).
fof(f33717,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl12 | $spl304)),
  inference(forward_demodulation,[],[f33716,f351])).
fof(f351,plain,(
  ( ! [X0] : (s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f49])).
fof(f49,axiom,(
  ! [X12] : s(bool,'const.integer.int_lt_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12)))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_NEG_GT|48|')).
fof(f33716,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl12 | $spl304)),
  inference(subsumption_resolution,[],[f33715,f522])).
fof(f33715,plain,(
  ( ! [X24,X23] : (~p(s(bool,'T_0')) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl12 | $spl304)),
  inference(forward_demodulation,[],[f33714,f30618])).
fof(f33714,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | $spl304),
  inference(subsumption_resolution,[],[f33689,f521])).
fof(f33689,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | $spl304),
  inference(superposition,[],[f33553,f350])).
fof(f350,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f85])).
fof(f85,plain,(
  ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X12] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X12)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X12)))))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_LT_NEGTOTAL')).
fof(f1302,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | p(s(bool,X3))) ) | $spl42),
  inference(cnf_transformation,[],[f1302_D])).
fof(f1302_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | p(s(bool,X3))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f1175,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl38),
  inference(cnf_transformation,[],[f1175_D])).
fof(f1175_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f33316,plain,(
  ( ! [X17,X15,X18,X16] : (s('type.integer.int',X15) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X17),s(bool,X18)))) | p(s(bool,X18)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X17) | s('type.integer.int',X16) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl15),
  inference(subsumption_resolution,[],[f33031,f473])).
fof(f473,plain,(
  ( ! [X0] : (p(s(bool,X0)) | ~p(s(bool,'F_0'))) )),
  inference(cnf_transformation,[],[f271])).
fof(f271,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  inference(flattening,[],[f270])).
fof(f270,plain,(
  ! [X0] : (((~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (p(s(bool,X0)) | p(s(bool,'F_0')))))),
  inference(nnf_transformation,[],[f117])).
fof(f117,plain,(
  ! [X0] : ((p(s(bool,X0)) | p(s(bool,'F_0'))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X8] : ((p(s(bool,X8)) | p(s(bool,'F_0'))) <=> p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.OR_CLAUSES|split|3')).
fof(f33031,plain,(
  ( ! [X17,X15,X18,X16] : (p(s(bool,'F_0')) | s('type.integer.int',X15) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X16),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X17),s(bool,X18)))) | p(s(bool,X18)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X17) | s('type.integer.int',X16) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X15),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl15),
  inference(superposition,[],[f301,f30735])).
fof(f301,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | p(s(bool,X5)) | sP0(X3,X1,X4) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3)))) )),
  inference(cnf_transformation,[],[f196])).
fof(f196,plain,(
  ! [X0,X1,X2] : (! [X3] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ! [X4] : (sP0(X3,X1,X4) | ! [X5] : (((p(s(bool,X5)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & (~p(s(bool,X5)) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(flattening,[],[f195])).
fof(f195,plain,(
  ! [X0,X1,X2] : (! [X3] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ! [X4] : (sP0(X3,X1,X4) | ! [X5] : (((p(s(bool,X5)) | (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & (~p(s(bool,X5)) | (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1))))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(nnf_transformation,[],[f172])).
fof(f172,plain,(
  ! [X0,X1,X2] : (! [X3] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ! [X4] : (sP0(X3,X1,X4) | ! [X5] : ((p(s(bool,X5)) <~> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(definition_folding,[],[f144,f171])).
fof(f144,plain,(
  ! [X0,X1,X2] : (! [X3] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) | ! [X4] : ((p(s(bool,X4)) <~> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | ! [X5] : ((p(s(bool,X5)) <~> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5))))))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2] : (? [X3] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3))) & ? [X4] : ((p(s(bool,X4)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X5] : ((p(s(bool,X5)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5))))))) => s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))))),
  inference(rectify,[],[f51])).
fof(f51,axiom,(
  ! [X6,X7,X21] : (? [X22] : (s('type.integer.int',X6) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X21),s('type.integer.int',X7))),s('type.integer.int',X22))) & ? [X23] : ((p(s(bool,X23)) <=> (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X22),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) & ? [X24] : ((p(s(bool,X24)) <=> (p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X22)))) & p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X22),s('type.integer.int',X7)))))) & p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X23),s(bool,X24))))))) => s('type.integer.int',X21) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',X7))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_DIV_UNIQUE')).
fof(f33315,plain,(
  ( ! [X14,X12,X10,X13] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14))))) ) | $spl306),
  inference(cnf_transformation,[],[f33315_D])).
fof(f33315_D,plain,(
  ( ! [X14,X12,X10,X13] : (s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14))))) ) <=> ~$spl306),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl306])])).
fof(f4597,plain,(
  ( ! [X9] : (~p(s(bool,X9))) ) | $spl108),
  inference(cnf_transformation,[],[f4597_D])).
fof(f4597_D,plain,(
  ( ! [X9] : (~p(s(bool,X9))) ) <=> ~$spl108),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl108])])).
fof(f33314,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X11)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | sP0(X14,sK13,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl15),
  inference(duplicate_literal_removal,[],[f33313])).
fof(f33313,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X11)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK13,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl15),
  inference(forward_demodulation,[],[f33030,f337])).
fof(f337,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f73])).
fof(f73,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X11] : ! [X9,X10] : s(X11,X10) = s(X11,'const.bool.COND_3'(s(bool,'F_0'),s(X11,X9),s(X11,X10)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.COND_CLAUSES|split|1')).
fof(f33030,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK13,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl15),
  inference(superposition,[],[f302,f30735])).
fof(f302,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int',X1)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | ~p(s(bool,X5)) | sP0(X3,X1,X4) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3)))) )),
  inference(cnf_transformation,[],[f196])).
fof(f33299,plain,(
  ( ! [X8,X11,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11))))) ) | $spl304),
  inference(cnf_transformation,[],[f33299_D])).
fof(f33299_D,plain,(
  ( ! [X8,X11,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11))))) ) <=> ~$spl304),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl304])])).
fof(f33298,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X10)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl15),
  inference(duplicate_literal_removal,[],[f33297])).
fof(f33297,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X10)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl15),
  inference(forward_demodulation,[],[f33012,f337])).
fof(f33012,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl15),
  inference(backward_demodulation,[],[f30735,f535])).
fof(f535,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X9),s(bool,X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) )),
  inference(superposition,[],[f296,f302])).
fof(f296,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13)))),
  inference(cnf_transformation,[],[f191])).
fof(f191,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f143])).
fof(f143,plain,(
  ? [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.integer.int',X1) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X0))))),
  inference(ennf_transformation,[],[f63])).
fof(f63,plain,(
  ~! [X0,X1] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X0))))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ~! [X0,X1] : (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',X7))),s('type.integer.int',X6))))),
  file('thm.integer.INT_DIV_LMUL','thm.integer.INT_DIV_LMUL')).
fof(f712,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | ~p(s(bool,X3))) ) | $spl16),
  inference(cnf_transformation,[],[f712_D])).
fof(f712_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | ~p(s(bool,X3))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f713,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13)))) ) | $spl18),
  inference(cnf_transformation,[],[f713_D])).
fof(f713_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f32715,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X6)) ) | $spl12),
  inference(forward_demodulation,[],[f32714,f352])).
fof(f32714,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(subsumption_resolution,[],[f32713,f521])).
fof(f32713,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(subsumption_resolution,[],[f32443,f522])).
fof(f32443,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(superposition,[],[f302,f30618])).
fof(f32346,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl295),
  inference(cnf_transformation,[],[f32346_D])).
fof(f32346_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl295),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl295])])).
fof(f32372,plain,(
  ( ! [X14] : (sP4(X14,'F_0','const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl302),
  inference(cnf_transformation,[],[f32372_D])).
fof(f32372_D,plain,(
  ( ! [X14] : (sP4(X14,'F_0','const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl302),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl302])])).
fof(f32360,plain,(
  ( ! [X14] : (sP4(X14,'F_0','const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl4 | $spl23)),
  inference(resolution,[],[f31932,f1695])).
fof(f1695,plain,(
  ( ! [X24,X25] : (sP3(X24,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X25)) ) | $spl23),
  inference(resolution,[],[f716,f313])).
fof(f313,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f202])).
fof(f202,plain,(
  ! [X0,X1,X2] : ((~sP3(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP3(X0,X1,X2)))),
  inference(rectify,[],[f201])).
fof(f201,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP3(X2,X0,X1)))),
  inference(flattening,[],[f200])).
fof(f200,plain,(
  ! [X2,X0,X1] : ((~sP3(X2,X0,X1) | (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2)))) & ((~p(s(bool,X1)) & p(s(bool,X0)) & p(s(bool,X2))) | sP3(X2,X0,X1)))),
  inference(nnf_transformation,[],[f175])).
fof(f175,plain,(
  ! [X2,X0,X1] : (sP3(X2,X0,X1) <=> (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP3])])).
fof(f31932,plain,(
  ( ! [X4,X5] : (~sP3(X5,X4,'F_0') | sP4(X5,'F_0',X4) | s(bool,'T_0') != s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f31931,f512])).
fof(f31931,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | sP4(X5,'F_0',X4) | p(s(bool,'F_0')) | ~sP3(X5,X4,'F_0')) ) | $spl4),
  inference(subsumption_resolution,[],[f31924,f318])).
fof(f318,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f205])).
fof(f205,plain,(
  ! [X0,X1,X2] : ((~sP2(X0,X1,X2) | p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))) & ((~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP2(X0,X1,X2)))),
  inference(rectify,[],[f204])).
fof(f204,plain,(
  ! [X1,X0,X2] : ((~sP2(X1,X0,X2) | p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP2(X1,X0,X2)))),
  inference(flattening,[],[f203])).
fof(f203,plain,(
  ! [X1,X0,X2] : ((~sP2(X1,X0,X2) | (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1)))) & ((~p(s(bool,X2)) & p(s(bool,X0)) & p(s(bool,X1))) | sP2(X1,X0,X2)))),
  inference(nnf_transformation,[],[f174])).
fof(f174,plain,(
  ! [X1,X0,X2] : (sP2(X1,X0,X2) <=> (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP2])])).
fof(f31924,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | sP4(X5,'F_0',X4) | p(s(bool,'F_0')) | ~sP3(X5,X4,'F_0') | ~sP2('F_0',X4,X5)) ) | $spl4),
  inference(resolution,[],[f31916,f309])).
fof(f309,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | p(s(bool,X1)) | ~sP3(X0,X2,X1) | ~sP2(X1,X2,X0) | ~sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f199,plain,(
  ! [X0,X1,X2] : ((~sP4(X0,X1,X2) | (sP1(X2,X1,X0) & sP2(X1,X2,X0) & sP3(X0,X2,X1) & (p(s(bool,X2)) | ~p(s(bool,X1)) | ~p(s(bool,X0))))) & (~sP1(X2,X1,X0) | ~sP2(X1,X2,X0) | ~sP3(X0,X2,X1) | (~p(s(bool,X2)) & p(s(bool,X1)) & p(s(bool,X0))) | sP4(X0,X1,X2)))),
  inference(rectify,[],[f198])).
fof(f198,plain,(
  ! [X2,X1,X0] : ((~sP4(X2,X1,X0) | (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & (~sP1(X0,X1,X2) | ~sP2(X1,X0,X2) | ~sP3(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2))) | sP4(X2,X1,X0)))),
  inference(flattening,[],[f197])).
fof(f197,plain,(
  ! [X2,X1,X0] : ((~sP4(X2,X1,X0) | (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2))))) & ((~sP1(X0,X1,X2) | ~sP2(X1,X0,X2) | ~sP3(X2,X0,X1) | (~p(s(bool,X0)) & p(s(bool,X1)) & p(s(bool,X2)))) | sP4(X2,X1,X0)))),
  inference(nnf_transformation,[],[f176])).
fof(f176,plain,(
  ! [X2,X1,X0] : (sP4(X2,X1,X0) <=> (sP1(X0,X1,X2) & sP2(X1,X0,X2) & sP3(X2,X0,X1) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP4])])).
fof(f31916,plain,(
  ( ! [X4,X5] : (sP1(X4,'F_0',X5) | s(bool,'T_0') != s(bool,X4)) ) | $spl4),
  inference(subsumption_resolution,[],[f31896,f320])).
fof(f320,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f207])).
fof(f207,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(flattening,[],[f206])).
fof(f206,plain,(
  ! [X0,X1,X2] : ((~sP1(X0,X1,X2) | (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0)))) & ((~p(s(bool,X2)) & ~p(s(bool,X1)) & ~p(s(bool,X0))) | sP1(X0,X1,X2)))),
  inference(nnf_transformation,[],[f173])).
fof(f173,plain,(
  ! [X0,X1,X2] : (sP1(X0,X1,X2) <=> (p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP1])])).
fof(f31896,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | p(s(bool,X5)) | sP1(X4,'F_0',X5)) ) | $spl4),
  inference(resolution,[],[f30460,f304])).
fof(f304,plain,(
  ( ! [X2,X0,X1] : (sP1(X2,X1,X0) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f199])).
fof(f30460,plain,(
  ( ! [X6,X5] : (sP4(X6,'F_0',X5) | s(bool,'T_0') != s(bool,X5) | p(s(bool,X6))) ) | $spl4),
  inference(superposition,[],[f10268,f323])).
fof(f323,plain,(
  ( ! [X2,X0,X1] : (sP4(X2,X1,X0) | s(bool,X0) = s(bool,X1) | p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f208])).
fof(f208,plain,(
  ! [X0,X1,X2] : ((((p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (~p(s(bool,X2)) | s(bool,X0) != s(bool,X1))) | sP4(X2,X1,X0)) & (~sP4(X2,X1,X0) | ((~p(s(bool,X2)) | s(bool,X0) = s(bool,X1)) & (s(bool,X0) != s(bool,X1) | p(s(bool,X2))))))),
  inference(nnf_transformation,[],[f177])).
fof(f177,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> sP4(X2,X1,X0))),
  inference(definition_folding,[],[f67,f176,f175,f174,f173])).
fof(f67,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(flattening,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2] : ((p(s(bool,X2)) <=> s(bool,X0) = s(bool,X1)) <=> ((p(s(bool,X2)) | p(s(bool,X1)) | p(s(bool,X0))) & (p(s(bool,X2)) | ~p(s(bool,X0)) | ~p(s(bool,X1))) & (p(s(bool,X1)) | ~p(s(bool,X0)) | ~p(s(bool,X2))) & (p(s(bool,X0)) | ~p(s(bool,X1)) | ~p(s(bool,X2)))))),
  inference(rectify,[],[f57])).
fof(f57,axiom,(
  ! [X22,X21,X25] : ((p(s(bool,X25)) <=> s(bool,X21) = s(bool,X22)) <=> ((p(s(bool,X25)) | p(s(bool,X21)) | p(s(bool,X22))) & (p(s(bool,X25)) | ~p(s(bool,X22)) | ~p(s(bool,X21))) & (p(s(bool,X21)) | ~p(s(bool,X22)) | ~p(s(bool,X25))) & (p(s(bool,X22)) | ~p(s(bool,X21)) | ~p(s(bool,X25)))))),
  file('thm.integer.INT_DIV_LMUL','thm.sat.sat_2|49|_prove_ltb')).
fof(f10268,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl4),
  inference(backward_demodulation,[],[f6067,f6065])).
fof(f6065,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl4),
  inference(resolution,[],[f546,f341])).
fof(f341,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'F_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f211])).
fof(f6067,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl4),
  inference(resolution,[],[f546,f346])).
fof(f18426,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl237),
  inference(cnf_transformation,[],[f18426_D])).
fof(f18426_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl237),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl237])])).
fof(f32371,plain,(
  ( ! [X13] : (sP4(X13,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl300),
  inference(cnf_transformation,[],[f32371_D])).
fof(f32371_D,plain,(
  ( ! [X13] : (sP4(X13,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl300),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl300])])).
fof(f32359,plain,(
  ( ! [X13] : (sP4(X13,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl4 | $spl211)),
  inference(resolution,[],[f31932,f9992])).
fof(f9992,plain,(
  ( ! [X24,X25] : (sP3(X24,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X25)) ) | $spl211),
  inference(resolution,[],[f9789,f313])).
fof(f18239,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl233),
  inference(cnf_transformation,[],[f18239_D])).
fof(f18239_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) <=> ~$spl233),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl233])])).
fof(f32370,plain,(
  ( ! [X11] : (sP4(X11,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl298),
  inference(cnf_transformation,[],[f32370_D])).
fof(f32370_D,plain,(
  ( ! [X11] : (sP4(X11,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) <=> ~$spl298),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl298])])).
fof(f32357,plain,(
  ( ! [X11] : (sP4(X11,'F_0','const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | ($spl4 | $spl177)),
  inference(resolution,[],[f31932,f9481])).
fof(f9481,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),X28)) ) | $spl177),
  inference(resolution,[],[f6156,f313])).
fof(f32344,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl293),
  inference(cnf_transformation,[],[f32344_D])).
fof(f32344_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl293),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl293])])).
fof(f32369,plain,(
  ( ! [X10] : (sP4(X10,'F_0','const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl296),
  inference(cnf_transformation,[],[f32369_D])).
fof(f32369_D,plain,(
  ( ! [X10] : (sP4(X10,'F_0','const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) <=> ~$spl296),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl296])])).
fof(f32356,plain,(
  ( ! [X10] : (sP4(X10,'F_0','const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl4 | $spl15)),
  inference(resolution,[],[f31932,f1199])).
fof(f1199,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X28)) ) | $spl15),
  inference(resolution,[],[f598,f313])).
fof(f32334,plain,(
  ( ! [X14] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X14))) ) | ($spl4 | $spl23)),
  inference(resolution,[],[f32260,f1695])).
fof(f32260,plain,(
  ( ! [X12,X13] : (~sP3(X12,X13,'F_0') | s(bool,'T_0') != s(bool,X13) | ~p(s(bool,X12))) ) | $spl4),
  inference(subsumption_resolution,[],[f32259,f320])).
fof(f32259,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13) | ~sP3(X12,X13,'F_0') | ~sP1(X13,'F_0',X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f32258,f458])).
fof(f32258,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13) | p(s(bool,'F_0')) | ~sP3(X12,X13,'F_0') | ~sP1(X13,'F_0',X12)) ) | $spl4),
  inference(subsumption_resolution,[],[f32239,f318])).
fof(f32239,plain,(
  ( ! [X12,X13] : (~p(s(bool,X12)) | s(bool,'T_0') != s(bool,X13) | p(s(bool,'F_0')) | ~sP3(X12,X13,'F_0') | ~sP2('F_0',X13,X12) | ~sP1(X13,'F_0',X12)) ) | $spl4),
  inference(resolution,[],[f30462,f309])).
fof(f30462,plain,(
  ( ! [X10,X9] : (~sP4(X10,'F_0',X9) | ~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X9)) ) | $spl4),
  inference(superposition,[],[f10268,f325])).
fof(f325,plain,(
  ( ! [X2,X0,X1] : (s(bool,X0) = s(bool,X1) | ~p(s(bool,X2)) | ~sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f208])).
fof(f32333,plain,(
  ( ! [X13] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X13))) ) | ($spl4 | $spl211)),
  inference(resolution,[],[f32260,f9992])).
fof(f32331,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X11))) ) | ($spl4 | $spl177)),
  inference(resolution,[],[f32260,f9481])).
fof(f32330,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X10))) ) | ($spl4 | $spl15)),
  inference(resolution,[],[f32260,f1199])).
fof(f31889,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK14) != s('type.integer.int',X7) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8)))) ) | $spl286),
  inference(cnf_transformation,[],[f31889_D])).
fof(f31889_D,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK14) != s('type.integer.int',X7) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8)))) ) <=> ~$spl286),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl286])])).
fof(f31888,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | s('type.integer.int',sK14) != s('type.integer.int',X7) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8))))) ) | ($spl134 | $spl136 | $spl138)),
  inference(duplicate_literal_removal,[],[f31881])).
fof(f31881,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | s('type.integer.int',sK14) != s('type.integer.int',X7) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,X6))) ) | ($spl134 | $spl136 | $spl138)),
  inference(resolution,[],[f31797,f299])).
fof(f299,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int',X0)))) | ~p(s(bool,X2)) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f194])).
fof(f31797,plain,(
  ( ! [X8,X11,X9] : (sP0(X11,sK13,X9) | ~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl134 | $spl136 | $spl138)),
  inference(subsumption_resolution,[],[f31796,f5421])).
fof(f31796,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl136 | $spl138)),
  inference(subsumption_resolution,[],[f5425,f5423])).
fof(f31722,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X4))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | $spl284),
  inference(cnf_transformation,[],[f31722_D])).
fof(f31722_D,plain,(
  ( ! [X4] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X4))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) <=> ~$spl284),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl284])])).
fof(f31721,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X4))) | ~p(s(bool,X5)) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X4))))) ) | ($spl144 | $spl148 | $spl150)),
  inference(duplicate_literal_removal,[],[f31714])).
fof(f31714,plain,(
  ( ! [X4,X5] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X4))) | ~p(s(bool,X5)) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X4)))) | ~p(s(bool,X5))) ) | ($spl144 | $spl148 | $spl150)),
  inference(resolution,[],[f31687,f299])).
fof(f31687,plain,(
  ( ! [X2,X0] : (sP0(X2,sK13,X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,X0))) ) | ($spl144 | $spl148 | $spl150)),
  inference(subsumption_resolution,[],[f31686,f5435])).
fof(f31686,plain,(
  ( ! [X2,X0] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | sP0(X2,sK13,X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) ) | ($spl144 | $spl150)),
  inference(subsumption_resolution,[],[f5437,f5431])).
fof(f1317,plain,(
  ( ! [X8,X11] : (p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) | $spl44),
  inference(cnf_transformation,[],[f1317_D])).
fof(f1317_D,plain,(
  ( ! [X8,X11] : (p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) <=> ~$spl44),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl44])])).
fof(f30844,plain,(
  ( ! [X12,X10,X13,X11] : (s('type.integer.int',X12) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))) | p(s(bool,X10)) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X13)))) | ~p(s(bool,X13))) ) | ($spl12 | $spl15)),
  inference(forward_demodulation,[],[f30843,f352])).
fof(f30843,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X13)))) | ~p(s(bool,X13)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl15)),
  inference(subsumption_resolution,[],[f30842,f521])).
fof(f30842,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X13)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl15)),
  inference(subsumption_resolution,[],[f30841,f597])).
fof(f30841,plain,(
  ( ! [X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X13)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X13)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl15),
  inference(resolution,[],[f1190,f302])).
fof(f1173,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | $spl35),
  inference(cnf_transformation,[],[f1173_D])).
fof(f1173_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f1810,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',X13))),s('type.integer.int',sK13))) | ~p(s(bool,X14)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X14)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X13)))) ) | $spl56),
  inference(cnf_transformation,[],[f1810_D])).
fof(f1810_D,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',X13))),s('type.integer.int',sK13))) | ~p(s(bool,X14)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X14)))) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X13)))) ) <=> ~$spl56),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl56])])).
fof(f30836,plain,(
  ( ! [X14,X12,X15,X13,X11] : (p(s(bool,X11)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',X14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X11),s(bool,X15)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X15)) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',X14))),s('type.integer.int',sK13)))) ) | $spl23),
  inference(resolution,[],[f1686,f302])).
fof(f1686,plain,(
  ( ! [X0,X1] : (~sP0(sK13,X1,X0) | p(s(bool,X0))) ) | $spl23),
  inference(resolution,[],[f716,f298])).
fof(f298,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X2)) | ~sP0(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f194])).
fof(f1172,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | $spl34),
  inference(cnf_transformation,[],[f1172_D])).
fof(f1172_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f1809,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3))),s('type.integer.int',sK13))) | p(s(bool,X4)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X4)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) | $spl54),
  inference(cnf_transformation,[],[f1809_D])).
fof(f1809_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3))),s('type.integer.int',sK13))) | p(s(bool,X4)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X4)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X3)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f30834,plain,(
  ( ! [X4,X2,X5,X3,X1] : (p(s(bool,X1)) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',X4))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X5)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X5)) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X4))),s('type.integer.int',sK13)))) ) | $spl23),
  inference(resolution,[],[f1686,f300])).
fof(f300,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X5)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X5)) | sP0(X3,X1,X4) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X3)))) )),
  inference(cnf_transformation,[],[f196])).
fof(f30712,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl15),
  inference(resolution,[],[f598,f301])).
fof(f714,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | ~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl20),
  inference(cnf_transformation,[],[f714_D])).
fof(f714_D,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | ~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f716,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl23),
  inference(cnf_transformation,[],[f716_D])).
fof(f716_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f30596,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl12),
  inference(resolution,[],[f597,f299])).
fof(f30706,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl12),
  inference(forward_demodulation,[],[f30705,f352])).
fof(f30705,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(subsumption_resolution,[],[f30595,f521])).
fof(f30595,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(resolution,[],[f597,f302])).
fof(f30454,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,sK13,X2) | p(s(bool,X3))) ) | $spl280),
  inference(cnf_transformation,[],[f30454_D])).
fof(f30454_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,sK13,X2) | p(s(bool,X3))) ) <=> ~$spl280),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl280])])).
fof(f14418,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl222),
  inference(cnf_transformation,[],[f14418_D])).
fof(f14418_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) <=> ~$spl222),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl222])])).
fof(f14305,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0(sK13,sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(resolution,[],[f14304,f301])).
fof(f30455,plain,(
  ( ! [X6,X9] : (p(s(bool,X6)) | p(s(bool,X9)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X9))))) ) | $spl282),
  inference(cnf_transformation,[],[f30455_D])).
fof(f30455_D,plain,(
  ( ! [X6,X9] : (p(s(bool,X6)) | p(s(bool,X9)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X9))))) ) <=> ~$spl282),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl282])])).
fof(f14428,plain,(
  ( ! [X4,X2,X5,X3] : (p(s(bool,X2)) | s('type.integer.int',X3) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X4),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X5)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X5)) | s('type.integer.int',X4) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X3),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(resolution,[],[f14306,f300])).
fof(f14306,plain,(
  ( ! [X4] : (~sP0(sK13,sK13,X4) | p(s(bool,X4))) ) | $spl221),
  inference(resolution,[],[f14304,f297])).
fof(f14433,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,X6)) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X9)))) | p(s(bool,X9)) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(subsumption_resolution,[],[f14429,f14304])).
fof(f14429,plain,(
  ( ! [X6,X8,X7,X9] : (p(s(bool,X6)) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X9)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)))) | p(s(bool,X9)) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(resolution,[],[f14306,f301])).
fof(f14809,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0(sK13,sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(subsumption_resolution,[],[f14544,f473])).
fof(f14544,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0(sK13,sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl221),
  inference(superposition,[],[f301,f14328])).
fof(f14328,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | $spl221),
  inference(resolution,[],[f14304,f342])).
fof(f597,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | $spl12),
  inference(cnf_transformation,[],[f597_D])).
fof(f597_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f30452,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl278),
  inference(cnf_transformation,[],[f30452_D])).
fof(f30452_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) <=> ~$spl278),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl278])])).
fof(f30453,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | $spl144),
  inference(forward_demodulation,[],[f30106,f351])).
fof(f30106,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X24) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | $spl144),
  inference(superposition,[],[f5431,f350])).
fof(f30126,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))))) ) | $spl144),
  inference(trivial_inequality_removal,[],[f30121])).
fof(f30121,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,X0)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))))) ) | $spl144),
  inference(superposition,[],[f5431,f352])).
fof(f596,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | $spl13),
  inference(cnf_transformation,[],[f596_D])).
fof(f596_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f4373,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) )),
  inference(subsumption_resolution,[],[f4360,f521])).
fof(f4360,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) )),
  inference(trivial_inequality_removal,[],[f4355])).
fof(f4355,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) )),
  inference(superposition,[],[f1446,f352])).
fof(f1446,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X1)) | sP0(X2,sK13,X0)) )),
  inference(forward_demodulation,[],[f1425,f303])).
fof(f1425,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X1)) | sP0(X2,sK13,X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',X2)))) )),
  inference(equality_resolution,[],[f535])).
fof(f30451,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) )),
  inference(forward_demodulation,[],[f4365,f351])).
fof(f4365,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) )),
  inference(subsumption_resolution,[],[f4340,f521])).
fof(f4340,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) )),
  inference(superposition,[],[f1446,f350])).
fof(f839,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | p(s(bool,X3))) ) | $spl24),
  inference(cnf_transformation,[],[f839_D])).
fof(f839_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | p(s(bool,X3))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2497,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) )),
  inference(trivial_inequality_removal,[],[f2492])).
fof(f2492,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) )),
  inference(superposition,[],[f889,f352])).
fof(f889,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) )),
  inference(forward_demodulation,[],[f867,f303])).
fof(f867,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0(X2,sK13,X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',X2)))) )),
  inference(equality_resolution,[],[f534])).
fof(f534,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X5),s(bool,X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) )),
  inference(superposition,[],[f296,f301])).
fof(f30450,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) )),
  inference(forward_demodulation,[],[f2477,f351])).
fof(f2477,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) )),
  inference(superposition,[],[f889,f350])).
fof(f30449,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11))) ) | ($spl14 | $spl40)),
  inference(duplicate_literal_removal,[],[f30448])).
fof(f30448,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X8)) | ~p(s(bool,X11))) ) | ($spl14 | $spl40)),
  inference(forward_demodulation,[],[f30447,f338])).
fof(f338,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X11] : ! [X9,X10] : s(X11,X9) = s(X11,'const.bool.COND_3'(s(bool,'T_0'),s(X11,X9),s(X11,X10)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.COND_CLAUSES|split|0')).
fof(f30447,plain,(
  ( ! [X8,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X8)) | ~p(s(bool,X11))) ) | ($spl14 | $spl40)),
  inference(forward_demodulation,[],[f1188,f1595])).
fof(f1595,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl14),
  inference(resolution,[],[f599,f346])).
fof(f1174,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) | $spl36),
  inference(cnf_transformation,[],[f1174_D])).
fof(f1174_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f30446,plain,(
  ( ! [X21,X19,X22,X20] : (s('type.integer.int',X19) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X21),s(bool,X22)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X22)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X21) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl14),
  inference(subsumption_resolution,[],[f5160,f522])).
fof(f5160,plain,(
  ( ! [X21,X19,X22,X20] : (~p(s(bool,'T_0')) | s('type.integer.int',X19) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X20),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X21),s(bool,X22)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X22)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X21) | s('type.integer.int',X20) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X19),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl14),
  inference(superposition,[],[f302,f1595])).
fof(f895,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl30),
  inference(cnf_transformation,[],[f895_D])).
fof(f895_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f30445,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f30444,f351])).
fof(f30444,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(subsumption_resolution,[],[f30443,f1176])).
fof(f1176,plain,(
  ( ! [X4] : (~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X4) | ~p(s(bool,X4))) ) | $spl14),
  inference(subsumption_resolution,[],[f1063,f521])).
fof(f1063,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X4)) ) | $spl14),
  inference(resolution,[],[f599,f299])).
fof(f30443,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f30442,f338])).
fof(f30442,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f2477,f1595])).
fof(f30441,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X1))) ) | $spl14),
  inference(subsumption_resolution,[],[f30440,f1176])).
fof(f30440,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f30439,f338])).
fof(f30439,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f2497,f1595])).
fof(f30368,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl275),
  inference(cnf_transformation,[],[f30368_D])).
fof(f30368_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl275),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl275])])).
fof(f30438,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X20))) ) | $spl102),
  inference(subsumption_resolution,[],[f4271,f342])).
fof(f4271,plain,(
  ( ! [X20] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') != s(bool,X20) | p(s(bool,X20))) ) | $spl102),
  inference(superposition,[],[f4183,f342])).
fof(f30437,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X21))) ) | $spl102),
  inference(subsumption_resolution,[],[f4272,f342])).
fof(f4272,plain,(
  ( ! [X21] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') != s(bool,X21) | p(s(bool,X21))) ) | $spl102),
  inference(superposition,[],[f4183,f344])).
fof(f344,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f212])).
fof(f212,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8] : (s(bool,'F_0') = s(bool,X8) <=> ~p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.EQ_CLAUSES|split|2')).
fof(f29216,plain,(
  ( ! [X20] : (s(bool,'F_0') != s(bool,X20)) ) | $spl248),
  inference(cnf_transformation,[],[f29216_D])).
fof(f29216_D,plain,(
  ( ! [X20] : (s(bool,'F_0') != s(bool,X20)) ) <=> ~$spl248),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl248])])).
fof(f30436,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') != s(bool,X25)) ) | $spl102),
  inference(subsumption_resolution,[],[f4276,f4183])).
fof(f4276,plain,(
  ( ! [X25] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') != s(bool,X25) | s(bool,'T_0') = s(bool,X25)) ) | $spl102),
  inference(superposition,[],[f4183,f349])).
fof(f349,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.integer.INT_DIV_LMUL',aHL_BOOL_CASES)).
fof(f30435,plain,(
  ( ! [X26] : (s(bool,'F_0') = s(bool,X26)) ) | $spl276),
  inference(cnf_transformation,[],[f30435_D])).
fof(f30435_D,plain,(
  ( ! [X26] : (s(bool,'F_0') = s(bool,X26)) ) <=> ~$spl276),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl276])])).
fof(f4298,plain,(
  ( ! [X26] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X26)) ) | $spl102),
  inference(trivial_inequality_removal,[],[f4277])).
fof(f4277,plain,(
  ( ! [X26] : (s(bool,X26) != s(bool,X26) | s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X26)) ) | $spl102),
  inference(superposition,[],[f4183,f349])).
fof(f4297,plain,(
  ( ! [X27] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X27))) ) | $spl102),
  inference(trivial_inequality_removal,[],[f4278])).
fof(f4278,plain,(
  ( ! [X27] : (s(bool,X27) != s(bool,X27) | s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X27))) ) | $spl102),
  inference(superposition,[],[f4183,f348])).
fof(f348,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f214])).
fof(f214,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.EQ_CLAUSES|split|0')).
fof(f4296,plain,(
  ( ! [X28] : (s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X28))) ) | $spl102),
  inference(trivial_inequality_removal,[],[f4279])).
fof(f4279,plain,(
  ( ! [X28] : (s(bool,X28) != s(bool,X28) | s(bool,'T_0') != s(bool,'F_0') | ~p(s(bool,X28))) ) | $spl102),
  inference(superposition,[],[f4183,f346])).
fof(f30434,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f30433,f351])).
fof(f30433,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(subsumption_resolution,[],[f30432,f1176])).
fof(f30432,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,X28)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f30431,f338])).
fof(f30431,plain,(
  ( ! [X28,X29,X27] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X28),s(bool,X29)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl14),
  inference(forward_demodulation,[],[f4365,f1595])).
fof(f30430,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X1))) ) | $spl14),
  inference(subsumption_resolution,[],[f30429,f1176])).
fof(f30429,plain,(
  ( ! [X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f30428,f338])).
fof(f30428,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X1)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f4373,f1595])).
fof(f30366,plain,(
  ( ! [X37,X36] : (s(bool,X36) != s(bool,X37) | ~p(s(bool,X37))) ) | $spl272),
  inference(cnf_transformation,[],[f30366_D])).
fof(f30366_D,plain,(
  ( ! [X37,X36] : (s(bool,X36) != s(bool,X37) | ~p(s(bool,X37))) ) <=> ~$spl272),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl272])])).
fof(f30370,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X32) != s(bool,X33) | ~p(s(bool,X32))) ) | ($spl0 | $spl102)),
  inference(subsumption_resolution,[],[f17727,f15261])).
fof(f15261,plain,(
  ( ! [X10,X11] : (s(bool,X10) != s(bool,X11) | ~p(s(bool,X10)) | p(s(bool,X11))) ) | $spl0),
  inference(subsumption_resolution,[],[f15260,f522])).
fof(f15260,plain,(
  ( ! [X10,X11] : (~p(s(bool,'T_0')) | s(bool,X10) != s(bool,X11) | ~p(s(bool,X10)) | p(s(bool,X11))) ) | $spl0),
  inference(forward_demodulation,[],[f15251,f9696])).
fof(f9696,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl0),
  inference(resolution,[],[f542,f346])).
fof(f15251,plain,(
  ( ! [X10,X11] : (s(bool,X10) != s(bool,X11) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X10)) | p(s(bool,X11))) ) | $spl0),
  inference(resolution,[],[f9689,f307])).
fof(f307,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | ~p(s(bool,X1)) | p(s(bool,X2)) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f199])).
fof(f9689,plain,(
  ( ! [X37,X36] : (sP4('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),X36,X37) | s(bool,X36) != s(bool,X37)) ) | $spl0),
  inference(resolution,[],[f542,f324])).
fof(f324,plain,(
  ( ! [X2,X0,X1] : (sP4(X2,X1,X0) | s(bool,X0) != s(bool,X1) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f208])).
fof(f17727,plain,(
  ( ! [X33,X32] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X32) != s(bool,X33) | ~p(s(bool,X33)) | ~p(s(bool,X32))) ) | $spl102),
  inference(superposition,[],[f4250,f346])).
fof(f4250,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') != s(bool,X3) | s(bool,X2) != s(bool,X3) | ~p(s(bool,X2))) ) | $spl102),
  inference(superposition,[],[f4183,f348])).
fof(f30369,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X34) != s(bool,X35) | ~p(s(bool,X34))) ) | ($spl0 | $spl102)),
  inference(subsumption_resolution,[],[f17728,f15261])).
fof(f17728,plain,(
  ( ! [X35,X34] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X34) != s(bool,X35) | ~p(s(bool,X35)) | ~p(s(bool,X34))) ) | $spl102),
  inference(superposition,[],[f4250,f348])).
fof(f30365,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X36) != s(bool,X37) | ~p(s(bool,X37))) ) | $spl102),
  inference(subsumption_resolution,[],[f17729,f4250])).
fof(f17729,plain,(
  ( ! [X37,X36] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,X36) != s(bool,X37) | ~p(s(bool,X37)) | s(bool,'F_0') = s(bool,X36)) ) | $spl102),
  inference(superposition,[],[f4250,f349])).
fof(f30360,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl14 | $spl144)),
  inference(forward_demodulation,[],[f30130,f351])).
fof(f30130,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30106,f1176])).
fof(f30137,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))))) ) | ($spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30126,f1176])).
fof(f30357,plain,(
  $false | ($spl0 | $spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30356,f30139])).
fof(f30139,plain,(
  ( ! [X0] : (~p(s(bool,X0))) ) | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30138,f508])).
fof(f30138,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | ~p(s(bool,X0))) ) | ($spl13 | $spl14 | $spl144)),
  inference(forward_demodulation,[],[f30137,f1471])).
fof(f1471,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl13),
  inference(resolution,[],[f596,f342])).
fof(f30356,plain,(
  ( ! [X270] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X270),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) ) | ($spl0 | $spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30260,f30139])).
fof(f30260,plain,(
  ( ! [X270] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X270),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X270))))) ) | ($spl0 | $spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f9791])).
fof(f9791,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl0),
  inference(forward_demodulation,[],[f9765,f351])).
fof(f9765,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl0),
  inference(superposition,[],[f542,f350])).
fof(f30349,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30244,f30139])).
fof(f30244,plain,(
  p(s(bool,'F_0')) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f515])).
fof(f515,plain,(
  p(s(bool,'F_0')) | p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f291])).
fof(f30348,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30243,f30139])).
fof(f30243,plain,(
  p(s(bool,'F_0')) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f513])).
fof(f513,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f290])).
fof(f30347,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30237,f30139])).
fof(f30237,plain,(
  ( ! [X240] : (p(s(bool,X240))) ) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f469])).
fof(f469,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f269])).
fof(f269,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,X0))))),
  inference(flattening,[],[f268])).
fof(f268,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f162])).
fof(f162,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f116])).
fof(f116,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X8] : ((p(s(bool,X8)) => p(s(bool,X8))) <=> p(s(bool,'T_0')))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_CLAUSES|split|3')).
fof(f30346,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30236,f30139])).
fof(f30236,plain,(
  ( ! [X239] : (p(s(bool,X239))) ) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f466])).
fof(f466,plain,(
  ( ! [X0] : (p(s(bool,X0)) | p(s(bool,'T_0'))) )),
  inference(cnf_transformation,[],[f267])).
fof(f267,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | ~p(s(bool,'T_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f266])).
fof(f266,plain,(
  ! [X0] : (((p(s(bool,'T_0')) & ~p(s(bool,X0))) | p(s(bool,X0))) & (~p(s(bool,X0)) | (~p(s(bool,'T_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f161])).
fof(f161,plain,(
  ! [X0] : ((~p(s(bool,'T_0')) | p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(ennf_transformation,[],[f115])).
fof(f115,plain,(
  ! [X0] : ((p(s(bool,'T_0')) => p(s(bool,X0))) <=> p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X8] : ((p(s(bool,'T_0')) => p(s(bool,X8))) <=> p(s(bool,X8)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_CLAUSES|split|0')).
fof(f30345,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30234,f30139])).
fof(f30234,plain,(
  p(s(bool,'F_0')) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f463])).
fof(f463,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f265])).
fof(f265,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f264])).
fof(f264,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f160])).
fof(f160,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f114])).
fof(f114,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X8] : ((p(s(bool,'F_0')) => p(s(bool,X8))) <=> p(s(bool,'T_0')))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_CLAUSES|split|2')).
fof(f30344,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30233,f30139])).
fof(f30233,plain,(
  ( ! [X237] : (p(s(bool,X237))) ) | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f460])).
fof(f460,plain,(
  ( ! [X0] : (p(s(bool,'T_0')) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f263])).
fof(f263,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,X0)) | p(s(bool,'T_0'))))),
  inference(flattening,[],[f262])).
fof(f262,plain,(
  ! [X0] : (((p(s(bool,X0)) & ~p(s(bool,'T_0'))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,X0)) | p(s(bool,'T_0')))))),
  inference(nnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0] : ((~p(s(bool,X0)) | p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0] : ((p(s(bool,X0)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X8] : ((p(s(bool,X8)) => p(s(bool,'T_0'))) <=> p(s(bool,'T_0')))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_CLAUSES|split|1')).
fof(f30245,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f519])).
fof(f519,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.TRUTH')).
fof(f30246,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f520])).
fof(f520,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.integer.INT_DIV_LMUL',aHL_TRUTH)).
fof(f30247,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f522])).
fof(f30256,plain,(
  $false | ($spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f521])).
fof(f30263,plain,(
  $false | ($spl4 | $spl13 | $spl14 | $spl144)),
  inference(resolution,[],[f30139,f29534])).
fof(f29534,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ($spl4 | $spl13)),
  inference(resolution,[],[f6122,f1565])).
fof(f1565,plain,(
  ( ! [X154] : (~sP12('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X154) | p(s(bool,X154))) ) | $spl13),
  inference(subsumption_resolution,[],[f1529,f473])).
fof(f1529,plain,(
  ( ! [X154] : (p(s(bool,'F_0')) | p(s(bool,X154)) | ~sP12('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X154)) ) | $spl13),
  inference(resolution,[],[f596,f440])).
fof(f440,plain,(
  ( ! [X0,X1] : (p(s(bool,'F_0')) | p(s(bool,X0)) | p(s(bool,X1)) | ~sP12(X0,X1)) )),
  inference(cnf_transformation,[],[f253])).
fof(f253,plain,(
  ! [X0,X1] : ((~sP12(X0,X1) | p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP12(X0,X1)))),
  inference(flattening,[],[f252])).
fof(f252,plain,(
  ! [X0,X1] : ((~sP12(X0,X1) | (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0')))) & ((~p(s(bool,X1)) & ~p(s(bool,X0)) & ~p(s(bool,'F_0'))) | sP12(X0,X1)))),
  inference(nnf_transformation,[],[f189])).
fof(f189,plain,(
  ! [X0,X1] : (sP12(X0,X1) <=> (p(s(bool,X1)) | p(s(bool,X0)) | p(s(bool,'F_0'))))),
  introduced(predicate_definition_introduction,[new_symbols(naming,[sP12])])).
fof(f6122,plain,(
  ( ! [X146] : (sP12(X146,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(resolution,[],[f546,f441])).
fof(f441,plain,(
  ( ! [X0,X1] : (sP12(X0,X1) | ~p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f253])).
fof(f30133,plain,(
  ( ! [X24,X23] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl13 | $spl14 | $spl144)),
  inference(forward_demodulation,[],[f30132,f351])).
fof(f30132,plain,(
  ( ! [X24,X23] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl13 | $spl14 | $spl144)),
  inference(subsumption_resolution,[],[f30131,f473])).
fof(f30131,plain,(
  ( ! [X24,X23] : (p(s(bool,'F_0')) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X23))) | ~p(s(bool,X24)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X23)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X23))))) ) | ($spl13 | $spl14 | $spl144)),
  inference(forward_demodulation,[],[f30130,f1471])).
fof(f8820,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl201),
  inference(cnf_transformation,[],[f8820_D])).
fof(f8820_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl201),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl201])])).
fof(f29870,plain,(
  ( ! [X12] : (p(s(bool,X12)) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl4 | $spl13)),
  inference(resolution,[],[f6059,f4429])).
fof(f4429,plain,(
  ( ! [X4,X5] : (~sP1(X5,'F_0',X4) | p(s(bool,X4)) | s(bool,'F_0') != s(bool,X5)) ) | $spl13),
  inference(subsumption_resolution,[],[f4423,f314])).
fof(f314,plain,(
  ( ! [X2,X0,X1] : (sP3(X0,X1,X2) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f202])).
fof(f4423,plain,(
  ( ! [X4,X5] : (~sP3(X4,X5,'F_0') | ~sP1(X5,'F_0',X4) | p(s(bool,X4)) | s(bool,'F_0') != s(bool,X5)) ) | $spl13),
  inference(resolution,[],[f4394,f326])).
fof(f326,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,X2)) | s(bool,X0) != s(bool,X1) | ~sP4(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f208])).
fof(f4394,plain,(
  ( ! [X4,X5] : (sP4(X4,'F_0',X5) | ~sP3(X4,X5,'F_0') | ~sP1(X5,'F_0',X4)) ) | $spl13),
  inference(subsumption_resolution,[],[f4392,f512])).
fof(f4392,plain,(
  ( ! [X4,X5] : (sP4(X4,'F_0',X5) | p(s(bool,'F_0')) | ~sP3(X4,X5,'F_0') | ~sP1(X5,'F_0',X4)) ) | $spl13),
  inference(resolution,[],[f4389,f309])).
fof(f4389,plain,(
  ( ! [X4,X5] : (sP2('F_0',X4,X5)) ) | $spl13),
  inference(subsumption_resolution,[],[f4379,f316])).
fof(f316,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | ~p(s(bool,X2))) )),
  inference(cnf_transformation,[],[f205])).
fof(f4379,plain,(
  ( ! [X4,X5] : (sP2('F_0',X4,X5) | p(s(bool,X5))) ) | $spl13),
  inference(resolution,[],[f4334,f314])).
fof(f4334,plain,(
  ( ! [X6,X7] : (~sP3(X7,X6,'F_0') | sP2('F_0',X6,X7)) ) | $spl13),
  inference(subsumption_resolution,[],[f4330,f317])).
fof(f317,plain,(
  ( ! [X2,X0,X1] : (sP2(X0,X1,X2) | p(s(bool,X1))) )),
  inference(cnf_transformation,[],[f205])).
fof(f4330,plain,(
  ( ! [X6,X7] : (~p(s(bool,X6)) | ~sP3(X7,X6,'F_0') | sP2('F_0',X6,X7)) ) | $spl13),
  inference(resolution,[],[f4324,f305])).
fof(f305,plain,(
  ( ! [X2,X0,X1] : (sP2(X1,X2,X0) | ~sP4(X0,X1,X2)) )),
  inference(cnf_transformation,[],[f199])).
fof(f4324,plain,(
  ( ! [X2,X3] : (sP4(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP3(X3,X2,'F_0')) ) | $spl13),
  inference(subsumption_resolution,[],[f4323,f346])).
fof(f4323,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP4(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP3(X3,X2,'F_0')) ) | $spl13),
  inference(subsumption_resolution,[],[f4320,f4310])).
fof(f4310,plain,(
  ( ! [X4,X5] : (sP1(X4,'F_0',X5) | s(bool,'T_0') != s(bool,X4)) ) | $spl13),
  inference(subsumption_resolution,[],[f4305,f320])).
fof(f4305,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') != s(bool,X4) | p(s(bool,X5)) | sP1(X4,'F_0',X5)) ) | $spl13),
  inference(resolution,[],[f4161,f304])).
fof(f4161,plain,(
  ( ! [X6,X5] : (sP4(X6,'F_0',X5) | s(bool,'T_0') != s(bool,X5) | p(s(bool,X6))) ) | $spl13),
  inference(superposition,[],[f4077,f323])).
fof(f4077,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl13),
  inference(superposition,[],[f1473,f1471])).
fof(f1473,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl13),
  inference(resolution,[],[f596,f345])).
fof(f345,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f213])).
fof(f4320,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | sP4(X3,'F_0',X2) | ~p(s(bool,X2)) | ~sP3(X3,X2,'F_0') | ~sP1(X2,'F_0',X3)) ) | $spl13),
  inference(resolution,[],[f4311,f308])).
fof(f308,plain,(
  ( ! [X2,X0,X1] : (sP4(X0,X1,X2) | ~p(s(bool,X2)) | ~sP3(X0,X2,X1) | ~sP2(X1,X2,X0) | ~sP1(X2,X1,X0)) )),
  inference(cnf_transformation,[],[f199])).
fof(f4311,plain,(
  ( ! [X6,X7] : (sP2('F_0',X6,X7) | s(bool,'T_0') != s(bool,X6)) ) | $spl13),
  inference(subsumption_resolution,[],[f4306,f316])).
fof(f4306,plain,(
  ( ! [X6,X7] : (s(bool,'T_0') != s(bool,X6) | p(s(bool,X7)) | sP2('F_0',X6,X7)) ) | $spl13),
  inference(resolution,[],[f4161,f305])).
fof(f6059,plain,(
  ( ! [X35,X34] : (sP1('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34,X35)) ) | $spl4),
  inference(resolution,[],[f546,f322])).
fof(f322,plain,(
  ( ! [X2,X0,X1] : (sP1(X0,X1,X2) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f207])).
fof(f545,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl5),
  inference(cnf_transformation,[],[f545_D])).
fof(f545_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f29883,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP2(X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X2) | ~sP3(X2,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X3)) ) | $spl260),
  inference(cnf_transformation,[],[f29883_D])).
fof(f29883_D,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~sP2(X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X2) | ~sP3(X2,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X3)) ) <=> ~$spl260),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl260])])).
fof(f29863,plain,(
  ( ! [X2,X3] : (sP4(X2,X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~sP3(X2,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X3) | ~sP2(X3,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X2)) ) | $spl4),
  inference(resolution,[],[f6059,f308])).
fof(f7270,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) | $spl190),
  inference(cnf_transformation,[],[f7270_D])).
fof(f7270_D,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) <=> ~$spl190),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl190])])).
fof(f7267,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl188),
  inference(cnf_transformation,[],[f7267_D])).
fof(f7267_D,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) <=> ~$spl188),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl188])])).
fof(f29531,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f29530,f352])).
fof(f29530,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f29529,f522])).
fof(f29529,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f29528,f9696])).
fof(f29528,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(subsumption_resolution,[],[f29526,f521])).
fof(f29526,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(resolution,[],[f6159,f302])).
fof(f6159,plain,(
  ( ! [X4] : (~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X4) | ~p(s(bool,X4))) ) | $spl4),
  inference(subsumption_resolution,[],[f6045,f521])).
fof(f6045,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X4)) ) | $spl4),
  inference(resolution,[],[f546,f299])).
fof(f29481,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | p(s(bool,X3))) ) | $spl250),
  inference(cnf_transformation,[],[f29481_D])).
fof(f29481_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | p(s(bool,X3))) ) <=> ~$spl250),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl250])])).
fof(f6158,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl180),
  inference(cnf_transformation,[],[f6158_D])).
fof(f6158_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) <=> ~$spl180),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl180])])).
fof(f29367,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl5),
  inference(resolution,[],[f545,f301])).
fof(f9786,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | ~p(s(bool,X3))) ) | $spl206),
  inference(cnf_transformation,[],[f9786_D])).
fof(f9786_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | ~p(s(bool,X3))) ) <=> ~$spl206),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl206])])).
fof(f29242,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6)) ) | $spl0),
  inference(forward_demodulation,[],[f11914,f352])).
fof(f11914,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(subsumption_resolution,[],[f11913,f521])).
fof(f11913,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(subsumption_resolution,[],[f11648,f522])).
fof(f11648,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'T_0')) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X6),s(bool,X7)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(superposition,[],[f302,f9696])).
fof(f29215,plain,(
  ( ! [X21,X19] : (s(bool,X19) != s(bool,X21) | p(s(bool,X19)) | ~p(s(bool,X21))) ) | $spl246),
  inference(cnf_transformation,[],[f29215_D])).
fof(f29215_D,plain,(
  ( ! [X21,X19] : (s(bool,X19) != s(bool,X21) | p(s(bool,X19)) | ~p(s(bool,X21))) ) <=> ~$spl246),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl246])])).
fof(f29217,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X17) | s(bool,X16) != s(bool,X18) | ~p(s(bool,X18)) | p(s(bool,X16))) ) | $spl102),
  inference(subsumption_resolution,[],[f17721,f341])).
fof(f17721,plain,(
  ( ! [X17,X18,X16] : (s(bool,'F_0') != s(bool,X17) | s(bool,X16) != s(bool,X18) | ~p(s(bool,X18)) | p(s(bool,X17)) | p(s(bool,X16))) ) | $spl102),
  inference(superposition,[],[f4250,f327])).
fof(f327,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | p(s(bool,X1)) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f146])).
fof(f146,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f145])).
fof(f145,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f68])).
fof(f68,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9,X10] : ((p(s(bool,X9)) => p(s(bool,X10))) => ((p(s(bool,X10)) => p(s(bool,X9))) => s(bool,X9) = s(bool,X10)))),
  file('thm.integer.INT_DIV_LMUL','thm.bool.IMP_ANTISYM_AX')).
fof(f29214,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,X20) | s(bool,X19) != s(bool,X21) | ~p(s(bool,X21)) | p(s(bool,X19))) ) | $spl102),
  inference(subsumption_resolution,[],[f17722,f341])).
fof(f17722,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,X20) | s(bool,X19) != s(bool,X21) | ~p(s(bool,X21)) | p(s(bool,X19)) | p(s(bool,X20))) ) | $spl102),
  inference(superposition,[],[f4250,f327])).
fof(f29082,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X3)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | sP0(X0,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X3) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl244),
  inference(cnf_transformation,[],[f29082_D])).
fof(f29082_D,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X3)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X0))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | sP0(X0,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X3) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) <=> ~$spl244),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl244])])).
fof(f29081,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X3)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,X4)) | sP0(X0,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X3) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X0)))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f29080,f338])).
fof(f29080,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,X4)) | sP0(X0,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X3) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X0)))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f28947,f6067])).
fof(f28947,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,X4)) | sP0(X0,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X3) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X0)))) ) | $spl0),
  inference(resolution,[],[f9791,f302])).
fof(f23794,plain,(
  ( ! [X14,X12,X10,X11] : (~p(s(bool,X12)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X12) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',sK14) != s('type.integer.int',X11) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int',X14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10))))) ) | $spl242),
  inference(cnf_transformation,[],[f23794_D])).
fof(f23794_D,plain,(
  ( ! [X14,X12,X10,X11] : (~p(s(bool,X12)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X12) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',sK14) != s('type.integer.int',X11) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int',X14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10))))) ) <=> ~$spl242),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl242])])).
fof(f23793,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X12)) | s('type.integer.int',sK14) != s('type.integer.int',X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23792,f338])).
fof(f23792,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X13)))) | s('type.integer.int',sK14) != s('type.integer.int',X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23772,f1595])).
fof(f23772,plain,(
  ( ! [X14,X12,X10,X13,X11] : (s('type.integer.int',sK14) != s('type.integer.int',X11) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X12),s(bool,X13)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl3),
  inference(superposition,[],[f6037,f302])).
fof(f6037,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl3),
  inference(forward_demodulation,[],[f6028,f351])).
fof(f6028,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl3),
  inference(superposition,[],[f544,f350])).
fof(f23791,plain,(
  ( ! [X6,X7,X5,X9] : (~p(s(bool,X7)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | sP0(X9,sK13,X7) | s('type.integer.int',sK14) != s('type.integer.int',X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13))),s('type.integer.int',X9))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5))))) ) | $spl240),
  inference(cnf_transformation,[],[f23791_D])).
fof(f23791_D,plain,(
  ( ! [X6,X7,X5,X9] : (~p(s(bool,X7)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | sP0(X9,sK13,X7) | s('type.integer.int',sK14) != s('type.integer.int',X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13))),s('type.integer.int',X9))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5))))) ) <=> ~$spl240),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl240])])).
fof(f23790,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,X7)) | s('type.integer.int',sK14) != s('type.integer.int',X6) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | p(s(bool,X8)) | sP0(X9,sK13,X7) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23789,f338])).
fof(f23789,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X7),s(bool,X8)))) | s('type.integer.int',sK14) != s('type.integer.int',X6) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | p(s(bool,X8)) | sP0(X9,sK13,X7) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23771,f1595])).
fof(f23771,plain,(
  ( ! [X6,X8,X7,X5,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X6) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X5)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X7),s(bool,X8)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | p(s(bool,X8)) | sP0(X9,sK13,X7) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X6),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | $spl3),
  inference(superposition,[],[f6037,f301])).
fof(f23788,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK13,X2) | s('type.integer.int',sK14) != s('type.integer.int',X1) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13))),s('type.integer.int',X4))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl238),
  inference(cnf_transformation,[],[f23788_D])).
fof(f23788_D,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK13,X2) | s('type.integer.int',sK14) != s('type.integer.int',X1) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13))),s('type.integer.int',X4))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) <=> ~$spl238),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl238])])).
fof(f23787,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X2)) | s('type.integer.int',sK14) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X3)) | sP0(X4,sK13,X2) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23786,f338])).
fof(f23786,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) | s('type.integer.int',sK14) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X3)) | sP0(X4,sK13,X2) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f23770,f1595])).
fof(f23770,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X3)) | sP0(X4,sK13,X2) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | $spl3),
  inference(superposition,[],[f6037,f300])).
fof(f18414,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X9))) ) | ($spl13 | $spl211)),
  inference(resolution,[],[f9992,f4584])).
fof(f4584,plain,(
  ( ! [X14,X15] : (~sP3(X14,X15,'F_0') | s(bool,'T_0') != s(bool,X15) | ~p(s(bool,X14))) ) | $spl13),
  inference(subsumption_resolution,[],[f4583,f320])).
fof(f4583,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'T_0') != s(bool,X15) | ~sP3(X14,X15,'F_0') | ~sP1(X15,'F_0',X14)) ) | $spl13),
  inference(subsumption_resolution,[],[f4582,f458])).
fof(f4582,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'T_0') != s(bool,X15) | p(s(bool,'F_0')) | ~sP3(X14,X15,'F_0') | ~sP1(X15,'F_0',X14)) ) | $spl13),
  inference(subsumption_resolution,[],[f4575,f318])).
fof(f4575,plain,(
  ( ! [X14,X15] : (~p(s(bool,X14)) | s(bool,'T_0') != s(bool,X15) | p(s(bool,'F_0')) | ~sP3(X14,X15,'F_0') | ~sP2('F_0',X15,X14) | ~sP1(X15,'F_0',X14)) ) | $spl13),
  inference(resolution,[],[f4163,f309])).
fof(f4163,plain,(
  ( ! [X10,X9] : (~sP4(X10,'F_0',X9) | ~p(s(bool,X10)) | s(bool,'T_0') != s(bool,X9)) ) | $spl13),
  inference(superposition,[],[f4077,f325])).
fof(f18424,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl234),
  inference(cnf_transformation,[],[f18424_D])).
fof(f18424_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl234),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl234])])).
fof(f18413,plain,(
  ( ! [X8] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X8))) ) | ($spl13 | $spl211)),
  inference(resolution,[],[f9992,f4428])).
fof(f4428,plain,(
  ( ! [X2,X3] : (~sP3(X2,X3,'F_0') | s(bool,'F_0') = s(bool,X3) | ~p(s(bool,X2))) ) | $spl13),
  inference(subsumption_resolution,[],[f4422,f320])).
fof(f4422,plain,(
  ( ! [X2,X3] : (~sP3(X2,X3,'F_0') | ~sP1(X3,'F_0',X2) | s(bool,'F_0') = s(bool,X3) | ~p(s(bool,X2))) ) | $spl13),
  inference(resolution,[],[f4394,f325])).
fof(f18227,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X9))) ) | ($spl13 | $spl177)),
  inference(resolution,[],[f9481,f4584])).
fof(f18237,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl230),
  inference(cnf_transformation,[],[f18237_D])).
fof(f18237_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) <=> ~$spl230),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl230])])).
fof(f18226,plain,(
  ( ! [X8] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X8))) ) | ($spl13 | $spl177)),
  inference(resolution,[],[f9481,f4428])).
fof(f14456,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | $spl229),
  inference(cnf_transformation,[],[f14456_D])).
fof(f14456_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) <=> ~$spl229),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl229])])).
fof(f14448,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | ~p(s(bool,X9))) ) | ($spl13 | $spl221)),
  inference(resolution,[],[f14315,f4584])).
fof(f14315,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)),X28)) ) | $spl221),
  inference(resolution,[],[f14304,f313])).
fof(f14454,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | $spl226),
  inference(cnf_transformation,[],[f14454_D])).
fof(f14454_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) <=> ~$spl226),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl226])])).
fof(f14447,plain,(
  ( ! [X8] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13))) | ~p(s(bool,X8))) ) | ($spl13 | $spl221)),
  inference(resolution,[],[f14315,f4428])).
fof(f14419,plain,(
  ( ! [X2] : (sP0(sK13,sK13,X2) | ~p(s(bool,X2))) ) | $spl224),
  inference(cnf_transformation,[],[f14419_D])).
fof(f14419_D,plain,(
  ( ! [X2] : (sP0(sK13,sK13,X2) | ~p(s(bool,X2))) ) <=> ~$spl224),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl224])])).
fof(f14417,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | p(s(bool,X3)) | sP0(sK13,sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | ($spl14 | $spl221)),
  inference(forward_demodulation,[],[f14416,f338])).
fof(f14416,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | p(s(bool,X3)) | sP0(sK13,sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | ($spl14 | $spl221)),
  inference(forward_demodulation,[],[f14305,f1595])).
fof(f14302,plain,(
  ( ! [X16] : (s('type.integer.int',sK14) != s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | $spl218),
  inference(cnf_transformation,[],[f14302_D])).
fof(f14302_D,plain,(
  ( ! [X16] : (s('type.integer.int',sK14) != s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) <=> ~$spl218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl218])])).
fof(f14304,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)))) | $spl221),
  inference(cnf_transformation,[],[f14304_D])).
fof(f14304_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)))) <=> ~$spl221),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl221])])).
fof(f14298,plain,(
  ( ! [X15,X16] : (~p(s(bool,X15)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)))) | s('type.integer.int',sK14) != s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | ($spl22 | $spl128 | $spl130 | $spl132)),
  inference(duplicate_literal_removal,[],[f14297])).
fof(f14297,plain,(
  ( ! [X15,X16] : (~p(s(bool,X15)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',sK13)))) | ~p(s(bool,X15)) | s('type.integer.int',sK14) != s('type.integer.int',X16) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X16),s('type.integer.int',sK13))),s('type.integer.int',sK13)))) ) | ($spl22 | $spl128 | $spl130 | $spl132)),
  inference(resolution,[],[f1811,f6736])).
fof(f6736,plain,(
  ( ! [X8,X11,X9] : (sP0(X11,sK13,X9) | ~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl128 | $spl130 | $spl132)),
  inference(subsumption_resolution,[],[f6735,f5415])).
fof(f6735,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl130 | $spl132)),
  inference(subsumption_resolution,[],[f5419,f5417])).
fof(f1811,plain,(
  ( ! [X0,X1] : (~sP0(sK13,X0,X1) | ~p(s(bool,X1)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13))))) ) | $spl22),
  inference(resolution,[],[f715,f299])).
fof(f715,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl22),
  inference(cnf_transformation,[],[f715_D])).
fof(f715_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f11918,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X5) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X6)) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X7))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f11917,f352])).
fof(f11917,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X6)) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X7)) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl4)),
  inference(subsumption_resolution,[],[f11916,f6159])).
fof(f11916,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X6)) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f11915,f338])).
fof(f11915,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X6),s(bool,X7)))) | s('type.integer.int',X4) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X7)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X6) | s('type.integer.int',X5) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl0 | $spl4)),
  inference(forward_demodulation,[],[f11914,f6067])).
fof(f10556,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | sP0(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X14)))) ) | $spl216),
  inference(cnf_transformation,[],[f10556_D])).
fof(f10556_D,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | sP0(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X14)))) ) <=> ~$spl216),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl216])])).
fof(f10555,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X10)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X14)))) ) | $spl4),
  inference(forward_demodulation,[],[f10286,f338])).
fof(f10286,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X14)))) ) | $spl4),
  inference(superposition,[],[f302,f6067])).
fof(f10554,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | sP0(X9,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X9)))) ) | $spl214),
  inference(cnf_transformation,[],[f10554_D])).
fof(f10554_D,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | sP0(X9,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X9)))) ) <=> ~$spl214),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl214])])).
fof(f10553,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,X5)) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,X6)) | sP0(X9,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X9)))) ) | $spl4),
  inference(forward_demodulation,[],[f10285,f338])).
fof(f10285,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,X6)) | sP0(X9,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X9)))) ) | $spl4),
  inference(superposition,[],[f301,f6067])).
fof(f10552,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X4)))) ) | $spl212),
  inference(cnf_transformation,[],[f10552_D])).
fof(f10552_D,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X4)))) ) <=> ~$spl212),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl212])])).
fof(f10551,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X0)) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X4)))) ) | $spl4),
  inference(forward_demodulation,[],[f10284,f338])).
fof(f10284,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int',X4)))) ) | $spl4),
  inference(superposition,[],[f300,f6067])).
fof(f9654,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl203),
  inference(cnf_transformation,[],[f9654_D])).
fof(f9654_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) <=> ~$spl203),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl203])])).
fof(f9862,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | ($spl0 | $spl13)),
  inference(resolution,[],[f9688,f4429])).
fof(f9688,plain,(
  ( ! [X35,X34] : (sP1('const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),X34,X35)) ) | $spl0),
  inference(resolution,[],[f542,f322])).
fof(f9787,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | ~sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl208),
  inference(cnf_transformation,[],[f9787_D])).
fof(f9787_D,plain,(
  ( ! [X4] : (~p(s(bool,X4)) | ~sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) <=> ~$spl208),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl208])])).
fof(f9789,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl211),
  inference(cnf_transformation,[],[f9789_D])).
fof(f9789_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl211),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl211])])).
fof(f9674,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl0),
  inference(resolution,[],[f542,f299])).
fof(f9785,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2)) ) | $spl0),
  inference(forward_demodulation,[],[f9784,f352])).
fof(f9784,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(subsumption_resolution,[],[f9673,f521])).
fof(f9673,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl0),
  inference(resolution,[],[f542,f302])).
fof(f9657,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl205),
  inference(cnf_transformation,[],[f9657_D])).
fof(f9657_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) <=> ~$spl205),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl205])])).
fof(f9646,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X9))) ) | ($spl1 | $spl13)),
  inference(resolution,[],[f7351,f4584])).
fof(f7351,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))),X28)) ) | $spl1),
  inference(resolution,[],[f541,f313])).
fof(f9655,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | $spl202),
  inference(cnf_transformation,[],[f9655_D])).
fof(f9655_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) <=> ~$spl202),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl202])])).
fof(f9645,plain,(
  ( ! [X8] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X8))) ) | ($spl1 | $spl13)),
  inference(resolution,[],[f7351,f4428])).
fof(f8812,plain,(
  ( ! [X8] : (p(s(bool,X8)) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl4 | $spl13)),
  inference(resolution,[],[f6059,f4429])).
fof(f2689,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK14))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK14)))) ) | $spl92),
  inference(cnf_transformation,[],[f2689_D])).
fof(f2689_D,plain,(
  ( ! [X6,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK14))) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK14)))) ) <=> ~$spl92),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl92])])).
fof(f8407,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))) | ~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | p(s(bool,X3))) ) | ($spl59 | $spl60)),
  inference(forward_demodulation,[],[f8406,f352])).
fof(f8406,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | p(s(bool,X3)) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl59 | $spl60)),
  inference(subsumption_resolution,[],[f8405,f2678])).
fof(f2678,plain,(
  ( ! [X4] : (~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X4) | ~p(s(bool,X4))) ) | $spl60),
  inference(subsumption_resolution,[],[f2565,f521])).
fof(f2565,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X4)) ) | $spl60),
  inference(resolution,[],[f2149,f299])).
fof(f8405,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X2)) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl59 | $spl60)),
  inference(forward_demodulation,[],[f8404,f338])).
fof(f8404,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X2),s(bool,X3)))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl59 | $spl60)),
  inference(forward_demodulation,[],[f8403,f2587])).
fof(f2587,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl60),
  inference(resolution,[],[f2149,f346])).
fof(f8403,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl59),
  inference(subsumption_resolution,[],[f8133,f473])).
fof(f8133,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl59),
  inference(superposition,[],[f301,f2766])).
fof(f2766,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | $spl59),
  inference(resolution,[],[f2146,f342])).
fof(f7881,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK14)))) | sP0(X14,sK14,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK14))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK14))),s('type.integer.int',X14)))) ) | $spl198),
  inference(cnf_transformation,[],[f7881_D])).
fof(f7881_D,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK14)))) | sP0(X14,sK14,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK14))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK14))),s('type.integer.int',X14)))) ) <=> ~$spl198),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl198])])).
fof(f7880,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X10)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK14,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK14))),s('type.integer.int',X14)))) ) | $spl60),
  inference(forward_demodulation,[],[f7611,f338])).
fof(f7611,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK14))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK14,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK14))),s('type.integer.int',X14)))) ) | $spl60),
  inference(superposition,[],[f302,f2587])).
fof(f7879,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK14)))) | sP0(X9,sK14,X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK14))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK14))),s('type.integer.int',X9)))) ) | $spl196),
  inference(cnf_transformation,[],[f7879_D])).
fof(f7879_D,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK14)))) | sP0(X9,sK14,X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK14))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK14))),s('type.integer.int',X9)))) ) <=> ~$spl196),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl196])])).
fof(f7878,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,X5)) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK14)))) | p(s(bool,X6)) | sP0(X9,sK14,X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK14))),s('type.integer.int',X9)))) ) | $spl60),
  inference(forward_demodulation,[],[f7610,f338])).
fof(f7610,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK14)))) | p(s(bool,X6)) | sP0(X9,sK14,X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK14))),s('type.integer.int',X9)))) ) | $spl60),
  inference(superposition,[],[f301,f2587])).
fof(f7877,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK14,X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK14))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK14))),s('type.integer.int',X4)))) ) | $spl194),
  inference(cnf_transformation,[],[f7877_D])).
fof(f7877_D,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK14,X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK14))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK14))),s('type.integer.int',X4)))) ) <=> ~$spl194),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl194])])).
fof(f7876,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X0)) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,sK14,X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK14))),s('type.integer.int',X4)))) ) | $spl60),
  inference(forward_demodulation,[],[f7609,f338])).
fof(f7609,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK14))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,sK14,X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK14))),s('type.integer.int',X4)))) ) | $spl60),
  inference(superposition,[],[f300,f2587])).
fof(f6156,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | $spl177),
  inference(cnf_transformation,[],[f6156_D])).
fof(f6156_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) <=> ~$spl177),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl177])])).
fof(f1322,plain,(
  ( ! [X8,X11] : (p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) | $spl48),
  inference(cnf_transformation,[],[f1322_D])).
fof(f1322_D,plain,(
  ( ! [X8,X11] : (p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f7520,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f7519,f546])).
fof(f7519,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl1),
  inference(resolution,[],[f7342,f302])).
fof(f7342,plain,(
  ( ! [X4] : (~sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4) | p(s(bool,X4))) ) | $spl1),
  inference(resolution,[],[f541,f297])).
fof(f6155,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | $spl176),
  inference(cnf_transformation,[],[f6155_D])).
fof(f6155_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) <=> ~$spl176),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl176])])).
fof(f1321,plain,(
  ( ! [X0,X3] : (p(s(bool,X0)) | p(s(bool,X3)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X3))))) ) | $spl46),
  inference(cnf_transformation,[],[f1321_D])).
fof(f1321_D,plain,(
  ( ! [X0,X3] : (p(s(bool,X0)) | p(s(bool,X3)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X3))))) ) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f7517,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X3)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,X3)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl1),
  inference(resolution,[],[f7342,f300])).
fof(f7458,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | p(s(bool,X3))) ) | $spl192),
  inference(cnf_transformation,[],[f7458_D])).
fof(f7458_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | p(s(bool,X3))) ) <=> ~$spl192),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl192])])).
fof(f7457,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2)) ) | $spl1),
  inference(forward_demodulation,[],[f7341,f352])).
fof(f7341,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),'const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl1),
  inference(resolution,[],[f541,f301])).
fof(f541,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | $spl1),
  inference(cnf_transformation,[],[f541_D])).
fof(f541_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f7269,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X11))) ) | $spl4),
  inference(forward_demodulation,[],[f7268,f352])).
fof(f7268,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(subsumption_resolution,[],[f7264,f521])).
fof(f7264,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(resolution,[],[f6159,f302])).
fof(f542,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | $spl0),
  inference(cnf_transformation,[],[f542_D])).
fof(f542_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f7266,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) | $spl186),
  inference(cnf_transformation,[],[f7266_D])).
fof(f7266_D,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) <=> ~$spl186),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl186])])).
fof(f7265,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,X7))) ) | $spl4),
  inference(forward_demodulation,[],[f7263,f352])).
fof(f7263,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | p(s(bool,X7)) | s('type.integer.int',X6) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl4),
  inference(resolution,[],[f6159,f301])).
fof(f6817,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | s('type.integer.int',sK14) != s('type.integer.int',X10)) ) | $spl184),
  inference(cnf_transformation,[],[f6817_D])).
fof(f6817_D,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | s('type.integer.int',sK14) != s('type.integer.int',X10)) ) <=> ~$spl184),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl184])])).
fof(f6816,plain,(
  ( ! [X10,X9] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X10)) ) | ($spl14 | $spl128 | $spl130 | $spl132)),
  inference(forward_demodulation,[],[f6813,f352])).
fof(f6813,plain,(
  ( ! [X10,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X10) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl14 | $spl128 | $spl130 | $spl132)),
  inference(duplicate_literal_removal,[],[f6812])).
fof(f6812,plain,(
  ( ! [X10,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X10) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X10),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,X9))) ) | ($spl14 | $spl128 | $spl130 | $spl132)),
  inference(resolution,[],[f6736,f1176])).
fof(f6815,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK14) != s('type.integer.int',X7) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8)))) ) | $spl182),
  inference(cnf_transformation,[],[f6815_D])).
fof(f6815_D,plain,(
  ( ! [X8,X7] : (s('type.integer.int',sK14) != s('type.integer.int',X7) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8)))) ) <=> ~$spl182),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl182])])).
fof(f6814,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | s('type.integer.int',sK14) != s('type.integer.int',X7) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8))))) ) | ($spl128 | $spl130 | $spl132)),
  inference(duplicate_literal_removal,[],[f6811])).
fof(f6811,plain,(
  ( ! [X6,X8,X7] : (~p(s(bool,X6)) | s('type.integer.int',sK14) != s('type.integer.int',X7) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X8))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',X8),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X8)))) | ~p(s(bool,X6))) ) | ($spl128 | $spl130 | $spl132)),
  inference(resolution,[],[f6736,f299])).
fof(f6157,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) | $spl178),
  inference(cnf_transformation,[],[f6157_D])).
fof(f6157_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f6044,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) | ~p(s(bool,X3)) | sP0('const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)),'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))) ) | $spl4),
  inference(resolution,[],[f546,f302])).
fof(f5425,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl138),
  inference(cnf_transformation,[],[f5425_D])).
fof(f5425_D,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) <=> ~$spl138),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl138])])).
fof(f6043,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6042,f338])).
fof(f6042,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6032,f1595])).
fof(f6032,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X9),s(bool,X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl3),
  inference(superposition,[],[f544,f302])).
fof(f5423,plain,(
  ( ! [X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | ~p(s(bool,X5)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl136),
  inference(cnf_transformation,[],[f5423_D])).
fof(f5423_D,plain,(
  ( ! [X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | ~p(s(bool,X5)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) <=> ~$spl136),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl136])])).
fof(f6041,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X5)) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6040,f338])).
fof(f6040,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6031,f1595])).
fof(f6031,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X5),s(bool,X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl3),
  inference(superposition,[],[f544,f301])).
fof(f5421,plain,(
  ( ! [X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | ~p(s(bool,X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl134),
  inference(cnf_transformation,[],[f5421_D])).
fof(f5421_D,plain,(
  ( ! [X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | ~p(s(bool,X1)) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) <=> ~$spl134),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl134])])).
fof(f6039,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6038,f338])).
fof(f6038,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f6030,f1595])).
fof(f6030,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl3),
  inference(superposition,[],[f544,f300])).
fof(f5920,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int',sK14)))) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X27,X28) | ~p(s(bool,X28))) ) | $spl174),
  inference(cnf_transformation,[],[f5920_D])).
fof(f5920_D,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int',sK14)))) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X27,X28) | ~p(s(bool,X28))) ) <=> ~$spl174),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl174])])).
fof(f5917,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl173),
  inference(cnf_transformation,[],[f5917_D])).
fof(f5917_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl173),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl173])])).
fof(f5921,plain,(
  ( ! [X30,X29] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X29),s('type.integer.int',sK14)))) | ~p(s(bool,X30)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X29,X30)) ) | $spl2),
  inference(forward_demodulation,[],[f5797,f543])).
fof(f543,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl2),
  inference(cnf_transformation,[],[f543_D])).
fof(f543_D,plain,(
  s('type.integer.int',sK14) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f5797,plain,(
  ( ! [X30,X29] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X29),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X30)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X29,X30)) ) | $spl2),
  inference(superposition,[],[f299,f543])).
fof(f5919,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X28)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X27,X28)) ) | $spl2),
  inference(forward_demodulation,[],[f5796,f543])).
fof(f5796,plain,(
  ( ! [X28,X27] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))))) | ~p(s(bool,X28)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X27,X28)) ) | $spl2),
  inference(superposition,[],[f299,f543])).
fof(f5916,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X26,X25)) ) | $spl170),
  inference(cnf_transformation,[],[f5916_D])).
fof(f5916_D,plain,(
  ( ! [X26,X25] : (p(s(bool,X25)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X26,X25)) ) <=> ~$spl170),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl170])])).
fof(f5918,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl172),
  inference(cnf_transformation,[],[f5918_D])).
fof(f5918_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl172),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl172])])).
fof(f5795,plain,(
  ( ! [X26,X25] : (p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X25)) | ~sP0('const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X26,X25)) ) | $spl2),
  inference(superposition,[],[f298,f543])).
fof(f5915,plain,(
  ( ! [X20,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X20))) | sP0(X20,sK13,X18) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,X18))) ) | $spl168),
  inference(cnf_transformation,[],[f5915_D])).
fof(f5915_D,plain,(
  ( ! [X20,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X20))) | sP0(X20,sK13,X18) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,X18))) ) <=> ~$spl168),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl168])])).
fof(f5914,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X20))) | ~p(s(bool,X18)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,X19)) | sP0(X20,sK13,X18)) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5913,f303])).
fof(f5913,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,X18)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,X19)) | sP0(X20,sK13,X18) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X20)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5912,f338])).
fof(f5912,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X18),s(bool,X19)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,X19)) | sP0(X20,sK13,X18) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X20)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5879,f1595])).
fof(f5879,plain,(
  ( ! [X19,X20,X18] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X18),s(bool,X19)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,X19)) | sP0(X20,sK13,X18) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X20)))) ) | $spl2),
  inference(trivial_inequality_removal,[],[f5792])).
fof(f5792,plain,(
  ( ! [X19,X20,X18] : (s('type.integer.int',sK14) != s('type.integer.int',sK14) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X18),s(bool,X19)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X20),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X20)))) | ~p(s(bool,X19)) | sP0(X20,sK13,X18) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X20)))) ) | $spl2),
  inference(superposition,[],[f539,f543])).
fof(f539,plain,(
  ( ! [X26,X24,X23,X25,X22] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X22),s('type.integer.int',X23))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X23),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X24),s(bool,X25)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X26),s('type.integer.int',X23)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X26)))) | ~p(s(bool,X25)) | sP0(X26,X23,X24) | s('type.integer.int',X22) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',X23))),s('type.integer.int',X26)))) )),
  inference(superposition,[],[f296,f302])).
fof(f5911,plain,(
  ( ! [X17,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X17))) | sP0(X17,sK13,X15) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | ~p(s(bool,X15))) ) | $spl166),
  inference(cnf_transformation,[],[f5911_D])).
fof(f5911_D,plain,(
  ( ! [X17,X15] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X17))) | sP0(X17,sK13,X15) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | ~p(s(bool,X15))) ) <=> ~$spl166),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl166])])).
fof(f5910,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X17))) | ~p(s(bool,X15)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | p(s(bool,X16)) | sP0(X17,sK13,X15)) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5909,f303])).
fof(f5909,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,X15)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | p(s(bool,X16)) | sP0(X17,sK13,X15) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X17)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5908,f338])).
fof(f5908,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X15),s(bool,X16)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | p(s(bool,X16)) | sP0(X17,sK13,X15) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X17)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5880,f1595])).
fof(f5880,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X15),s(bool,X16)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | p(s(bool,X16)) | sP0(X17,sK13,X15) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X17)))) ) | $spl2),
  inference(trivial_inequality_removal,[],[f5791])).
fof(f5791,plain,(
  ( ! [X17,X15,X16] : (s('type.integer.int',sK14) != s('type.integer.int',sK14) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X15),s(bool,X16)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X17),s('type.integer.int',sK13)))) | p(s(bool,X16)) | sP0(X17,sK13,X15) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X17)))) ) | $spl2),
  inference(superposition,[],[f538,f543])).
fof(f538,plain,(
  ( ! [X21,X19,X17,X20,X18] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X17),s('type.integer.int',X18))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X18),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X19),s(bool,X20)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X21),s('type.integer.int',X18)))) | p(s(bool,X20)) | sP0(X21,X18,X19) | s('type.integer.int',X17) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',X18))),s('type.integer.int',X21)))) )),
  inference(superposition,[],[f296,f301])).
fof(f5907,plain,(
  ( ! [X14,X12] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X14))) | sP0(X14,sK13,X12) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X12))) ) | $spl164),
  inference(cnf_transformation,[],[f5907_D])).
fof(f5907_D,plain,(
  ( ! [X14,X12] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X14))) | sP0(X14,sK13,X12) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X12))) ) <=> ~$spl164),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl164])])).
fof(f5906,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))),s('type.integer.int',X14))) | ~p(s(bool,X12)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | p(s(bool,X13)) | sP0(X14,sK13,X12)) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5905,f303])).
fof(f5905,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X12)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5904,f338])).
fof(f5904,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X12),s(bool,X13)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5881,f1595])).
fof(f5881,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X12),s(bool,X13)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl2),
  inference(trivial_inequality_removal,[],[f5790])).
fof(f5790,plain,(
  ( ! [X14,X12,X13] : (s('type.integer.int',sK14) != s('type.integer.int',sK14) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X12),s(bool,X13)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | p(s(bool,X13)) | sP0(X14,sK13,X12) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl2),
  inference(superposition,[],[f537,f543])).
fof(f537,plain,(
  ( ! [X14,X12,X15,X13,X16] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X14),s(bool,X15)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) | p(s(bool,X15)) | sP0(X16,X13,X14) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int',X13))),s('type.integer.int',X16)))) )),
  inference(superposition,[],[f296,f300])).
fof(f5891,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) = s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl162),
  inference(cnf_transformation,[],[f5891_D])).
fof(f5891_D,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) = s('type.integer.int',X8) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) <=> ~$spl162),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl162])])).
fof(f5903,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5902,f338])).
fof(f5902,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5789,f1595])).
fof(f5789,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X9),s(bool,X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl2),
  inference(superposition,[],[f302,f543])).
fof(f5888,plain,(
  ( ! [X4,X7,X5] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | s('type.integer.int',sK14) = s('type.integer.int',X4) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl160),
  inference(cnf_transformation,[],[f5888_D])).
fof(f5888_D,plain,(
  ( ! [X4,X7,X5] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | s('type.integer.int',sK14) = s('type.integer.int',X4) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) <=> ~$spl160),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl160])])).
fof(f5901,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X5)) | s('type.integer.int',sK14) = s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5900,f338])).
fof(f5900,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',sK14) = s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5788,f1595])).
fof(f5788,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',sK14) = s('type.integer.int',X4) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X5),s(bool,X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl2),
  inference(superposition,[],[f301,f543])).
fof(f5885,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | s('type.integer.int',sK14) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl158),
  inference(cnf_transformation,[],[f5885_D])).
fof(f5885_D,plain,(
  ( ! [X0,X3,X1] : (~p(s(bool,X1)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | s('type.integer.int',sK14) = s('type.integer.int',X0) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) <=> ~$spl158),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl158])])).
fof(f5899,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | s('type.integer.int',sK14) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5898,f338])).
fof(f5898,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) | s('type.integer.int',sK14) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5787,f1595])).
fof(f5787,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK14) = s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl2),
  inference(superposition,[],[f300,f543])).
fof(f5890,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5889,f338])).
fof(f5889,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5782,f1595])).
fof(f5782,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',sK14) = s('type.integer.int',X8) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X9),s(bool,X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl2),
  inference(superposition,[],[f543,f302])).
fof(f5887,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X5)) | s('type.integer.int',sK14) = s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5886,f338])).
fof(f5886,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',sK14) = s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5781,f1595])).
fof(f5781,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',sK14) = s('type.integer.int',X4) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X5),s(bool,X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl2),
  inference(superposition,[],[f543,f301])).
fof(f5884,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | s('type.integer.int',sK14) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5883,f338])).
fof(f5883,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) | s('type.integer.int',sK14) = s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl2 | $spl14)),
  inference(forward_demodulation,[],[f5780,f1595])).
fof(f5780,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK14) = s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl2),
  inference(superposition,[],[f543,f300])).
fof(f5764,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f5686,f895])).
fof(f5686,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(resolution,[],[f895,f516])).
fof(f5763,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f5685,f895])).
fof(f5685,plain,(
  ~p(s(bool,'T_0')) | $spl30),
  inference(resolution,[],[f895,f514])).
fof(f5762,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f5682,f895])).
fof(f5682,plain,(
  ( ! [X242] : (~p(s(bool,X242))) ) | $spl30),
  inference(resolution,[],[f895,f508])).
fof(f5761,plain,(
  $false | $spl30),
  inference(subsumption_resolution,[],[f5676,f895])).
fof(f5676,plain,(
  ( ! [X236] : (~p(s(bool,X236))) ) | $spl30),
  inference(resolution,[],[f895,f458])).
fof(f5684,plain,(
  $false | $spl30),
  inference(resolution,[],[f895,f512])).
fof(f5693,plain,(
  $false | ($spl30 | $spl35)),
  inference(resolution,[],[f895,f1173])).
fof(f5694,plain,(
  $false | ($spl30 | $spl85)),
  inference(resolution,[],[f895,f2675])).
fof(f5697,plain,(
  $false | ($spl30 | $spl59)),
  inference(resolution,[],[f895,f2146])).
fof(f5452,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl156),
  inference(cnf_transformation,[],[f5452_D])).
fof(f5452_D,plain,(
  ( ! [X14,X12,X10,X13] : (~p(s(bool,X10)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | sP0(X14,sK13,X10) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) <=> ~$spl156),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl156])])).
fof(f5451,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,X10)) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK13,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl14),
  inference(forward_demodulation,[],[f5158,f338])).
fof(f5158,plain,(
  ( ! [X14,X12,X10,X13,X11] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X10),s(bool,X11)))) | s('type.integer.int',X12) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X13),s('type.integer.int',sK13))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X14),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X14)))) | ~p(s(bool,X11)) | sP0(X14,sK13,X10) | s('type.integer.int',X13) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X12),s('type.integer.int',sK13))),s('type.integer.int',X14)))) ) | $spl14),
  inference(superposition,[],[f302,f1595])).
fof(f5450,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | sP0(X9,sK13,X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | $spl154),
  inference(cnf_transformation,[],[f5450_D])).
fof(f5450_D,plain,(
  ( ! [X8,X7,X5,X9] : (~p(s(bool,X5)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | sP0(X9,sK13,X5) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) <=> ~$spl154),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl154])])).
fof(f5449,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,X5)) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X9,sK13,X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | $spl14),
  inference(forward_demodulation,[],[f5157,f338])).
fof(f5157,plain,(
  ( ! [X6,X8,X7,X5,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',X7) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X8),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X9),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X9,sK13,X5) | s('type.integer.int',X8) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X7),s('type.integer.int',sK13))),s('type.integer.int',X9)))) ) | $spl14),
  inference(superposition,[],[f301,f1595])).
fof(f5448,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK13,X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK13))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | $spl152),
  inference(cnf_transformation,[],[f5448_D])).
fof(f5448_D,plain,(
  ( ! [X4,X2,X0,X3] : (~p(s(bool,X0)) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | sP0(X4,sK13,X0) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK13))) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) <=> ~$spl152),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl152])])).
fof(f5447,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,X0)) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,sK13,X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | $spl14),
  inference(forward_demodulation,[],[f5156,f338])).
fof(f5156,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int',X2) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X3),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X4)))) | p(s(bool,X1)) | sP0(X4,sK13,X0) | s('type.integer.int',X3) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X2),s('type.integer.int',sK13))),s('type.integer.int',X4)))) ) | $spl14),
  inference(superposition,[],[f300,f1595])).
fof(f5437,plain,(
  ( ! [X2,X0] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | sP0(X2,sK13,X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13))))) ) | $spl150),
  inference(cnf_transformation,[],[f5437_D])).
fof(f5437_D,plain,(
  ( ! [X2,X0] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | sP0(X2,sK13,X0) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13))))) ) <=> ~$spl150),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl150])])).
fof(f5436,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f5141,f338])).
fof(f5141,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f1446])).
fof(f5435,plain,(
  ( ! [X2,X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,X0)) | sP0(X2,sK13,X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) ) | $spl148),
  inference(cnf_transformation,[],[f5435_D])).
fof(f5435_D,plain,(
  ( ! [X2,X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,X0)) | sP0(X2,sK13,X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2))))) ) <=> ~$spl148),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl148])])).
fof(f5434,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f5140,f338])).
fof(f5140,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f1061])).
fof(f1061,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) )),
  inference(forward_demodulation,[],[f1040,f303])).
fof(f1040,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X1)) | sP0(X2,sK13,X0) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK14),s('type.integer.int',sK13))),s('type.integer.int',X2)))) )),
  inference(equality_resolution,[],[f533])).
fof(f533,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) )),
  inference(superposition,[],[f296,f300])).
fof(f5433,plain,(
  ( ! [X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,X73)) | sP0(X75,sK13,X73) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75)))) ) | $spl146),
  inference(cnf_transformation,[],[f5433_D])).
fof(f5433_D,plain,(
  ( ! [X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,X73)) | sP0(X75,sK13,X73) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75)))) ) <=> ~$spl146),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl146])])).
fof(f5432,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X73)) | s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) ) | $spl14),
  inference(forward_demodulation,[],[f5139,f338])).
fof(f5139,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X74)))) | s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f1050])).
fof(f1050,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) )),
  inference(forward_demodulation,[],[f1049,f352])).
fof(f1049,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.integer.int',X75))) | s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) )),
  inference(forward_demodulation,[],[f1031,f303])).
fof(f1031,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X75)))) | p(s(bool,X74)) | sP0(X75,sK13,X73) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13))),s('type.integer.int',X75)))) )),
  inference(superposition,[],[f533,f352])).
fof(f5431,plain,(
  ( ! [X2,X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,X0)) | sP0(X2,sK13,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13))))) ) | $spl144),
  inference(cnf_transformation,[],[f5431_D])).
fof(f5431_D,plain,(
  ( ! [X2,X0] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | ~p(s(bool,X0)) | sP0(X2,sK13,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13))))) ) <=> ~$spl144),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl144])])).
fof(f5430,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,X0)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(forward_demodulation,[],[f5138,f338])).
fof(f5138,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X1)) | sP0(X2,sK13,X0)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f889])).
fof(f5429,plain,(
  ( ! [X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,X73)) | sP0(X75,sK13,X73) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75)))) ) | $spl142),
  inference(cnf_transformation,[],[f5429_D])).
fof(f5429_D,plain,(
  ( ! [X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,X73)) | sP0(X75,sK13,X73) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75)))) ) <=> ~$spl142),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl142])])).
fof(f5428,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,X73)) | s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) ) | $spl14),
  inference(forward_demodulation,[],[f5137,f338])).
fof(f5137,plain,(
  ( ! [X74,X72,X75,X73] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X73),s(bool,X74)))) | s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f878])).
fof(f878,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X72))),s('type.integer.int',X75))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) )),
  inference(forward_demodulation,[],[f877,f352])).
fof(f877,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))),s('type.integer.int',X75))) | s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | p(s(bool,X74)) | sP0(X75,sK13,X73)) )),
  inference(forward_demodulation,[],[f858,f303])).
fof(f858,plain,(
  ( ! [X74,X72,X75,X73] : (s('type.integer.int',sK14) != s('type.integer.int',X72) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X73),s(bool,X74)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X75),s('type.integer.int',sK13)))) | p(s(bool,X74)) | sP0(X75,sK13,X73) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X72),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13))),s('type.integer.int',X75)))) )),
  inference(superposition,[],[f534,f352])).
fof(f5427,plain,(
  ( ! [X39,X37,X35,X36] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | ~p(s(bool,X37)) | sP0(X39,sK13,X37) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))))),s('type.integer.int',X39)))) ) | $spl140),
  inference(cnf_transformation,[],[f5427_D])).
fof(f5427_D,plain,(
  ( ! [X39,X37,X35,X36] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | ~p(s(bool,X37)) | sP0(X39,sK13,X37) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))))),s('type.integer.int',X39)))) ) <=> ~$spl140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl140])])).
fof(f5426,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,X37)) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))))),s('type.integer.int',X39))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | p(s(bool,X38)) | sP0(X39,sK13,X37)) ) | $spl14),
  inference(forward_demodulation,[],[f5136,f338])).
fof(f5136,plain,(
  ( ! [X39,X37,X35,X38,X36] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X37),s(bool,X38)))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))))),s('type.integer.int',X39))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | p(s(bool,X38)) | sP0(X39,sK13,X37)) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f872])).
fof(f872,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))))),s('type.integer.int',X39))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X37),s(bool,X38)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | p(s(bool,X38)) | sP0(X39,sK13,X37)) )),
  inference(forward_demodulation,[],[f853,f303])).
fof(f853,plain,(
  ( ! [X39,X37,X35,X38,X36] : (s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X36),s('type.integer.int',X35))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X37),s(bool,X38)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X39),s('type.integer.int',sK13)))) | p(s(bool,X38)) | sP0(X39,sK13,X37) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X35),s('type.integer.int',X36))),s('type.integer.int',sK13))),s('type.integer.int',X39)))) )),
  inference(superposition,[],[f534,f303])).
fof(f5424,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f5134,f338])).
fof(f5134,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | ($spl3 | $spl14)),
  inference(backward_demodulation,[],[f1595,f561])).
fof(f561,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X9),s(bool,X10)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl3),
  inference(superposition,[],[f544,f302])).
fof(f5422,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X5)) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f5133,f338])).
fof(f5133,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | ($spl3 | $spl14)),
  inference(backward_demodulation,[],[f1595,f560])).
fof(f560,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X5),s(bool,X6)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl3),
  inference(superposition,[],[f544,f301])).
fof(f5420,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f5132,f338])).
fof(f5132,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | ($spl3 | $spl14)),
  inference(backward_demodulation,[],[f1595,f559])).
fof(f559,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl3),
  inference(superposition,[],[f544,f300])).
fof(f5419,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl132),
  inference(cnf_transformation,[],[f5419_D])).
fof(f5419_D,plain,(
  ( ! [X8,X11,X9] : (~p(s(bool,X9)) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | sP0(X11,sK13,X9) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) <=> ~$spl132),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl132])])).
fof(f5418,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X9)) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl14),
  inference(forward_demodulation,[],[f5131,f338])).
fof(f5131,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X9),s(bool,X10)))) | s('type.integer.int',sK14) != s('type.integer.int',X8) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X11),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X11)))) | ~p(s(bool,X10)) | sP0(X11,sK13,X9) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X8),s('type.integer.int',sK13))),s('type.integer.int',X11)))) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f535])).
fof(f5417,plain,(
  ( ! [X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | ~p(s(bool,X5)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl130),
  inference(cnf_transformation,[],[f5417_D])).
fof(f5417_D,plain,(
  ( ! [X4,X7,X5] : (s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | sP0(X7,sK13,X5) | ~p(s(bool,X5)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) <=> ~$spl130),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl130])])).
fof(f5416,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X5)) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl14),
  inference(forward_demodulation,[],[f5130,f338])).
fof(f5130,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X5),s(bool,X6)))) | s('type.integer.int',sK14) != s('type.integer.int',X4) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X7),s('type.integer.int',sK13)))) | p(s(bool,X6)) | sP0(X7,sK13,X5) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X4),s('type.integer.int',sK13))),s('type.integer.int',X7)))) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f534])).
fof(f5415,plain,(
  ( ! [X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | ~p(s(bool,X1)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl128),
  inference(cnf_transformation,[],[f5415_D])).
fof(f5415_D,plain,(
  ( ! [X0,X3,X1] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | sP0(X3,sK13,X1) | ~p(s(bool,X1)) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) <=> ~$spl128),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl128])])).
fof(f5414,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,X1)) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl14),
  inference(forward_demodulation,[],[f5129,f338])).
fof(f5129,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X1),s(bool,X2)))) | s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X3)))) | p(s(bool,X2)) | sP0(X3,sK13,X1) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int',X3)))) ) | $spl14),
  inference(backward_demodulation,[],[f1595,f533])).
fof(f4866,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl127),
  inference(cnf_transformation,[],[f4866_D])).
fof(f4866_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl127),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl127])])).
fof(f4858,plain,(
  ( ! [X16] : (p(s(bool,X16)) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl13 | $spl60)),
  inference(resolution,[],[f4429,f2579])).
fof(f2579,plain,(
  ( ! [X35,X34] : (sP1('const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34,X35)) ) | $spl60),
  inference(resolution,[],[f2149,f322])).
fof(f4864,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl125),
  inference(cnf_transformation,[],[f4864_D])).
fof(f4864_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl125),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl125])])).
fof(f4857,plain,(
  ( ! [X15] : (p(s(bool,X15)) | s(bool,'F_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl13 | $spl14)),
  inference(resolution,[],[f4429,f1077])).
fof(f1077,plain,(
  ( ! [X35,X34] : (sP1('const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X34,X35)) ) | $spl14),
  inference(resolution,[],[f599,f322])).
fof(f4862,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl123),
  inference(cnf_transformation,[],[f4862_D])).
fof(f4862_D,plain,(
  s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl123),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl123])])).
fof(f4856,plain,(
  ( ! [X14] : (p(s(bool,X14)) | s(bool,'F_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl13 | $spl22)),
  inference(resolution,[],[f4429,f1825])).
fof(f1825,plain,(
  ( ! [X31,X32] : (sP1('const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),X31,X32)) ) | $spl22),
  inference(resolution,[],[f715,f322])).
fof(f4838,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4740,f4597])).
fof(f4740,plain,(
  p(s(bool,'F_0')) | $spl108),
  inference(resolution,[],[f4597,f515])).
fof(f4837,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4739,f4597])).
fof(f4739,plain,(
  p(s(bool,'F_0')) | $spl108),
  inference(resolution,[],[f4597,f513])).
fof(f4836,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4733,f4597])).
fof(f4733,plain,(
  ( ! [X240] : (p(s(bool,X240))) ) | $spl108),
  inference(resolution,[],[f4597,f469])).
fof(f4835,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4732,f4597])).
fof(f4732,plain,(
  ( ! [X239] : (p(s(bool,X239))) ) | $spl108),
  inference(resolution,[],[f4597,f466])).
fof(f4834,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4730,f4597])).
fof(f4730,plain,(
  p(s(bool,'F_0')) | $spl108),
  inference(resolution,[],[f4597,f463])).
fof(f4833,plain,(
  $false | $spl108),
  inference(subsumption_resolution,[],[f4729,f4597])).
fof(f4729,plain,(
  ( ! [X237] : (p(s(bool,X237))) ) | $spl108),
  inference(resolution,[],[f4597,f460])).
fof(f4741,plain,(
  $false | $spl108),
  inference(resolution,[],[f4597,f519])).
fof(f4742,plain,(
  $false | $spl108),
  inference(resolution,[],[f4597,f520])).
fof(f4743,plain,(
  $false | $spl108),
  inference(resolution,[],[f4597,f522])).
fof(f4752,plain,(
  $false | $spl108),
  inference(resolution,[],[f4597,f521])).
fof(f4754,plain,(
  $false | ($spl22 | $spl108)),
  inference(resolution,[],[f4597,f715])).
fof(f4759,plain,(
  $false | ($spl14 | $spl108)),
  inference(resolution,[],[f4597,f599])).
fof(f4760,plain,(
  $false | ($spl60 | $spl108)),
  inference(resolution,[],[f4597,f2149])).
fof(f4634,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | $spl120),
  inference(cnf_transformation,[],[f4634_D])).
fof(f4634_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) <=> ~$spl120),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl120])])).
fof(f4624,plain,(
  ( ! [X11] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | ~p(s(bool,X11))) ) | ($spl13 | $spl85)),
  inference(resolution,[],[f4428,f3247])).
fof(f3247,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)),X28)) ) | $spl85),
  inference(resolution,[],[f2675,f313])).
fof(f4632,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl118),
  inference(cnf_transformation,[],[f4632_D])).
fof(f4632_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) <=> ~$spl118),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl118])])).
fof(f4623,plain,(
  ( ! [X10] : (s(bool,'F_0') = s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | ~p(s(bool,X10))) ) | ($spl13 | $spl35)),
  inference(resolution,[],[f4428,f2301])).
fof(f2301,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)),X28)) ) | $spl35),
  inference(resolution,[],[f1173,f313])).
fof(f4630,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | $spl116),
  inference(cnf_transformation,[],[f4630_D])).
fof(f4630_D,plain,(
  s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) <=> ~$spl116),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl116])])).
fof(f4622,plain,(
  ( ! [X9] : (s(bool,'F_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | ~p(s(bool,X9))) ) | ($spl13 | $spl59)),
  inference(resolution,[],[f4428,f2753])).
fof(f2753,plain,(
  ( ! [X28,X27] : (sP3(X27,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)),X28)) ) | $spl59),
  inference(resolution,[],[f2146,f313])).
fof(f4603,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | $spl115),
  inference(cnf_transformation,[],[f4603_D])).
fof(f4603_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) <=> ~$spl115),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl115])])).
fof(f4592,plain,(
  ( ! [X11] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | ~p(s(bool,X11))) ) | ($spl13 | $spl85)),
  inference(resolution,[],[f4584,f3247])).
fof(f4601,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl113),
  inference(cnf_transformation,[],[f4601_D])).
fof(f4601_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) <=> ~$spl113),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl113])])).
fof(f4591,plain,(
  ( ! [X10] : (s(bool,'T_0') != s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | ~p(s(bool,X10))) ) | ($spl13 | $spl35)),
  inference(resolution,[],[f4584,f2301])).
fof(f4599,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | $spl111),
  inference(cnf_transformation,[],[f4599_D])).
fof(f4599_D,plain,(
  s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) <=> ~$spl111),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl111])])).
fof(f4590,plain,(
  ( ! [X9] : (s(bool,'T_0') != s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14))) | ~p(s(bool,X9))) ) | ($spl13 | $spl59)),
  inference(resolution,[],[f4584,f2753])).
fof(f2511,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | $spl67),
  inference(cnf_transformation,[],[f2511_D])).
fof(f2511_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) <=> ~$spl67),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl67])])).
fof(f4376,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | ~p(s(bool,X4))) ) | $spl106),
  inference(cnf_transformation,[],[f4376_D])).
fof(f4376_D,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | ~p(s(bool,X4))) ) <=> ~$spl106),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl106])])).
fof(f4375,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(forward_demodulation,[],[f4356,f351])).
fof(f4356,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(superposition,[],[f1446,f350])).
fof(f4362,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | ~p(s(bool,X2))) ) | $spl104),
  inference(cnf_transformation,[],[f4362_D])).
fof(f4362_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | ~p(s(bool,X2))) ) <=> ~$spl104),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl104])])).
fof(f546,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl4),
  inference(cnf_transformation,[],[f546_D])).
fof(f546_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f4361,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(forward_demodulation,[],[f4335,f351])).
fof(f4335,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(superposition,[],[f1446,f350])).
fof(f4183,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | s(bool,'F_0') != s(bool,X2)) ) | $spl102),
  inference(cnf_transformation,[],[f4183_D])).
fof(f4183_D,plain,(
  ( ! [X2] : (s(bool,'T_0') != s(bool,X2) | s(bool,'F_0') != s(bool,X2)) ) <=> ~$spl102),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl102])])).
fof(f4182,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X2)) ) | $spl13),
  inference(duplicate_literal_removal,[],[f4177])).
fof(f4177,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') != s(bool,X2) | p(s(bool,X3)) | p(s(bool,X3)) | s(bool,'F_0') != s(bool,X2)) ) | $spl13),
  inference(resolution,[],[f4160,f326])).
fof(f4160,plain,(
  ( ! [X4,X3] : (sP4(X4,X3,'F_0') | s(bool,'T_0') != s(bool,X3) | p(s(bool,X4))) ) | $spl13),
  inference(superposition,[],[f4077,f323])).
fof(f3909,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl13),
  inference(forward_demodulation,[],[f3908,f352])).
fof(f3908,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl13),
  inference(subsumption_resolution,[],[f3642,f473])).
fof(f3642,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'F_0')) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl13),
  inference(superposition,[],[f301,f1471])).
fof(f2675,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl85),
  inference(cnf_transformation,[],[f2675_D])).
fof(f2675_D,plain,(
  ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) <=> ~$spl85),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl85])])).
fof(f2677,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) | $spl88),
  inference(cnf_transformation,[],[f2677_D])).
fof(f2677_D,plain,(
  ( ! [X0,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) <=> ~$spl88),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl88])])).
fof(f2911,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) | ($spl59 | $spl60)),
  inference(subsumption_resolution,[],[f2910,f2149])).
fof(f2910,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) | $spl59),
  inference(resolution,[],[f2744,f302])).
fof(f2744,plain,(
  ( ! [X4] : (~sP0(sK14,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4) | p(s(bool,X4))) ) | $spl59),
  inference(resolution,[],[f2146,f297])).
fof(f2674,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl84),
  inference(cnf_transformation,[],[f2674_D])).
fof(f2674_D,plain,(
  p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) <=> ~$spl84),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl84])])).
fof(f2908,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X3)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,X3)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) | $spl59),
  inference(resolution,[],[f2744,f300])).
fof(f2859,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | p(s(bool,X3))) ) | $spl100),
  inference(cnf_transformation,[],[f2859_D])).
fof(f2859_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | p(s(bool,X3))) ) <=> ~$spl100),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl100])])).
fof(f2858,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2)) ) | $spl59),
  inference(forward_demodulation,[],[f2743,f352])).
fof(f2743,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK14,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl59),
  inference(resolution,[],[f2146,f301])).
fof(f2727,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4))) ) | $spl98),
  inference(cnf_transformation,[],[f2727_D])).
fof(f2727_D,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4))) ) <=> ~$spl98),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl98])])).
fof(f2726,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(forward_demodulation,[],[f2714,f351])).
fof(f2714,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X2)))) | p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(superposition,[],[f1061,f350])).
fof(f2720,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2))) ) | $spl96),
  inference(cnf_transformation,[],[f2720_D])).
fof(f2720_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f2719,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(forward_demodulation,[],[f2693,f351])).
fof(f2693,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(superposition,[],[f1061,f350])).
fof(f2146,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl59),
  inference(cnf_transformation,[],[f2146_D])).
fof(f2146_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) <=> ~$spl59),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl59])])).
fof(f2692,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) | $spl94),
  inference(cnf_transformation,[],[f2692_D])).
fof(f2692_D,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) <=> ~$spl94),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl94])])).
fof(f2691,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK14))) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,X11))) ) | $spl60),
  inference(forward_demodulation,[],[f2690,f352])).
fof(f2690,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl60),
  inference(subsumption_resolution,[],[f2686,f521])).
fof(f2686,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl60),
  inference(resolution,[],[f2678,f302])).
fof(f2147,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl58),
  inference(cnf_transformation,[],[f2147_D])).
fof(f2147_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) <=> ~$spl58),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl58])])).
fof(f2688,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) | $spl90),
  inference(cnf_transformation,[],[f2688_D])).
fof(f2688_D,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) <=> ~$spl90),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl90])])).
fof(f2687,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK14))) | ~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,X7))) ) | $spl60),
  inference(forward_demodulation,[],[f2685,f352])).
fof(f2685,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | p(s(bool,X7)) | s('type.integer.int',X6) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl60),
  inference(resolution,[],[f2678,f301])).
fof(f2676,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK14,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) | $spl86),
  inference(cnf_transformation,[],[f2676_D])).
fof(f2676_D,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | sP0(sK14,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | ~p(s(bool,X3))) ) <=> ~$spl86),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl86])])).
fof(f2564,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | ~p(s(bool,X3)) | sP0(sK14,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK14)))) ) | $spl60),
  inference(resolution,[],[f2149,f302])).
fof(f2563,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2)))))) | p(s(bool,X4)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | sP0(X2,sK13,X3)) ) | $spl82),
  inference(cnf_transformation,[],[f2563_D])).
fof(f2563_D,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2)))))) | p(s(bool,X4)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | sP0(X2,sK13,X3)) ) <=> ~$spl82),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl82])])).
fof(f2562,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2))))))) ) | $spl26),
  inference(forward_demodulation,[],[f2539,f351])).
fof(f2539,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X2))))))) ) | $spl26),
  inference(superposition,[],[f870,f350])).
fof(f2553,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl77),
  inference(cnf_transformation,[],[f2553_D])).
fof(f2553_D,plain,(
  s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) <=> ~$spl77),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl77])])).
fof(f2561,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,X1))) ) | ($spl13 | $spl26)),
  inference(subsumption_resolution,[],[f2538,f596])).
fof(f2538,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X1)))) | p(s(bool,X1))) ) | $spl26),
  inference(superposition,[],[f870,f352])).
fof(f2557,plain,(
  ( ! [X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X27))),s('type.integer.int',X27)))) ) | $spl80),
  inference(cnf_transformation,[],[f2557_D])).
fof(f2557_D,plain,(
  ( ! [X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27)))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X27))),s('type.integer.int',X27)))) ) <=> ~$spl80),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl80])])).
fof(f2556,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X27))),s('type.integer.int',X27))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | ($spl13 | $spl26)),
  inference(forward_demodulation,[],[f2555,f351])).
fof(f2555,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X27))),s('type.integer.int',X27))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | ($spl13 | $spl26)),
  inference(subsumption_resolution,[],[f2523,f596])).
fof(f2523,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',X27))),s('type.integer.int',X27))) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,X29)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl26),
  inference(superposition,[],[f870,f350])).
fof(f2554,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,X2)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1)) ) | $spl78),
  inference(cnf_transformation,[],[f2554_D])).
fof(f2554_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) | p(s(bool,X2)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1)) ) <=> ~$spl78),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl78])])).
fof(f2551,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl26),
  inference(forward_demodulation,[],[f2550,f351])).
fof(f2550,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl26),
  inference(forward_demodulation,[],[f2519,f352])).
fof(f2519,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl26),
  inference(superposition,[],[f870,f350])).
fof(f2546,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) | $spl70),
  inference(cnf_transformation,[],[f2546_D])).
fof(f2546_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) <=> ~$spl70),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl70])])).
fof(f2547,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | p(s(bool,X2)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1)) ) | $spl72),
  inference(cnf_transformation,[],[f2547_D])).
fof(f2547_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | p(s(bool,X2)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | sP0(X0,sK13,X1)) ) <=> ~$spl72),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl72])])).
fof(f2549,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl74),
  inference(cnf_transformation,[],[f2549_D])).
fof(f2549_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl74),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl74])])).
fof(f2544,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl26),
  inference(forward_demodulation,[],[f2515,f351])).
fof(f2515,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2)) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))))) ) | $spl26),
  inference(superposition,[],[f870,f350])).
fof(f2512,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4))) ) | $spl68),
  inference(cnf_transformation,[],[f2512_D])).
fof(f2512_D,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,X4))) ) <=> ~$spl68),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl68])])).
fof(f2509,plain,(
  ( ! [X4,X2,X3] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(forward_demodulation,[],[f2493,f351])).
fof(f2493,plain,(
  ( ! [X4,X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X3),s(bool,X4)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X2),s('type.integer.int',sK13)))) | p(s(bool,X4)) | sP0(X2,sK13,X3) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X2))))))) )),
  inference(superposition,[],[f889,f350])).
fof(f2503,plain,(
  ( ! [X28,X29,X27] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X27),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl13),
  inference(forward_demodulation,[],[f2502,f351])).
fof(f2502,plain,(
  ( ! [X28,X29,X27] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',X27))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X28),s(bool,X29)))) | p(s(bool,X29)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X28) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X27)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X27))))) ) | $spl13),
  inference(subsumption_resolution,[],[f2477,f596])).
fof(f2499,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2))) ) | $spl62),
  inference(cnf_transformation,[],[f2499_D])).
fof(f2499_D,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,X2))) ) <=> ~$spl62),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl62])])).
fof(f2498,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(forward_demodulation,[],[f2472,f351])).
fof(f2472,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X1),s(bool,X2)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int',sK13)))) | p(s(bool,X2)) | sP0(X0,sK13,X1) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))) )),
  inference(superposition,[],[f889,f350])).
fof(f2149,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl60),
  inference(cnf_transformation,[],[f2149_D])).
fof(f2149_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl60),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl60])])).
fof(f2136,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK14),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK14)))) | $spl9),
  inference(equality_resolution,[],[f556])).
fof(f556,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl9),
  inference(forward_demodulation,[],[f554,f351])).
fof(f554,plain,(
  ( ! [X0] : (s('type.integer.int',sK14) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) ) | $spl9),
  inference(superposition,[],[f551,f350])).
fof(f1808,plain,(
  ( ! [X14,X12,X10,X13,X11] : (p(s(bool,X10)) | s('type.integer.int',X11) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X12),s('type.integer.int',X13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X10),s(bool,X14)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int',X13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X14)) | s('type.integer.int',X12) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X11),s('type.integer.int',X13))),s('type.integer.int',sK13)))) ) | $spl23),
  inference(resolution,[],[f1686,f302])).
fof(f1806,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int',X3))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X3),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X4)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X4)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int',X3))),s('type.integer.int',sK13)))) ) | $spl23),
  inference(resolution,[],[f1686,f300])).
fof(f1572,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X3)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl14),
  inference(resolution,[],[f599,f302])).
fof(f1563,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl13),
  inference(forward_demodulation,[],[f1448,f352])).
fof(f1448,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl13),
  inference(resolution,[],[f596,f301])).
fof(f1428,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | ~p(s(bool,X33))) ) | $spl52),
  inference(cnf_transformation,[],[f1428_D])).
fof(f1428_D,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | ~p(s(bool,X33))) ) <=> ~$spl52),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl52])])).
fof(f871,plain,(
  ( ! [X31] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31)))) | s('type.integer.int',sK14) != s('type.integer.int',X31)) ) | $spl28),
  inference(cnf_transformation,[],[f871_D])).
fof(f871_D,plain,(
  ( ! [X31] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31)))) | s('type.integer.int',sK14) != s('type.integer.int',X31)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f1427,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f1426,f351])).
fof(f1426,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f1410,f303])).
fof(f1410,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,X33)) | sP0(X34,sK13,X32) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(superposition,[],[f535,f350])).
fof(f1188,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) | $spl40),
  inference(cnf_transformation,[],[f1188_D])).
fof(f1188_D,plain,(
  ( ! [X8,X11] : (~p(s(bool,X8)) | ~p(s(bool,X11)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11))))) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f1391,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X11))) ) | $spl14),
  inference(forward_demodulation,[],[f1390,f352])).
fof(f1390,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl14),
  inference(subsumption_resolution,[],[f1387,f521])).
fof(f1387,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl14),
  inference(resolution,[],[f1176,f302])).
fof(f1389,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) | $spl50),
  inference(cnf_transformation,[],[f1389_D])).
fof(f1389_D,plain,(
  ( ! [X4,X7] : (~p(s(bool,X4)) | p(s(bool,X7)) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7))))) ) <=> ~$spl50),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl50])])).
fof(f1388,plain,(
  ( ! [X6,X4,X7,X5] : (s('type.integer.int',X6) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13))) | ~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X7))) ) | $spl14),
  inference(forward_demodulation,[],[f1386,f352])).
fof(f1386,plain,(
  ( ! [X6,X4,X7,X5] : (~p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X7)) | s('type.integer.int',X6) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl14),
  inference(resolution,[],[f1176,f301])).
fof(f598,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl15),
  inference(cnf_transformation,[],[f598_D])).
fof(f598_D,plain,(
  ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f1320,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl13),
  inference(resolution,[],[f724,f302])).
fof(f724,plain,(
  ( ! [X4] : (~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4) | p(s(bool,X4))) ) | $spl13),
  inference(resolution,[],[f596,f297])).
fof(f599,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl14),
  inference(cnf_transformation,[],[f599_D])).
fof(f599_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f1319,plain,(
  ( ! [X6,X4,X7,X5] : (p(s(bool,X4)) | s('type.integer.int',X5) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X6),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X4),s(bool,X7)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,X7)) | s('type.integer.int',X6) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X5),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl13),
  inference(resolution,[],[f724,f301])).
fof(f1318,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,X0)) | s('type.integer.int',X1) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X0),s(bool,X3)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | p(s(bool,X3)) | s('type.integer.int',X2) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl13),
  inference(resolution,[],[f724,f300])).
fof(f1316,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))) | p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11))) ) | ($spl12 | $spl15)),
  inference(forward_demodulation,[],[f1315,f352])).
fof(f1315,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl15)),
  inference(subsumption_resolution,[],[f1314,f521])).
fof(f1314,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl15)),
  inference(subsumption_resolution,[],[f1313,f597])).
fof(f1313,plain,(
  ( ! [X10,X8,X11,X9] : (p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl15),
  inference(resolution,[],[f1190,f302])).
fof(f1189,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl15),
  inference(resolution,[],[f598,f301])).
fof(f1187,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.integer.int',X10) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))) | ~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11))) ) | ($spl12 | $spl14)),
  inference(forward_demodulation,[],[f1186,f352])).
fof(f1186,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl14)),
  inference(subsumption_resolution,[],[f1185,f521])).
fof(f1185,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | ($spl12 | $spl14)),
  inference(subsumption_resolution,[],[f1184,f597])).
fof(f1184,plain,(
  ( ! [X10,X8,X11,X9] : (~p(s(bool,X8)) | s('type.integer.int',X9) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X10),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X8),s(bool,X11)))) | ~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X11)) | s('type.integer.int',X10) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X9),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl14),
  inference(resolution,[],[f1176,f302])).
fof(f1062,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13)))) | ~p(s(bool,X3)) | sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',sK13)))) ) | $spl14),
  inference(resolution,[],[f599,f302])).
fof(f1043,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,X33))) ) | $spl32),
  inference(cnf_transformation,[],[f1043_D])).
fof(f1043_D,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,X33))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1042,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f1041,f351])).
fof(f1041,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f1025,f303])).
fof(f1025,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X34)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(superposition,[],[f533,f350])).
fof(f906,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl12),
  inference(resolution,[],[f597,f299])).
fof(f1016,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl12),
  inference(forward_demodulation,[],[f1015,f352])).
fof(f1015,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(subsumption_resolution,[],[f905,f521])).
fof(f905,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(resolution,[],[f597,f302])).
fof(f870,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,X33))) ) | $spl26),
  inference(cnf_transformation,[],[f870_D])).
fof(f870_D,plain,(
  ( ! [X33,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,X33))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f869,plain,(
  ( ! [X33,X31,X34,X32] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X31),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f868,f351])).
fof(f868,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int',X34))) | s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(forward_demodulation,[],[f852,f303])).
fof(f852,plain,(
  ( ! [X33,X31,X34,X32] : (s('type.integer.int',sK14) != s('type.integer.int',X31) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X32),s(bool,X33)))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X34),s('type.integer.int',sK13)))) | p(s(bool,X33)) | sP0(X34,sK13,X32) | s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))),s('type.integer.int',X34))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X31)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X31))))) )),
  inference(superposition,[],[f534,f350])).
fof(f838,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl13),
  inference(forward_demodulation,[],[f723,f352])).
fof(f723,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl13),
  inference(resolution,[],[f596,f301])).
fof(f601,plain,(
  ( ! [X4] : (~p(s(bool,'const.integer.int_le_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X4)) | ~sP0(sK13,'const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),X4)) ) | $spl12),
  inference(resolution,[],[f597,f299])).
fof(f711,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X1) != s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2)) ) | $spl12),
  inference(forward_demodulation,[],[f710,f352])).
fof(f710,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(subsumption_resolution,[],[f600,f521])).
fof(f600,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_div_2'(s('type.integer.int',X1),s('type.integer.int',sK13))) | ~p(s(bool,'const.bool.COND_3'(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s(bool,X2),s(bool,X3)))) | ~p(s(bool,'const.integer.int_le_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | ~p(s(bool,X3)) | sP0('const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')),sK13,X2) | s('type.integer.int',X1) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',X0),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) ) | $spl12),
  inference(resolution,[],[f597,f302])).
fof(f586,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',sK13),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))))),
  inference(equality_resolution,[],[f531])).
fof(f531,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(forward_demodulation,[],[f529,f351])).
fof(f529,plain,(
  ( ! [X0] : (s('type.integer.int',sK13) != s('type.integer.int',X0) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0))))) )),
  inference(superposition,[],[f295,f350])).
fof(f295,plain,(
  s('type.integer.int',sK13) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f191])).
fof(f549,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13)))))) | $spl6),
  inference(cnf_transformation,[],[f549_D])).
fof(f549_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f551,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl9),
  inference(cnf_transformation,[],[f551_D])).
fof(f551_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f553,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | $spl10),
  inference(cnf_transformation,[],[f553_D])).
fof(f553_D,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f547,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))))),
  inference(forward_demodulation,[],[f536,f351])).
fof(f536,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int',sK13))))))),
  inference(superposition,[],[f296,f350])).
fof(f544,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | $spl3),
  inference(cnf_transformation,[],[f544_D])).
fof(f544_D,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f540,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))),
  inference(forward_demodulation,[],[f532,f351])).
fof(f532,plain,(
  s('type.integer.int',sK14) != s('type.integer.int','const.integer.int_div_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK13))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14)))))))) | p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int',sK13),s('type.integer.int',sK14))))))),
  inference(superposition,[],[f296,f350])).
% SZS output end Proof for thm.integer
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 947
% Passive clauses: 6282
% Generated clauses: 33793
% Final active clauses: 490
% Final passive clauses: 2664
% Input formulas: 60
% Initial clauses: 227
% 
% Selected by SInE selection: 59
% SInE iterations: 1
% 
% Duplicate literals: 1667
% Trivial inequalities: 108
% Fw subsumption resolutions: 4499
% Fw demodulations: 7696
% Bw demodulations: 34
% 
% Simple tautologies: 2652
% Equational tautologies: 1
% Forward subsumptions: 11209
% 
% Binary resolution: 12032
% Forward superposition: 4102
% Backward superposition: 3102
% Equality resolution: 34
% 
% Split clauses: 281
% Split components: 611
% SAT solver clauses: 329
% SAT solver unit clauses: 15
% SAT solver binary clauses: 16
% 
% Sat splits: 281
% Sat splitting refutations: 42
% 
% Memory used [KB]: 10234
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% Success in time 12.434 s
