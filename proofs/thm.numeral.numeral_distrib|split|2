Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numeral
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numeral
% SZS output start Proof for thm.numeral
fof(f12496,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f12495])).
fof(f12495,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14)))),
  inference(forward_demodulation,[],[f12494,f381])).
fof(f381,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f94])).
fof(f94,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X8)))),
  file('thm.numeral.numeral_distrib|split|2','thm.arithmetic.NUMERAL_DEF')).
fof(f12494,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))),s('type.num.num',sK14)))),
  inference(forward_demodulation,[],[f12493,f380])).
fof(f380,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f93])).
fof(f93,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X8)))),
  file('thm.numeral.numeral_distrib|split|2','thm.numeral.iZ')).
fof(f12493,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))),s('type.num.num',sK14))) != s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14)))))),
  inference(forward_demodulation,[],[f12492,f381])).
fof(f12492,plain,(
  s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))),s('type.num.num',sK14))) != s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14)))))))),
  inference(forward_demodulation,[],[f368,f381])).
fof(f368,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14)))))),
  inference(cnf_transformation,[],[f247])).
fof(f247,plain,(
  s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK13),s('type.num.num',sK14))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK13))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',sK14)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK13,sK14])],[f196])).
fof(f196,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(ennf_transformation,[],[f89])).
fof(f89,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X7)))))),
  file('thm.numeral.numeral_distrib|split|2','thm.numeral.numeral_distrib|split|2')).
% SZS output end Proof for thm.numeral
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 579
% Passive clauses: 2595
% Generated clauses: 12117
% Final active clauses: 570
% Final passive clauses: 1769
% Input formulas: 87
% Initial clauses: 277
% 
% Duplicate literals: 181
% Trivial inequalities: 33
% Fw subsumption resolutions: 799
% Fw demodulations: 827
% Bw demodulations: 8
% 
% Simple tautologies: 204
% Equational tautologies: 21
% Forward subsumptions: 7432
% Fw demodulations to eq. taut.: 6
% 
% Binary resolution: 3958
% Factoring: 858
% Forward superposition: 2608
% Backward superposition: 2461
% Self superposition: 26
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 166
% Split components: 334
% SAT solver clauses: 271
% SAT solver unit clauses: 17
% SAT solver binary clauses: 51
% 
% Sat splits: 166
% 
% TWLsolver clauses: 271
% TWLsolver calls for satisfiability: 232
% 
% Memory used [KB]: 6140
% Time elapsed: 0.229 s
% ------------------------------
% ------------------------------
% Success in time 0.232 s
