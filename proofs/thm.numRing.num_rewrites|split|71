Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numRing
% SZS output start Proof for thm.numRing
fof(f14084,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f13940])).
fof(f13940,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num',sK1)))),
  inference(superposition,[],[f8067,f13469])).
fof(f13469,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))) )),
  inference(forward_demodulation,[],[f256,f608])).
fof(f608,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f199,f374])).
fof(f374,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(backward_demodulation,[],[f361,f185])).
fof(f185,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.numRing.num_rewrites|split|71','thm.arithmetic.ADD|split|0')).
fof(f361,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(superposition,[],[f191,f188])).
fof(f188,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f79])).
fof(f79,axiom,(
  ! [X10] : s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))),
  file('thm.numRing.num_rewrites|split|71','thm.numeral.numeral_mult|split|0')).
fof(f191,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X10] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.numRing.num_rewrites|split|71','thm.numeral.numeral_distrib|split|4')).
fof(f199,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f100])).
fof(f100,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))))),
  inference(rectify,[],[f50])).
fof(f50,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X10)))))),
  file('thm.numRing.num_rewrites|split|71','thm.numeral.numeral_add|split|0')).
fof(f256,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))))) )),
  inference(cnf_transformation,[],[f149])).
fof(f149,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))))),
  inference(rectify,[],[f82])).
fof(f82,axiom,(
  ! [X10,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X10))),s('type.num.num',X7))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X10),s('type.num.num',X7))),s('type.num.num',X7)))))))),
  file('thm.numRing.num_rewrites|split|71','thm.numeral.numeral_mult|split|3')).
fof(f8067,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK1)))))),
  inference(forward_demodulation,[],[f175,f608])).
fof(f175,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK1)))))))),
  inference(cnf_transformation,[],[f160])).
fof(f160,plain,(
  s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',sK0))),s('type.num.num',sK1))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',sK0),s('type.num.num',sK1))),s('type.num.num',sK1)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f158])).
fof(f158,plain,(
  ? [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) != s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0,X1] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X0))),s('type.num.num',X1))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X1)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num',X6))),s('type.num.num',X7))) = s('type.num.num','const.numeral.iDUB_1'(s('type.num.num','const.numeral.iZ_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.*_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X7)))))))),
  file('thm.numRing.num_rewrites|split|71','thm.numRing.num_rewrites|split|71')).
% SZS output end Proof for thm.numRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 214
% Passive clauses: 1465
% Generated clauses: 13765
% Final active clauses: 169
% Final passive clauses: 1034
% Input formulas: 81
% Initial clauses: 94
% 
% Duplicate literals: 183
% Trivial inequalities: 101
% Fw subsumption resolutions: 422
% Fw demodulations: 2393
% Bw demodulations: 38
% 
% Simple tautologies: 73
% Equational tautologies: 27
% Forward subsumptions: 9021
% Fw demodulations to eq. taut.: 11
% 
% Binary resolution: 30
% Forward superposition: 6226
% Backward superposition: 4190
% Self superposition: 100
% Equality factoring: 38
% Equality resolution: 11
% 
% Split clauses: 64
% Split components: 128
% SAT solver clauses: 113
% SAT solver unit clauses: 2
% SAT solver binary clauses: 45
% 
% Sat splits: 64
% Sat splitting refutations: 13
% 
% TWLsolver clauses: 113
% TWLsolver calls for satisfiability: 27
% 
% Memory used [KB]: 9594
% Time elapsed: 0.257 s
% ------------------------------
% ------------------------------
% Success in time 0.264 s
