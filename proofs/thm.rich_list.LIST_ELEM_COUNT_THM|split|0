Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f3474,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f3444])).
fof(f3444,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.num.|48|_0')),
  inference(superposition,[],[f174,f3402])).
fof(f3402,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f3372,f182])).
fof(f182,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X6] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.LIST_ELEM_COUNT_THM|split|0','thm.list.LENGTH|split|0')).
fof(f3372,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))) = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(superposition,[],[f234,f225])).
fof(f225,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f74])).
fof(f74,plain,(
  ! [X0] : ! [X1] : s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X6] : ! [X20] : s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),X20),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.LIST_ELEM_COUNT_THM|split|0','thm.list.FILTER|split|0')).
fof(f234,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s('type.list.list'(X0),X2)))))) )),
  inference(cnf_transformation,[],[f88])).
fof(f88,plain,(
  ! [X0,X1,X2] : s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f87])).
fof(f87,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.FILTER_2'(s(fun(X0,bool),'_dst_x1x0_2'(s(fun(X0,fun(X0,bool)),'=_0'),s(X0,X1))),s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f45])).
fof(f45,axiom,(
  ! [X6] : ! [X7,X29] : s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X6,X7),s('type.list.list'(X6),X29))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),'const.list.FILTER_2'(s(fun(X6,bool),'_dst_x1x0_2'(s(fun(X6,fun(X6,bool)),'=_0'),s(X6,X7))),s('type.list.list'(X6),X29)))))),
  file('thm.rich_list.LIST_ELEM_COUNT_THM|split|0','thm.rich_list.LIST_ELEM_COUNT_DEF')).
fof(f174,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(sK0,sK1),s('type.list.list'(sK0),'const.list.NIL_0')))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1])],[f111])).
fof(f111,plain,(
  ? [X0,X1] : s('type.num.num','const.num.|48|_0') != s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(ennf_transformation,[],[f49])).
fof(f49,plain,(
  ~! [X0,X1] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f48])).
fof(f48,plain,(
  ~! [X0] : ! [X1] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X0,X1),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.rich_list.LIST_ELEM_COUNT_2'(s(X6,X7),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.rich_list.LIST_ELEM_COUNT_THM|split|0','thm.rich_list.LIST_ELEM_COUNT_THM|split|0')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 66
% Passive clauses: 1078
% Generated clauses: 3185
% Final active clauses: 66
% Final passive clauses: 955
% Input formulas: 46
% Initial clauses: 102
% 
% Duplicate literals: 130
% Trivial inequalities: 52
% Fw subsumption resolutions: 332
% Fw demodulations: 161
% 
% Simple tautologies: 123
% Equational tautologies: 33
% Forward subsumptions: 1167
% 
% Binary resolution: 244
% Factoring: 1
% Forward superposition: 1214
% Backward superposition: 823
% Self superposition: 63
% Equality factoring: 50
% Equality resolution: 15
% 
% Split clauses: 91
% Split components: 192
% SAT solver clauses: 137
% SAT solver unit clauses: 13
% SAT solver binary clauses: 72
% 
% Sat splits: 91
% 
% TWLsolver clauses: 137
% TWLsolver calls for satisfiability: 55
% 
% Memory used [KB]: 2558
% Time elapsed: 0.106 s
% ------------------------------
% ------------------------------
% Success in time 0.109 s
