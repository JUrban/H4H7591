Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.frac
% (103832)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 734
% Passive clauses: 7994
% Generated clauses: 21958
% Final active clauses: 682
% Final passive clauses: 6777
% Input formulas: 48
% Initial clauses: 159
% 
% Duplicate literals: 891
% Trivial inequalities: 198
% Fw subsumption resolutions: 2519
% Fw demodulations: 394
% Bw demodulations: 51
% 
% Simple tautologies: 268
% Equational tautologies: 75
% Forward subsumptions: 8636
% 
% Binary resolution: 9279
% Factoring: 1406
% Forward superposition: 3173
% Backward superposition: 3499
% Self superposition: 53
% Equality factoring: 52
% Equality resolution: 39
% 
% Split clauses: 662
% Split components: 1331
% SAT solver clauses: 1108
% SAT solver unit clauses: 31
% SAT solver binary clauses: 246
% 
% Sat splits: 662
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 1106
% TWLsolver calls for satisfiability: 446
% 
% Memory used [KB]: 8571
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.frac
% (103851)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 408
% Passive clauses: 2215
% Generated clauses: 13016
% Final active clauses: 342
% Final passive clauses: 1541
% Input formulas: 48
% Initial clauses: 159
% 
% Duplicate literals: 385
% Trivial inequalities: 62
% Fw subsumption resolutions: 1207
% Fw demodulations: 482
% Bw demodulations: 229
% Condensations: 318
% Global subsumptions: 22
% 
% Simple tautologies: 274
% Equational tautologies: 24
% Forward subsumptions: 5382
% Bw demodulations to eq. taut.: 84
% 
% Binary resolution: 3151
% Factoring: 99
% Forward superposition: 2108
% Backward superposition: 2150
% Self superposition: 52
% Equality factoring: 38
% Equality resolution: 10
% 
% Split clauses: 194
% Split components: 390
% SAT solver clauses: 2850
% SAT solver unit clauses: 181
% SAT solver binary clauses: 72
% SAT solver learnt clauses: 44
% SAT solver learnt literals: 10
% 
% Sat splits: 194
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2762
% TWLsolver calls for satisfiability: 1247
% 
% Memory used [KB]: 10874
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.frac
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.frac
% SZS output start Proof for thm.frac
fof(f17921,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f17916])).
fof(f17916,plain,(
  s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))))))) != s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK8),s('type.integer.int',sK9)))))))),
  inference(superposition,[],[f225,f878])).
fof(f878,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int',sK9))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) )),
  inference(forward_demodulation,[],[f877,f846])).
fof(f846,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))) )),
  inference(superposition,[],[f233,f838])).
fof(f838,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))) )),
  inference(subsumption_resolution,[],[f835,f226])).
fof(f226,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.frac.FRAC_MINV_CALCULATE',aHL_TRUTH)).
fof(f835,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))) )),
  inference(superposition,[],[f306,f419])).
fof(f419,plain,(
  s(bool,'T_0') = s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK9)))),
  inference(unit_resulting_resolution,[],[f223,f248])).
fof(f248,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f33])).
fof(f33,axiom,(
  ! [X8] : (s(bool,'T_0') = s(bool,X8) <=> p(s(bool,X8)))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.bool.EQ_CLAUSES|split|0')).
fof(f223,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK9))))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',sK9)))) & s('type.integer.int',sK8) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))),s('type.integer.int',sK9))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK8,sK9])],[f114])).
fof(f114,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) & s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0))))))))),
  inference(flattening,[],[f113])).
fof(f113,plain,(
  ? [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) & s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))))),
  inference(ennf_transformation,[],[f51])).
fof(f51,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))))),
  inference(flattening,[],[f50])).
fof(f50,plain,(
  ~! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => (~s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))),s('type.integer.int',X1))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))),s('type.integer.int',X7))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6)))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X7)))) => (~s('type.integer.int',X6) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X6),s('type.integer.int',X7))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X6))),s('type.integer.int',X7))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X6)))))))))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.frac.FRAC_MINV_CALCULATE')).
fof(f306,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f128])).
fof(f128,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f97])).
fof(f97,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X0) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X15,X16] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) => s('type.integer.int',X15) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))))))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.frac.NMR')).
fof(f233,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X14] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X14))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14)))))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.frac.frac_sgn_def')).
fof(f877,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9))))))),s('type.integer.int',sK9))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',X0)))))))) )),
  inference(forward_demodulation,[],[f873,f838])).
fof(f873,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9))))))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9))))))),s('type.integer.int',sK9))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))))))))) )),
  inference(superposition,[],[f234,f855])).
fof(f855,plain,(
  ( ! [X0] : (s('type.integer.int',sK9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))) )),
  inference(subsumption_resolution,[],[f851,f226])).
fof(f851,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.integer.int',sK9) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',sK9)))))))) )),
  inference(superposition,[],[f307,f419])).
fof(f307,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))))) )),
  inference(cnf_transformation,[],[f129])).
fof(f129,plain,(
  ! [X0,X1] : (~p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) | s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(ennf_transformation,[],[f98])).
fof(f98,plain,(
  ! [X0,X1] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X1)))) => s('type.integer.int',X1) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X0),s('type.integer.int',X1))))))))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X15,X16] : (p(s(bool,'const.integer.int_lt_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X16)))) => s('type.integer.int',X16) = s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',X15),s('type.integer.int',X16))))))))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.frac.DNM')).
fof(f234,plain,(
  ( ! [X0] : (s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X0))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X0))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))))))),
  inference(rectify,[],[f39])).
fof(f39,axiom,(
  ! [X14] : s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac',X14))) = s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X14))),s('type.integer.int','const.frac.frac_dnm_1'(s('type.frac.frac',X14))))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X14)))))))))),
  file('thm.frac.FRAC_MINV_CALCULATE','thm.frac.frac_minv_def')).
fof(f225,plain,(
  s('type.frac.frac','const.frac.frac_minv_1'(s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int',sK8),s('type.integer.int',sK9))))))) != s('type.frac.frac','const.frac.abs_frac_1'(s('type.pair.prod'('type.integer.int','type.integer.int'),'const.pair.,_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',sK8))),s('type.integer.int',sK9))),s('type.integer.int','const.integer.ABS_1'(s('type.integer.int',sK8)))))))),
  inference(cnf_transformation,[],[f150])).
% SZS output end Proof for thm.frac
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 407
% Passive clauses: 1118
% Generated clauses: 17504
% Final active clauses: 309
% Final passive clauses: 376
% Input formulas: 48
% Initial clauses: 159
% 
% Duplicate literals: 1743
% Trivial inequalities: 117
% Fw subsumption resolutions: 1102
% Fw demodulations: 932
% Bw demodulations: 58
% Condensations: 2475
% Global subsumptions: 38
% 
% Simple tautologies: 177
% Equational tautologies: 357
% Forward subsumptions: 9098
% Bw demodulations to eq. taut.: 19
% 
% Unit resulting resolution: 3016
% Factoring: 1
% Forward superposition: 4128
% Backward superposition: 2981
% Self superposition: 183
% Equality factoring: 140
% Equality resolution: 5
% 
% Split clauses: 175
% Split components: 382
% SAT solver clauses: 1743
% SAT solver unit clauses: 259
% SAT solver binary clauses: 434
% 
% Sat splits: 175
% Sat splitting refutations: 235
% 
% Memory used [KB]: 7036
% Time elapsed: 1.018 s
% ------------------------------
% ------------------------------
% Success in time 2.346 s
