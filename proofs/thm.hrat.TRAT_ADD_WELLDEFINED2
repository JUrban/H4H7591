Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.hrat
% (90317)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 147
% Passive clauses: 1840
% Generated clauses: 23078
% Final active clauses: 136
% Final passive clauses: 1525
% Input formulas: 13
% Initial clauses: 19
% 
% Duplicate literals: 1304
% Trivial inequalities: 249
% Fw subsumption resolutions: 3650
% Fw demodulations: 3105
% Bw demodulations: 10
% 
% Simple tautologies: 456
% Equational tautologies: 58
% Forward subsumptions: 10048
% 
% Binary resolution: 486
% Forward superposition: 5590
% Backward superposition: 8031
% Self superposition: 204
% Equality factoring: 161
% Equality resolution: 24
% 
% Split clauses: 1390
% Split components: 2864
% SAT solver clauses: 2164
% SAT solver unit clauses: 40
% SAT solver binary clauses: 396
% 
% Sat splits: 1390
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 2160
% TWLsolver calls for satisfiability: 182
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.hrat
% (90331)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 116
% Passive clauses: 388
% Generated clauses: 11778
% Final active clauses: 87
% Final passive clauses: 188
% Input formulas: 13
% Initial clauses: 19
% 
% Duplicate literals: 1225
% Trivial inequalities: 97
% Fw subsumption resolutions: 1244
% Fw demodulations: 900
% Bw demodulations: 89
% Condensations: 1705
% 
% Simple tautologies: 249
% Equational tautologies: 41
% Forward subsumptions: 4790
% Bw demodulations to eq. taut.: 16
% 
% Binary resolution: 252
% Factoring: 1
% Forward superposition: 2971
% Backward superposition: 2595
% Self superposition: 138
% Equality factoring: 116
% Equality resolution: 15
% 
% Split clauses: 211
% Split components: 423
% SAT solver clauses: 1173
% SAT solver unit clauses: 26
% SAT solver binary clauses: 54
% 
% Sat splits: 211
% Sat splitting refutations: 14
% 
% TWLsolver clauses: 1173
% TWLsolver calls for satisfiability: 154
% 
% Memory used [KB]: 7291
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 286 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.hrat
% (90350)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 413
% Passive clauses: 2846
% Generated clauses: 141333
% Final active clauses: 123
% Final passive clauses: 677
% Input formulas: 13
% Initial clauses: 19
% Discarded non-redundant clauses: 2774
% 
% Duplicate literals: 8958
% Trivial inequalities: 1426
% Fw subsumption resolutions: 16929
% Fw demodulations: 13534
% Bw demodulations: 1257
% Condensations: 20393
% Global subsumptions: 190
% 
% Simple tautologies: 1628
% Equational tautologies: 577
% Forward subsumptions: 72124
% Fw demodulations to eq. taut.: 37
% Bw demodulations to eq. taut.: 40
% 
% Unit resulting resolution: 2116
% Forward superposition: 38488
% Backward superposition: 34164
% Self superposition: 926
% Equality factoring: 552
% Equality resolution: 80
% 
% Split clauses: 357
% Split components: 728
% SAT solver clauses: 3907
% SAT solver unit clauses: 134
% SAT solver binary clauses: 494
% 
% Sat splits: 357
% Sat splitting refutations: 155
% 
% Memory used [KB]: 60382
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 182 next slice time: 39
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.hrat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.hrat
% SZS output start Proof for thm.hrat
fof(f953,plain,(
  $false),
  inference(subsumption_resolution,[],[f933,f254])).
fof(f254,plain,(
  ( ! [X0] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))) )),
  inference(superposition,[],[f56,f40])).
fof(f40,plain,(
  ( ! [X0,X1] : (s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) )),
  inference(cnf_transformation,[],[f17])).
fof(f17,plain,(
  ! [X0,X1] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X14,X15] : s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X14),s('type.pair.prod'('type.num.num','type.num.num'),X15))) = s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X15),s('type.pair.prod'('type.num.num','type.num.num'),X14)))),
  file('thm.hrat.TRAT_ADD_WELLDEFINED2','thm.hrat.TRAT_ADD_SYM_EQ')).
fof(f56,plain,(
  ( ! [X2] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))))) )),
  inference(resolution,[],[f36,f39])).
fof(f39,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))))),
  inference(ennf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X11,X12,X13] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X12)))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X13))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X13)))))))),
  file('thm.hrat.TRAT_ADD_WELLDEFINED2','thm.hrat.TRAT_ADD_WELLDEFINED')).
fof(f36,plain,(
  p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1))))),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK1)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3)))) & ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f27])).
fof(f27,plain,(
  ? [X0,X1,X2,X3] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3)))) & ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ? [X0,X1,X2,X3] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) & ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2,X3] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X2),s('type.pair.prod'('type.num.num','type.num.num'),X3))))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X3)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8,X9] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X9))))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X9)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8,X9] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X7)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X8),s('type.pair.prod'('type.num.num','type.num.num'),X9))))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X6),s('type.pair.prod'('type.num.num','type.num.num'),X8))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X7),s('type.pair.prod'('type.num.num','type.num.num'),X9)))))))),
  file('thm.hrat.TRAT_ADD_WELLDEFINED2','thm.hrat.TRAT_ADD_WELLDEFINED2')).
fof(f933,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),sK0))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(resolution,[],[f298,f134])).
fof(f134,plain,(
  ( ! [X0] : (~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),X0)))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))) )),
  inference(resolution,[],[f38,f41])).
fof(f41,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1))))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2)))) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) | ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))) | p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(ennf_transformation,[],[f18])).
fof(f18,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X1)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X1),s('type.pair.prod'('type.num.num','type.num.num'),X2))))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),X2)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11,X12,X13] : ((p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X12)))) & p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X12),s('type.pair.prod'('type.num.num','type.num.num'),X13))))) => p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),X11),s('type.pair.prod'('type.num.num','type.num.num'),X13)))))),
  file('thm.hrat.TRAT_ADD_WELLDEFINED2','thm.hrat.TRAT_EQ_TRANS')).
fof(f38,plain,(
  ~p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK1),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))))),
  inference(cnf_transformation,[],[f31])).
fof(f298,plain,(
  ( ! [X0] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),X0),s('type.pair.prod'('type.num.num','type.num.num'),sK2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),X0))))))) )),
  inference(superposition,[],[f70,f40])).
fof(f70,plain,(
  ( ! [X2] : (p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),X2))),s('type.pair.prod'('type.num.num','type.num.num'),'const.hrat.trat_add_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK3),s('type.pair.prod'('type.num.num','type.num.num'),X2))))))) )),
  inference(resolution,[],[f37,f39])).
fof(f37,plain,(
  p(s(bool,'const.hrat.trat_eq_2'(s('type.pair.prod'('type.num.num','type.num.num'),sK2),s('type.pair.prod'('type.num.num','type.num.num'),sK3))))),
  inference(cnf_transformation,[],[f31])).
% SZS output end Proof for thm.hrat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 59
% Passive clauses: 286
% Generated clauses: 888
% Final active clauses: 52
% Final passive clauses: 186
% Input formulas: 13
% Initial clauses: 18
% 
% Selected by SInE selection: 12
% SInE iterations: 1
% 
% Trivial inequalities: 31
% Fw subsumption resolutions: 70
% Fw demodulations: 66
% Bw demodulations: 7
% 
% Simple tautologies: 2
% Forward subsumptions: 464
% 
% Binary resolution: 233
% Forward superposition: 328
% Backward superposition: 146
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 6
% SAT solver binary clauses: 5
% 
% Sat splits: 5
% 
% Memory used [KB]: 1151
% Time elapsed: 0.039 s
% ------------------------------
% ------------------------------
% Success in time 11.736 s
