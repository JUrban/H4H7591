Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f4709,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4708,f211,f375,f213,f378,f376,f374,f922,f939,f940,f212,f380,f379])).
fof(f379,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X5))))) ) | $spl6),
  inference(cnf_transformation,[],[f379_D])).
fof(f379_D,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X5))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f380,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,X4))))))) ) | $spl8),
  inference(cnf_transformation,[],[f380_D])).
fof(f380_D,plain,(
  ( ! [X4] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,X4))))))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f212,plain,(
  ( ! [X4,X5] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,X4)))))) | p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X5))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  (! [X5] : p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X5)))) | (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,X4)))))))) & (~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),sK14)))) | ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) | ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,sK15)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12,sK13,sK14,sK15])],[f138])).
fof(f138,plain,(
  ? [X0,X1] : ((! [X5] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X5)))) | (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X4] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X4)))))))) & (? [X3] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X3)))) | ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X2] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))))),
  inference(rectify,[],[f137])).
fof(f137,plain,(
  ? [X0,X1] : ((! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) | (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3)))))))) & (? [X2] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) | ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X3] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))))))))),
  inference(flattening,[],[f136])).
fof(f136,plain,(
  ? [X0,X1] : ((! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) | (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3)))))))) & (? [X2] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) | (~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X3] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3)))))))))),
  inference(nnf_transformation,[],[f93])).
fof(f93,plain,(
  ? [X0,X1] : (! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) <~> (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))))))))),
  inference(ennf_transformation,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : (! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))))))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ~! [X0] : ! [X1] : (! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))) <=> (p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (! [X8] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),X8)))) <=> (p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.NONE_0')))) & ! [X9] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X9))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (! [X8] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),X8)))) <=> (p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.NONE_0')))) & ! [X9] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X9))))))))),
  file('thm.option.FORALL_OPTION','thm.option.FORALL_OPTION')).
fof(f940,plain,(
  $false | ($spl5 | $spl6)),
  inference(subsumption_resolution,[],[f378,f379])).
fof(f939,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f376,f379])).
fof(f922,plain,(
  $false | ($spl1 | $spl6)),
  inference(resolution,[],[f379,f374])).
fof(f374,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),sK14)))) | $spl1),
  inference(cnf_transformation,[],[f374_D])).
fof(f374_D,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),sK14)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f376,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) | $spl3),
  inference(cnf_transformation,[],[f376_D])).
fof(f376_D,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f378,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,sK15)))))) | $spl5),
  inference(cnf_transformation,[],[f378_D])).
fof(f378_D,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,sK15)))))) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f213,plain,(
  ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,sK15)))))) | ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) | ~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),sK14))))),
  inference(cnf_transformation,[],[f139])).
fof(f375,plain,(
  p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) | $spl2),
  inference(cnf_transformation,[],[f375_D])).
fof(f375_D,plain,(
  p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f211,plain,(
  ( ! [X5] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.NONE_0')))) | p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X5))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f4708,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X0))))) ) | ($spl2 | $spl8)),
  inference(subsumption_resolution,[],[f4683,f380])).
fof(f4683,plain,(
  ( ! [X0] : (~p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),'const.option.SOME_1'(s(sK12,sK16(sK13,sK12))))))) | p(s(bool,happ(s(fun('type.option.option'(sK12),bool),sK13),s('type.option.option'(sK12),X0))))) ) | $spl2),
  inference(resolution,[],[f255,f375])).
fof(f255,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK16(X1,X0))))))) | p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,sK16(X1,X0))))))) | ! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK16])],[f158])).
fof(f158,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X3] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X3)))))) | ! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X2)))))),
  inference(rectify,[],[f104])).
fof(f104,plain,(
  ! [X0,X1] : (~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X2] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2)))))) | ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X3)))))),
  inference(flattening,[],[f103])).
fof(f103,plain,(
  ! [X0,X1] : ((~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) | ? [X2] : ~p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))) | ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X3)))))),
  inference(ennf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1] : ((p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))) => ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X3)))))),
  inference(flattening,[],[f65])).
fof(f65,plain,(
  ! [X0] : ! [X1] : ((p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.NONE_0')))) & ! [X2] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X2))))))) => ! [X3] : p(s(bool,happ(s(fun('type.option.option'(X0),bool),X1),s('type.option.option'(X0),X3)))))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X6] : ! [X7] : ((p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.NONE_0')))) & ! [X15] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),'const.option.SOME_1'(s(X6,X15))))))) => ! [X9] : p(s(bool,happ(s(fun('type.option.option'(X6),bool),X7),s('type.option.option'(X6),X9)))))),
  file('thm.option.FORALL_OPTION','thm.option.option_induction')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 361
% Passive clauses: 1616
% Generated clauses: 4496
% Final active clauses: 352
% Final passive clauses: 1018
% Input formulas: 36
% Initial clauses: 158
% 
% Duplicate literals: 151
% Trivial inequalities: 14
% Fw subsumption resolutions: 299
% Fw demodulations: 31
% Bw demodulations: 1
% 
% Simple tautologies: 144
% Equational tautologies: 22
% Forward subsumptions: 2212
% 
% Binary resolution: 2739
% Factoring: 715
% Forward superposition: 125
% Backward superposition: 210
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 8
% 
% Split clauses: 87
% Split components: 176
% SAT solver clauses: 171
% SAT solver unit clauses: 7
% SAT solver binary clauses: 36
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 87
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 169
% TWLsolver calls for satisfiability: 147
% 
% Memory used [KB]: 2302
% Time elapsed: 0.107 s
% ------------------------------
% ------------------------------
% Success in time 0.109 s
