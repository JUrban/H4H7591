Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% (8346)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 148
% Passive clauses: 4321
% Generated clauses: 18544
% Final active clauses: 115
% Final passive clauses: 3875
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 826
% Trivial inequalities: 206
% Fw subsumption resolutions: 2010
% Fw demodulations: 1836
% Bw demodulations: 29
% 
% Simple tautologies: 256
% Equational tautologies: 80
% Forward subsumptions: 7964
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 304
% Factoring: 2
% Forward superposition: 7197
% Backward superposition: 5482
% Self superposition: 254
% Equality factoring: 186
% Equality resolution: 18
% 
% Split clauses: 390
% Split components: 798
% SAT solver clauses: 1150
% SAT solver unit clauses: 26
% SAT solver binary clauses: 236
% 
% Sat splits: 390
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1149
% TWLsolver calls for satisfiability: 173
% 
% Memory used [KB]: 9978
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quantHeuristics
% (8366)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 111
% Passive clauses: 954
% Generated clauses: 16378
% Final active clauses: 103
% Final passive clauses: 793
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 993
% Trivial inequalities: 197
% Fw subsumption resolutions: 898
% Fw demodulations: 1207
% Bw demodulations: 57
% Condensations: 2333
% 
% Simple tautologies: 243
% Equational tautologies: 29
% Forward subsumptions: 7459
% 
% Binary resolution: 111
% Factoring: 1
% Forward superposition: 4851
% Backward superposition: 4437
% Self superposition: 193
% Equality factoring: 82
% Equality resolution: 16
% 
% Split clauses: 134
% Split components: 268
% SAT solver clauses: 1656
% SAT solver unit clauses: 41
% SAT solver binary clauses: 60
% 
% Sat splits: 133
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 1656
% TWLsolver calls for satisfiability: 263
% 
% Memory used [KB]: 14967
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f4403,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f69,f104,f103,f68,f106,f67,f108,f102,f137,f142,f140,f170,f174,f172,f187,f485,f504,f502,f892,f901,f899,f1088,f1092,f1090,f1115,f1116,f1117,f1119,f1187,f1274,f1670,f1673,f1660,f1675,f1676,f1820,f1864,f1862,f1887,f1890,f1888,f1976,f1979,f171,f1977,f2216,f2217,f2224,f2221,f2218,f2219,f2227,f2220,f2229,f2222,f2226,f2234,f2235,f2236,f2238,f2337,f3903,f4386,f4401])).
fof(f4401,plain,(
  $false | ($spl1 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f4400,f70])).
fof(f70,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9',aHL_TRUTH)).
fof(f4400,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f4387,f138])).
fof(f138,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(subsumption_resolution,[],[f135,f73])).
fof(f73,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f25])).
fof(f25,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9',aHL_FALSITY)).
fof(f135,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1))) | $spl6),
  inference(superposition,[],[f115,f77])).
fof(f77,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9',aHL_BOOL_CASES)).
fof(f115,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | $spl6),
  inference(forward_demodulation,[],[f108,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X20,X19] : s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.GREATER_EQ')).
fof(f4387,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f103,f113])).
fof(f113,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num',X1)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))) )),
  inference(forward_demodulation,[],[f111,f94])).
fof(f111,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(backward_demodulation,[],[f94,f84])).
fof(f84,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X2,X1,X0))))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X2,X1,X0)),s('type.list.list'(X0),sK9(X2,X1,X0)))))))))))))) & (! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK9,sK10,sK11,sK12,sK13,sK14])],[f57])).
fof(f57,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X9)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X9))))))))))))) & (! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(rectify,[],[f56])).
fof(f56,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) | ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))))) & (! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2)))))) <=> ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8)))))) <=> ? [X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X9)))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.quantHeuristics.LIST_LENGTH_5|split|8')).
fof(f4386,plain,(
  $false | ($spl1 | $spl4 | $spl6 | $spl16)),
  inference(subsumption_resolution,[],[f4385,f70])).
fof(f4385,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl4 | $spl6 | $spl16)),
  inference(forward_demodulation,[],[f4372,f138])).
fof(f4372,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl1 | $spl4 | $spl16)),
  inference(unit_resulting_resolution,[],[f106,f3939,f113])).
fof(f3939,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ($spl1 | $spl16)),
  inference(global_subsumption,[],[f3911,f69,f68,f67,f70,f71,f72,f74,f75,f76,f77,f79,f78,f80,f84,f83,f82,f92,f91,f90,f89,f95,f100,f97,f101,f103,f131,f133,f137,f170,f173,f174,f73,f81,f158,f231,f246,f268,f338,f374,f445,f446,f451,f452,f485,f526,f568,f569,f586,f601,f602,f672,f890,f951,f961,f970,f973,f983,f1047,f1088,f1094,f1050,f1109,f1147,f1146,f1148,f1424,f1426,f1427,f1447,f1448,f1449,f1887,f1890,f1976,f1979,f2078,f2077,f2080,f2197,f2199,f2201,f1885,f1883,f1882,f85,f1972,f1971,f87,f1974,f1969,f1880,f1631,f1627,f1625,f1970,f1968,f1881,f1879,f935,f930,f928,f600,f567,f299,f93,f915,f114,f927,f1623,f94,f356,f566,f599,f1878,f1967,f110,f113,f112,f2203,f2205,f2207,f2750,f2751,f2752,f2753,f2782,f2783,f2784,f2785,f2788,f2992,f2993,f2978,f2979,f2980,f2981,f3070,f3072,f3074,f3076,f3077,f3134,f3135,f3106,f3107,f3108,f3109,f3110,f3111,f3137,f3113,f3114,f3138,f3116,f3139,f3141,f3143,f3145,f3146,f3147,f3148,f3125,f3126,f3150,f3273,f3286,f3342,f3353,f3256,f3261,f3266,f3269,f3270,f3506,f3518,f3520,f3540,f3554,f3448,f3474,f3615,f3622,f3623,f3737,f3707,f3712,f3713,f3715,f3716,f3718,f3751,f3753,f3730,f3760,f3891,f3893,f3861,f3895,f3896,f3897,f3865,f3866,f3867,f3898,f3869,f3870,f3871,f3872,f3874,f3899,f3900,f3901,f3878,f3879,f3880,f3881,f3882,f3904])).
fof(f3904,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X1,X2,X0)),s('type.list.list'(X0),sK9(X1,X2,X0)))))))))))) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f3885,f70])).
fof(f3885,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X1,X2,X0)),s('type.list.list'(X0),sK9(X1,X2,X0)))))))))))) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f110,f131])).
fof(f3882,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2)))))) | s('type.list.list'(X3),X4) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK10(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK11(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK12(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK13(X4,X2,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK14(X4,X2,X3)),s('type.list.list'(X3),sK9(X4,X2,X3))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f3881,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X1,'const.num.|48|_0',X0)),s('type.list.list'(X0),sK9(X1,'const.num.|48|_0',X0))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3880,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X45),X46) = s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK10(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK11(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK12(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK13(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),'const.list.CONS_2'(s(X45,sK14(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)),s('type.list.list'(X45),sK9(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3879,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X41),X42) = s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK10(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK11(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK12(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK13(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),'const.list.CONS_2'(s(X41,sK14(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)),s('type.list.list'(X41),sK9(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3878,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK10(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK11(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK12(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK13(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK14(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK9(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))) )),
  inference(superposition,[],[f110,f72])).
fof(f3901,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK10(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK11(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK12(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK13(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK14(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK9(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))) )),
  inference(forward_demodulation,[],[f3877,f75])).
fof(f3877,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X35),X36) = s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK10(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK11(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK12(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK13(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),'const.list.CONS_2'(s(X35,sK14(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)),s('type.list.list'(X35),sK9(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35))))))))))))) )),
  inference(superposition,[],[f110,f71])).
fof(f3900,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK10(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK11(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK12(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK13(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK14(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK9(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))) )),
  inference(forward_demodulation,[],[f3876,f75])).
fof(f3876,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X33),X34) = s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK10(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK11(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK12(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK13(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),'const.list.CONS_2'(s(X33,sK14(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)),s('type.list.list'(X33),sK9(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33))))))))))))) )),
  inference(superposition,[],[f110,f74])).
fof(f3899,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK10(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK11(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK12(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK13(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK14(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK9(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))) )),
  inference(forward_demodulation,[],[f3875,f75])).
fof(f3875,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X30),X31) = s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK10(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK11(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK12(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK13(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),'const.list.CONS_2'(s(X30,sK14(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)),s('type.list.list'(X30),sK9(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30))))))))))))) )),
  inference(superposition,[],[f110,f76])).
fof(f3874,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X28) = s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK10(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK11(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK12(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK13(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,sK14(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)),s('type.list.list'(X27),sK9(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27))))))))))))) )),
  inference(superposition,[],[f110,f374])).
fof(f3872,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X20),X21) = s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK10(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK11(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK12(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK13(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),'const.list.CONS_2'(s(X20,sK14(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)),s('type.list.list'(X20),sK9(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20))))))))))))) )),
  inference(superposition,[],[f110,f95])).
fof(f3871,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X16),X17) = s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK10(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK11(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK12(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK13(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),'const.list.CONS_2'(s(X16,sK14(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)),s('type.list.list'(X16),sK9(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16))))))))))))) )),
  inference(superposition,[],[f110,f75])).
fof(f3870,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK10(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK11(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK12(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK13(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK14(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)),s('type.list.list'(X13),sK9(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3869,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X7),X8) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK10(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK11(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK12(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK13(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK14(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)),s('type.list.list'(X7),sK9(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3898,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK10(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK11(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK12(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK13(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK14(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK9(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))) )),
  inference(forward_demodulation,[],[f3868,f75])).
fof(f3868,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X1),X2) = s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK10(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK11(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK12(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK13(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,sK14(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)),s('type.list.list'(X1),sK9(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1))))))))))))) )),
  inference(superposition,[],[f110,f526])).
fof(f3867,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X7),sK18(X8,X9,X10,X7)) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK10(sK18(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK11(sK18(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK12(sK18(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK13(sK18(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),'const.list.CONS_2'(s(X7,sK14(sK18(X8,X9,X10,X7),X11,X7)),s('type.list.list'(X7),sK9(sK18(X8,X9,X10,X7),X11,X7)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f110,f90])).
fof(f3866,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X2),sK17(X3,X4,X5,X2)) = s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK10(sK17(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK11(sK17(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK12(sK17(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK13(sK17(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),'const.list.CONS_2'(s(X2,sK14(sK17(X3,X4,X5,X2),X6,X2)),s('type.list.list'(X2),sK9(sK17(X3,X4,X5,X2),X6,X2)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f110,f89])).
fof(f3865,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14('const.list.NIL_0',X1,X0)),s('type.list.list'(X0),sK9('const.list.NIL_0',X1,X0))))))))))))) )),
  inference(superposition,[],[f110,f526])).
fof(f3897,plain,(
  ( ! [X19,X17,X20,X18] : (s('type.list.list'(X17),X19) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK12('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK13('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK14('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3864,f81])).
fof(f3864,plain,(
  ( ! [X19,X17,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X17),X19))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X17),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19))) = s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK10('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK11('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK12('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK13('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),'const.list.CONS_2'(s(X17,sK14('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17)),s('type.list.list'(X17),sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X17),X18),s('type.list.list'(X17),X19)),X20,X17))))))))))))) )),
  inference(superposition,[],[f110,f81])).
fof(f3896,plain,(
  ( ! [X14,X15,X13,X16] : (s('type.list.list'(X13),X14) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK10('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK11('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK12('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK13('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK14('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),sK9('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3863,f80])).
fof(f3863,plain,(
  ( ! [X14,X15,X13,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X16),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X13),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15))) = s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK10('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK11('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK12('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK13('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,sK14('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13)),s('type.list.list'(X13),sK9('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X13),X14),s('type.list.list'(X13),X15)),X16,X13))))))))))))) )),
  inference(superposition,[],[f110,f80])).
fof(f3895,plain,(
  ( ! [X12,X11] : (s('type.list.list'(X11),'const.list.NIL_0') = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3894,f3448])).
fof(f3894,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0'))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11))))))))))))) )),
  inference(forward_demodulation,[],[f3862,f526])).
fof(f3862,plain,(
  ( ! [X12,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X11),'const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0'))) = s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK10('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK11('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK12('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK13('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),'const.list.CONS_2'(s(X11,sK14('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11)),s('type.list.list'(X11),sK9('const.list.APPEND_2'(s('type.list.list'(X11),'const.list.NIL_0'),s('type.list.list'(X11),'const.list.NIL_0')),X12,X11))))))))))))) )),
  inference(superposition,[],[f110,f3448])).
fof(f3861,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6)))) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK10('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK11('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK12('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK13('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,sK14('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)),s('type.list.list'(X6),sK9('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f110,f91])).
fof(f3893,plain,(
  ( ! [X4,X5,X3] : (s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK10(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK11(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK12(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK13(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK14(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK9(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3892,f2750])).
fof(f3892,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X3),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK10(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK11(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK12(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK13(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK14(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK9(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))) )),
  inference(forward_demodulation,[],[f3860,f526])).
fof(f3860,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X3),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3)) = s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK10(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK11(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK12(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK13(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),'const.list.CONS_2'(s(X3,sK14(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)),s('type.list.list'(X3),sK9(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3))))))))))))) )),
  inference(superposition,[],[f110,f2750])).
fof(f3891,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK9(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3890,f1424])).
fof(f3890,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK9(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))) )),
  inference(forward_demodulation,[],[f3859,f526])).
fof(f3859,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)),s('type.list.list'(X0),sK9(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0))))))))))))) )),
  inference(superposition,[],[f110,f1424])).
fof(f3760,plain,(
  ( ! [X30,X28,X35,X33,X31,X29,X27,X36,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X30) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),X28))))))))))) | s(bool,X36) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(subsumption_resolution,[],[f3731,f70])).
fof(f3731,plain,(
  ( ! [X30,X28,X35,X33,X31,X29,X27,X36,X34,X32] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X30))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X29),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X27),X30) != s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X31),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X32),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X33),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X34),s('type.list.list'(X27),'const.list.CONS_2'(s(X27,X35),s('type.list.list'(X27),X28))))))))))) | s(bool,X36) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,X36)) )),
  inference(superposition,[],[f113,f131])).
fof(f3730,plain,(
  ( ! [X26,X24,X23,X21,X19,X25,X22,X20,X18] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X19))),s('type.num.num',X20)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X20))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X18),X21) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X22),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X23),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),X19)))))))))))) )),
  inference(superposition,[],[f113,f927])).
fof(f3753,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X105)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X105)))) | s('type.list.list'(X107),X109) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X111),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X112),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X113),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X114),s('type.list.list'(X107),X108)))))))))))) )),
  inference(forward_demodulation,[],[f3752,f80])).
fof(f3752,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X105),s('type.num.num',X106)))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X105)))) | s('type.list.list'(X107),X109) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X111),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X112),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X113),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X114),s('type.list.list'(X107),X108)))))))))))) )),
  inference(forward_demodulation,[],[f3725,f95])).
fof(f3725,plain,(
  ( ! [X111,X109,X107,X105,X114,X112,X110,X108,X106,X113] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X108))),s('type.num.num',X105)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X107),X109))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X105),s('type.num.num',X106))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X107),X109) != s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X110),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X111),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X112),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X113),s('type.list.list'(X107),'const.list.CONS_2'(s(X107,X114),s('type.list.list'(X107),X108)))))))))))) )),
  inference(superposition,[],[f113,f80])).
fof(f3751,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.ZERO_0')))) | s('type.list.list'(X97),X99) != s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X100),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X101),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X102),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X103),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X104),s('type.list.list'(X97),X98)))))))))))) )),
  inference(forward_demodulation,[],[f3750,f72])).
fof(f3750,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X97),X99) != s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X100),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X101),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X102),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X103),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X104),s('type.list.list'(X97),X98)))))))))))) )),
  inference(forward_demodulation,[],[f3724,f1623])).
fof(f3724,plain,(
  ( ! [X103,X101,X99,X97,X102,X100,X98,X104] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X98))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X97),X99))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X97),X99) != s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X100),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X101),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X102),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X103),s('type.list.list'(X97),'const.list.CONS_2'(s(X97,X104),s('type.list.list'(X97),X98)))))))))))) )),
  inference(superposition,[],[f113,f72])).
fof(f3718,plain,(
  ( ! [X47,X45,X43,X50,X48,X46,X44,X42,X51,X49] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X45))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X43),s('type.num.num',X42)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X44),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X42),s('type.num.num',X43))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X44),X46) != s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X47),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X48),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X49),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X50),s('type.list.list'(X44),'const.list.CONS_2'(s(X44,X51),s('type.list.list'(X44),X45)))))))))))) )),
  inference(superposition,[],[f113,f95])).
fof(f3716,plain,(
  ( ! [X30,X28,X26,X24,X23,X21,X31,X29,X27,X25,X32,X22] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X26))),s('type.num.num',X22)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X25),X27))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),sK18(X22,X23,X24,X21)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X25),X27) != s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X28),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X29),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X30),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X31),s('type.list.list'(X25),'const.list.CONS_2'(s(X25,X32),s('type.list.list'(X25),X26))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X21),X24))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num',X22)))) )),
  inference(superposition,[],[f113,f90])).
fof(f3715,plain,(
  ( ! [X14,X12,X10,X19,X17,X15,X13,X11,X9,X20,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num',X11)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X15))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK17(X10,X11,X12,X9)))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X13),X15) != s('type.list.list'(X13),'const.list.CONS_2'(s(X13,X16),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,X17),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,X18),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,X19),s('type.list.list'(X13),'const.list.CONS_2'(s(X13,X20),s('type.list.list'(X13),X14))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f113,f89])).
fof(f3713,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X29,X27,X25,X22,X20] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X23)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X24))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X23),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X19),X24) != s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X25),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X26),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X27),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X28),s('type.list.list'(X19),'const.list.CONS_2'(s(X19,X29),s('type.list.list'(X19),sK18(X20,X21,X22,X19)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X19),X22))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X21),s('type.num.num',X20)))) )),
  inference(superposition,[],[f113,f90])).
fof(f3712,plain,(
  ( ! [X14,X12,X10,X8,X17,X15,X13,X11,X9,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X10),s('type.num.num',X12)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X13))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X12),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X8),X13) != s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X14),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X15),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X16),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X17),s('type.list.list'(X8),'const.list.CONS_2'(s(X8,X18),s('type.list.list'(X8),sK17(X9,X10,X11,X8)))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f113,f89])).
fof(f3707,plain,(
  ( ! [X28,X26,X24,X23,X21,X19,X27,X25,X22,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))),s('type.num.num',X22)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X23))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X18),X23) != s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X24),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X25),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X26),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X27),s('type.list.list'(X18),'const.list.CONS_2'(s(X18,X28),s('type.list.list'(X18),'const.list.APPEND_2'(s('type.list.list'(X18),sK17(X19,X20,X21,X18)),s('type.list.list'(X18),sK18(X19,X20,X21,X18)))))))))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X18),X21))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))) )),
  inference(superposition,[],[f113,f91])).
fof(f3737,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3736,f1424])).
fof(f3736,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))) )),
  inference(forward_demodulation,[],[f3705,f526])).
fof(f3705,plain,(
  ( ! [X6,X4,X2,X0,X8,X7,X5,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num',X2)))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X3) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))))))))))) )),
  inference(superposition,[],[f113,f1424])).
fof(f3623,plain,(
  ( ! [X29] : (s('type.list.list'(X29),'const.list.NIL_0') = s('type.list.list'(X29),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X29),'const.list.NIL_0')),'const.list.APPEND_2'(s('type.list.list'(X29),'const.list.NIL_0'),s('type.list.list'(X29),'const.list.NIL_0')),X29))) )),
  inference(superposition,[],[f2750,f3448])).
fof(f3622,plain,(
  ( ! [X28] : (s('type.list.list'(X28),'const.list.NIL_0') = s('type.list.list'(X28),sK17('const.list.LENGTH_1'(s('type.list.list'(X28),'const.list.NIL_0')),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X28),'const.list.NIL_0'),s('type.list.list'(X28),'const.list.NIL_0')),X28))) )),
  inference(superposition,[],[f1424,f3448])).
fof(f3615,plain,(
  ( ! [X6,X8,X7,X5] : (s('type.list.list'(X5),'const.list.NIL_0') != s('type.list.list'(X5),X6) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),X6))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num',X8))) | s('type.num.num',X8) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.NIL_0'))) | s('type.num.num',X7) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),'const.list.NIL_0')))) )),
  inference(superposition,[],[f92,f3448])).
fof(f3474,plain,(
  ( ! [X6,X5] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK9('const.list.APPEND_2'(s('type.list.list'(X5),'const.list.NIL_0'),s('type.list.list'(X5),'const.list.NIL_0')),X6,X5)))),s('type.num.num',X6))))) )),
  inference(superposition,[],[f112,f3353])).
fof(f3448,plain,(
  ( ! [X0] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(unit_resulting_resolution,[],[f3353,f78])).
fof(f3554,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3553,f75])).
fof(f3553,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3455,f81])).
fof(f3455,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f526,f81,f3353,f92])).
fof(f3540,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f3539,f75])).
fof(f3539,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f3538,f81])).
fof(f3538,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f3460,f81])).
fof(f3460,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0'))),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f81,f81,f3353,f92])).
fof(f3520,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3519,f75])).
fof(f3519,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3467,f81])).
fof(f3467,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))))) )),
  inference(unit_resulting_resolution,[],[f526,f81,f3353,f92])).
fof(f3518,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3517,f75])).
fof(f3517,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3468,f81])).
fof(f3468,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0'))),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))))) )),
  inference(unit_resulting_resolution,[],[f3353,f81,f3353,f92])).
fof(f3506,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3505,f75])).
fof(f3505,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3504,f95])).
fof(f3504,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3503,f81])).
fof(f3503,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(forward_demodulation,[],[f3472,f81])).
fof(f3472,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),'const.list.NIL_0')))))))))) )),
  inference(unit_resulting_resolution,[],[f81,f81,f3353,f92])).
fof(f3270,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X4))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X1),s('type.list.list'(X0),X2))))) | s('type.num.num',X4) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(equality_resolution,[],[f92])).
fof(f3269,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X3) != s('type.list.list'(X0),X4) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X6))) | s('type.num.num',X6) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18(X1,X2,X3,X0)))) | s('type.num.num',X5) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X1,X2,X3,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f92,f91])).
fof(f3266,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X17),s('type.list.list'(X12),X15))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK17(X13,X14,X15,X12)),s('type.list.list'(X12),sK18(X13,X14,X15,X12)))))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f3261,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X16) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X15),s('type.list.list'(X12),X17))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK17(X13,X14,X15,X12)),s('type.list.list'(X12),sK18(X13,X14,X15,X12)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f3256,plain,(
  ( ! [X14,X12,X19,X17,X15,X13,X18,X16] : (s('type.list.list'(X12),X15) != s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),X16),s('type.list.list'(X12),X17))) | s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),'const.list.APPEND_2'(s('type.list.list'(X12),sK17(X13,X14,X15,X12)),s('type.list.list'(X12),sK18(X13,X14,X15,X12)))))) | s('type.num.num',X19) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X17))) | s('type.num.num',X18) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X16))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f92,f91])).
fof(f3353,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3352,f75])).
fof(f3352,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3229,f81])).
fof(f3229,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f526,f526,f81,f92])).
fof(f3342,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3341,f75])).
fof(f3341,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3340,f95])).
fof(f3340,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))) )),
  inference(forward_demodulation,[],[f3339,f81])).
fof(f3339,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f3233,f81])).
fof(f3233,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))),s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X2),s('type.list.list'(X1),'const.list.NIL_0')))))))) )),
  inference(unit_resulting_resolution,[],[f81,f526,f81,f92])).
fof(f3286,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f3285,f75])).
fof(f3285,plain,(
  ( ! [X2,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))) )),
  inference(forward_demodulation,[],[f3284,f81])).
fof(f3284,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2)))))))) )),
  inference(forward_demodulation,[],[f3249,f81])).
fof(f3249,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X0),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X1),X3),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),'const.list.NIL_0'),s('type.list.list'(X1),X2)))))))) )),
  inference(unit_resulting_resolution,[],[f526,f81,f81,f92])).
fof(f3273,plain,(
  ( ! [X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f3272,f81])).
fof(f3272,plain,(
  ( ! [X4,X2,X0,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) )),
  inference(forward_demodulation,[],[f3271,f81])).
fof(f3271,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3)))))))) )),
  inference(forward_demodulation,[],[f3253,f81])).
fof(f3253,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X2),s('type.list.list'(X0),X3))))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X4),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X5),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))))) )),
  inference(unit_resulting_resolution,[],[f81,f81,f81,f92])).
fof(f3150,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X1,X2,X0)))),s('type.num.num',X2)))) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(subsumption_resolution,[],[f3129,f70])).
fof(f3129,plain,(
  ( ! [X2,X0,X3,X1] : (~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X1,X2,X0)))),s('type.num.num',X2)))) | s(bool,X3) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f112,f131])).
fof(f3126,plain,(
  ( ! [X4,X2,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X4))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.num.num',X2)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK9(X4,X2,X3)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f95])).
fof(f3125,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X1,'const.num.|48|_0',X0)))),s('type.num.num','const.num.|48|_0'))))) )),
  inference(superposition,[],[f112,f75])).
fof(f3148,plain,(
  ( ! [X45,X43,X46,X44] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK9(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num',X44)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3124,f81])).
fof(f3124,plain,(
  ( ! [X45,X43,X46,X44] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),X46))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X44),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X45),sK9(X46,'const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44)),X45)))),s('type.num.num','const.bool.COND_3'(s(bool,'F_0'),s('type.num.num',X43),s('type.num.num',X44))))))) )),
  inference(superposition,[],[f112,f81])).
fof(f3147,plain,(
  ( ! [X39,X41,X42,X40] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK9(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num',X39)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3123,f80])).
fof(f3123,plain,(
  ( ! [X39,X41,X42,X40] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),X42))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X39),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X41),sK9(X42,'const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40)),X41)))),s('type.num.num','const.bool.COND_3'(s(bool,'T_0'),s('type.num.num',X39),s('type.num.num',X40))))))) )),
  inference(superposition,[],[f112,f80])).
fof(f3146,plain,(
  ( ! [X37,X38] : (p(s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK9(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.arithmetic.ZERO_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3122,f927])).
fof(f3122,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),X38))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X37),sK9(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)))),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) )),
  inference(superposition,[],[f112,f72])).
fof(f3145,plain,(
  ( ! [X35,X36] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK9(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f3144,f71])).
fof(f3144,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK9(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(forward_demodulation,[],[f3121,f75])).
fof(f3121,plain,(
  ( ! [X35,X36] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),X36))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X35),sK9(X36,'const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')),X35)))),s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f71])).
fof(f3143,plain,(
  ( ! [X33,X34,X32] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK9(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f3142,f74])).
fof(f3142,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK9(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(forward_demodulation,[],[f3120,f75])).
fof(f3120,plain,(
  ( ! [X33,X34,X32] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),X34))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X33),sK9(X34,'const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32)),X33)))),s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X32))))))) )),
  inference(superposition,[],[f112,f74])).
fof(f3141,plain,(
  ( ! [X30,X31,X29] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK9(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f3140,f76])).
fof(f3140,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK9(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(forward_demodulation,[],[f3119,f75])).
fof(f3119,plain,(
  ( ! [X30,X31,X29] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),X31))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X30),sK9(X31,'const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29)),X30)))),s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X29),s('type.num.num',X29))))))) )),
  inference(superposition,[],[f112,f76])).
fof(f3139,plain,(
  ( ! [X28,X26,X27] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK9(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num',X26)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3118,f374])).
fof(f3118,plain,(
  ( ! [X28,X26,X27] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),X28))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X27),sK9(X28,'const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0')),X27)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X26),s('type.num.num','const.num.|48|_0'))))))) )),
  inference(superposition,[],[f112,f374])).
fof(f3116,plain,(
  ( ! [X21,X19,X20,X18] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X21))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X18))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),sK9(X21,'const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19)),X20)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X19))))))) )),
  inference(superposition,[],[f112,f95])).
fof(f3138,plain,(
  ( ! [X17,X15,X16] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK9(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num',X15)))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(forward_demodulation,[],[f3115,f75])).
fof(f3115,plain,(
  ( ! [X17,X15,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),sK9(X17,'const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15)),X16)))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X15))))))) )),
  inference(superposition,[],[f112,f75])).
fof(f3114,plain,(
  ( ! [X14,X12,X10,X13,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),X14))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X13),sK9(X14,'const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))),X13)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),sK18(X10,X11,X12,X9))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X9),X12))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num',X10)))) )),
  inference(superposition,[],[f112,f90])).
fof(f3113,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK9(X8,'const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))),X7)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17(X4,X5,X6,X3))))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X6))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4)))) )),
  inference(superposition,[],[f112,f89])).
fof(f3137,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK9(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.num.|48|_0')))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) )),
  inference(forward_demodulation,[],[f3136,f526])).
fof(f3136,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK9(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(forward_demodulation,[],[f3112,f75])).
fof(f3112,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X1),sK9(X2,'const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),X1)))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))))))) )),
  inference(superposition,[],[f112,f526])).
fof(f3111,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X11),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),sK9(sK18(X8,X9,X10,X7),X11,X7)))),s('type.num.num',X11)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),X10))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X8)))) )),
  inference(superposition,[],[f112,f90])).
fof(f3110,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X4),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK9(sK17(X3,X4,X5,X2),X6,X2)))),s('type.num.num',X6)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),X5))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X3)))) )),
  inference(superposition,[],[f112,f89])).
fof(f3109,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9('const.list.NIL_0',X1,X0)))),s('type.num.num',X1))))) )),
  inference(superposition,[],[f112,f526])).
fof(f3108,plain,(
  ( ! [X17,X15,X18,X16] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),X17))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X15),sK9('const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X15),X16),s('type.list.list'(X15),X17)),X18,X15)))),s('type.num.num',X18))))) )),
  inference(superposition,[],[f112,f81])).
fof(f3107,plain,(
  ( ! [X14,X12,X13,X11] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),X12))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X11),sK9('const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X11),X12),s('type.list.list'(X11),X13)),X14,X11)))),s('type.num.num',X14))))) )),
  inference(superposition,[],[f112,f80])).
fof(f3106,plain,(
  ( ! [X6,X10,X8,X7,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),sK9('const.list.APPEND_2'(s('type.list.list'(X6),sK17(X7,X8,X9,X6)),s('type.list.list'(X6),sK18(X7,X8,X9,X6))),X10,X6)))),s('type.num.num',X10)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num',X7)))) )),
  inference(superposition,[],[f112,f91])).
fof(f3135,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK9(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(forward_demodulation,[],[f3105,f526])).
fof(f3105,plain,(
  ( ! [X4,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK9(sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X3),X4)),X4,X3),X5,X3)))),s('type.num.num',X5))))) )),
  inference(superposition,[],[f112,f2750])).
fof(f3134,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(forward_demodulation,[],[f3104,f526])).
fof(f3104,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X2,X0)))),s('type.num.num',X2))))) )),
  inference(superposition,[],[f112,f1424])).
fof(f3077,plain,(
  ( ! [X10,X8,X7,X11,X9] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X7),s('type.num.num',X8)))) | p(s(bool,happ(s(fun(X9,bool),X10),s(X9,sK16('const.arithmetic.>=_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))),X10,X9))))) | ~p(s(bool,happ(s(fun(X9,bool),X10),s(X9,X11))))) )),
  inference(superposition,[],[f87,f927])).
fof(f3076,plain,(
  ( ! [X6,X4,X2,X5,X3] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3)))) | p(s(bool,happ(s(fun(X4,bool),X5),s(X4,sK15('const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))),X5,X4))))) | ~p(s(bool,happ(s(fun(X4,bool),X5),s(X4,X6))))) )),
  inference(superposition,[],[f85,f927])).
fof(f3074,plain,(
  ( ! [X14,X15] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X14),s('type.num.num',X15))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X14),s('type.num.num','const.num.SUC_1'(s('type.num.num',X15)))))) )),
  inference(superposition,[],[f927,f77])).
fof(f3072,plain,(
  ( ! [X10,X8,X9] : (s(bool,X10) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X8),s('type.num.num',X9))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num',X9))))) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f927,f131])).
fof(f3070,plain,(
  ( ! [X4,X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X2),s('type.num.num',X3))) | s(bool,X4) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f927,f131])).
fof(f2981,plain,(
  ( ! [X23,X21,X22,X20] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) | s('type.list.list'(X20),'const.list.NIL_0') = s('type.list.list'(X20),'const.list.APPEND_2'(s('type.list.list'(X20),sK17(X21,X22,X23,X20)),s('type.list.list'(X20),sK18(X21,X22,X23,X20)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X20),X23))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X22),s('type.num.num',X21)))) )),
  inference(superposition,[],[f78,f91])).
fof(f2980,plain,(
  ( ! [X19,X17,X18,X16] : (s('type.list.list'(X16),'const.list.NIL_0') != s('type.list.list'(X16),X19) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),'const.list.APPEND_2'(s('type.list.list'(X16),sK17(X17,X18,X19,X16)),s('type.list.list'(X16),sK18(X17,X18,X19,X16)))))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X16),X19))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X18),s('type.num.num',X17)))) )),
  inference(superposition,[],[f79,f91])).
fof(f2979,plain,(
  ( ! [X14,X12,X15,X13] : (s('type.list.list'(X12),'const.list.NIL_0') = s('type.list.list'(X12),sK17('const.list.LENGTH_1'(s('type.list.list'(X12),X15)),'const.num.|48|_0','const.list.APPEND_2'(s('type.list.list'(X12),sK17(X13,X14,X15,X12)),s('type.list.list'(X12),sK18(X13,X14,X15,X12))),X12)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X12),X15))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X14),s('type.num.num',X13)))) )),
  inference(superposition,[],[f1424,f91])).
fof(f2978,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.list.list'(X8),'const.list.NIL_0') = s('type.list.list'(X8),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X8),X11)),'const.list.APPEND_2'(s('type.list.list'(X8),sK17(X9,X10,X11,X8)),s('type.list.list'(X8),sK18(X9,X10,X11,X8))),X8)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f2750,f91])).
fof(f2993,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.NIL_0'),s('type.list.list'(X0),sK18('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(forward_demodulation,[],[f2973,f1424])).
fof(f2973,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0)),s('type.list.list'(X0),sK18('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f91])).
fof(f2992,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f2974,f2750])).
fof(f2974,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0)),s('type.list.list'(X0),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f374,f91])).
fof(f2788,plain,(
  ( ! [X8,X9] : (s('type.list.list'(X8),'const.list.NIL_0') = s('type.list.list'(X8),sK17('const.list.LENGTH_1'(s('type.list.list'(X8),'const.list.NIL_0')),'const.num.|48|_0',sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X8),X9)),X9,X8),X8))) )),
  inference(superposition,[],[f1424,f2750])).
fof(f2785,plain,(
  ( ! [X8,X7,X9] : (s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X7),X9)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X7),X8),s('type.list.list'(X7),X9)),X7))) )),
  inference(superposition,[],[f2750,f81])).
fof(f2784,plain,(
  ( ! [X6,X4,X5] : (s('type.list.list'(X4),'const.list.NIL_0') = s('type.list.list'(X4),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X4),X5)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X4),X5),s('type.list.list'(X4),X6)),X4))) )),
  inference(superposition,[],[f2750,f80])).
fof(f2783,plain,(
  ( ! [X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),'const.list.NIL_0')),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),X3,X2),X2))) )),
  inference(superposition,[],[f2750,f2750])).
fof(f2782,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f2750,f1424])).
fof(f2753,plain,(
  ( ! [X6,X7,X5] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X5),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))))) )),
  inference(superposition,[],[f2078,f81])).
fof(f2752,plain,(
  ( ! [X4,X2,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X2),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))))) )),
  inference(superposition,[],[f2078,f80])).
fof(f2751,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))))) )),
  inference(superposition,[],[f2078,f1424])).
fof(f2750,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))) )),
  inference(unit_resulting_resolution,[],[f2078,f78])).
fof(f2207,plain,(
  ( ! [X21,X19,X20] : (s(bool,'F_0') != s(bool,f(s(X19,sK19(X20,X21,bool,X19)))) | s(fun(X19,bool),X20) = s(fun(X19,bool),X21) | s(bool,'T_0') = s(bool,g(s(X19,sK19(X20,X21,bool,X19))))) )),
  inference(superposition,[],[f101,f77])).
fof(f2205,plain,(
  ( ! [X14,X12,X13,X11] : (s(bool,X14) != s(bool,f(s(X11,sK19(X12,X13,bool,X11)))) | s(fun(X11,bool),X12) = s(fun(X11,bool),X13) | s(bool,'T_0') = s(bool,g(s(X11,sK19(X12,X13,bool,X11)))) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f101,f131])).
fof(f2203,plain,(
  ( ! [X6,X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(X3,sK19(X4,X5,bool,X3)))) | s(fun(X3,bool),X4) = s(fun(X3,bool),X5) | s(bool,X6) = s(bool,g(s(X3,sK19(X4,X5,bool,X3)))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f101,f131])).
fof(f112,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X2,X1,X0)))),s('type.num.num',X1))))) )),
  inference(forward_demodulation,[],[f109,f94])).
fof(f109,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X2,X1,X0)))))))) )),
  inference(backward_demodulation,[],[f94,f82])).
fof(f110,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X2,X1,X0)),s('type.list.list'(X0),sK9(X2,X1,X0))))))))))))) )),
  inference(backward_demodulation,[],[f94,f83])).
fof(f1967,plain,(
  ( ! [X61,X59,X62,X60,X58] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X59),s('type.num.num',X58)))) | p(s(bool,happ(s(fun(X60,bool),X61),s(X60,sK16('const.arithmetic.<=_2'(s('type.num.num',X58),s('type.num.num',X59)),X61,X60))))) | ~p(s(bool,happ(s(fun(X60,bool),X61),s(X60,X62))))) )),
  inference(superposition,[],[f87,f94])).
fof(f1878,plain,(
  ( ! [X59,X57,X58,X56,X55] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num',X56),s('type.num.num',X55)))) | p(s(bool,happ(s(fun(X57,bool),X58),s(X57,sK15('const.arithmetic.<=_2'(s('type.num.num',X55),s('type.num.num',X56)),X58,X57))))) | ~p(s(bool,happ(s(fun(X57,bool),X58),s(X57,X59))))) )),
  inference(superposition,[],[f85,f94])).
fof(f599,plain,(
  ( ! [X21,X19,X20] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X20),s('type.num.num',X19))) | s(bool,X21) = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X19),s('type.num.num',X20))) | s(bool,'T_0') = s(bool,X21)) )),
  inference(superposition,[],[f131,f94])).
fof(f566,plain,(
  ( ! [X28,X26,X27] : (s(bool,X28) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X27),s('type.num.num',X26))) | s(bool,'T_0') = s(bool,X28) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X26),s('type.num.num',X27)))) )),
  inference(superposition,[],[f131,f94])).
fof(f356,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f94,f77])).
fof(f1623,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f915,f94])).
fof(f927,plain,(
  ( ! [X2,X3] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X3),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2)))))) )),
  inference(superposition,[],[f114,f94])).
fof(f114,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num',X0))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(forward_demodulation,[],[f96,f93])).
fof(f96,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X19,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X19))),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.LESS_EQ')).
fof(f915,plain,(
  ( ! [X0] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0)))) )),
  inference(superposition,[],[f114,f72])).
fof(f93,plain,(
  ( ! [X0,X1] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f41])).
fof(f41,plain,(
  ! [X0,X1] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X19,X20] : s(bool,'const.arithmetic.>_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X20),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.GREATER_DEF')).
fof(f299,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(superposition,[],[f93,f77])).
fof(f567,plain,(
  ( ! [X30,X31,X29] : (s(bool,X31) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X30),s('type.num.num',X29))) | s(bool,'T_0') = s(bool,X31) | s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',X29),s('type.num.num',X30)))) )),
  inference(superposition,[],[f131,f93])).
fof(f600,plain,(
  ( ! [X24,X23,X22] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X23),s('type.num.num',X22))) | s(bool,X24) = s(bool,'const.prim_rec.<_2'(s('type.num.num',X22),s('type.num.num',X23))) | s(bool,'T_0') = s(bool,X24)) )),
  inference(superposition,[],[f131,f93])).
fof(f928,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num',X4))) | s(bool,X6) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))),s('type.num.num',X5))) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f114,f131])).
fof(f930,plain,(
  ( ! [X12,X10,X11] : (s(bool,X12) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X11),s('type.num.num',X10))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10))),s('type.num.num',X11))) | s(bool,'T_0') = s(bool,X12)) )),
  inference(superposition,[],[f114,f131])).
fof(f935,plain,(
  ( ! [X2,X3] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num',X2))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.num.num',X3)))) )),
  inference(superposition,[],[f77,f114])).
fof(f1879,plain,(
  ( ! [X61,X64,X62,X60,X63] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X61),s('type.num.num',X60)))) | p(s(bool,happ(s(fun(X62,bool),X63),s(X62,sK15('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X60))),s('type.num.num',X61)),X63,X62))))) | ~p(s(bool,happ(s(fun(X62,bool),X63),s(X62,X64))))) )),
  inference(superposition,[],[f85,f114])).
fof(f1881,plain,(
  ( ! [X70,X72,X71,X69,X73] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X70),s('type.num.num',X69)))) | p(s(bool,happ(s(fun(X71,bool),X72),s(X71,sK15('const.prim_rec.<_2'(s('type.num.num',X69),s('type.num.num',X70)),X72,X71))))) | ~p(s(bool,happ(s(fun(X71,bool),X72),s(X71,X73))))) )),
  inference(superposition,[],[f85,f93])).
fof(f1968,plain,(
  ( ! [X66,X64,X67,X65,X63] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X64),s('type.num.num',X63)))) | p(s(bool,happ(s(fun(X65,bool),X66),s(X65,sK16('const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X63))),s('type.num.num',X64)),X66,X65))))) | ~p(s(bool,happ(s(fun(X65,bool),X66),s(X65,X67))))) )),
  inference(superposition,[],[f87,f114])).
fof(f1970,plain,(
  ( ! [X76,X74,X72,X75,X73] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X73),s('type.num.num',X72)))) | p(s(bool,happ(s(fun(X74,bool),X75),s(X74,sK16('const.prim_rec.<_2'(s('type.num.num',X72),s('type.num.num',X73)),X75,X74))))) | ~p(s(bool,happ(s(fun(X74,bool),X75),s(X74,X76))))) )),
  inference(superposition,[],[f87,f93])).
fof(f1625,plain,(
  ( ! [X4,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X3),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,X4) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X3))) | s(bool,'T_0') = s(bool,X4)) )),
  inference(superposition,[],[f915,f131])).
fof(f1627,plain,(
  ( ! [X8,X7] : (s(bool,X8) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X7))) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f915,f131])).
fof(f1631,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1)))) )),
  inference(superposition,[],[f77,f915])).
fof(f1880,plain,(
  ( ! [X68,X66,X67,X65] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X65),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X66,bool),X67),s(X66,sK15('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X65)),X67,X66))))) | ~p(s(bool,happ(s(fun(X66,bool),X67),s(X66,X68))))) )),
  inference(superposition,[],[f85,f915])).
fof(f1969,plain,(
  ( ! [X70,X68,X71,X69] : (~p(s(bool,'const.arithmetic.>_2'(s('type.num.num',X68),s('type.num.num','const.arithmetic.ZERO_0')))) | p(s(bool,happ(s(fun(X69,bool),X70),s(X69,sK16('const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X68)),X70,X69))))) | ~p(s(bool,happ(s(fun(X69,bool),X70),s(X69,X71))))) )),
  inference(superposition,[],[f87,f915])).
fof(f1974,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK16(X4,X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f1954,f70])).
fof(f1954,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK16(X4,X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f87,f131])).
fof(f87,plain,(
  ( ! [X4,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f62,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK16(X2,X1,X0))))) & p(s(bool,X2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK15,sK16])],[f61])).
fof(f61,plain,(
  ! [X0,X1,X2] : ((! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6)))) | ~p(s(bool,X2))) | (? [X5] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(rectify,[],[f60])).
fof(f60,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & (! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2)) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(flattening,[],[f59])).
fof(f59,plain,(
  ! [X0,X1,X2] : ((! [X3] : (~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ~p(s(bool,X2))) | (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2)))) & ((! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) | ~p(s(bool,X2))) | ? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2)))))),
  inference(nnf_transformation,[],[f38])).
fof(f38,plain,(
  ! [X0,X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(flattening,[],[f37])).
fof(f37,plain,(
  ! [X0] : ! [X1,X2] : (? [X3] : (p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) & p(s(bool,X2))) <=> (? [X4] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4)))) & p(s(bool,X2))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6] : ! [X24,X25] : (? [X7] : (p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X7)))) & p(s(bool,X25))) <=> (? [X7] : p(s(bool,happ(s(fun(X6,bool),X24),s(X6,X7)))) & p(s(bool,X25))))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.bool.LEFT_EXISTS_AND_THM')).
fof(f1971,plain,(
  ( ! [X80,X78,X81,X79,X77] : (~p(s(bool,X77)) | p(s(bool,happ(s(fun(X79,bool),X80),s(X79,sK16('const.bool.COND_3'(s(bool,'T_0'),s(bool,X77),s(bool,X78)),X80,X79))))) | ~p(s(bool,happ(s(fun(X79,bool),X80),s(X79,X81))))) )),
  inference(superposition,[],[f87,f80])).
fof(f1972,plain,(
  ( ! [X85,X83,X86,X84,X82] : (~p(s(bool,X83)) | p(s(bool,happ(s(fun(X84,bool),X85),s(X84,sK16('const.bool.COND_3'(s(bool,'F_0'),s(bool,X82),s(bool,X83)),X85,X84))))) | ~p(s(bool,happ(s(fun(X84,bool),X85),s(X84,X86))))) )),
  inference(superposition,[],[f87,f81])).
fof(f85,plain,(
  ( ! [X6,X2,X0,X1] : (~p(s(bool,X2)) | p(s(bool,happ(s(fun(X0,bool),X1),s(X0,sK15(X2,X1,X0))))) | ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X6))))) )),
  inference(cnf_transformation,[],[f62])).
fof(f1882,plain,(
  ( ! [X78,X76,X74,X77,X75] : (~p(s(bool,X74)) | p(s(bool,happ(s(fun(X76,bool),X77),s(X76,sK15('const.bool.COND_3'(s(bool,'T_0'),s(bool,X74),s(bool,X75)),X77,X76))))) | ~p(s(bool,happ(s(fun(X76,bool),X77),s(X76,X78))))) )),
  inference(superposition,[],[f85,f80])).
fof(f1883,plain,(
  ( ! [X80,X83,X81,X79,X82] : (~p(s(bool,X80)) | p(s(bool,happ(s(fun(X81,bool),X82),s(X81,sK15('const.bool.COND_3'(s(bool,'F_0'),s(bool,X79),s(bool,X80)),X82,X81))))) | ~p(s(bool,happ(s(fun(X81,bool),X82),s(X81,X83))))) )),
  inference(superposition,[],[f85,f81])).
fof(f1885,plain,(
  ( ! [X6,X4,X8,X7,X5] : (p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK15(X4,X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(subsumption_resolution,[],[f1866,f70])).
fof(f1866,plain,(
  ( ! [X6,X4,X8,X7,X5] : (~p(s(bool,'T_0')) | p(s(bool,happ(s(fun(X5,bool),X6),s(X5,sK15(X4,X6,X5))))) | ~p(s(bool,happ(s(fun(X5,bool),X6),s(X5,X7)))) | s(bool,X4) = s(bool,X8) | s(bool,'T_0') = s(bool,X8)) )),
  inference(superposition,[],[f85,f131])).
fof(f2201,plain,(
  ( ! [X21,X19,X20] : (s(X21,f(s(bool,'F_0'))) != s(X21,g(s(bool,'F_0'))) | s(fun(bool,X21),X19) = s(fun(bool,X21),X20) | s(bool,'T_0') = s(bool,sK19(X19,X20,X21,bool))) )),
  inference(superposition,[],[f101,f77])).
fof(f2199,plain,(
  ( ! [X14,X12,X13,X11] : (s(X13,f(s(bool,X14))) != s(X13,g(s(bool,X14))) | s(fun(bool,X13),X11) = s(fun(bool,X13),X12) | s(bool,'T_0') = s(bool,sK19(X11,X12,X13,bool)) | s(bool,'T_0') = s(bool,X14)) )),
  inference(superposition,[],[f101,f131])).
fof(f2197,plain,(
  ( ! [X6,X4,X5,X3] : (s(X5,f(s(bool,'T_0'))) != s(X5,g(s(bool,'T_0'))) | s(fun(bool,X5),X3) = s(fun(bool,X5),X4) | s(bool,X6) = s(bool,sK19(X3,X4,X5,bool)) | s(bool,'T_0') = s(bool,X6)) )),
  inference(superposition,[],[f101,f131])).
fof(f2080,plain,(
  ( ! [X10,X8,X11,X9] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X9) | s('type.list.list'(X8),'const.list.NIL_0') = s('type.list.list'(X8),sK18(X9,X10,X11,X8)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X8),X11))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X9)))) )),
  inference(superposition,[],[f78,f90])).
fof(f2077,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f90])).
fof(f2078,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f374,f90])).
fof(f1449,plain,(
  ( ! [X6,X7,X5] : (s('type.list.list'(X5),'const.list.NIL_0') = s('type.list.list'(X5),sK17('const.list.LENGTH_1'(s('type.list.list'(X5),X7)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X5),X6),s('type.list.list'(X5),X7)),X5))) )),
  inference(superposition,[],[f1424,f81])).
fof(f1448,plain,(
  ( ! [X4,X2,X3] : (s('type.list.list'(X2),'const.list.NIL_0') = s('type.list.list'(X2),sK17('const.list.LENGTH_1'(s('type.list.list'(X2),X3)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X2),X3),s('type.list.list'(X2),X4)),X2))) )),
  inference(superposition,[],[f1424,f80])).
fof(f1447,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')),'const.num.|48|_0',sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0),X0))) )),
  inference(superposition,[],[f1424,f1424])).
fof(f1427,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),sK17('const.list.LENGTH_1'(s('type.list.list'(X3),X5)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)),X3))))) )),
  inference(superposition,[],[f1146,f81])).
fof(f1426,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0','const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)),X0))))) )),
  inference(superposition,[],[f1146,f80])).
fof(f1424,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))) )),
  inference(unit_resulting_resolution,[],[f1146,f78])).
fof(f1148,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num',X2) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),sK17(X1,X2,X3,X0)) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X1)))) )),
  inference(superposition,[],[f78,f89])).
fof(f1146,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.list.LENGTH_1'(s('type.list.list'(X0),X1)),'const.num.|48|_0',X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f75,f89])).
fof(f1147,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17('const.num.|48|_0','const.list.LENGTH_1'(s('type.list.list'(X0),X1)),X1,X0))))) )),
  inference(unit_resulting_resolution,[],[f374,f89])).
fof(f1109,plain,(
  ( ! [X6,X7] : (s(bool,X7) = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | ~p(s(bool,X7)) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(forward_demodulation,[],[f1108,f94])).
fof(f1108,plain,(
  ( ! [X6,X7] : (~p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(subsumption_resolution,[],[f1068,f70])).
fof(f1068,plain,(
  ( ! [X6,X7] : (~p(s(bool,'T_0')) | ~p(s(bool,X7)) | s(bool,X7) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X6))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(superposition,[],[f100,f970])).
fof(f1050,plain,(
  ( ! [X2,X3] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X3),s('type.num.num',X2))))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(superposition,[],[f970,f95])).
fof(f1094,plain,(
  ( ! [X1] : (s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) ) | $spl1),
  inference(forward_demodulation,[],[f1093,f75])).
fof(f1093,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(forward_demodulation,[],[f1049,f94])).
fof(f1049,plain,(
  ( ! [X1] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X1))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X1))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(superposition,[],[f970,f75])).
fof(f1047,plain,(
  ( ! [X14,X12,X13] : (s(bool,X14) = s(bool,'const.arithmetic.>_2'(s('type.num.num',X13),s('type.num.num',X12))) | ~p(s(bool,X14)) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl1),
  inference(forward_demodulation,[],[f1046,f114])).
fof(f1046,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,X14)) | s(bool,X14) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X13))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl1),
  inference(subsumption_resolution,[],[f993,f70])).
fof(f993,plain,(
  ( ! [X14,X12,X13] : (~p(s(bool,'T_0')) | ~p(s(bool,X14)) | s(bool,X14) = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X12))),s('type.num.num',X13))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X13),s('type.num.num',X12)))) ) | $spl1),
  inference(superposition,[],[f100,f951])).
fof(f983,plain,(
  ( ! [X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X5),s('type.num.num','const.num.SUC_1'(s('type.num.num',X4))))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X5),s('type.num.num',X4)))) ) | $spl1),
  inference(superposition,[],[f951,f94])).
fof(f973,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X6))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5))),s('type.num.num',X6)))) ) | $spl1),
  inference(superposition,[],[f951,f95])).
fof(f970,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num',X0))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(superposition,[],[f951,f72])).
fof(f961,plain,(
  ( ! [X6,X4,X5] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X4))))),s('type.num.num',X6))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X6),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X4),s('type.num.num',X5)))))) ) | $spl1),
  inference(superposition,[],[f951,f95])).
fof(f951,plain,(
  ( ! [X17,X16] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X17))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num',X17),s('type.num.num',X16)))) ) | $spl1),
  inference(forward_demodulation,[],[f932,f158])).
fof(f932,plain,(
  ( ! [X17,X16] : (s(bool,'const.arithmetic.>_2'(s('type.num.num',X17),s('type.num.num',X16))) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X16))),s('type.num.num',X17)))) ) | $spl1),
  inference(superposition,[],[f114,f338])).
fof(f890,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(subsumption_resolution,[],[f687,f70])).
fof(f687,plain,(
  ( ! [X10,X8,X9] : (~p(s(bool,'T_0')) | ~p(s(bool,X9)) | s(bool,X8) = s(bool,X9) | s(bool,X8) = s(bool,X10) | s(bool,'T_0') = s(bool,X10)) )),
  inference(superposition,[],[f100,f131])).
fof(f672,plain,(
  ( ! [X4,X2,X5,X3,X1] : (s(X2,X3) = s(X2,'const.bool.COND_3'(s(bool,X1),s(X2,X3),s(X2,X4))) | s(bool,X1) = s(bool,X5) | s(bool,'T_0') = s(bool,X5)) )),
  inference(superposition,[],[f80,f131])).
fof(f602,plain,(
  ( ! [X30,X28,X29] : (s(bool,'T_0') = s(bool,X29) | s(bool,X30) = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X28),s(bool,X29))) | s(bool,'T_0') = s(bool,X30)) )),
  inference(superposition,[],[f131,f81])).
fof(f601,plain,(
  ( ! [X26,X27,X25] : (s(bool,'T_0') = s(bool,X25) | s(bool,X27) = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X25),s(bool,X26))) | s(bool,'T_0') = s(bool,X27)) )),
  inference(superposition,[],[f131,f80])).
fof(f586,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,X0) = s(bool,X1) | s(bool,X1) = s(bool,X2) | s(bool,'T_0') = s(bool,X2) | s(bool,X0) = s(bool,X3) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f131,f131])).
fof(f569,plain,(
  ( ! [X37,X35,X36] : (s(bool,X36) = s(bool,X37) | s(bool,'T_0') = s(bool,X37) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X35),s(bool,X36)))) )),
  inference(superposition,[],[f131,f81])).
fof(f568,plain,(
  ( ! [X33,X34,X32] : (s(bool,X32) = s(bool,X34) | s(bool,'T_0') = s(bool,X34) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X32),s(bool,X33)))) )),
  inference(superposition,[],[f131,f80])).
fof(f526,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(forward_demodulation,[],[f522,f81])).
fof(f522,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),'const.list.NIL_0')))))) )),
  inference(unit_resulting_resolution,[],[f81,f79])).
fof(f452,plain,(
  ( ! [X10,X11] : (s(bool,X11) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X10),s(bool,X11)))) ) | $spl1),
  inference(superposition,[],[f338,f81])).
fof(f451,plain,(
  ( ! [X8,X9] : (s(bool,X8) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X8),s(bool,X9)))) ) | $spl1),
  inference(superposition,[],[f338,f80])).
fof(f446,plain,(
  ( ! [X4,X5,X3] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X3),X5))) | s('type.list.list'(X3),'const.list.NIL_0') = s('type.list.list'(X3),'const.bool.COND_3'(s(bool,'F_0'),s('type.list.list'(X3),X4),s('type.list.list'(X3),X5)))) )),
  inference(superposition,[],[f78,f81])).
fof(f445,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),'const.bool.COND_3'(s(bool,'T_0'),s('type.list.list'(X0),X1),s('type.list.list'(X0),X2)))) )),
  inference(superposition,[],[f78,f80])).
fof(f374,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(superposition,[],[f95,f75])).
fof(f338,plain,(
  ( ! [X5] : (s(bool,X5) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X5)) ) | $spl1),
  inference(subsumption_resolution,[],[f334,f73])).
fof(f334,plain,(
  ( ! [X5] : (p(s(bool,'F_0')) | s(bool,X5) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,'T_0') = s(bool,X5)) ) | $spl1),
  inference(superposition,[],[f173,f158])).
fof(f268,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'F_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f81,f77])).
fof(f246,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.bool.COND_3'(s(bool,X0),s(X1,X3),s(X1,X2))) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f81,f77])).
fof(f231,plain,(
  ( ! [X0,X1] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,'const.bool.COND_3'(s(bool,'T_0'),s(bool,X0),s(bool,X1)))) )),
  inference(superposition,[],[f80,f77])).
fof(f158,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl1),
  inference(unit_resulting_resolution,[],[f73,f103,f97])).
fof(f81,plain,(
  ( ! [X2,X0,X1] : (s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0,X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X2) = s(X0,'const.bool.COND_3'(s(bool,'F_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6] : ! [X22,X23] : s(X6,X23) = s(X6,'const.bool.COND_3'(s(bool,'F_0'),s(X6,X22),s(X6,X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.bool.COND_CLAUSES|split|1')).
fof(f173,plain,(
  ( ! [X2,X3] : (p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(subsumption_resolution,[],[f164,f73])).
fof(f164,plain,(
  ( ! [X2,X3] : (p(s(bool,'F_0')) | p(s(bool,X3)) | s(bool,X2) = s(bool,X3) | s(bool,'T_0') = s(bool,X2)) )),
  inference(superposition,[],[f97,f77])).
fof(f133,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f73,f77])).
fof(f131,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f77,f77])).
fof(f101,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,f(s(X0,sK19(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK19(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3)) )),
  inference(cnf_transformation,[],[f66])).
fof(f66,plain,(
  ! [X0,X1,X2,X3] : (s(X1,f(s(X0,sK19(X3,X2,X1,X0)))) != s(X1,g(s(X0,sK19(X3,X2,X1,X0)))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK19])],[f51])).
fof(f51,plain,(
  ! [X0,X1,X2,X3] : (? [X4] : s(X1,f(s(X0,X4))) != s(X1,g(s(X0,X4))) | s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(ennf_transformation,[],[f47])).
fof(f47,plain,(
  ! [X0,X1,X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(flattening,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : ! [X2,X3] : (! [X4] : s(X1,f(s(X0,X4))) = s(X1,g(s(X0,X4))) => s(fun(X0,X1),X2) = s(fun(X0,X1),X3))),
  inference(rectify,[],[f4])).
fof(f4,axiom,(
  ! [X1,X2] : ! [X3,X4] : (! [X5] : s(X2,f(s(X1,X5))) = s(X2,g(s(X1,X5))) => s(fun(X1,X2),X3) = s(fun(X1,X2),X4))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9',aHL_EXT)).
fof(f97,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | (p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) & ~p(s(bool,X1))) | ((p(s(bool,X1)) & ~p(s(bool,X0))) | s(bool,X0) = s(bool,X1)))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ! [X0,X1] : ((p(s(bool,X0)) => p(s(bool,X1))) => ((p(s(bool,X1)) => p(s(bool,X0))) => s(bool,X0) = s(bool,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X22,X23] : ((p(s(bool,X22)) => p(s(bool,X23))) => ((p(s(bool,X23)) => p(s(bool,X22))) => s(bool,X22) = s(bool,X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.bool.IMP_ANTISYM_AX')).
fof(f100,plain,(
  ( ! [X0,X1] : (~p(s(bool,X1)) | ~p(s(bool,X0)) | s(bool,X0) = s(bool,X1)) )),
  inference(cnf_transformation,[],[f50])).
fof(f95,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X19,X20] : s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X19),s('type.num.num',X20))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X20),s('type.num.num',X19)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.ADD_SYM')).
fof(f89,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18(X3,X2,X1,X0)))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)),s('type.list.list'(X0),sK18(X3,X2,X1,X0)))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK17,sK18])],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X6,X7] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X6))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X7))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X6),s('type.list.list'(X0),X7))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(rectify,[],[f63])).
fof(f63,plain,(
  ! [X0,X1,X2,X3] : ((s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))))) & (! [X4,X5] : (s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))))),
  inference(nnf_transformation,[],[f40])).
fof(f40,plain,(
  ! [X0,X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ! [X0] : ! [X1,X2,X3] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) <=> ? [X4,X5] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4))) & s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) & s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X8,X15,X16] : (s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X15),s('type.num.num',X16))) <=> ? [X17,X18] : (s('type.num.num',X15) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X17))) & s('type.num.num',X16) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X18))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X17),s('type.list.list'(X6),X18)))))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.list.LENGTH_EQ_SUM')).
fof(f90,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.num.num',X3) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK18(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f91,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),sK17(X3,X2,X1,X0)),s('type.list.list'(X0),sK18(X3,X2,X1,X0)))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) != s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f92,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X0),X1) != s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),X4),s('type.list.list'(X0),X5))) | s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X3))) | s('type.num.num',X3) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X5))) | s('type.num.num',X2) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X4)))) )),
  inference(cnf_transformation,[],[f65])).
fof(f82,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),sK9(X2,X1,X0))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f83,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK10(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK11(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK12(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK13(X2,X1,X0)),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK14(X2,X1,X0)),s('type.list.list'(X0),sK9(X2,X1,X0)))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))))))) )),
  inference(cnf_transformation,[],[f58])).
fof(f80,plain,(
  ( ! [X2,X0,X1] : (s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0,X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(flattening,[],[f31])).
fof(f31,plain,(
  ! [X0] : ! [X1,X2] : s(X0,X1) = s(X0,'const.bool.COND_3'(s(bool,'T_0'),s(X0,X1),s(X0,X2)))),
  inference(rectify,[],[f20])).
fof(f20,axiom,(
  ! [X6] : ! [X22,X23] : s(X6,X22) = s(X6,'const.bool.COND_3'(s(bool,'T_0'),s(X6,X22),s(X6,X23)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.bool.COND_CLAUSES|split|0')).
fof(f78,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0,X1] : ((s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) & (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))))),
  inference(nnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0,X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(flattening,[],[f29])).
fof(f29,plain,(
  ! [X0] : ! [X1] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1))) <=> s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : ! [X8] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))) <=> s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X8))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.list.LENGTH_NIL')).
fof(f79,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') != s('type.list.list'(X0),X1) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X1)))) )),
  inference(cnf_transformation,[],[f55])).
fof(f76,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X0)))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X21] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X21),s('type.num.num',X21)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.SUB_EQUAL_|48|')).
fof(f75,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X20] : s('type.num.num',X20) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.ADD|split|0')).
fof(f74,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f26])).
fof(f26,plain,(
  ! [X0] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X20] : s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.*_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X20)))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.arithmetic.MULT|split|0')).
fof(f72,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.numeral.numeral_suc|split|0')).
fof(f71,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f16])).
fof(f16,axiom,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.|48|_0')))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.prim_rec.PRE|split|0')).
fof(f3911,plain,(
  ( ! [X37,X38] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | s('type.list.list'(X37),X38) = s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK10(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK11(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK12(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK13(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),'const.list.CONS_2'(s(X37,sK14(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37)),s('type.list.list'(X37),sK9(X38,'const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')),X37))))))))))))) ) | $spl16),
  inference(backward_demodulation,[],[f502,f3878])).
fof(f3903,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f3902,f3151])).
fof(f3151,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),sK9(sK2,sK1,sK0))))))))))))) ) | ($spl0 | $spl2)),
  inference(unit_resulting_resolution,[],[f3149,f1113])).
fof(f1113,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X3)))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f104,f94])).
fof(f3149,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK9(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(subsumption_resolution,[],[f3128,f70])).
fof(f3128,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK9(sK2,sK1,sK0)))),s('type.num.num',sK1)))) | $spl0),
  inference(superposition,[],[f112,f1720])).
fof(f1720,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl0),
  inference(unit_resulting_resolution,[],[f102,f133])).
fof(f3902,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK2,sK1,sK0)),s('type.list.list'(sK0),sK9(sK2,sK1,sK0)))))))))))) | $spl0),
  inference(subsumption_resolution,[],[f3884,f70])).
fof(f3884,plain,(
  ~p(s(bool,'T_0')) | s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK10(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK11(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK12(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK13(sK2,sK1,sK0)),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK14(sK2,sK1,sK0)),s('type.list.list'(sK0),sK9(sK2,sK1,sK0)))))))))))) | $spl0),
  inference(superposition,[],[f110,f1720])).
fof(f2337,plain,(
  $false | ($spl8 | $spl28)),
  inference(subsumption_resolution,[],[f2336,f73])).
fof(f2336,plain,(
  p(s(bool,'F_0')) | ($spl8 | $spl28)),
  inference(forward_demodulation,[],[f1674,f140])).
fof(f1674,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl28),
  inference(cnf_transformation,[],[f1674_D])).
fof(f1674_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2238,plain,(
  $false | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f2237,f73])).
fof(f2237,plain,(
  p(s(bool,'F_0')) | ($spl28 | $spl35)),
  inference(backward_demodulation,[],[f1904,f1674])).
fof(f1904,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl35),
  inference(unit_resulting_resolution,[],[f1864,f77])).
fof(f2236,plain,(
  $false | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f1906,f1674])).
fof(f1906,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl35),
  inference(unit_resulting_resolution,[],[f70,f1864,f100])).
fof(f2235,plain,(
  $false | ($spl28 | $spl35)),
  inference(subsumption_resolution,[],[f1909,f1674])).
fof(f1909,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl35),
  inference(unit_resulting_resolution,[],[f70,f1864,f100])).
fof(f2234,plain,(
  $false | ($spl11 | $spl28 | $spl35)),
  inference(subsumption_resolution,[],[f2233,f73])).
fof(f2233,plain,(
  p(s(bool,'F_0')) | ($spl11 | $spl28 | $spl35)),
  inference(forward_demodulation,[],[f1674,f1895])).
fof(f1895,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | ($spl11 | $spl35)),
  inference(unit_resulting_resolution,[],[f142,f1864,f131])).
fof(f2226,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | $spl46),
  inference(cnf_transformation,[],[f2226_D])).
fof(f2226_D,plain,(
  s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) <=> ~$spl46),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl46])])).
fof(f2222,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,bool,bool))) ) | $spl42),
  inference(cnf_transformation,[],[f2222_D])).
fof(f2222_D,plain,(
  ( ! [X0,X1] : (s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,bool,bool))) ) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f2229,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | $spl51),
  inference(cnf_transformation,[],[f2229_D])).
fof(f2229_D,plain,(
  s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl51),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl51])])).
fof(f2220,plain,(
  ( ! [X12,X13] : (s(bool,'F_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X12) = s(fun(bool,bool),X13) | s(bool,'T_0') = s(bool,sK19(X12,X13,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl29),
  inference(superposition,[],[f2208,f77])).
fof(f2208,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'F_0'))) != s(X2,g(s(bool,'F_0'))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,X2,bool))) ) | $spl29),
  inference(forward_demodulation,[],[f2196,f1685])).
fof(f1685,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl29),
  inference(unit_resulting_resolution,[],[f73,f1675,f97])).
fof(f2196,plain,(
  ( ! [X2,X0,X1] : (s(X2,f(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) != s(X2,g(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) | s(fun(bool,X2),X0) = s(fun(bool,X2),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,X2,bool))) ) | $spl29),
  inference(superposition,[],[f101,f1693])).
fof(f1693,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl29),
  inference(subsumption_resolution,[],[f1687,f70])).
fof(f1687,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,'T_0') = s(bool,X0)) ) | $spl29),
  inference(superposition,[],[f1675,f131])).
fof(f2227,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl48),
  inference(cnf_transformation,[],[f2227_D])).
fof(f2227_D,plain,(
  ( ! [X6] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) <=> ~$spl48),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl48])])).
fof(f2219,plain,(
  ( ! [X10,X11,X9] : (s(bool,X9) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X10) = s(fun(bool,bool),X11) | s(bool,'T_0') = s(bool,sK19(X10,X11,bool,bool)) | s(bool,'T_0') = s(bool,X9) | s(bool,'T_0') = s(bool,g(s(bool,'F_0')))) ) | $spl29),
  inference(superposition,[],[f2208,f131])).
fof(f2218,plain,(
  ( ! [X6,X8,X7] : (s(bool,X6) != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X7) = s(fun(bool,bool),X8) | s(bool,'T_0') = s(bool,sK19(X7,X8,bool,bool)) | s(bool,'T_0') = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X6)) ) | $spl29),
  inference(superposition,[],[f2208,f131])).
fof(f2221,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl40),
  inference(cnf_transformation,[],[f2221_D])).
fof(f2221_D,plain,(
  ( ! [X2] : (s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f2224,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | $spl45),
  inference(cnf_transformation,[],[f2224_D])).
fof(f2224_D,plain,(
  s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) <=> ~$spl45),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl45])])).
fof(f2217,plain,(
  ( ! [X4,X5,X3] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X3) = s(fun(bool,bool),X4) | s(bool,'T_0') = s(bool,sK19(X3,X4,bool,bool)) | s(bool,X5) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X5)) ) | $spl29),
  inference(superposition,[],[f2208,f131])).
fof(f2216,plain,(
  ( ! [X2,X0,X1] : (s(bool,'T_0') != s(bool,f(s(bool,'F_0'))) | s(fun(bool,bool),X0) = s(fun(bool,bool),X1) | s(bool,'T_0') = s(bool,sK19(X0,X1,bool,bool)) | s(bool,X2) = s(bool,g(s(bool,'F_0'))) | s(bool,'T_0') = s(bool,X2)) ) | $spl29),
  inference(superposition,[],[f2208,f131])).
fof(f1977,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl38),
  inference(cnf_transformation,[],[f1977_D])).
fof(f1977_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f171,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f171_D])).
fof(f171_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f1979,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1978])).
fof(f1978,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK16('T_0',X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36)))) | s(bool,X33) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f1960,f173])).
fof(f1960,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,X33)) | p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK16('T_0',X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36)))) | s(bool,X33) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f87,f131])).
fof(f1976,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK16('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1975])).
fof(f1975,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK16('T_0',X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31)))) | s(bool,X28) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f1959,f173])).
fof(f1959,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,X28)) | p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK16('T_0',X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31)))) | s(bool,X28) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f87,f131])).
fof(f1888,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) | $spl36),
  inference(cnf_transformation,[],[f1888_D])).
fof(f1888_D,plain,(
  ( ! [X2,X3,X1] : (p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f1890,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1889])).
fof(f1889,plain,(
  ( ! [X37,X35,X33,X36,X34] : (p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK15('T_0',X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36)))) | s(bool,X33) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(subsumption_resolution,[],[f1872,f173])).
fof(f1872,plain,(
  ( ! [X37,X35,X33,X36,X34] : (~p(s(bool,X33)) | p(s(bool,happ(s(fun(X34,bool),X35),s(X34,sK15('T_0',X35,X34))))) | ~p(s(bool,happ(s(fun(X34,bool),X35),s(X34,X36)))) | s(bool,X33) = s(bool,X37) | s(bool,'T_0') = s(bool,X37)) )),
  inference(superposition,[],[f85,f131])).
fof(f1887,plain,(
  ( ! [X2,X0,X3,X1] : (s(bool,'T_0') = s(bool,X0) | p(s(bool,happ(s(fun(X1,bool),X2),s(X1,sK15('T_0',X2,X1))))) | ~p(s(bool,happ(s(fun(X1,bool),X2),s(X1,X3))))) )),
  inference(condensation,[],[f1886])).
fof(f1886,plain,(
  ( ! [X30,X28,X31,X29,X32] : (p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('T_0',X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31)))) | s(bool,X28) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(subsumption_resolution,[],[f1871,f173])).
fof(f1871,plain,(
  ( ! [X30,X28,X31,X29,X32] : (~p(s(bool,X28)) | p(s(bool,happ(s(fun(X29,bool),X30),s(X29,sK15('T_0',X30,X29))))) | ~p(s(bool,happ(s(fun(X29,bool),X30),s(X29,X31)))) | s(bool,X28) = s(bool,X32) | s(bool,'T_0') = s(bool,X32)) )),
  inference(superposition,[],[f85,f131])).
fof(f1862,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl32),
  inference(cnf_transformation,[],[f1862_D])).
fof(f1862_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f1864,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | $spl35),
  inference(cnf_transformation,[],[f1864_D])).
fof(f1864_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f1820,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) ) | $spl29),
  inference(equality_factoring,[],[f1693])).
fof(f1676,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl30),
  inference(cnf_transformation,[],[f1676_D])).
fof(f1676_D,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f1675,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | $spl29),
  inference(cnf_transformation,[],[f1675_D])).
fof(f1675_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) <=> ~$spl29),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl29])])).
fof(f1660,plain,(
  ( ! [X4,X2,X0,X3,X1] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X0),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X1),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X2),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X3),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.NIL_0')))))))))))) ) | $spl2),
  inference(superposition,[],[f1113,f526])).
fof(f1673,plain,(
  ( ! [X6,X10,X8,X7,X9] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),'const.list.NIL_0'))))))))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1))))) ) | $spl2),
  inference(forward_demodulation,[],[f1672,f1424])).
fof(f1672,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK17('const.list.LENGTH_1'(s('type.list.list'(sK0),X5)),'const.num.|48|_0',X5,sK0))))))))))))) ) | $spl2),
  inference(forward_demodulation,[],[f1657,f526])).
fof(f1657,plain,(
  ( ! [X6,X10,X8,X7,X5,X9] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),'const.list.NIL_0'))),s('type.num.num',sK1)))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X9),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X10),s('type.list.list'(sK0),sK17('const.list.LENGTH_1'(s('type.list.list'(sK0),X5)),'const.num.|48|_0',X5,sK0))))))))))))) ) | $spl2),
  inference(superposition,[],[f1113,f1424])).
fof(f1670,plain,(
  $false | ($spl2 | $spl4 | $spl6)),
  inference(subsumption_resolution,[],[f1669,f70])).
fof(f1669,plain,(
  ~p(s(bool,'T_0')) | ($spl2 | $spl4 | $spl6)),
  inference(forward_demodulation,[],[f1655,f138])).
fof(f1655,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3))),s('type.num.num',sK1)))) | ($spl2 | $spl4)),
  inference(unit_resulting_resolution,[],[f106,f1113])).
fof(f1274,plain,(
  $false | ($spl8 | $spl19)),
  inference(subsumption_resolution,[],[f1203,f1188])).
fof(f1188,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1)) ) | $spl8),
  inference(superposition,[],[f140,f140])).
fof(f1203,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0)) ) | ($spl8 | $spl19)),
  inference(superposition,[],[f1121,f140])).
fof(f1121,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl19),
  inference(subsumption_resolution,[],[f517,f504])).
fof(f517,plain,(
  s(bool,'T_0') != s(bool,'F_0') | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl19),
  inference(superposition,[],[f504,f77])).
fof(f1187,plain,(
  $false | ($spl8 | $spl19)),
  inference(unit_resulting_resolution,[],[f1121,f140])).
fof(f1119,plain,(
  $false | ($spl0 | $spl19)),
  inference(subsumption_resolution,[],[f1118,f73])).
fof(f1118,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl19)),
  inference(backward_demodulation,[],[f510,f102])).
fof(f510,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f504,f77])).
fof(f1117,plain,(
  $false | ($spl0 | $spl19)),
  inference(subsumption_resolution,[],[f511,f102])).
fof(f511,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f70,f504,f100])).
fof(f1116,plain,(
  $false | ($spl0 | $spl19)),
  inference(subsumption_resolution,[],[f513,f102])).
fof(f513,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl19),
  inference(unit_resulting_resolution,[],[f70,f504,f100])).
fof(f1115,plain,(
  $false | ($spl0 | $spl11 | $spl19)),
  inference(subsumption_resolution,[],[f1114,f73])).
fof(f1114,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl11 | $spl19)),
  inference(forward_demodulation,[],[f102,f549])).
fof(f549,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | ($spl11 | $spl19)),
  inference(unit_resulting_resolution,[],[f504,f142,f131])).
fof(f1090,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl24),
  inference(cnf_transformation,[],[f1090_D])).
fof(f1090_D,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f1092,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | $spl26),
  inference(cnf_transformation,[],[f1092_D])).
fof(f1092_D,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0'))) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f1088,plain,(
  s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.ZERO_0'))) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | $spl1),
  inference(forward_demodulation,[],[f1087,f526])).
fof(f1087,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(forward_demodulation,[],[f1048,f94])).
fof(f1048,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.<=_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))),s('type.num.num','const.num.|48|_0'))) | s(bool,'F_0') = s(bool,'const.arithmetic.>_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.NIL_0'))),s('type.num.num','const.arithmetic.ZERO_0')))) ) | $spl1),
  inference(superposition,[],[f970,f526])).
fof(f899,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) | $spl20),
  inference(cnf_transformation,[],[f899_D])).
fof(f899_D,plain,(
  s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f901,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | $spl23),
  inference(cnf_transformation,[],[f901_D])).
fof(f901_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f892,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))) | s('type.list.list'(sK0),'const.list.NIL_0') = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(superposition,[],[f78,f106])).
fof(f502,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl16),
  inference(cnf_transformation,[],[f502_D])).
fof(f502_D,plain,(
  ( ! [X0] : (s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f504,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | $spl19),
  inference(cnf_transformation,[],[f504_D])).
fof(f504_D,plain,(
  s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) <=> ~$spl19),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl19])])).
fof(f485,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))) | s(bool,X0) = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) ) | $spl1),
  inference(equality_factoring,[],[f338])).
fof(f187,plain,(
  $false | $spl12),
  inference(subsumption_resolution,[],[f177,f70])).
fof(f177,plain,(
  ~p(s(bool,'T_0')) | $spl12),
  inference(backward_demodulation,[],[f171,f73])).
fof(f172,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) | $spl14),
  inference(cnf_transformation,[],[f172_D])).
fof(f172_D,plain,(
  ( ! [X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f174,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f166,f133])).
fof(f166,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f170,plain,(
  ( ! [X0,X1] : (p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(subsumption_resolution,[],[f163,f133])).
fof(f163,plain,(
  ( ! [X0,X1] : (p(s(bool,X0)) | p(s(bool,X1)) | s(bool,'F_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f97,f77])).
fof(f140,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) | $spl8),
  inference(cnf_transformation,[],[f140_D])).
fof(f140_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f142,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl11),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f137,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,'F_0') | s(bool,'F_0') = s(bool,X0)) )),
  inference(equality_factoring,[],[f77])).
fof(f102,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl0),
  inference(cnf_transformation,[],[f102_D])).
fof(f102_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f108,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | $spl6),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f67,plain,(
  p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK3)))))) & s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X3)))))))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7,sK8])],[f53])).
fof(f53,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X9)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X10),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X11),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X12),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X13),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X14),s('type.list.list'(X0),X9))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))))))),
  inference(rectify,[],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))))) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | ! [X3,X4,X5,X6,X7,X8] : (~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) | s('type.list.list'(X0),X2) != s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3))))))))))))))),
  inference(nnf_transformation,[],[f48])).
fof(f48,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <~> ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))))),
  inference(ennf_transformation,[],[f24])).
fof(f24,plain,(
  ~! [X0,X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))))),
  inference(flattening,[],[f23])).
fof(f23,plain,(
  ~! [X0] : ! [X1,X2] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X3,X4,X5,X6,X7,X8] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),X3)))))) & s('type.list.list'(X0),X2) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X4),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X5),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X6),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X7),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X8),s('type.list.list'(X0),X3)))))))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X9)))))))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X8))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ? [X9,X10,X11,X12,X13,X14] : (p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',X7),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X6),X9)))))) & s('type.list.list'(X6),X8) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X10),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X11),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X12),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X14),s('type.list.list'(X6),X9)))))))))))))),
  file('thm.quantHeuristics.LIST_LENGTH_5|split|9','thm.quantHeuristics.LIST_LENGTH_5|split|9')).
fof(f106,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) | $spl4),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f68,plain,(
  s('type.list.list'(sK0),sK2) = s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,sK8),s('type.list.list'(sK0),sK3))))))))))) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))),
  inference(cnf_transformation,[],[f54])).
fof(f103,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) | $spl1),
  inference(cnf_transformation,[],[f103_D])).
fof(f103_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f104,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X3))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) | $spl2),
  inference(cnf_transformation,[],[f104_D])).
fof(f104_D,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X3))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3))))))) ) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  ( ! [X6,X4,X8,X7,X5,X3] : (s('type.list.list'(sK0),sK2) != s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X4),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X5),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X6),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X7),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,X8),s('type.list.list'(sK0),X3))))))))))) | ~p(s(bool,'const.arithmetic.<=_2'(s('type.num.num',sK1),s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),X3)))))) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(sK0),sK2))),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.BIT2_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))))))) )),
  inference(cnf_transformation,[],[f54])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 104
% Passive clauses: 502
% Generated clauses: 4514
% Final active clauses: 44
% Final passive clauses: 187
% Input formulas: 21
% Initial clauses: 35
% 
% Duplicate literals: 130
% Trivial inequalities: 19
% Fw subsumption resolutions: 140
% Fw demodulations: 752
% Bw demodulations: 182
% Condensations: 228
% Global subsumptions: 6
% 
% Simple tautologies: 43
% Equational tautologies: 90
% Forward subsumptions: 2567
% Bw demodulations to eq. taut.: 7
% 
% Unit resulting resolution: 287
% Factoring: 1
% Forward superposition: 1501
% Backward superposition: 911
% Self superposition: 51
% Equality factoring: 34
% Equality resolution: 2
% 
% Split clauses: 21
% Split components: 47
% SAT solver clauses: 568
% SAT solver unit clauses: 68
% SAT solver binary clauses: 146
% 
% Sat splits: 21
% Sat splitting refutations: 16
% 
% Memory used [KB]: 4733
% Time elapsed: 0.160 s
% ------------------------------
% ------------------------------
% Success in time 1.484 s
