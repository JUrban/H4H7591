Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pair
% SZS output start Proof for thm.pair
fof(f587,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f586,f42,f64,f62,f117,f41,f66,f487,f65,f488,f516,f514])).
fof(f514,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X4)))) ) | $spl14),
  inference(cnf_transformation,[],[f514_D])).
fof(f514_D,plain,(
  ( ! [X4] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X4)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f516,plain,(
  ( ! [X8] : (s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8)))) ) | $spl4),
  inference(subsumption_resolution,[],[f512,f45])).
fof(f45,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.pair.FORALL_PROD',aHL_FALSITY)).
fof(f512,plain,(
  ( ! [X8] : (p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8)))) ) | $spl4),
  inference(superposition,[],[f65,f46])).
fof(f46,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.pair.FORALL_PROD',aHL_BOOL_CASES)).
fof(f488,plain,(
  $false | ($spl3 | $spl6)),
  inference(subsumption_resolution,[],[f64,f66])).
fof(f65,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8))))) ) | $spl4),
  inference(cnf_transformation,[],[f65_D])).
fof(f65_D,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f487,plain,(
  ( ! [X0] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X0))))) ) | $spl6),
  inference(superposition,[],[f66,f59])).
fof(f59,plain,(
  ( ! [X2,X0,X1] : (s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,sK6(X2,X1,X0)),s(X1,sK7(X2,X1,X0))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK6,sK7])],[f25])).
fof(f25,plain,(
  ! [X0,X1,X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ! [X0,X1] : ! [X2] : ? [X3,X4] : s('type.pair.prod'(X0,X1),X2) = s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4)))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6,X7] : ! [X15] : ? [X16,X17] : s('type.pair.prod'(X6,X7),X15) = s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X16),s(X7,X17)))),
  file('thm.pair.FORALL_PROD','thm.pair.ABS_PAIR_THM')).
fof(f66,plain,(
  ( ! [X6,X7] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7))))))) ) | $spl6),
  inference(cnf_transformation,[],[f66_D])).
fof(f66_D,plain,(
  ( ! [X6,X7] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7))))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f41,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7)))))) | p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8))))) )),
  inference(cnf_transformation,[],[f34])).
fof(f34,plain,(
  (! [X8] : p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),X8)))) | ! [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X6),s(sK1,X7))))))) & (~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3)))) | ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,sK4),s(sK1,sK5)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f33])).
fof(f33,plain,(
  ? [X0,X1,X2] : ((! [X8] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X8)))) | ! [X6,X7] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X6),s(X1,X7))))))) & (? [X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X5)))) | ? [X3,X4] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X3),s(X1,X4))))))))),
  inference(rectify,[],[f32])).
fof(f32,plain,(
  ? [X0,X1,X2] : ((! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) | ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))))))) & (? [X3] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) | ? [X4,X5] : ~p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5))))))))),
  inference(nnf_transformation,[],[f28])).
fof(f28,plain,(
  ? [X0,X1,X2] : (! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <~> ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(ennf_transformation,[],[f15])).
fof(f15,plain,(
  ~! [X0,X1,X2] : (! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(flattening,[],[f14])).
fof(f14,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),X3)))) <=> ! [X4,X5] : p(s(bool,happ(s(fun('type.pair.prod'(X0,X1),bool),X2),s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X4),s(X1,X5)))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),X9)))) <=> ! [X10,X11] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X10),s(X7,X11)))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),X9)))) <=> ! [X10,X11] : p(s(bool,happ(s(fun('type.pair.prod'(X6,X7),bool),X8),s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X10),s(X7,X11)))))))),
  file('thm.pair.FORALL_PROD','thm.pair.FORALL_PROD')).
fof(f117,plain,(
  $false | ($spl1 | $spl4)),
  inference(resolution,[],[f65,f62])).
fof(f62,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3)))) | $spl1),
  inference(cnf_transformation,[],[f62_D])).
fof(f62_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f64,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,sK4),s(sK1,sK5)))))) | $spl3),
  inference(cnf_transformation,[],[f64_D])).
fof(f64_D,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,sK4),s(sK1,sK5)))))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f42,plain,(
  ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,sK4),s(sK1,sK5)))))) | ~p(s(bool,happ(s(fun('type.pair.prod'(sK0,sK1),bool),sK2),s('type.pair.prod'(sK0,sK1),sK3))))),
  inference(cnf_transformation,[],[f34])).
fof(f586,plain,(
  $false | ($spl3 | $spl14)),
  inference(subsumption_resolution,[],[f585,f43])).
fof(f43,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.pair.FORALL_PROD',aHL_TRUTH)).
fof(f585,plain,(
  ~p(s(bool,'T_0')) | ($spl3 | $spl14)),
  inference(forward_demodulation,[],[f64,f514])).
% SZS output end Proof for thm.pair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 27
% Passive clauses: 115
% Generated clauses: 525
% Final active clauses: 20
% Final passive clauses: 55
% Input formulas: 12
% Initial clauses: 20
% 
% Duplicate literals: 53
% Trivial inequalities: 19
% Fw subsumption resolutions: 61
% Fw demodulations: 8
% Bw demodulations: 3
% 
% Simple tautologies: 42
% Equational tautologies: 16
% Forward subsumptions: 210
% 
% Binary resolution: 49
% Factoring: 1
% Forward superposition: 87
% Backward superposition: 162
% Self superposition: 22
% Equality factoring: 26
% Equality resolution: 4
% 
% Split clauses: 8
% Split components: 16
% SAT solver clauses: 18
% SAT solver unit clauses: 1
% SAT solver binary clauses: 10
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 8
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 16
% TWLsolver calls for satisfiability: 9
% 
% Memory used [KB]: 767
% Time elapsed: 0.020 s
% ------------------------------
% ------------------------------
% Success in time 0.028 s
