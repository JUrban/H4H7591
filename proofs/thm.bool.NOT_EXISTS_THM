Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.bool
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.bool
% SZS output start Proof for thm.bool
fof(f39,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f38,f23,f35,f33,f37,f22,f36])).
fof(f36,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X5))))) ) | $spl4),
  inference(cnf_transformation,[],[f36_D])).
fof(f36_D,plain,(
  ( ! [X5] : (~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X5))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f22,plain,(
  ( ! [X4,X5] : (~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X4)))) | ~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X5))))) )),
  inference(cnf_transformation,[],[f20])).
fof(f20,plain,(
  (! [X5] : ~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,X4))))) & (p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK2)))) | p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f19])).
fof(f19,plain,(
  ? [X0,X1] : ((! [X5] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X5)))) | ! [X4] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X4))))) & (? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))) | ? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2))))))),
  inference(rectify,[],[f18])).
fof(f18,plain,(
  ? [X0,X1] : ((! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))) & (? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) | ? [X3] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3))))))),
  inference(nnf_transformation,[],[f14])).
fof(f14,plain,(
  ? [X0,X1] : (! [X2] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <~> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(ennf_transformation,[],[f9])).
fof(f9,plain,(
  ~! [X0,X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(flattening,[],[f8])).
fof(f8,plain,(
  ~! [X0] : ! [X1] : (~? [X2] : p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X2)))) <=> ! [X3] : ~p(s(bool,happ(s(fun(X0,bool),X1),s(X0,X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7] : (~? [X8] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) <=> ! [X8] : ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7] : (~? [X8] : p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))) <=> ! [X8] : ~p(s(bool,happ(s(fun(X6,bool),X7),s(X6,X8)))))),
  file('thm.bool.NOT_EXISTS_THM','thm.bool.NOT_EXISTS_THM')).
fof(f37,plain,(
  $false | ($spl0 | $spl4)),
  inference(resolution,[],[f36,f33])).
fof(f33,plain,(
  p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK2)))) | $spl0),
  inference(cnf_transformation,[],[f33_D])).
fof(f33_D,plain,(
  p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK2)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f35,plain,(
  p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK3)))) | $spl2),
  inference(cnf_transformation,[],[f35_D])).
fof(f35_D,plain,(
  p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK3)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f23,plain,(
  p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK3)))) | p(s(bool,happ(s(fun(sK0,bool),sK1),s(sK0,sK2))))),
  inference(cnf_transformation,[],[f20])).
fof(f38,plain,(
  $false | ($spl2 | $spl4)),
  inference(subsumption_resolution,[],[f35,f36])).
% SZS output end Proof for thm.bool
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 4
% Passive clauses: 8
% Generated clauses: 16
% Final active clauses: 3
% Final passive clauses: 4
% Input formulas: 6
% Initial clauses: 10
% 
% Fw subsumption resolutions: 1
% 
% Simple tautologies: 2
% Forward subsumptions: 1
% 
% Binary resolution: 1
% 
% Split clauses: 2
% Split components: 4
% SAT solver clauses: 6
% SAT solver unit clauses: 1
% SAT solver binary clauses: 4
% SAT solver learnt clauses: 1
% 
% Sat splits: 2
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 4
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.012 s
% ------------------------------
% ------------------------------
% Success in time 0.014 s
