Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.quantHeuristics
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quantHeuristics
% SZS output start Proof for thm.quantHeuristics
fof(f6456,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f6396,f132,f193,f6392,f194])).
fof(f194,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl4),
  inference(cnf_transformation,[],[f194_D])).
fof(f194_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f6392,plain,(
  ( ! [X81] : (p(s(bool,X81))) ) | $spl3),
  inference(subsumption_resolution,[],[f6391,f193])).
fof(f6391,plain,(
  ( ! [X81] : (p(s(bool,'F_0')) | p(s(bool,X81))) ) | $spl3),
  inference(forward_demodulation,[],[f6390,f236])).
fof(f236,plain,(
  s(bool,'F_0') = s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0')))),
  inference(resolution,[],[f125,f139])).
fof(f139,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','thm.bool.EQ_CLAUSES|split|3')).
fof(f125,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0'))))),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0'))))),
  inference(flattening,[],[f6])).
fof(f6,negated_conjecture,(
  ~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0'))))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','thm.quantHeuristics.GUESS_RULES_BOOL|split|2')).
fof(f6390,plain,(
  ( ! [X81] : (p(s(bool,X81)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0'))))) ) | $spl3),
  inference(subsumption_resolution,[],[f6389,f134])).
fof(f134,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7] : (s(bool,'T_0') = s(bool,X7) <=> p(s(bool,X7)))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','thm.bool.EQ_CLAUSES|split|1')).
fof(f6389,plain,(
  ( ! [X81] : (p(s(bool,X81)) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0')))) | s(bool,'T_0') = s(bool,X81)) ) | $spl3),
  inference(forward_demodulation,[],[f6255,f159])).
fof(f159,plain,(
  ( ! [X0,X1] : (s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))) )),
  inference(cnf_transformation,[],[f50])).
fof(f50,plain,(
  ! [X0,X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(flattening,[],[f49])).
fof(f49,plain,(
  ! [X0] : ! [X1] : s(X0,X1) = s(X0,happ(s(fun(X0,X0),'_i_0_0'),s(X0,X1)))),
  inference(rectify,[],[f30])).
fof(f30,axiom,(
  ! [X17] : ! [X18] : s(X17,X18) = s(X17,happ(s(fun(X17,X17),'_i_0_0'),s(X17,X18)))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','_i0_ax')).
fof(f6255,plain,(
  ( ! [X81] : (p(s(bool,happ(s(fun(bool,bool),'_i_0_0'),s(bool,X81)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s(fun(bool,bool),'_i_0_0')))) | s(bool,'T_0') = s(bool,X81)) ) | $spl3),
  inference(superposition,[],[f176,f2012])).
fof(f2012,plain,(
  ( ! [X1] : (s(bool,X1) = s(bool,sK4('_i_0_0','_dst_x0_1'(s(bool,'T_0')),'type.one.one',bool)) | s(bool,'T_0') = s(bool,X1)) ) | $spl3),
  inference(trivial_inequality_removal,[],[f2008])).
fof(f2008,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'T_0') | s(bool,X1) = s(bool,sK4('_i_0_0','_dst_x0_1'(s(bool,'T_0')),'type.one.one',bool)) | s(bool,'T_0') = s(bool,X1)) ) | $spl3),
  inference(superposition,[],[f1993,f202])).
fof(f202,plain,(
  ( ! [X0,X1] : (s(bool,X0) = s(bool,X1) | s(bool,'T_0') = s(bool,X1) | s(bool,'T_0') = s(bool,X0)) )),
  inference(superposition,[],[f133,f133])).
fof(f133,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2',aHL_BOOL_CASES)).
fof(f1993,plain,(
  s(bool,'T_0') != s(bool,sK4('_i_0_0','_dst_x0_1'(s(bool,'T_0')),'type.one.one',bool)) | $spl3),
  inference(forward_demodulation,[],[f1992,f171])).
fof(f171,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))) )),
  inference(cnf_transformation,[],[f58])).
fof(f58,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(flattening,[],[f57])).
fof(f57,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,happ(s(fun(X0,X1),'_dst_x0_1'(s(X1,X2))),s(X0,X3)))),
  inference(rectify,[],[f31])).
fof(f31,axiom,(
  ! [X17,X19] : ! [X20,X21] : s(X19,X20) = s(X19,happ(s(fun(X17,X19),'_dst_x0_1'(s(X19,X20))),s(X17,X21)))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','_dst_x0_ax')).
fof(f1992,plain,(
  ( ! [X0] : (s(bool,sK4('_i_0_0','_dst_x0_1'(s(bool,'T_0')),'type.one.one',bool)) != s(bool,happ(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s('type.one.one',X0)))) ) | $spl3),
  inference(subsumption_resolution,[],[f1982,f193])).
fof(f1982,plain,(
  ( ! [X0] : (p(s(bool,'F_0')) | s(bool,sK4('_i_0_0','_dst_x0_1'(s(bool,'T_0')),'type.one.one',bool)) != s(bool,happ(s(fun('type.one.one',bool),'_dst_x0_1'(s(bool,'T_0'))),s('type.one.one',X0)))) )),
  inference(superposition,[],[f177,f236])).
fof(f177,plain,(
  ( ! [X2,X0,X5,X3,X1] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | s(X0,sK4(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) )),
  inference(cnf_transformation,[],[f112])).
fof(f112,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,sK3(X6,X3,X2,X1,X0)))))) & ((p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK4(X3,X2,X1,X0))))) & ! [X5] : s(X0,sK4(X3,X2,X1,X0)) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3,sK4])],[f111])).
fof(f111,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X6] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X6)))) | ? [X7] : s(X0,X6) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X7))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(rectify,[],[f110])).
fof(f110,plain,(
  ! [X0,X1,X2,X3] : ((~p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) | ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5))))) & (? [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) & ! [X5] : s(X0,X4) != s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))))),
  inference(nnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (~p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) | ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(ennf_transformation,[],[f64])).
fof(f64,plain,(
  ! [X0,X1,X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(flattening,[],[f63])).
fof(f63,plain,(
  ! [X0,X1] : ! [X2,X3] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3)))) <=> ! [X4] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,X4)))) => ? [X5] : s(X0,X4) = s(X0,happ(s(fun(X1,X0),X2),s(X1,X5)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X9,X6] : ! [X15,X16] : (p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X6,X9),X15),s(fun(X9,bool),X16)))) <=> ! [X11] : (p(s(bool,happ(s(fun(X9,bool),X16),s(X9,X11)))) => ? [X14] : s(X9,X11) = s(X9,happ(s(fun(X6,X9),X15),s(X6,X14)))))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2','thm.quantHeuristics.GUESS_REWRITES|split|4')).
fof(f176,plain,(
  ( ! [X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),X3),s(X0,sK4(X3,X2,X1,X0))))) | p(s(bool,'const.quantHeuristics.GUESS_EXISTS_GAP_2'(s(fun(X1,X0),X2),s(fun(X0,bool),X3))))) )),
  inference(cnf_transformation,[],[f112])).
fof(f193,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f193_D])).
fof(f193_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f132,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f35])).
fof(f35,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.quantHeuristics.GUESS_RULES_BOOL|split|2',aHL_FALSITY)).
fof(f6396,plain,(
  $false | ($spl3 | $spl4)),
  inference(resolution,[],[f194,f193])).
% SZS output end Proof for thm.quantHeuristics
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 123
% Passive clauses: 1456
% Generated clauses: 6230
% Final active clauses: 112
% Final passive clauses: 1254
% Input formulas: 30
% Initial clauses: 64
% 
% Duplicate literals: 167
% Trivial inequalities: 158
% Fw subsumption resolutions: 768
% Fw demodulations: 722
% Bw demodulations: 11
% 
% Simple tautologies: 170
% Equational tautologies: 18
% Forward subsumptions: 2444
% 
% Binary resolution: 436
% Forward superposition: 2344
% Backward superposition: 1417
% Self superposition: 35
% Equality factoring: 32
% Equality resolution: 10
% 
% Split clauses: 210
% Split components: 421
% SAT solver clauses: 408
% SAT solver unit clauses: 13
% SAT solver binary clauses: 122
% SAT solver learnt clauses: 1
% 
% Sat splits: 210
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 402
% TWLsolver calls for satisfiability: 87
% 
% Memory used [KB]: 4349
% Time elapsed: 0.144 s
% ------------------------------
% ------------------------------
% Success in time 0.149 s
