Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.hreal
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.hreal
% SZS output start Proof for thm.hreal
fof(f1127,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1111,f126,f189,f238,f240,f190,f518,f496,f500,f498,f1086,f163,f186,f188,f604,f928])).
fof(f928,plain,(
  ( ! [X4] : (~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X4),s('type.hrat.hrat',sK1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',X4))))) ) | $spl26),
  inference(cnf_transformation,[],[f928_D])).
fof(f928_D,plain,(
  ( ! [X4] : (~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X4),s('type.hrat.hrat',sK1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',X4))))) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f604,plain,(
  ( ! [X0] : (~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X0),s('type.hrat.hrat',sK1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',X0))))) ) | $spl0),
  inference(subsumption_resolution,[],[f601,f186])).
fof(f601,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X0),s('type.hrat.hrat',sK1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',X0))))) )),
  inference(superposition,[],[f183,f194])).
fof(f194,plain,(
  s(bool,'T_0') = s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK1)))),
  inference(resolution,[],[f135,f117])).
fof(f117,plain,(
  p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK1))))),
  inference(cnf_transformation,[],[f87])).
fof(f87,plain,(
  p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK1)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK2)))) & ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK1),s('type.hrat.hrat',sK2))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f71])).
fof(f71,plain,(
  ? [X0,X1,X2] : (p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2)))) & ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X2)))))),
  inference(flattening,[],[f70])).
fof(f70,plain,(
  ? [X0,X1,X2] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2))))) & ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X2)))))),
  inference(ennf_transformation,[],[f34])).
fof(f34,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2))))) => p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X2)))))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ~! [X0,X1,X2] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2))))) => p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X7)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X8))))) => p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X7),s('type.hrat.hrat',X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X7)))) & ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X8))))) => p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X7),s('type.hrat.hrat',X8)))))),
  file('thm.hreal.CUT_STRADDLE','thm.hreal.CUT_STRADDLE')).
fof(f135,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f90])).
fof(f90,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f43])).
fof(f43,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.hreal.CUT_STRADDLE','thm.bool.EQ_CLAUSES|split|1')).
fof(f183,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) | ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X2),s('type.hrat.hrat',X1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2))))) )),
  inference(cnf_transformation,[],[f86])).
fof(f86,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) | ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X2),s('type.hrat.hrat',X1)))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2)))))),
  inference(flattening,[],[f85])).
fof(f85,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) | ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X2),s('type.hrat.hrat',X1))))) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2)))))),
  inference(ennf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X1)))) & p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X2),s('type.hrat.hrat',X1))))) => p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X0),s('type.hrat.hrat',X2)))))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X6,X7,X8] : ((p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X7)))) & p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X8),s('type.hrat.hrat',X7))))) => p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',X6),s('type.hrat.hrat',X8)))))),
  file('thm.hreal.CUT_STRADDLE','thm.hreal.CUT_DOWN')).
fof(f188,plain,(
  p(s(bool,'F_0')) | $spl2),
  inference(cnf_transformation,[],[f188_D])).
fof(f188_D,plain,(
  p(s(bool,'F_0')) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f186,plain,(
  p(s(bool,'T_0')) | $spl0),
  inference(cnf_transformation,[],[f186_D])).
fof(f186_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f163,plain,(
  p(s(bool,'T_0')) | p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | ~p(s(bool,'F_0')) | p(s(bool,X0))))),
  inference(flattening,[],[f108])).
fof(f108,plain,(
  ! [X0] : (((p(s(bool,'F_0')) & ~p(s(bool,X0))) | p(s(bool,'T_0'))) & (~p(s(bool,'T_0')) | (~p(s(bool,'F_0')) | p(s(bool,X0)))))),
  inference(nnf_transformation,[],[f79])).
fof(f79,plain,(
  ! [X0] : ((~p(s(bool,'F_0')) | p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(ennf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : ((p(s(bool,'F_0')) => p(s(bool,X0))) <=> p(s(bool,'T_0')))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X11] : ((p(s(bool,'F_0')) => p(s(bool,X11))) <=> p(s(bool,'T_0')))),
  file('thm.hreal.CUT_STRADDLE','thm.bool.IMP_CLAUSES|split|2')).
fof(f1086,plain,(
  $false | ($spl0 | $spl3 | $spl20 | $spl26)),
  inference(subsumption_resolution,[],[f1085,f189])).
fof(f1085,plain,(
  p(s(bool,'F_0')) | ($spl0 | $spl20 | $spl26)),
  inference(forward_demodulation,[],[f1084,f198])).
fof(f198,plain,(
  s(bool,'F_0') = s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK2)))),
  inference(resolution,[],[f139,f118])).
fof(f118,plain,(
  ~p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK2))))),
  inference(cnf_transformation,[],[f87])).
fof(f139,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f92])).
fof(f92,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.hreal.CUT_STRADDLE','thm.bool.EQ_CLAUSES|split|2')).
fof(f1084,plain,(
  p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK2)))) | ($spl0 | $spl20 | $spl26)),
  inference(subsumption_resolution,[],[f1075,f186])).
fof(f1075,plain,(
  ~p(s(bool,'T_0')) | p(s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK2)))) | ($spl20 | $spl26)),
  inference(superposition,[],[f928,f530])).
fof(f530,plain,(
  s(bool,'T_0') = s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK2),s('type.hrat.hrat',sK1))) | $spl20),
  inference(resolution,[],[f500,f135])).
fof(f498,plain,(
  s('type.hrat.hrat',sK1) = s('type.hrat.hrat',sK2) | $spl18),
  inference(cnf_transformation,[],[f498_D])).
fof(f498_D,plain,(
  s('type.hrat.hrat',sK1) = s('type.hrat.hrat',sK2) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f500,plain,(
  p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK2),s('type.hrat.hrat',sK1)))) | $spl20),
  inference(cnf_transformation,[],[f500_D])).
fof(f500_D,plain,(
  p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK2),s('type.hrat.hrat',sK1)))) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f496,plain,(
  p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK2),s('type.hrat.hrat',sK1)))) | s('type.hrat.hrat',sK1) = s('type.hrat.hrat',sK2) | $spl3),
  inference(subsumption_resolution,[],[f490,f189])).
fof(f490,plain,(
  p(s(bool,'F_0')) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK2),s('type.hrat.hrat',sK1)))) | s('type.hrat.hrat',sK1) = s('type.hrat.hrat',sK2)),
  inference(superposition,[],[f177,f199])).
fof(f199,plain,(
  s(bool,'F_0') = s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK1),s('type.hrat.hrat',sK2)))),
  inference(resolution,[],[f139,f119])).
fof(f119,plain,(
  ~p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',sK1),s('type.hrat.hrat',sK2))))),
  inference(cnf_transformation,[],[f87])).
fof(f177,plain,(
  ( ! [X0,X1] : (p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X0)))) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X0),s('type.hrat.hrat',X1)))) | s('type.hrat.hrat',X0) = s('type.hrat.hrat',X1)) )),
  inference(cnf_transformation,[],[f65])).
fof(f65,plain,(
  ! [X0,X1] : (s('type.hrat.hrat',X0) = s('type.hrat.hrat',X1) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X0),s('type.hrat.hrat',X1)))) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X1),s('type.hrat.hrat',X0)))))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X7,X8] : (s('type.hrat.hrat',X7) = s('type.hrat.hrat',X8) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X7),s('type.hrat.hrat',X8)))) | p(s(bool,'const.hreal.hrat_lt_2'(s('type.hrat.hrat',X8),s('type.hrat.hrat',X7)))))),
  file('thm.hreal.CUT_STRADDLE','thm.hreal.HRAT_LT_TOTAL')).
fof(f518,plain,(
  $false | ($spl9 | $spl18)),
  inference(subsumption_resolution,[],[f517,f240])).
fof(f517,plain,(
  s(bool,'T_0') = s(bool,'F_0') | $spl18),
  inference(forward_demodulation,[],[f510,f194])).
fof(f510,plain,(
  s(bool,'F_0') = s(bool,'const.hreal.cut_2'(s('type.hreal.hreal',sK0),s('type.hrat.hrat',sK1))) | $spl18),
  inference(backward_demodulation,[],[f498,f198])).
fof(f190,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) | $spl4),
  inference(cnf_transformation,[],[f190_D])).
fof(f190_D,plain,(
  ( ! [X0] : (p(s(bool,X0))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f240,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl9),
  inference(cnf_transformation,[],[f240_D])).
fof(f240_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl9),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl9])])).
fof(f238,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X3))) )),
  inference(subsumption_resolution,[],[f228,f134])).
fof(f134,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f90])).
fof(f228,plain,(
  ( ! [X3] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X3)) | s(bool,'T_0') = s(bool,X3)) )),
  inference(superposition,[],[f134,f127])).
fof(f127,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.hreal.CUT_STRADDLE',aHL_BOOL_CASES)).
fof(f189,plain,(
  ~p(s(bool,'F_0')) | $spl3),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f126,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.hreal.CUT_STRADDLE',aHL_FALSITY)).
fof(f1111,plain,(
  $false | ($spl3 | $spl4)),
  inference(resolution,[],[f190,f189])).
% SZS output end Proof for thm.hreal
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 42
% Passive clauses: 173
% Generated clauses: 1042
% Final active clauses: 25
% Final passive clauses: 85
% Input formulas: 31
% Initial clauses: 67
% 
% Duplicate literals: 30
% Trivial inequalities: 14
% Fw subsumption resolutions: 123
% Fw demodulations: 174
% Bw demodulations: 7
% 
% Simple tautologies: 45
% Equational tautologies: 10
% Forward subsumptions: 415
% 
% Binary resolution: 56
% Factoring: 2
% Forward superposition: 157
% Backward superposition: 325
% Self superposition: 16
% Equality factoring: 12
% Equality resolution: 4
% 
% Split clauses: 44
% Split components: 91
% SAT solver clauses: 74
% SAT solver unit clauses: 3
% SAT solver binary clauses: 34
% SAT solver learnt clauses: 1
% 
% Sat splits: 44
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 72
% TWLsolver calls for satisfiability: 15
% 
% Memory used [KB]: 1023
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 0.029 s
