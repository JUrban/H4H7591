Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f1066,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1065])).
fof(f1065,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),sK2)))),
  inference(forward_demodulation,[],[f1064,f526])).
fof(f526,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0)))))))) )),
  inference(backward_demodulation,[],[f507,f462])).
fof(f462,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X0)))))) )),
  inference(superposition,[],[f447,f96])).
fof(f96,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f46])).
fof(f46,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X7,X10] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num',X7))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))),
  file('thm.list.EL_simp|split|0','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f447,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f327,f419])).
fof(f419,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(forward_demodulation,[],[f405,f72])).
fof(f72,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X10),s('type.num.num','const.num.|48|_0')))),
  file('thm.list.EL_simp|split|0','thm.arithmetic.ADD_|48|')).
fof(f405,plain,(
  ( ! [X0] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0'))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(superposition,[],[f96,f318])).
fof(f318,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))),
  inference(superposition,[],[f311,f71])).
fof(f71,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f30])).
fof(f30,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X10)))),
  file('thm.list.EL_simp|split|0','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f311,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0'))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(superposition,[],[f73,f71])).
fof(f73,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f32])).
fof(f32,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X7] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X7),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.list.EL_simp|split|0','thm.arithmetic.BIT|49|')).
fof(f327,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(backward_demodulation,[],[f318,f73])).
fof(f507,plain,(
  ( ! [X5] : (s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X5))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X5),s('type.num.num',X5)))) )),
  inference(superposition,[],[f70,f462])).
fof(f70,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f29])).
fof(f29,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f24])).
fof(f24,axiom,(
  ! [X10] : s('type.num.num',X10) = s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X10)))))),
  file('thm.list.EL_simp|split|0','thm.prim_rec.PRE|split|1')).
fof(f1064,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),s('type.list.list'(sK0),sK2)))),
  inference(superposition,[],[f939,f94])).
fof(f94,plain,(
  ( ! [X2,X0,X1] : (s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))) )),
  inference(cnf_transformation,[],[f44])).
fof(f44,plain,(
  ! [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(flattening,[],[f43])).
fof(f43,plain,(
  ! [X0] : ! [X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X1))) = s(X0,'const.list.EL_2'(s('type.num.num',X2),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X1)))))),
  inference(rectify,[],[f22])).
fof(f22,axiom,(
  ! [X6] : ! [X8,X7] : s(X6,'const.list.EL_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num',X7),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8)))))),
  file('thm.list.EL_simp|split|0','thm.list.EL|split|1')).
fof(f939,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2)))))),
  inference(forward_demodulation,[],[f64,f69])).
fof(f69,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f28])).
fof(f28,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : s('type.num.num',X9) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X9)))),
  file('thm.list.EL_simp|split|0','thm.arithmetic.NUMERAL_DEF')).
fof(f64,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2)))))),
  inference(cnf_transformation,[],[f51])).
fof(f51,plain,(
  s(sK0,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))),s('type.list.list'(sK0),sK2))) != s(sK0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK1))))))),s('type.list.list'(sK0),'const.list.TL_1'(s('type.list.list'(sK0),sK2)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f49])).
fof(f49,plain,(
  ? [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),X2))) != s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2)))))),
  inference(ennf_transformation,[],[f26])).
fof(f26,plain,(
  ~! [X0,X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2)))))),
  inference(flattening,[],[f25])).
fof(f25,plain,(
  ~! [X0] : ! [X1,X2] : s(X0,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))),s('type.list.list'(X0),X2))) = s(X0,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))))))),s('type.list.list'(X0),'const.list.TL_1'(s('type.list.list'(X0),X2)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8] : s(X6,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8] : s(X6,'const.list.EL_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))),s('type.list.list'(X6),X8))) = s(X6,'const.list.EL_2'(s('type.num.num','const.prim_rec.PRE_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X7))))))),s('type.list.list'(X6),'const.list.TL_1'(s('type.list.list'(X6),X8)))))),
  file('thm.list.EL_simp|split|0','thm.list.EL_simp|split|0')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 39
% Passive clauses: 141
% Generated clauses: 986
% Final active clauses: 35
% Final passive clauses: 72
% Input formulas: 23
% Initial clauses: 34
% 
% Duplicate literals: 42
% Trivial inequalities: 4
% Fw demodulations: 72
% Bw demodulations: 3
% 
% Simple tautologies: 27
% Equational tautologies: 15
% Forward subsumptions: 687
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 3
% Forward superposition: 371
% Backward superposition: 378
% Self superposition: 49
% Equality factoring: 26
% 
% Split clauses: 5
% Split components: 10
% SAT solver clauses: 10
% SAT solver unit clauses: 4
% SAT solver binary clauses: 5
% 
% Sat splits: 5
% 
% TWLsolver clauses: 10
% TWLsolver calls for satisfiability: 6
% 
% Memory used [KB]: 1663
% Time elapsed: 0.042 s
% ------------------------------
% ------------------------------
% Success in time 0.044 s
