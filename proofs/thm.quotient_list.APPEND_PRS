Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.quotient_list
% (73529)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 577
% Passive clauses: 7827
% Generated clauses: 16938
% Final active clauses: 574
% Final passive clauses: 6994
% Input formulas: 69
% Initial clauses: 203
% 
% Duplicate literals: 233
% Trivial inequalities: 91
% Fw subsumption resolutions: 913
% Fw demodulations: 1389
% Bw demodulations: 1
% 
% Simple tautologies: 253
% Equational tautologies: 48
% Forward subsumptions: 6240
% 
% Binary resolution: 6884
% Factoring: 1026
% Forward superposition: 3640
% Backward superposition: 2430
% Self superposition: 57
% Equality factoring: 2
% Equality resolution: 43
% 
% Split clauses: 91
% Split components: 183
% SAT solver clauses: 105
% SAT solver unit clauses: 4
% SAT solver binary clauses: 14
% 
% Sat splits: 91
% 
% TWLsolver clauses: 105
% TWLsolver calls for satisfiability: 77
% 
% Memory used [KB]: 14328
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.quotient_list
% (73621)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 288
% Passive clauses: 2080
% Generated clauses: 9946
% Final active clauses: 282
% Final passive clauses: 1716
% Input formulas: 69
% Initial clauses: 203
% 
% Duplicate literals: 128
% Trivial inequalities: 10
% Fw subsumption resolutions: 398
% Fw demodulations: 1019
% Bw demodulations: 78
% Condensations: 127
% Global subsumptions: 10
% 
% Simple tautologies: 190
% Equational tautologies: 13
% Forward subsumptions: 3610
% 
% Binary resolution: 1614
% Factoring: 281
% Forward superposition: 2289
% Backward superposition: 1628
% Self superposition: 59
% Equality factoring: 2
% Equality resolution: 10
% 
% Split clauses: 34
% Split components: 68
% SAT solver clauses: 2509
% SAT solver unit clauses: 218
% SAT solver binary clauses: 75
% SAT solver learnt clauses: 20
% 
% Sat splits: 34
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 2469
% TWLsolver calls for satisfiability: 1757
% 
% Memory used [KB]: 19829
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.quotient_list
% (73672)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 1390
% Passive clauses: 14454
% Generated clauses: 134620
% Final active clauses: 541
% Final passive clauses: 696
% Input formulas: 69
% Initial clauses: 203
% Discarded non-redundant clauses: 13897
% 
% Duplicate literals: 2902
% Trivial inequalities: 264
% Fw subsumption resolutions: 4350
% Fw demodulations: 21224
% Bw demodulations: 6345
% Condensations: 5111
% Global subsumptions: 704
% 
% Simple tautologies: 203
% Equational tautologies: 339
% Forward subsumptions: 77970
% Fw demodulations to eq. taut.: 3505
% Bw demodulations to eq. taut.: 636
% 
% Unit resulting resolution: 13931
% Factoring: 3
% Forward superposition: 50340
% Backward superposition: 24401
% Self superposition: 202
% Equality factoring: 79
% Equality resolution: 31
% 
% Split clauses: 245
% Split components: 499
% SAT solver clauses: 17001
% SAT solver unit clauses: 2812
% SAT solver binary clauses: 4195
% 
% Sat splits: 245
% Sat splitting refutations: 1350
% 
% Memory used [KB]: 137908
% Time elapsed: 10.400 s
% ------------------------------
% ------------------------------
% remaining time: 32 next slice time: 32
dis+11_5_fde=none:nwc=1:sas=minisat:sd=1:ss=axioms:st=5.0:sos=all:sdd=large:sser=off:sfr=on:ssfp=100000:ssfq=2.0:ssnc=none_37 on thm.quotient_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.quotient_list
% SZS output start Proof for thm.quotient_list
fof(f17507,plain,(
  $false),
  inference(subsumption_resolution,[],[f17418,f467])).
fof(f467,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) != s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)))))))),
  inference(forward_demodulation,[],[f277,f337])).
fof(f337,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))) )),
  inference(cnf_transformation,[],[f113])).
fof(f113,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))),
  inference(flattening,[],[f112])).
fof(f112,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7,X6] : ! [X13,X14,X15] : s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),X14),s('type.list.list'(X6),X15))))) = s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),X14))),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),X15)))))),
  file('thm.quotient_list.APPEND_PRS','thm.list.MAP_APPEND')).
fof(f277,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) != s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.APPEND_2'(s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),sK16))),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),sK17)))))))),
  inference(cnf_transformation,[],[f197])).
fof(f197,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK11,fun(sK11,bool)),sK13),s(fun(sK11,sK12),sK14),s(fun(sK12,sK11),sK15)))) & s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) != s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.APPEND_2'(s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),sK16))),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),sK17)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12,sK13,sK14,sK15,sK16,sK17])],[f154])).
fof(f154,plain,(
  ? [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) & ? [X5,X6] : s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))) != s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X6))))))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X6))))))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : s('type.list.list'(X1),'const.list.APPEND_2'(s('type.list.list'(X1),X5),s('type.list.list'(X1),X6))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.APPEND_2'(s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X6))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11,X12] : s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X12))) = s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X9),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X11))),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X12))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X11,X12] : s('type.list.list'(X7),'const.list.APPEND_2'(s('type.list.list'(X7),X11),s('type.list.list'(X7),X12))) = s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X9),s('type.list.list'(X6),'const.list.APPEND_2'(s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X11))),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X12))))))))),
  file('thm.quotient_list.APPEND_PRS','thm.quotient_list.APPEND_PRS')).
fof(f17418,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) = s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)))))))),
  inference(superposition,[],[f581,f636])).
fof(f636,plain,(
  s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12)),s('type.list.list'(sK12),sK19('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12))))),
  inference(subsumption_resolution,[],[f635,f304])).
fof(f304,plain,(
  ( ! [X2,X0,X1] : (s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))) )),
  inference(cnf_transformation,[],[f82])).
fof(f82,plain,(
  ! [X0,X1,X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(flattening,[],[f81])).
fof(f81,plain,(
  ! [X0,X1] : ! [X2] : s('type.list.list'(X1),'const.list.NIL_0') = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X2),s('type.list.list'(X0),'const.list.NIL_0')))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6,X7] : ! [X13] : s('type.list.list'(X7),'const.list.NIL_0') = s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),'const.list.NIL_0')))),
  file('thm.quotient_list.APPEND_PRS','thm.list.MAP|split|0')).
fof(f635,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.NIL_0'))) | s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12)),s('type.list.list'(sK12),sK19('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12))))),
  inference(forward_demodulation,[],[f599,f304])).
fof(f599,plain,(
  s('type.list.list'(sK12),'const.list.NIL_0') != s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),'const.list.NIL_0'))))) | s('type.list.list'(sK12),'const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17))) = s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,sK18('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12)),s('type.list.list'(sK12),sK19('const.list.APPEND_2'(s('type.list.list'(sK12),sK16),s('type.list.list'(sK12),sK17)),sK12))))),
  inference(superposition,[],[f467,f316])).
fof(f316,plain,(
  ( ! [X0,X1] : (s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X1,X0)),s('type.list.list'(X0),sK19(X1,X0)))) | s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1)) )),
  inference(cnf_transformation,[],[f213])).
fof(f213,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,sK18(X1,X0)),s('type.list.list'(X0),sK19(X1,X0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK18,sK19])],[f93])).
fof(f93,plain,(
  ! [X0,X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(flattening,[],[f92])).
fof(f92,plain,(
  ! [X0] : ! [X1] : (s('type.list.list'(X0),'const.list.NIL_0') = s('type.list.list'(X0),X1) | ? [X2,X3] : s('type.list.list'(X0),X1) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,X2),s('type.list.list'(X0),X3))))),
  inference(rectify,[],[f60])).
fof(f60,axiom,(
  ! [X6] : ! [X11] : (s('type.list.list'(X6),'const.list.NIL_0') = s('type.list.list'(X6),X11) | ? [X23,X24] : s('type.list.list'(X6),X11) = s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X24))))),
  file('thm.quotient_list.APPEND_PRS','thm.list.list_CASES')).
fof(f581,plain,(
  ( ! [X23,X22] : (s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X22),s('type.list.list'(sK12),X23))) = s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X22),s('type.list.list'(sK12),X23)))))))) )),
  inference(forward_demodulation,[],[f474,f301])).
fof(f301,plain,(
  ( ! [X4,X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))) )),
  inference(cnf_transformation,[],[f76])).
fof(f76,plain,(
  ! [X0,X1,X2,X3,X4] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))),
  inference(flattening,[],[f75])).
fof(f75,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X3),s('type.list.list'(X1),X4))))) = s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X2),s(X1,X3))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X2),s('type.list.list'(X1),X4)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7,X6] : ! [X13,X23,X24] : s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,X23),s('type.list.list'(X6),X24))))) = s('type.list.list'(X7),'const.list.CONS_2'(s(X7,happ(s(fun(X6,X7),X13),s(X6,X23))),s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X13),s('type.list.list'(X6),X24)))))),
  file('thm.quotient_list.APPEND_PRS','thm.list.MAP|split|1')).
fof(f474,plain,(
  ( ! [X23,X22] : (s('type.list.list'(sK12),'const.list.CONS_2'(s(sK12,X22),s('type.list.list'(sK12),X23))) = s('type.list.list'(sK12),'const.list.MAP_2'(s(fun(sK11,sK12),sK14),s('type.list.list'(sK11),'const.list.CONS_2'(s(sK11,happ(s(fun(sK12,sK11),sK15),s(sK12,X22))),s('type.list.list'(sK11),'const.list.MAP_2'(s(fun(sK12,sK11),sK15),s('type.list.list'(sK12),X23)))))))) )),
  inference(resolution,[],[f276,f334])).
fof(f334,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X5))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))))))) | ~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4))))) )),
  inference(cnf_transformation,[],[f159])).
fof(f159,plain,(
  ! [X0,X1,X2,X3,X4] : (~p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) | ! [X5,X6] : s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X5))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))))))))),
  inference(ennf_transformation,[],[f107])).
fof(f107,plain,(
  ! [X0,X1,X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X5))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))))))))),
  inference(flattening,[],[f106])).
fof(f106,plain,(
  ! [X0,X1] : ! [X2,X3,X4] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X0,fun(X0,bool)),X2),s(fun(X0,X1),X3),s(fun(X1,X0),X4)))) => ! [X5,X6] : s('type.list.list'(X1),'const.list.CONS_2'(s(X1,X6),s('type.list.list'(X1),X5))) = s('type.list.list'(X1),'const.list.MAP_2'(s(fun(X0,X1),X3),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun(X1,X0),X4),s(X1,X6))),s('type.list.list'(X0),'const.list.MAP_2'(s(fun(X1,X0),X4),s('type.list.list'(X1),X5))))))))),
  inference(rectify,[],[f46])).
fof(f46,axiom,(
  ! [X6,X7] : ! [X8,X9,X10] : (p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(X6,fun(X6,bool)),X8),s(fun(X6,X7),X9),s(fun(X7,X6),X10)))) => ! [X24,X23] : s('type.list.list'(X7),'const.list.CONS_2'(s(X7,X23),s('type.list.list'(X7),X24))) = s('type.list.list'(X7),'const.list.MAP_2'(s(fun(X6,X7),X9),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun(X7,X6),X10),s(X7,X23))),s('type.list.list'(X6),'const.list.MAP_2'(s(fun(X7,X6),X10),s('type.list.list'(X7),X24))))))))),
  file('thm.quotient_list.APPEND_PRS','thm.quotient_list.CONS_PRS')).
fof(f276,plain,(
  p(s(bool,'const.quotient.QUOTIENT_3'(s(fun(sK11,fun(sK11,bool)),sK13),s(fun(sK11,sK12),sK14),s(fun(sK12,sK11),sK15))))),
  inference(cnf_transformation,[],[f197])).
% SZS output end Proof for thm.quotient_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 514
% Passive clauses: 4629
% Generated clauses: 17340
% Final active clauses: 453
% Final passive clauses: 3525
% Input formulas: 69
% Initial clauses: 186
% 
% Selected by SInE selection: 53
% SInE iterations: 1
% 
% Duplicate literals: 570
% Trivial inequalities: 105
% Fw subsumption resolutions: 2134
% Fw demodulations: 1096
% Bw demodulations: 13
% 
% Simple tautologies: 650
% Equational tautologies: 25
% Forward subsumptions: 7268
% 
% Binary resolution: 7161
% Factoring: 96
% Forward superposition: 2529
% Backward superposition: 2956
% Self superposition: 22
% Equality factoring: 24
% Equality resolution: 13
% 
% Split clauses: 712
% Split components: 1644
% SAT solver clauses: 749
% SAT solver unit clauses: 16
% SAT solver binary clauses: 42
% 
% Sat splits: 712
% Sat splitting refutations: 30
% 
% Memory used [KB]: 8315
% Time elapsed: 0.365 s
% ------------------------------
% ------------------------------
% Success in time 12.09 s
