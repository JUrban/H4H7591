Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.rat
% (143930)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 845
% Passive clauses: 9692
% Generated clauses: 23614
% Final active clauses: 790
% Final passive clauses: 8266
% Input formulas: 133
% Initial clauses: 320
% 
% Duplicate literals: 388
% Trivial inequalities: 151
% Fw subsumption resolutions: 1813
% Fw demodulations: 1057
% Bw demodulations: 22
% 
% Simple tautologies: 244
% Equational tautologies: 46
% Forward subsumptions: 10111
% Fw demodulations to eq. taut.: 7
% 
% Binary resolution: 11316
% Factoring: 2402
% Forward superposition: 2598
% Backward superposition: 3303
% Self superposition: 65
% Equality factoring: 2
% Equality resolution: 24
% 
% Split clauses: 263
% Split components: 528
% SAT solver clauses: 572
% SAT solver unit clauses: 20
% SAT solver binary clauses: 93
% SAT solver learnt clauses: 1
% SAT solver learnt literals: 1
% 
% Sat splits: 263
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 571
% TWLsolver calls for satisfiability: 461
% 
% Memory used [KB]: 11641
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 143 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.rat
% (143942)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 449
% Passive clauses: 2090
% Generated clauses: 25259
% Final active clauses: 323
% Final passive clauses: 1157
% Input formulas: 133
% Initial clauses: 320
% 
% Duplicate literals: 205
% Trivial inequalities: 452
% Fw subsumption resolutions: 1051
% Fw demodulations: 7094
% Bw demodulations: 544
% Condensations: 261
% Global subsumptions: 22
% 
% Simple tautologies: 390
% Equational tautologies: 22
% Forward subsumptions: 9651
% Fw demodulations to eq. taut.: 202
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 801
% Factoring: 6
% Forward superposition: 4570
% Backward superposition: 5972
% Self superposition: 76
% Equality factoring: 28
% Equality resolution: 54
% 
% Split clauses: 132
% Split components: 264
% SAT solver clauses: 3586
% SAT solver unit clauses: 366
% SAT solver binary clauses: 126
% SAT solver learnt clauses: 45
% SAT solver learnt literals: 11
% 
% Sat splits: 132
% Sat splitting refutations: 64
% 
% TWLsolver clauses: 3496
% TWLsolver calls for satisfiability: 2111
% 
% Memory used [KB]: 17654
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.rat
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rat
% SZS output start Proof for thm.rat
fof(f5621,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f460,f806,f804,f459,f805,f803,f1103,f1122,f1136,f1156,f1146,f1124,f1154,f1998,f2004,f2006,f2008,f2002,f2009,f2000,f2010,f2019,f2001,f2026,f2338,f2339,f2340,f2342,f2345,f2347,f2669,f2682,f2680,f2692,f2697,f2693,f2695,f2706,f2722,f2720,f2715,f2739,f2736,f2738,f4788,f4792,f4829,f4836,f4830,f4790,f4871,f4873,f4791,f5611,f5614])).
fof(f5614,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f5613,f804])).
fof(f5613,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(forward_demodulation,[],[f5607,f2329])).
fof(f2329,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X1))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1)))))) )),
  inference(forward_demodulation,[],[f2314,f476])).
fof(f476,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X7] : s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X7)))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.rat_sgn_def')).
fof(f2314,plain,(
  ( ! [X1] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X1))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X1)))))) )),
  inference(superposition,[],[f477,f478])).
fof(f478,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))) )),
  inference(cnf_transformation,[],[f143])).
fof(f143,plain,(
  ! [X0] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X0)))))),
  inference(rectify,[],[f73])).
fof(f73,axiom,(
  ! [X7] : s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X7))) = s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac','const.rat.rep_rat_1'(s('type.rat.rat',X7)))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.rat_nmr_def')).
fof(f477,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f142])).
fof(f142,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f61])).
fof(f61,axiom,(
  ! [X11] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.frac.frac_nmr_1'(s('type.frac.frac',X11)))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.frac.frac_sgn_def')).
fof(f5607,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))) | $spl2),
  inference(trivial_inequality_removal,[],[f5596])).
fof(f5596,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))) | $spl2),
  inference(superposition,[],[f531,f4779])).
fof(f4779,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))) | $spl2),
  inference(forward_demodulation,[],[f4778,f805])).
fof(f4778,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl2),
  inference(forward_demodulation,[],[f4777,f2362])).
fof(f2362,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',sK12),s('type.rat.rat',X0)))) ) | $spl2),
  inference(backward_demodulation,[],[f805,f480])).
fof(f480,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f145])).
fof(f145,plain,(
  ! [X0] : s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X0)))),
  inference(rectify,[],[f85])).
fof(f85,axiom,(
  ! [X12] : s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',X12)))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_ADD_LID')).
fof(f4777,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',sK12),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) | $spl2),
  inference(forward_demodulation,[],[f4748,f598])).
fof(f598,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f226])).
fof(f226,plain,(
  ! [X0,X1] : s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))),
  inference(rectify,[],[f26])).
fof(f26,axiom,(
  ! [X12,X15] : s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X12),s('type.rat.rat',X15))) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X15),s('type.rat.rat',X12)))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_ADD_COMM')).
fof(f4748,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.rat.rat',sK12))))) | $spl2),
  inference(unit_resulting_resolution,[],[f3940,f528])).
fof(f528,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f347])).
fof(f347,plain,(
  ! [X0] : ((s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f194])).
fof(f194,plain,(
  ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X6] : (s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X6))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_EQ|48|_NMR')).
fof(f3940,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_add_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))) ) | $spl2),
  inference(superposition,[],[f598,f2362])).
fof(f531,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f348])).
fof(f348,plain,(
  ! [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))))),
  inference(nnf_transformation,[],[f195])).
fof(f195,plain,(
  ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) <=> s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f99])).
fof(f99,axiom,(
  ! [X10] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X10))) <=> s('type.integer.int',X10) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.intExtension.INT_SGN_CLAUSES|split|1')).
fof(f5611,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f5610,f804])).
fof(f5610,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(forward_demodulation,[],[f5586,f2329])).
fof(f5586,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))) | $spl2),
  inference(unit_resulting_resolution,[],[f4779,f531])).
fof(f4791,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | $spl39),
  inference(cnf_transformation,[],[f4791_D])).
fof(f4791_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) <=> ~$spl39),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl39])])).
fof(f4873,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl42),
  inference(cnf_transformation,[],[f4873_D])).
fof(f4873_D,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl42),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl42])])).
fof(f4871,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | $spl2),
  inference(forward_demodulation,[],[f4847,f805])).
fof(f4847,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(superposition,[],[f529,f465])).
fof(f465,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  inference(cnf_transformation,[],[f122])).
fof(f122,axiom,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.rat_|49|')).
fof(f529,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f347])).
fof(f4790,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl37),
  inference(cnf_transformation,[],[f4790_D])).
fof(f4790_D,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) <=> ~$spl37),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl37])])).
fof(f4830,plain,(
  ( ! [X19] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X19)) ) | $spl40),
  inference(cnf_transformation,[],[f4830_D])).
fof(f4830_D,plain,(
  ( ! [X19] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X19)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f4836,plain,(
  ( ! [X25] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X25),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))))))) | s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.rat.rat',sK12) = s('type.rat.rat',X25)) ) | $spl2),
  inference(forward_demodulation,[],[f4835,f597])).
fof(f597,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))) )),
  inference(cnf_transformation,[],[f225])).
fof(f225,plain,(
  ! [X0,X1] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X1),s('type.rat.rat',X0)))),
  inference(rectify,[],[f75])).
fof(f75,axiom,(
  ! [X12,X15] : s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat',X15))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X15),s('type.rat.rat',X12)))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_MUL_COMM')).
fof(f4835,plain,(
  ( ! [X25] : (s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))),s('type.rat.rat',X25))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X25)) ) | $spl2),
  inference(forward_demodulation,[],[f4773,f805])).
fof(f4773,plain,(
  ( ! [X25] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X25))),s('type.rat.rat',X25))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X25)) ) | $spl2),
  inference(superposition,[],[f528,f2371])).
fof(f2371,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',sK12) = s('type.rat.rat',X0)) ) | $spl2),
  inference(backward_demodulation,[],[f805,f810])).
fof(f810,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f519,f465])).
fof(f519,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f295])).
fof(f295,plain,(
  ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))))),
  inference(ennf_transformation,[],[f187])).
fof(f187,plain,(
  ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))))),
  inference(flattening,[],[f186])).
fof(f186,plain,(
  ! [X0] : (~s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X12] : (~s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X12))),s('type.rat.rat',X12))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_MUL_LINV')).
fof(f4829,plain,(
  ( ! [X19] : (s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X19)) ) | $spl2),
  inference(forward_demodulation,[],[f4769,f805])).
fof(f4769,plain,(
  ( ! [X19] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X19),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X19))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X19)) ) | $spl2),
  inference(superposition,[],[f528,f2370])).
fof(f2370,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X0)) ) | $spl2),
  inference(backward_demodulation,[],[f805,f809])).
fof(f809,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(forward_demodulation,[],[f518,f465])).
fof(f518,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f294])).
fof(f294,plain,(
  ! [X0] : (s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(ennf_transformation,[],[f185])).
fof(f185,plain,(
  ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(flattening,[],[f184])).
fof(f184,plain,(
  ! [X0] : (~s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))))),
  inference(rectify,[],[f15])).
fof(f15,axiom,(
  ! [X12] : (~s('type.rat.rat',X12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) => s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X12),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X12))))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_MUL_RINV')).
fof(f4792,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | $spl38),
  inference(cnf_transformation,[],[f4792_D])).
fof(f4792_D,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) <=> ~$spl38),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl38])])).
fof(f4788,plain,(
  s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | $spl2),
  inference(forward_demodulation,[],[f4787,f465])).
fof(f4787,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl2),
  inference(forward_demodulation,[],[f4750,f805])).
fof(f4750,plain,(
  s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(superposition,[],[f528,f465])).
fof(f2738,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat',sK12)))) | $spl35),
  inference(cnf_transformation,[],[f2738_D])).
fof(f2738_D,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat',sK12)))) <=> ~$spl35),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl35])])).
fof(f2736,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl32),
  inference(cnf_transformation,[],[f2736_D])).
fof(f2736_D,plain,(
  ( ! [X9] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f2739,plain,(
  ( ! [X10] : (s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | $spl2),
  inference(forward_demodulation,[],[f2716,f597])).
fof(f2716,plain,(
  ( ! [X10] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat',sK12)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat',X10))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | $spl2),
  inference(superposition,[],[f2367,f2371])).
fof(f2367,plain,(
  ( ! [X0] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) ) | $spl2),
  inference(backward_demodulation,[],[f805,f537])).
fof(f537,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f351])).
fof(f351,plain,(
  ! [X0] : ((s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))))),
  inference(nnf_transformation,[],[f198])).
fof(f198,plain,(
  ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X6),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_SGN_CLAUSES|split|0')).
fof(f2715,plain,(
  ( ! [X9] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat',sK12)))) | s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl2),
  inference(superposition,[],[f2367,f2370])).
fof(f2720,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) | $spl28),
  inference(cnf_transformation,[],[f2720_D])).
fof(f2720_D,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) <=> ~$spl28),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl28])])).
fof(f2722,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) | $spl31),
  inference(cnf_transformation,[],[f2722_D])).
fof(f2722_D,plain,(
  ~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) <=> ~$spl31),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl31])])).
fof(f2706,plain,(
  ( ! [X2,X1] : (~p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',sK12),s('type.rat.rat',sK12)))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))))) = s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) | $spl2),
  inference(superposition,[],[f2367,f2369])).
fof(f2369,plain,(
  ( ! [X0,X1] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) != s('type.rat.rat',X1)) ) | $spl2),
  inference(backward_demodulation,[],[f805,f638])).
fof(f638,plain,(
  ( ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) != s('type.rat.rat',X1)) )),
  inference(cnf_transformation,[],[f398])).
fof(f398,plain,(
  ! [X0,X1] : ((s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) | s('type.rat.rat',X0) = s('type.rat.rat',X1)) & (s('type.rat.rat',X0) != s('type.rat.rat',X1) | s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1)))))),
  inference(nnf_transformation,[],[f256])).
fof(f256,plain,(
  ! [X0,X1] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X0),s('type.rat.rat',X1))) <=> s('type.rat.rat',X0) = s('type.rat.rat',X1))),
  inference(rectify,[],[f17])).
fof(f17,axiom,(
  ! [X6,X8] : (s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X6),s('type.rat.rat',X8))) <=> s('type.rat.rat',X6) = s('type.rat.rat',X8))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_EQ_SUB|48|')).
fof(f2695,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl27),
  inference(cnf_transformation,[],[f2695_D])).
fof(f2695_D,plain,(
  s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl27),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl27])])).
fof(f2693,plain,(
  ( ! [X9] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl24),
  inference(cnf_transformation,[],[f2693_D])).
fof(f2693_D,plain,(
  ( ! [X9] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f2697,plain,(
  ( ! [X10] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X10),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))))),s('type.rat.rat',sK12)))) | s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | $spl2),
  inference(forward_demodulation,[],[f2696,f597])).
fof(f2696,plain,(
  ( ! [X10] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat',X10))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | $spl2),
  inference(forward_demodulation,[],[f2677,f475])).
fof(f475,plain,(
  ( ! [X0] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X0))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X0)))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X11] : s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac',X11))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac',X11)))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_SGN_CALCULATE')).
fof(f2677,plain,(
  ( ! [X10] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X10))),s('type.rat.rat',X10))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X10)) ) | $spl2),
  inference(superposition,[],[f2366,f2371])).
fof(f2366,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat',sK12))))) ) | $spl2),
  inference(backward_demodulation,[],[f805,f536])).
fof(f536,plain,(
  ( ! [X0] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))) )),
  inference(cnf_transformation,[],[f351])).
fof(f2692,plain,(
  ( ! [X9] : (s('type.integer.int','const.frac.frac_sgn_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl2),
  inference(forward_demodulation,[],[f2676,f475])).
fof(f2676,plain,(
  ( ! [X9] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X9),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))))),s('type.rat.rat',sK12)))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl2),
  inference(superposition,[],[f2366,f2370])).
fof(f2680,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat',sK12)))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) | $spl20),
  inference(cnf_transformation,[],[f2680_D])).
fof(f2680_D,plain,(
  ( ! [X2,X1] : (p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat',sK12)))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f2682,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | $spl23),
  inference(cnf_transformation,[],[f2682_D])).
fof(f2682_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) <=> ~$spl23),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl23])])).
fof(f2669,plain,(
  ( ! [X2,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))) | p(s(bool,'const.rat.rat_les_2'(s('type.rat.rat','const.rat.rat_sub_2'(s('type.rat.rat',X1),s('type.rat.rat',X2))),s('type.rat.rat',sK12)))) | s('type.rat.rat',X1) != s('type.rat.rat',X2)) ) | $spl2),
  inference(superposition,[],[f2366,f2369])).
fof(f2347,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2346,f1346])).
fof(f1346,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | $spl0),
  inference(forward_demodulation,[],[f1332,f1161])).
fof(f1161,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int',X0)))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f488])).
fof(f488,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X0)))),
  inference(rectify,[],[f28])).
fof(f28,axiom,(
  ! [X10] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))),s('type.integer.int',X10)))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.integer.INT_MUL_LZERO')).
fof(f1332,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int',X0))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1161,f1183])).
fof(f1183,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) != s('type.integer.int',X1)) ) | $spl0),
  inference(backward_demodulation,[],[f803,f636])).
fof(f636,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) != s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f397])).
fof(f397,plain,(
  ! [X0,X1] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) & (s('type.integer.int',X0) != s('type.integer.int',X1) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1)))))),
  inference(nnf_transformation,[],[f255])).
fof(f255,plain,(
  ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) <=> s('type.integer.int',X0) = s('type.integer.int',X1))),
  inference(rectify,[],[f119])).
fof(f119,axiom,(
  ! [X10,X13] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X10),s('type.integer.int',X13))) <=> s('type.integer.int',X10) = s('type.integer.int',X13))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.integer.INT_SUB_|48|')).
fof(f2346,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2337,f1383])).
fof(f1383,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | $spl0),
  inference(forward_demodulation,[],[f1373,f1161])).
fof(f1373,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int',X0)))))) ) | $spl0),
  inference(unit_resulting_resolution,[],[f1161,f1187])).
fof(f1187,plain,(
  ( ! [X0] : (s('type.integer.int',X0) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0)))) ) | $spl0),
  inference(forward_demodulation,[],[f1172,f803])).
fof(f1172,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f531])).
fof(f2337,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1815])).
fof(f1815,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1554,f1182])).
fof(f1182,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) ) | $spl0),
  inference(backward_demodulation,[],[f803,f635])).
fof(f635,plain,(
  ( ! [X0,X1] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X1))) | s('type.integer.int',X0) = s('type.integer.int',X1)) )),
  inference(cnf_transformation,[],[f397])).
fof(f1554,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1360,f1186])).
fof(f1186,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))) ) | $spl0),
  inference(forward_demodulation,[],[f1171,f803])).
fof(f1171,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f530])).
fof(f530,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) | s('type.integer.int',X0) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f348])).
fof(f1360,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1301,f1186])).
fof(f1301,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f806,f1170])).
fof(f1170,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f529])).
fof(f2345,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2344,f1383])).
fof(f2344,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2336,f1383])).
fof(f2336,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1814])).
fof(f1814,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1554,f1186])).
fof(f2342,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2341,f1346])).
fof(f2341,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(forward_demodulation,[],[f2334,f1383])).
fof(f2334,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1812])).
fof(f1812,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1554,f1182])).
fof(f2340,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2333,f1346])).
fof(f2333,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1555])).
fof(f1555,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1360,f1182])).
fof(f2339,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2332,f1383])).
fof(f2332,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1554])).
fof(f2338,plain,(
  $false | ($spl0 | $spl3)),
  inference(subsumption_resolution,[],[f2330,f1346])).
fof(f2330,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) | ($spl0 | $spl3)),
  inference(backward_demodulation,[],[f2329,f1552])).
fof(f1552,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',sK12))))))) | ($spl0 | $spl3)),
  inference(unit_resulting_resolution,[],[f1360,f1182])).
fof(f2026,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) | $spl18),
  inference(cnf_transformation,[],[f2026_D])).
fof(f2026_D,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f2001,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl15),
  inference(cnf_transformation,[],[f2001_D])).
fof(f2001_D,plain,(
  ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) <=> ~$spl15),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl15])])).
fof(f2019,plain,(
  ( ! [X2,X3] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) = s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) | $spl0),
  inference(superposition,[],[f1176,f1183])).
fof(f1176,plain,(
  ( ! [X0] : (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f535])).
fof(f535,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | ~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) )),
  inference(cnf_transformation,[],[f350])).
fof(f350,plain,(
  ! [X0] : ((s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))))))) & (~p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))))),
  inference(nnf_transformation,[],[f197])).
fof(f197,plain,(
  ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f97])).
fof(f97,axiom,(
  ! [X10] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X10))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.intExtension.INT_SGN_CLAUSES|split|2')).
fof(f2010,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) | $spl16),
  inference(cnf_transformation,[],[f2010_D])).
fof(f2010_D,plain,(
  ( ! [X2,X3] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) <=> ~$spl16),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl16])])).
fof(f2000,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl13),
  inference(cnf_transformation,[],[f2000_D])).
fof(f2000_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) <=> ~$spl13),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl13])])).
fof(f2009,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) | $spl0),
  inference(forward_demodulation,[],[f1996,f1383])).
fof(f1996,plain,(
  ( ! [X2,X3] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X3))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int',X2) != s('type.integer.int',X3)) ) | $spl0),
  inference(superposition,[],[f1175,f1183])).
fof(f1175,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f534])).
fof(f534,plain,(
  ( ! [X0] : (p(s(bool,'const.integer.int_gt_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) | s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(cnf_transformation,[],[f350])).
fof(f2002,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl14),
  inference(cnf_transformation,[],[f2002_D])).
fof(f2002_D,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f2008,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f2007,f1160])).
fof(f1160,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f483])).
fof(f483,plain,(
  ( ! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))) )),
  inference(cnf_transformation,[],[f148])).
fof(f148,plain,(
  ! [X0] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X0)))))),
  inference(rectify,[],[f117])).
fof(f117,axiom,(
  ! [X10] : s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X10),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X10)))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.integer.INT_ADD_RINV')).
fof(f2007,plain,(
  ( ! [X1] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) ) | $spl0),
  inference(forward_demodulation,[],[f1995,f1383])).
fof(f1995,plain,(
  ( ! [X1] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int','const.integer.int_neg_1'(s('type.integer.int',X1))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) ) | $spl0),
  inference(superposition,[],[f1175,f1160])).
fof(f2006,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f2005,f1383])).
fof(f2005,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl0),
  inference(forward_demodulation,[],[f1994,f1383])).
fof(f1994,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl0),
  inference(superposition,[],[f1175,f1383])).
fof(f2004,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f2003,f1161])).
fof(f2003,plain,(
  ( ! [X0] : (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int',X0))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) ) | $spl0),
  inference(forward_demodulation,[],[f1993,f1383])).
fof(f1993,plain,(
  ( ! [X0] : (s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.integer.int_mul_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int',X0))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))))) ) | $spl0),
  inference(superposition,[],[f1175,f1161])).
fof(f1998,plain,(
  p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | $spl0),
  inference(forward_demodulation,[],[f1997,f1292])).
fof(f1292,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))) | $spl0),
  inference(equality_resolution,[],[f1169])).
fof(f1169,plain,(
  ( ! [X0] : (s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat',X0)))) ) | $spl0),
  inference(backward_demodulation,[],[f803,f528])).
fof(f1997,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl0),
  inference(forward_demodulation,[],[f1992,f1383])).
fof(f1992,plain,(
  s('type.integer.int','const.intExtension.SGN_1'(s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))) | p(s(bool,'const.integer.int_gt_2'(s('type.integer.int','const.rat.rat_nmr_1'(s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12)))))) | $spl0),
  inference(superposition,[],[f1175,f1292])).
fof(f1154,plain,(
  ( ! [X9] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))),s('type.rat.rat',X9))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl8),
  inference(cnf_transformation,[],[f1154_D])).
fof(f1154_D,plain,(
  ( ! [X9] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))),s('type.rat.rat',X9))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f1124,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | $spl6),
  inference(cnf_transformation,[],[f1124_D])).
fof(f1124_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f1146,plain,(
  ( ! [X13] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X13))),s('type.rat.rat',X13))) | s('type.rat.rat',sK12) = s('type.rat.rat',X13)) ) | $spl2),
  inference(superposition,[],[f822,f823])).
fof(f823,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))),s('type.rat.rat',X0))) | s('type.rat.rat',sK12) = s('type.rat.rat',X0)) ) | $spl2),
  inference(backward_demodulation,[],[f805,f810])).
fof(f822,plain,(
  ( ! [X0] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X0),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X0))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X0)) ) | $spl2),
  inference(backward_demodulation,[],[f805,f809])).
fof(f1156,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))),s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | $spl10),
  inference(cnf_transformation,[],[f1156_D])).
fof(f1156_D,plain,(
  s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))),s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) <=> ~$spl10),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl10])])).
fof(f1136,plain,(
  ( ! [X9] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))),s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X9))),s('type.rat.rat',X9))) | s('type.rat.rat',sK12) = s('type.rat.rat',X9)) ) | $spl2),
  inference(superposition,[],[f823,f823])).
fof(f1122,plain,(
  ( ! [X8] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X8)) ) | $spl4),
  inference(cnf_transformation,[],[f1122_D])).
fof(f1122_D,plain,(
  ( ! [X8] : (s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X8)) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f1103,plain,(
  ( ! [X8] : (s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat','const.rat.abs_rat_1'(s('type.frac.frac','const.frac.frac_|49|_0'))))))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_mul_2'(s('type.rat.rat',X8),s('type.rat.rat','const.rat.rat_minv_1'(s('type.rat.rat',X8))))) | s('type.rat.rat',sK12) = s('type.rat.rat',X8)) ) | $spl2),
  inference(superposition,[],[f822,f822])).
fof(f803,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl0),
  inference(cnf_transformation,[],[f803_D])).
fof(f803_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f805,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl2),
  inference(cnf_transformation,[],[f805_D])).
fof(f805_D,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f459,plain,(
  s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f340])).
fof(f340,plain,(
  (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) = s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK12) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK12])],[f339])).
fof(f339,plain,(
  ? [X0] : ((s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))) & (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) != s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) | s('type.rat.rat',X0) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(nnf_transformation,[],[f284])).
fof(f284,plain,(
  ? [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) <~> s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(ennf_transformation,[],[f135])).
fof(f135,plain,(
  ~! [X0] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X0))) <=> s('type.rat.rat',X0) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) <=> s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) = s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',X6))) <=> s('type.rat.rat',X6) = s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))))),
  file('thm.rat.RAT_SGN_CLAUSES|split|1','thm.rat.RAT_SGN_CLAUSES|split|1')).
fof(f804,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl1),
  inference(cnf_transformation,[],[f804_D])).
fof(f804_D,plain,(
  s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f806,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | $spl3),
  inference(cnf_transformation,[],[f806_D])).
fof(f806_D,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f460,plain,(
  s('type.rat.rat',sK12) != s('type.rat.rat','const.rat.rat_of_num_1'(s('type.num.num','const.num.|48|_0'))) | s('type.integer.int','const.rat.rat_sgn_1'(s('type.rat.rat',sK12))) != s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))),
  inference(cnf_transformation,[],[f340])).
% SZS output end Proof for thm.rat
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 411
% Passive clauses: 1120
% Generated clauses: 5172
% Final active clauses: 310
% Final passive clauses: 452
% Input formulas: 133
% Initial clauses: 320
% 
% Duplicate literals: 8
% Trivial inequalities: 26
% Fw subsumption resolutions: 164
% Fw demodulations: 856
% Bw demodulations: 74
% Condensations: 35
% 
% Simple tautologies: 101
% Equational tautologies: 25
% Forward subsumptions: 2806
% Fw demodulations to eq. taut.: 2
% 
% Unit resulting resolution: 1626
% Factoring: 1
% Forward superposition: 922
% Backward superposition: 1019
% Self superposition: 55
% Equality factoring: 2
% Equality resolution: 7
% 
% Split clauses: 21
% Split components: 42
% SAT solver clauses: 1172
% SAT solver unit clauses: 231
% SAT solver binary clauses: 477
% 
% Sat splits: 21
% Sat splitting refutations: 8
% 
% Memory used [KB]: 4221
% Time elapsed: 0.142 s
% ------------------------------
% ------------------------------
% Success in time 1.47 s
