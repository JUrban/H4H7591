Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.pair
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.pair
% SZS output start Proof for thm.pair
fof(f1048,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1047,f70,f108,f106,f1022,f69,f109,f1046,f575,f110])).
fof(f110,plain,(
  ( ! [X6,X7] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X6))),s(sK1,X7))))) ) | $spl6),
  inference(cnf_transformation,[],[f110_D])).
fof(f110_D,plain,(
  ( ! [X6,X7] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X6))),s(sK1,X7))))) ) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f575,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X0))),s(sK1,X1))))) ) | $spl4),
  inference(forward_demodulation,[],[f566,f103])).
fof(f103,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1,X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(flattening,[],[f38])).
fof(f38,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X3) = s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),'const.pair.,_2'(s(X0,X2),s(X1,X3)))))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X6,X7] : ! [X15,X16] : s(X7,X16) = s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X15),s(X7,X16)))))),
  file('thm.pair.ELIM_PFORALL','thm.pair.SND')).
fof(f566,plain,(
  ( ! [X0,X1] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X0))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),'const.pair.,_2'(s(sK0,X0),s(sK1,X1))))))))) ) | $spl4),
  inference(superposition,[],[f109,f102])).
fof(f102,plain,(
  ( ! [X2,X0,X3,X1] : (s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))) )),
  inference(cnf_transformation,[],[f37])).
fof(f37,plain,(
  ! [X0,X1,X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(flattening,[],[f36])).
fof(f36,plain,(
  ! [X0,X1] : ! [X2,X3] : s(X1,X2) = s(X1,'const.pair.FST_1'(s('type.pair.prod'(X1,X0),'const.pair.,_2'(s(X1,X2),s(X0,X3)))))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X7,X6] : ! [X15,X16] : s(X6,X15) = s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),'const.pair.,_2'(s(X6,X15),s(X7,X16)))))),
  file('thm.pair.ELIM_PFORALL','thm.pair.FST')).
fof(f1046,plain,(
  $false | ($spl1 | $spl4)),
  inference(subsumption_resolution,[],[f106,f109])).
fof(f109,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X8))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X8))))))) ) | $spl4),
  inference(cnf_transformation,[],[f109_D])).
fof(f109_D,plain,(
  ( ! [X8] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X8))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X8))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f69,plain,(
  ( ! [X6,X8,X7] : (p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X6))),s(sK1,X7)))) | p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X8))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X8))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  (! [X8] : p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),X8))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),X8)))))) | ! [X6,X7] : p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,X6))),s(sK1,X7))))) & (~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5])],[f52])).
fof(f52,plain,(
  ? [X0,X1,X2] : ((! [X8] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X8))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X8)))))) | ! [X6,X7] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X6))),s(X1,X7))))) & (? [X5] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X5))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X5)))))) | ? [X3,X4] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X3))),s(X1,X4))))))),
  inference(rectify,[],[f51])).
fof(f51,plain,(
  ? [X0,X1,X2] : ((! [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) | ! [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5))))) & (? [X3] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) | ? [X4,X5] : ~p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5))))))),
  inference(nnf_transformation,[],[f42])).
fof(f42,plain,(
  ? [X0,X1,X2] : (! [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <~> ! [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(ennf_transformation,[],[f21])).
fof(f21,plain,(
  ~! [X0,X1,X2] : (! [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <=> ! [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(flattening,[],[f20])).
fof(f20,plain,(
  ~! [X0,X1] : ! [X2] : (! [X3] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,'const.pair.FST_1'(s('type.pair.prod'(X0,X1),X3))))),s(X1,'const.pair.SND_1'(s('type.pair.prod'(X0,X1),X3)))))) <=> ! [X4,X5] : p(s(bool,happ(s(fun(X1,bool),happ(s(fun(X0,fun(X1,bool)),X2),s(X0,X4))),s(X1,X5)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8] : (! [X9] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X9))))),s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),X9)))))) <=> ! [X10,X11] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,X10))),s(X7,X11)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8] : (! [X9] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,'const.pair.FST_1'(s('type.pair.prod'(X6,X7),X9))))),s(X7,'const.pair.SND_1'(s('type.pair.prod'(X6,X7),X9)))))) <=> ! [X10,X11] : p(s(bool,happ(s(fun(X7,bool),happ(s(fun(X6,fun(X7,bool)),X8),s(X6,X10))),s(X7,X11)))))),
  file('thm.pair.ELIM_PFORALL','thm.pair.ELIM_PFORALL')).
fof(f1022,plain,(
  $false | ($spl3 | $spl6)),
  inference(resolution,[],[f110,f108])).
fof(f106,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) | $spl1),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f108,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) | $spl3),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f70,plain,(
  ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,sK4))),s(sK1,sK5)))) | ~p(s(bool,happ(s(fun(sK1,bool),happ(s(fun(sK0,fun(sK1,bool)),sK2),s(sK0,'const.pair.FST_1'(s('type.pair.prod'(sK0,sK1),sK3))))),s(sK1,'const.pair.SND_1'(s('type.pair.prod'(sK0,sK1),sK3))))))),
  inference(cnf_transformation,[],[f53])).
fof(f1047,plain,(
  $false | ($spl1 | $spl6)),
  inference(subsumption_resolution,[],[f106,f110])).
% SZS output end Proof for thm.pair
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 26
% Passive clauses: 192
% Generated clauses: 933
% Final active clauses: 22
% Final passive clauses: 136
% Input formulas: 18
% Initial clauses: 36
% 
% Duplicate literals: 90
% Trivial inequalities: 20
% Fw subsumption resolutions: 104
% Fw demodulations: 24
% 
% Simple tautologies: 63
% Equational tautologies: 28
% Forward subsumptions: 392
% 
% Binary resolution: 44
% Factoring: 1
% Forward superposition: 168
% Backward superposition: 329
% Self superposition: 46
% Equality factoring: 50
% Equality resolution: 5
% 
% Split clauses: 20
% Split components: 41
% SAT solver clauses: 38
% SAT solver unit clauses: 5
% SAT solver binary clauses: 24
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 20
% Sat splitting refutations: 5
% 
% TWLsolver clauses: 36
% TWLsolver calls for satisfiability: 12
% 
% Memory used [KB]: 895
% Time elapsed: 0.027 s
% ------------------------------
% ------------------------------
% Success in time 0.029 s
