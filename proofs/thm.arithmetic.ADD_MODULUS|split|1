Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (105621)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 738
% Passive clauses: 7398
% Generated clauses: 20238
% Final active clauses: 730
% Final passive clauses: 6308
% Input formulas: 43
% Initial clauses: 155
% 
% Duplicate literals: 610
% Trivial inequalities: 19
% Fw subsumption resolutions: 1812
% Fw demodulations: 1023
% Bw demodulations: 8
% 
% Simple tautologies: 201
% Equational tautologies: 56
% Forward subsumptions: 8303
% Fw demodulations to eq. taut.: 28
% 
% Binary resolution: 9071
% Factoring: 1416
% Forward superposition: 3721
% Backward superposition: 2098
% Self superposition: 67
% Equality factoring: 30
% Equality resolution: 6
% 
% Split clauses: 777
% Split components: 1562
% SAT solver clauses: 1148
% SAT solver unit clauses: 12
% SAT solver binary clauses: 138
% 
% Sat splits: 777
% 
% TWLsolver clauses: 1147
% TWLsolver calls for satisfiability: 470
% 
% Memory used [KB]: 11001
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f7600,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f7574,f219,f382,f7438,f7439,f227,f393,f493,f496,f218,f384,f241,f400,f934,f937,f935,f229,f395,f240,f401,f953,f387,f389,f1625,f1627,f220,f386,f232,f396,f2082,f2083,f233,f398,f2127,f2159,f234,f399,f245,f402])).
fof(f402,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl26),
  inference(cnf_transformation,[],[f402_D])).
fof(f402_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl26),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl26])])).
fof(f245,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f155])).
fof(f155,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f63])).
fof(f63,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f62])).
fof(f62,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.bool.EQ_CLAUSES|split|2')).
fof(f399,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0)))) ) | $spl20),
  inference(cnf_transformation,[],[f399_D])).
fof(f399_D,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0)))) ) <=> ~$spl20),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl20])])).
fof(f234,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f110])).
fof(f110,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f55])).
fof(f55,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1,X2] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X2))),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X2),s('type.num.num',X0))))),s('type.num.num',X0))))),
  inference(rectify,[],[f12])).
fof(f12,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X9,X10] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X9),s('type.num.num',X10))),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X9),s('type.num.num',X6))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',X6))))),s('type.num.num',X6))))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.arithmetic.MOD_PLUS')).
fof(f2159,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num',X2))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) | $spl802),
  inference(cnf_transformation,[],[f2159_D])).
fof(f2159_D,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num',X2))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) <=> ~$spl802),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl802])])).
fof(f2127,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X2))),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X2))))),s('type.num.num',X2))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X2)))) ) | ($spl20 | $spl26)),
  inference(resolution,[],[f399,f402])).
fof(f398,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) ) | $spl18),
  inference(cnf_transformation,[],[f398_D])).
fof(f398_D,plain,(
  ( ! [X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0)))) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f233,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f109])).
fof(f109,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | ! [X1] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => ! [X1] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))),s('type.num.num',X0))))),
  inference(rectify,[],[f13])).
fof(f13,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => ! [X10] : s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X10),s('type.num.num',X6))),s('type.num.num',X6))))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.arithmetic.MOD_MOD')).
fof(f2083,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))),s('type.num.num',sK11)))) ) | $spl798),
  inference(cnf_transformation,[],[f2083_D])).
fof(f2083_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))),s('type.num.num',sK11)))) ) <=> ~$spl798),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl798])])).
fof(f2082,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))),s('type.num.num',sK11)))) ) | ($spl4 | $spl18 | $spl178)),
  inference(subsumption_resolution,[],[f2055,f386])).
fof(f2055,plain,(
  ( ! [X0] : (~p(s(bool,'T_0')) | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))),s('type.num.num',sK11)))) ) | ($spl18 | $spl178)),
  inference(superposition,[],[f398,f496])).
fof(f396,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) | $spl14),
  inference(cnf_transformation,[],[f396_D])).
fof(f396_D,plain,(
  ( ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X0)))) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f232,plain,(
  ( ! [X0] : (s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X0))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))) )),
  inference(cnf_transformation,[],[f108])).
fof(f108,plain,(
  ! [X0] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X0))) & s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X0] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X0),s('type.num.num',X0))) & s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',X0)))))),
  inference(rectify,[],[f14])).
fof(f14,axiom,(
  ! [X6] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => (s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))) = s('type.num.num','const.arithmetic.DIV_2'(s('type.num.num',X6),s('type.num.num',X6))) & s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X6),s('type.num.num',X6)))))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.arithmetic.DIVMOD_ID')).
fof(f386,plain,(
  p(s(bool,'T_0')) | $spl4),
  inference(cnf_transformation,[],[f386_D])).
fof(f386_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f220,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f15])).
fof(f15,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.bool.TRUTH')).
fof(f1627,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK11),s('type.num.num',sK11))) | $spl568),
  inference(cnf_transformation,[],[f1627_D])).
fof(f1627_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK11),s('type.num.num',sK11))) <=> ~$spl568),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl568])])).
fof(f1625,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK11),s('type.num.num',sK11))) | ($spl4 | $spl14 | $spl178)),
  inference(subsumption_resolution,[],[f1604,f386])).
fof(f1604,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK11),s('type.num.num',sK11))) | ($spl14 | $spl178)),
  inference(superposition,[],[f396,f496])).
fof(f389,plain,(
  ~p(s(bool,'F_0')) | $spl7),
  inference(cnf_transformation,[],[f389_D])).
fof(f389_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl7),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl7])])).
fof(f387,plain,(
  ~p(s(bool,'F_0'))),
  inference(global_subsumption,[],[f223,f220])).
fof(f223,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f151])).
fof(f151,plain,(
  (p(s(bool,'T_0')) | p(s(bool,'F_0'))) & (~p(s(bool,'F_0')) | ~p(s(bool,'T_0')))),
  inference(nnf_transformation,[],[f46])).
fof(f46,plain,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  inference(flattening,[],[f22])).
fof(f22,axiom,(
  ~p(s(bool,'T_0')) <=> p(s(bool,'F_0'))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.bool.NOT_CLAUSES|split|1')).
fof(f953,plain,(
  $false | ($spl7 | $spl344)),
  inference(resolution,[],[f935,f389])).
fof(f401,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) | $spl24),
  inference(cnf_transformation,[],[f401_D])).
fof(f401_D,plain,(
  ( ! [X0] : (s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f240,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'T_0') != s(bool,X0)) )),
  inference(cnf_transformation,[],[f153])).
fof(f153,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f60])).
fof(f60,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f25])).
fof(f25,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.bool.EQ_CLAUSES|split|0')).
fof(f395,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) | $spl12),
  inference(cnf_transformation,[],[f395_D])).
fof(f395_D,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl12),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl12])])).
fof(f229,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.arithmetic.ADD_MODULUS|split|1',aHL_BOOL_CASES)).
fof(f935,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) | $spl344),
  inference(cnf_transformation,[],[f935_D])).
fof(f935_D,plain,(
  ( ! [X1] : (p(s(bool,X1))) ) <=> ~$spl344),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl344])])).
fof(f937,plain,(
  s(bool,'T_0') != s(bool,'F_0') | $spl347),
  inference(cnf_transformation,[],[f937_D])).
fof(f937_D,plain,(
  s(bool,'T_0') != s(bool,'F_0') <=> ~$spl347),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl347])])).
fof(f934,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X1))) ) | ($spl12 | $spl24)),
  inference(subsumption_resolution,[],[f905,f401])).
fof(f905,plain,(
  ( ! [X1] : (s(bool,'T_0') != s(bool,'F_0') | p(s(bool,X1)) | s(bool,'T_0') = s(bool,X1)) ) | ($spl12 | $spl24)),
  inference(superposition,[],[f401,f395])).
fof(f400,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl22),
  inference(cnf_transformation,[],[f400_D])).
fof(f400_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f241,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f153])).
fof(f384,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) | $spl2),
  inference(cnf_transformation,[],[f384_D])).
fof(f384_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f218,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11))))),
  inference(cnf_transformation,[],[f150])).
fof(f150,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK12))),s('type.num.num',sK11)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK11,sK12])],[f105])).
fof(f105,plain,(
  ? [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) & s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(ennf_transformation,[],[f45])).
fof(f45,plain,(
  ~! [X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X1),s('type.num.num',X0))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num',X1))),s('type.num.num',X0))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X6))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) => s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X7),s('type.num.num',X6))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X6),s('type.num.num',X7))),s('type.num.num',X6))))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.arithmetic.ADD_MODULUS|split|1')).
fof(f496,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11))) | $spl178),
  inference(cnf_transformation,[],[f496_D])).
fof(f496_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11))) <=> ~$spl178),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl178])])).
fof(f493,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11))) | ($spl2 | $spl22)),
  inference(resolution,[],[f400,f384])).
fof(f393,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) | $spl8),
  inference(cnf_transformation,[],[f393_D])).
fof(f393_D,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) ) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f227,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f49])).
fof(f49,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X8] : s('type.num.num',X8) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X8)))),
  file('thm.arithmetic.ADD_MODULUS|split|1','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f7439,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11)))) ) | $spl2140),
  inference(cnf_transformation,[],[f7439_D])).
fof(f7439_D,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11)))) ) <=> ~$spl2140),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2140])])).
fof(f7438,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11)))) ) | ($spl8 | $spl178 | $spl347 | $spl568 | $spl798 | $spl802)),
  inference(subsumption_resolution,[],[f7437,f937])).
fof(f7437,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'F_0') | s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11)))) ) | ($spl8 | $spl178 | $spl568 | $spl798 | $spl802)),
  inference(forward_demodulation,[],[f7436,f496])).
fof(f7436,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) ) | ($spl8 | $spl568 | $spl798 | $spl802)),
  inference(forward_demodulation,[],[f7435,f2083])).
fof(f7435,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))),s('type.num.num',sK11))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) ) | ($spl8 | $spl568 | $spl802)),
  inference(forward_demodulation,[],[f7333,f393])).
fof(f7333,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',X0))),s('type.num.num',sK11))) = s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',X0),s('type.num.num',sK11))))),s('type.num.num',sK11))) | s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK11)))) ) | ($spl568 | $spl802)),
  inference(superposition,[],[f2159,f1627])).
fof(f382,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK12))),s('type.num.num',sK11))) | $spl1),
  inference(cnf_transformation,[],[f382_D])).
fof(f382_D,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK12))),s('type.num.num',sK11))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f219,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK11),s('type.num.num',sK12))),s('type.num.num',sK11)))),
  inference(cnf_transformation,[],[f150])).
fof(f7574,plain,(
  $false | ($spl1 | $spl2140)),
  inference(trivial_inequality_removal,[],[f7523])).
fof(f7523,plain,(
  s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) != s('type.num.num','const.arithmetic.MOD_2'(s('type.num.num',sK12),s('type.num.num',sK11))) | ($spl1 | $spl2140)),
  inference(superposition,[],[f382,f7439])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 354
% Passive clauses: 1182
% Generated clauses: 7410
% Final active clauses: 333
% Final passive clauses: 723
% Input formulas: 43
% Initial clauses: 155
% 
% Duplicate literals: 179
% Trivial inequalities: 17
% Fw subsumption resolutions: 664
% Fw demodulations: 374
% Bw demodulations: 122
% Condensations: 233
% Global subsumptions: 14
% 
% Simple tautologies: 188
% Equational tautologies: 16
% Forward subsumptions: 3173
% Fw demodulations to eq. taut.: 14
% 
% Binary resolution: 2152
% Factoring: 294
% Forward superposition: 1148
% Backward superposition: 788
% Self superposition: 49
% Equality factoring: 26
% Equality resolution: 6
% 
% Split clauses: 100
% Split components: 205
% SAT solver clauses: 1532
% SAT solver unit clauses: 177
% SAT solver binary clauses: 70
% SAT solver learnt clauses: 29
% SAT solver learnt literals: 12
% 
% Sat splits: 100
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 1475
% TWLsolver calls for satisfiability: 1490
% 
% Memory used [KB]: 7036
% Time elapsed: 0.216 s
% ------------------------------
% ------------------------------
% Success in time 0.832 s
