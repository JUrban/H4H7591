Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 299 next slice time: 5
dis+11_7_3 on thm.numRing
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.numRing
% SZS output start Proof for thm.numRing
fof(f758,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f757,f736,f177,f275,f273,f185,f277,f176,f274,f272])).
fof(f272,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl0),
  inference(cnf_transformation,[],[f272_D])).
fof(f272_D,plain,(
  p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f274,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | $spl2),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f176,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f161])).
fof(f161,plain,(
  (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0)) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f160])).
fof(f160,plain,(
  ? [X0] : ((p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') != s('type.num.num',X0)))),
  inference(nnf_transformation,[],[f158])).
fof(f158,plain,(
  ? [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <~> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(ennf_transformation,[],[f83])).
fof(f83,plain,(
  ~! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X6))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X6)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X6))),
  file('thm.numRing.num_rewrites|split|30','thm.numRing.num_rewrites|split|30')).
fof(f277,plain,(
  ~p(s(bool,'F_0')) | $spl5),
  inference(cnf_transformation,[],[f277_D])).
fof(f277_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl5),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl5])])).
fof(f185,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.numRing.num_rewrites|split|30',aHL_FALSITY)).
fof(f273,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) | $spl1),
  inference(cnf_transformation,[],[f273_D])).
fof(f273_D,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0)))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f275,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | $spl3),
  inference(cnf_transformation,[],[f275_D])).
fof(f275_D,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f177,plain,(
  s('type.num.num','const.num.|48|_0') != s('type.num.num',sK0) | ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))))),
  inference(cnf_transformation,[],[f161])).
fof(f736,plain,(
  $false | ($spl0 | $spl3 | $spl5)),
  inference(subsumption_resolution,[],[f735,f275])).
fof(f735,plain,(
  s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f723,f178])).
fof(f178,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.numRing.num_rewrites|split|30',aHL_TRUTH)).
fof(f723,plain,(
  ~p(s(bool,'T_0')) | s('type.num.num','const.num.|48|_0') = s('type.num.num',sK0) | ($spl0 | $spl5)),
  inference(superposition,[],[f234,f527])).
fof(f527,plain,(
  s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | ($spl0 | $spl5)),
  inference(subsumption_resolution,[],[f520,f277])).
fof(f520,plain,(
  p(s(bool,'F_0')) | s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',sK0))) | $spl0),
  inference(superposition,[],[f272,f221])).
fof(f221,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f3])).
fof(f3,axiom,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) | s(bool,'F_0') = s(bool,X0))),
  file('thm.numRing.num_rewrites|split|30',aHL_BOOL_CASES)).
fof(f234,plain,(
  ( ! [X0] : (~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) )),
  inference(cnf_transformation,[],[f168])).
fof(f168,plain,(
  ! [X0] : ((~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) | s('type.num.num','const.num.|48|_0') = s('type.num.num',X0)) & (s('type.num.num','const.num.|48|_0') != s('type.num.num',X0) | p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0))))))),
  inference(nnf_transformation,[],[f126])).
fof(f126,plain,(
  ! [X0] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X0))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X9] : (p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X9)))) <=> s('type.num.num','const.num.|48|_0') = s('type.num.num',X9))),
  file('thm.numRing.num_rewrites|split|30','thm.numeral.numeral_distrib|split|30')).
fof(f757,plain,(
  $false | ($spl1 | $spl2)),
  inference(subsumption_resolution,[],[f756,f178])).
fof(f756,plain,(
  ~p(s(bool,'T_0')) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f755,f197])).
fof(f197,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f96])).
fof(f96,plain,(
  ! [X0] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X9] : s(bool,'T_0') = s(bool,'const.arithmetic.>=_2'(s('type.num.num',X9),s('type.num.num','const.num.|48|_0')))),
  file('thm.numRing.num_rewrites|split|30','thm.numeral.numeral_distrib|split|29')).
fof(f755,plain,(
  ~p(s(bool,'const.arithmetic.>=_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num','const.num.|48|_0')))) | ($spl1 | $spl2)),
  inference(forward_demodulation,[],[f273,f274])).
% SZS output end Proof for thm.numRing
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 50
% Passive clauses: 126
% Generated clauses: 579
% Final active clauses: 34
% Final passive clauses: 57
% Input formulas: 81
% Initial clauses: 95
% 
% Duplicate literals: 1
% Trivial inequalities: 1
% Fw subsumption resolutions: 10
% Fw demodulations: 22
% Bw demodulations: 13
% 
% Simple tautologies: 2
% Equational tautologies: 3
% Forward subsumptions: 409
% 
% Binary resolution: 2
% Forward superposition: 208
% Backward superposition: 198
% Self superposition: 14
% Equality factoring: 2
% 
% Split clauses: 15
% Split components: 30
% SAT solver clauses: 22
% SAT solver unit clauses: 2
% SAT solver binary clauses: 17
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 15
% Sat splitting refutations: 4
% 
% TWLsolver clauses: 20
% TWLsolver calls for satisfiability: 5
% 
% Memory used [KB]: 1023
% Time elapsed: 0.021 s
% ------------------------------
% ------------------------------
% Success in time 0.025 s
