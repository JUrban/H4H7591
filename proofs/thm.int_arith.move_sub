Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.int_arith
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.int_arith
% SZS output start Proof for thm.int_arith
fof(f1999,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f1990])).
fof(f1990,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))),s('type.integer.int',sK0))) != s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))),s('type.integer.int',sK0)))),
  inference(superposition,[],[f21,f770])).
fof(f770,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int',X2))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0)))) )),
  inference(forward_demodulation,[],[f767,f24])).
fof(f24,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f12])).
fof(f12,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : s('type.integer.int',X9) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.int_arith.move_sub','thm.integer.INT_ADD_RID')).
fof(f767,plain,(
  ( ! [X2,X0,X1] : (s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X2))),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X1),s('type.integer.int',X0))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(superposition,[],[f28,f25])).
fof(f25,plain,(
  ( ! [X0] : (s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))) )),
  inference(cnf_transformation,[],[f13])).
fof(f13,plain,(
  ! [X0] : s('type.integer.int',X0) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X9] : s('type.integer.int',X9) = s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X9),s('type.integer.int','const.integer.int_of_num_1'(s('type.num.num','const.num.|48|_0')))))),
  file('thm.int_arith.move_sub','thm.integer.INT_SUB_RZERO')).
fof(f28,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))) )),
  inference(cnf_transformation,[],[f16])).
fof(f16,plain,(
  ! [X0,X1,X2,X3] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X0),s('type.integer.int',X1))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X3))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X0),s('type.integer.int',X2))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X1),s('type.integer.int',X3)))))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X8,X7,X6,X10] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X7))),s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X6),s('type.integer.int',X10))))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X7),s('type.integer.int',X10)))))),
  file('thm.int_arith.move_sub','thm.integer.INT_ADD2_SUB2')).
fof(f21,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))),s('type.integer.int',sK0))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))),s('type.integer.int',sK1)))),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',sK2),s('type.integer.int',sK1))),s('type.integer.int',sK0))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',sK2),s('type.integer.int',sK0))),s('type.integer.int',sK1)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f17])).
fof(f17,plain,(
  ? [X0,X1,X2] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X0))) != s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))),
  inference(ennf_transformation,[],[f10])).
fof(f10,plain,(
  ~! [X0,X1,X2] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X2),s('type.integer.int',X1))),s('type.integer.int',X0))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X2),s('type.integer.int',X0))),s('type.integer.int',X1)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7,X8] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X7))),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int',X7)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7,X8] : s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int','const.integer.int_add_2'(s('type.integer.int',X8),s('type.integer.int',X7))),s('type.integer.int',X6))) = s('type.integer.int','const.integer.int_add_2'(s('type.integer.int','const.integer.int_sub_2'(s('type.integer.int',X8),s('type.integer.int',X6))),s('type.integer.int',X7)))),
  file('thm.int_arith.move_sub','thm.int_arith.move_sub')).
% SZS output end Proof for thm.int_arith
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 23
% Passive clauses: 244
% Generated clauses: 1862
% Final active clauses: 21
% Final passive clauses: 215
% Input formulas: 8
% Initial clauses: 8
% 
% Duplicate literals: 285
% Trivial inequalities: 31
% Fw subsumption resolutions: 100
% Fw demodulations: 1
% 
% Simple tautologies: 79
% Equational tautologies: 67
% Forward subsumptions: 850
% 
% Binary resolution: 12
% Forward superposition: 525
% Backward superposition: 527
% Self superposition: 195
% Equality factoring: 178
% Equality resolution: 1
% 
% Split clauses: 114
% Split components: 228
% SAT solver clauses: 199
% SAT solver unit clauses: 55
% SAT solver binary clauses: 76
% 
% Sat splits: 114
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 199
% TWLsolver calls for satisfiability: 10
% 
% Memory used [KB]: 1279
% Time elapsed: 0.068 s
% ------------------------------
% ------------------------------
% Success in time 0.069 s
