Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.arithmetic
% (114085)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 145
% Passive clauses: 1823
% Generated clauses: 19178
% Final active clauses: 136
% Final passive clauses: 1534
% Input formulas: 20
% Initial clauses: 49
% 
% Duplicate literals: 953
% Trivial inequalities: 434
% Fw subsumption resolutions: 3345
% Fw demodulations: 1989
% Bw demodulations: 6
% 
% Simple tautologies: 523
% Equational tautologies: 56
% Forward subsumptions: 8184
% 
% Binary resolution: 347
% Forward superposition: 5708
% Backward superposition: 5953
% Self superposition: 186
% Equality factoring: 159
% Equality resolution: 42
% 
% Split clauses: 1331
% Split components: 2775
% SAT solver clauses: 2016
% SAT solver unit clauses: 29
% SAT solver binary clauses: 189
% 
% Sat splits: 1331
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2015
% TWLsolver calls for satisfiability: 201
% 
% Memory used [KB]: 8955
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 293 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.arithmetic
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.arithmetic
% SZS output start Proof for thm.arithmetic
fof(f1375,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f1367,f79,f144,f81,f148,f162,f167,f77,f141,f84,f150,f163,f168,f76,f142,f184,f189,f78,f139,f88,f152,f404,f405,f106,f158,f109,f159,f165,f170,f80,f146])).
fof(f146,plain,(
  p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0')))) | $spl8),
  inference(cnf_transformation,[],[f146_D])).
fof(f146_D,plain,(
  p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0')))) <=> ~$spl8),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl8])])).
fof(f80,plain,(
  p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))))),
  inference(cnf_transformation,[],[f8])).
fof(f8,axiom,(
  p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','thm.arithmetic.transitive_LESS')).
fof(f170,plain,(
  s(bool,'T_0') = s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))) | $spl34),
  inference(cnf_transformation,[],[f170_D])).
fof(f170_D,plain,(
  s(bool,'T_0') = s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))) <=> ~$spl34),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl34])])).
fof(f165,plain,(
  s(bool,'T_0') = s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))) | ($spl8 | $spl14)),
  inference(resolution,[],[f150,f146])).
fof(f159,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',X0))),s('type.num.num',X1)))) ) | $spl24),
  inference(cnf_transformation,[],[f159_D])).
fof(f159_D,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',X0))),s('type.num.num',X1)))) ) <=> ~$spl24),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl24])])).
fof(f109,plain,(
  ( ! [X0,X1] : (s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',X0))),s('type.num.num',X1)))) )),
  inference(cnf_transformation,[],[f39])).
fof(f39,plain,(
  ! [X0,X1] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X0),s('type.num.num',X1))) = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',X0))),s('type.num.num',X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X19,X20] : s(bool,'const.prim_rec.<_2'(s('type.num.num',X19),s('type.num.num',X20))) = s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',X19))),s('type.num.num',X20)))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','ARITY_0_2_const.prim_rec.<')).
fof(f158,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK3(X2,X1,X0)))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2,X1,X0))))))))) | ~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1))))) ) | $spl22),
  inference(cnf_transformation,[],[f158_D])).
fof(f158_D,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK3(X2,X1,X0)))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2,X1,X0))))))))) | ~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1))))) ) <=> ~$spl22),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl22])])).
fof(f106,plain,(
  ( ! [X4,X2,X0,X3,X1] : (p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK3(X2,X1,X0)))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2,X1,X0))))))))) | ~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1))))) )),
  inference(cnf_transformation,[],[f69])).
fof(f69,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) | ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',sK3(X2,X1,X0)))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X2,X1,X0))))))))) | ! [X3,X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK3])],[f68])).
fof(f68,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) | ? [X5] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X5)))))))) | ! [X3,X4] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X3),s('type.num.num',X4)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))))))),
  inference(rectify,[],[f46])).
fof(f46,plain,(
  ! [X0,X1,X2] : (~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) | ! [X4,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))))))))),
  inference(flattening,[],[f45])).
fof(f45,plain,(
  ! [X0,X1,X2] : ((~p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) | ? [X3] : ~p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) | ! [X4,X5] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5)))) | p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))))))))),
  inference(ennf_transformation,[],[f36])).
fof(f36,plain,(
  ! [X0,X1,X2] : ((p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) => ! [X4,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5)))) => p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))))))))),
  inference(flattening,[],[f35])).
fof(f35,plain,(
  ! [X0] : ! [X1,X2] : ((p(s(bool,'const.relation.transitive_1'(s(fun(X0,fun(X0,bool)),X1)))) & ! [X3] : p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X3))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) => ! [X4,X5] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X4),s('type.num.num',X5)))) => p(s(bool,happ(s(fun(X0,bool),happ(s(fun(X0,fun(X0,bool)),X1),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X4))))),s(X0,happ(s(fun('type.num.num',X0),X2),s('type.num.num',X5))))))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X9] : ! [X10,X6] : ((p(s(bool,'const.relation.transitive_1'(s(fun(X9,fun(X9,bool)),X10)))) & ! [X7] : p(s(bool,happ(s(fun(X9,bool),happ(s(fun(X9,fun(X9,bool)),X10),s(X9,happ(s(fun('type.num.num',X9),X6),s('type.num.num',X7))))),s(X9,happ(s(fun('type.num.num',X9),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7))))))))) => ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) => p(s(bool,happ(s(fun(X9,bool),happ(s(fun(X9,fun(X9,bool)),X10),s(X9,happ(s(fun('type.num.num',X9),X6),s('type.num.num',X8))))),s(X9,happ(s(fun('type.num.num',X9),X6),s('type.num.num',X7))))))))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','thm.arithmetic.transitive_monotone')).
fof(f405,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) ) | $spl96),
  inference(cnf_transformation,[],[f405_D])).
fof(f405_D,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) ) <=> ~$spl96),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl96])])).
fof(f404,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) ) | ($spl6 | $spl22 | $spl24 | $spl34)),
  inference(subsumption_resolution,[],[f403,f144])).
fof(f403,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2))))) ) | ($spl22 | $spl24 | $spl34)),
  inference(forward_demodulation,[],[f402,f170])).
fof(f402,plain,(
  ( ! [X2,X0,X1] : (~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))))) ) | ($spl22 | $spl24)),
  inference(forward_demodulation,[],[f380,f159])).
fof(f380,plain,(
  ( ! [X2,X0,X1] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2)))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) | ~p(s(bool,happ(s(fun('type.num.num',bool),happ(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num')))))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(X0,'const.prim_rec.<_0','type.num.num'))))))))) | ~p(s(bool,'const.relation.transitive_1'(s(fun('type.num.num',fun('type.num.num',bool)),'const.prim_rec.<_0'))))) ) | ($spl22 | $spl24)),
  inference(superposition,[],[f158,f159])).
fof(f152,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) | $spl18),
  inference(cnf_transformation,[],[f152_D])).
fof(f152_D,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) ) <=> ~$spl18),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl18])])).
fof(f88,plain,(
  ( ! [X0] : (s(bool,'F_0') = s(bool,X0) | p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f27])).
fof(f27,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f26])).
fof(f26,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f18])).
fof(f18,axiom,(
  ! [X11] : (s(bool,'F_0') = s(bool,X11) <=> ~p(s(bool,X11)))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','thm.bool.EQ_CLAUSES|split|3')).
fof(f139,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2)))))) | $spl1),
  inference(cnf_transformation,[],[f139_D])).
fof(f139_D,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2)))))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f78,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2))))))),
  inference(cnf_transformation,[],[f53])).
fof(f53,plain,(
  ! [X3] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) & (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2)))))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2])],[f52])).
fof(f52,plain,(
  ? [X0] : (! [X3] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3)))))))) & ? [X1,X2] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X1),s('type.num.num',X2)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2))))))))),
  inference(rectify,[],[f44])).
fof(f44,plain,(
  ? [X0] : (! [X1] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) & ? [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) & ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X3))))))))),
  inference(ennf_transformation,[],[f22])).
fof(f22,plain,(
  ~! [X0] : (! [X1] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))))) => ! [X2,X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X2),s('type.num.num',X3)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X2))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X0),s('type.num.num',X3))))))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X7))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) => ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X7))))))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (! [X7] : p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X7))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num','const.num.SUC_1'(s('type.num.num',X7)))))))) => ! [X8,X7] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',X8),s('type.num.num',X7)))) => p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X8))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),X6),s('type.num.num',X7))))))))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','thm.arithmetic.STRICTLY_INCREASING_TC')).
fof(f189,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2))))) | $spl36),
  inference(cnf_transformation,[],[f189_D])).
fof(f189_D,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2))))) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f184,plain,(
  s(bool,'F_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK1))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK2))))) | ($spl1 | $spl18)),
  inference(resolution,[],[f152,f139])).
fof(f142,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) ) | $spl4),
  inference(cnf_transformation,[],[f142_D])).
fof(f142_D,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) ) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f76,plain,(
  ( ! [X3] : (p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X3))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X3))))))))) )),
  inference(cnf_transformation,[],[f53])).
fof(f168,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X0))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | $spl32),
  inference(cnf_transformation,[],[f168_D])).
fof(f168_D,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X0))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) <=> ~$spl32),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl32])])).
fof(f163,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',X0))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))))) ) | ($spl4 | $spl14)),
  inference(resolution,[],[f150,f142])).
fof(f150,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) | $spl14),
  inference(cnf_transformation,[],[f150_D])).
fof(f150_D,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) ) <=> ~$spl14),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl14])])).
fof(f84,plain,(
  ( ! [X0] : (s(bool,'T_0') = s(bool,X0) | ~p(s(bool,X0))) )),
  inference(cnf_transformation,[],[f54])).
fof(f54,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f24])).
fof(f24,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X11] : (s(bool,'T_0') = s(bool,X11) <=> p(s(bool,X11)))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC','thm.bool.EQ_CLAUSES|split|1')).
fof(f141,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | $spl2),
  inference(cnf_transformation,[],[f141_D])).
fof(f141_D,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f77,plain,(
  p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2))))),
  inference(cnf_transformation,[],[f53])).
fof(f167,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | $spl30),
  inference(cnf_transformation,[],[f167_D])).
fof(f167_D,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2))) <=> ~$spl30),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl30])])).
fof(f162,plain,(
  s(bool,'T_0') = s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2))) | ($spl2 | $spl14)),
  inference(resolution,[],[f150,f141])).
fof(f148,plain,(
  ~p(s(bool,'F_0')) | $spl11),
  inference(cnf_transformation,[],[f148_D])).
fof(f148_D,plain,(
  ~p(s(bool,'F_0')) <=> ~$spl11),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl11])])).
fof(f81,plain,(
  ~p(s(bool,'F_0'))),
  inference(cnf_transformation,[],[f23])).
fof(f23,plain,(
  ~p(s(bool,'F_0'))),
  inference(flattening,[],[f2])).
fof(f2,axiom,(
  ~p(s(bool,'F_0'))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC',aHL_FALSITY)).
fof(f144,plain,(
  p(s(bool,'T_0')) | $spl6),
  inference(cnf_transformation,[],[f144_D])).
fof(f144_D,plain,(
  p(s(bool,'T_0')) <=> ~$spl6),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl6])])).
fof(f79,plain,(
  p(s(bool,'T_0'))),
  inference(cnf_transformation,[],[f1])).
fof(f1,axiom,(
  p(s(bool,'T_0'))),
  file('thm.arithmetic.STRICTLY_INCREASING_TC',aHL_TRUTH)).
fof(f1367,plain,(
  $false | ($spl6 | $spl11 | $spl30 | $spl32 | $spl36 | $spl96)),
  inference(subsumption_resolution,[],[f1366,f144])).
fof(f1366,plain,(
  ~p(s(bool,'T_0')) | ($spl6 | $spl11 | $spl30 | $spl32 | $spl36 | $spl96)),
  inference(forward_demodulation,[],[f1365,f167])).
fof(f1365,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ($spl6 | $spl11 | $spl32 | $spl36 | $spl96)),
  inference(subsumption_resolution,[],[f1364,f144])).
fof(f1364,plain,(
  ~p(s(bool,'T_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ($spl11 | $spl32 | $spl36 | $spl96)),
  inference(forward_demodulation,[],[f1363,f168])).
fof(f1363,plain,(
  ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK3(sK0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(sK0,'const.prim_rec.<_0','type.num.num'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ($spl11 | $spl36 | $spl96)),
  inference(subsumption_resolution,[],[f1346,f148])).
fof(f1346,plain,(
  p(s(bool,'F_0')) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num',sK3(sK0,'const.prim_rec.<_0','type.num.num')))),s('type.num.num',happ(s(fun('type.num.num','type.num.num'),sK0),s('type.num.num','const.num.SUC_1'(s('type.num.num',sK3(sK0,'const.prim_rec.<_0','type.num.num'))))))))) | ~p(s(bool,'const.prim_rec.<_2'(s('type.num.num',sK1),s('type.num.num',sK2)))) | ($spl36 | $spl96)),
  inference(superposition,[],[f405,f189])).
% SZS output end Proof for thm.arithmetic
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 44
% Passive clauses: 94
% Generated clauses: 1257
% Final active clauses: 39
% Final passive clauses: 50
% Input formulas: 20
% Initial clauses: 49
% 
% Duplicate literals: 96
% Trivial inequalities: 45
% Fw subsumption resolutions: 103
% Fw demodulations: 108
% Bw demodulations: 5
% Condensations: 114
% Global subsumptions: 4
% 
% Simple tautologies: 72
% Equational tautologies: 16
% Forward subsumptions: 428
% 
% Binary resolution: 26
% Forward superposition: 274
% Backward superposition: 277
% Self superposition: 24
% Equality factoring: 28
% Equality resolution: 10
% 
% Split clauses: 11
% Split components: 27
% SAT solver clauses: 222
% SAT solver unit clauses: 47
% SAT solver binary clauses: 19
% SAT solver learnt clauses: 9
% 
% Sat splits: 11
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 205
% TWLsolver calls for satisfiability: 209
% 
% Memory used [KB]: 1791
% Time elapsed: 0.043 s
% ------------------------------
% ------------------------------
% Success in time 0.657 s
