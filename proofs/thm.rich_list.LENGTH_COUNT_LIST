Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.rich_list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.rich_list
% SZS output start Proof for thm.rich_list
fof(f78,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f75])).
fof(f75,plain,(
  s('type.num.num',sK0) != s('type.num.num',sK0)),
  inference(superposition,[],[f29,f72])).
fof(f72,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0)))))) )),
  inference(superposition,[],[f39,f33])).
fof(f33,plain,(
  ( ! [X0] : (s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0))) = s('type.list.list'('type.num.num'),'const.list.GENLIST_2'(s(fun('type.num.num','type.num.num'),'const.combin.I_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f14])).
fof(f14,plain,(
  ! [X0] : s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0))) = s('type.list.list'('type.num.num'),'const.list.GENLIST_2'(s(fun('type.num.num','type.num.num'),'const.combin.I_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f11])).
fof(f11,axiom,(
  ! [X6] : s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X6))) = s('type.list.list'('type.num.num'),'const.list.GENLIST_2'(s(fun('type.num.num','type.num.num'),'const.combin.I_0'),s('type.num.num',X6)))),
  file('thm.rich_list.LENGTH_COUNT_LIST','thm.rich_list.COUNT_LIST_GENLIST')).
fof(f39,plain,(
  ( ! [X2,X0,X1] : (s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))) )),
  inference(cnf_transformation,[],[f19])).
fof(f19,plain,(
  ! [X0,X1,X2] : s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))),
  inference(flattening,[],[f18])).
fof(f18,plain,(
  ! [X0] : ! [X1,X2] : s('type.num.num',X2) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X0),'const.list.GENLIST_2'(s(fun('type.num.num',X0),X1),s('type.num.num',X2)))))),
  inference(rectify,[],[f10])).
fof(f10,axiom,(
  ! [X7] : ! [X10,X6] : s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'(X7),'const.list.GENLIST_2'(s(fun('type.num.num',X7),X10),s('type.num.num',X6)))))),
  file('thm.rich_list.LENGTH_COUNT_LIST','thm.list.LENGTH_GENLIST')).
fof(f29,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK0)))))),
  inference(cnf_transformation,[],[f24])).
fof(f24,plain,(
  s('type.num.num',sK0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',sK0)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f22])).
fof(f22,plain,(
  ? [X0] : s('type.num.num',X0) != s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0)))))),
  inference(ennf_transformation,[],[f12])).
fof(f12,plain,(
  ~! [X0] : s('type.num.num',X0) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X6)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : s('type.num.num',X6) = s('type.num.num','const.list.LENGTH_1'(s('type.list.list'('type.num.num'),'const.rich_list.COUNT_LIST_1'(s('type.num.num',X6)))))),
  file('thm.rich_list.LENGTH_COUNT_LIST','thm.rich_list.LENGTH_COUNT_LIST')).
% SZS output end Proof for thm.rich_list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 11
% Passive clauses: 18
% Generated clauses: 47
% Final active clauses: 9
% Final passive clauses: 2
% Input formulas: 10
% Initial clauses: 12
% 
% Duplicate literals: 1
% Trivial inequalities: 2
% 
% Simple tautologies: 4
% Equational tautologies: 3
% Forward subsumptions: 16
% 
% Binary resolution: 2
% Forward superposition: 12
% Backward superposition: 10
% Self superposition: 6
% Equality factoring: 2
% 
% Split clauses: 1
% Split components: 2
% SAT solver clauses: 2
% SAT solver unit clauses: 1
% SAT solver binary clauses: 1
% 
% Sat splits: 1
% Sat splitting refutations: 1
% 
% TWLsolver clauses: 2
% TWLsolver calls for satisfiability: 2
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.017 s
