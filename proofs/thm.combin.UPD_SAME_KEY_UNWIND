Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.combin
% (58007)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 131
% Passive clauses: 3628
% Generated clauses: 16544
% Final active clauses: 122
% Final passive clauses: 3295
% Input formulas: 37
% Initial clauses: 81
% 
% Duplicate literals: 524
% Trivial inequalities: 313
% Fw subsumption resolutions: 1766
% Fw demodulations: 1851
% Bw demodulations: 4
% 
% Simple tautologies: 317
% Equational tautologies: 45
% Forward subsumptions: 7547
% 
% Binary resolution: 306
% Factoring: 1
% Forward superposition: 5499
% Backward superposition: 5823
% Self superposition: 156
% Equality factoring: 82
% Equality resolution: 33
% 
% Split clauses: 254
% Split components: 515
% SAT solver clauses: 506
% SAT solver unit clauses: 21
% SAT solver binary clauses: 156
% 
% Sat splits: 254
% Sat splitting refutations: 3
% 
% TWLsolver clauses: 504
% TWLsolver calls for satisfiability: 97
% 
% Memory used [KB]: 13816
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.combin
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.combin
% SZS output start Proof for thm.combin
fof(f6801,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f4103,f3103,f209,f267,f5541,f4326,f220,f274,f6679,f142,f233,f1352,f1353,f208,f265,f5536,f143,f231,f229,f6727,f4292,f6723])).
fof(f6723,plain,(
  $false | ($spl827 | $spl910 | $spl1218)),
  inference(subsumption_resolution,[],[f6722,f2962])).
fof(f2962,plain,(
  s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) | $spl827),
  inference(cnf_transformation,[],[f2962_D])).
fof(f2962_D,plain,(
  s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) <=> ~$spl827),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl827])])).
fof(f6722,plain,(
  s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) | ($spl910 | $spl1218)),
  inference(backward_demodulation,[],[f3092,f4325])).
fof(f4325,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) | $spl1218),
  inference(cnf_transformation,[],[f4325_D])).
fof(f4325_D,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) <=> ~$spl1218),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1218])])).
fof(f3092,plain,(
  s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) | $spl910),
  inference(cnf_transformation,[],[f3092_D])).
fof(f3092_D,plain,(
  s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) <=> ~$spl910),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl910])])).
fof(f4292,plain,(
  $false | ($spl1 | $spl826 | $spl922)),
  inference(subsumption_resolution,[],[f4287,f229])).
fof(f4287,plain,(
  s(sK1,sK5) = s(sK1,sK6) | ($spl826 | $spl922)),
  inference(trivial_inequality_removal,[],[f4285])).
fof(f4285,plain,(
  s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),sK2) | s(sK1,sK5) = s(sK1,sK6) | ($spl826 | $spl922)),
  inference(superposition,[],[f3103,f2963])).
fof(f2963,plain,(
  s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) | $spl826),
  inference(cnf_transformation,[],[f2963_D])).
fof(f2963_D,plain,(
  s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) <=> ~$spl826),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl826])])).
fof(f6727,plain,(
  $false | ($spl3 | $spl318)),
  inference(subsumption_resolution,[],[f231,f1353])).
fof(f229,plain,(
  s(sK1,sK5) != s(sK1,sK6) | $spl1),
  inference(cnf_transformation,[],[f229_D])).
fof(f229_D,plain,(
  s(sK1,sK5) != s(sK1,sK6) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f231,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK3))) | $spl3),
  inference(cnf_transformation,[],[f231_D])).
fof(f231_D,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK3))) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f143,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK3))) | s(sK1,sK5) != s(sK1,sK6)),
  inference(cnf_transformation,[],[f101])).
fof(f101,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK3))) & (s(sK1,sK5) != s(sK1,sK6) | s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK7),s(fun(sK0,sK1),sK3))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3,sK4,sK5,sK6,sK7])],[f90])).
fof(f90,plain,(
  ? [X0,X1,X2,X3,X4,X5,X6] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X3))) & (s(X1,X5) != s(X1,X6) | ? [X7] : s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X3)))))),
  inference(ennf_transformation,[],[f40])).
fof(f40,plain,(
  ~! [X0,X1,X2,X3,X4,X5,X6] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X3))) => (s(X1,X5) = s(X1,X6) & ! [X7] : s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X3)))))),
  inference(flattening,[],[f39])).
fof(f39,plain,(
  ~! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X3))) => (s(X1,X5) = s(X1,X6) & ! [X7] : s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X7),s(fun(X0,X1),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6,X7] : ! [X8,X9,X10,X11,X12] : (s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X11),s(fun(X6,X7),X8))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X9))) => (s(X7,X11) = s(X7,X12) & ! [X13] : s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X13),s(fun(X6,X7),X8))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X13),s(fun(X6,X7),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6,X7] : ! [X8,X9,X10,X11,X12] : (s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X11),s(fun(X6,X7),X8))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X9))) => (s(X7,X11) = s(X7,X12) & ! [X13] : s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X13),s(fun(X6,X7),X8))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X13),s(fun(X6,X7),X9)))))),
  file('thm.combin.UPD_SAME_KEY_UNWIND','thm.combin.UPD_SAME_KEY_UNWIND')).
fof(f5536,plain,(
  $false | ($spl1 | $spl1220)),
  inference(subsumption_resolution,[],[f5529,f229])).
fof(f5529,plain,(
  s(sK1,sK5) = s(sK1,sK6) | $spl1220),
  inference(equality_resolution,[],[f4326])).
fof(f265,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2)))))) ) | $spl36),
  inference(cnf_transformation,[],[f265_D])).
fof(f265_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2)))))) ) <=> ~$spl36),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl36])])).
fof(f208,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2)))))) )),
  inference(cnf_transformation,[],[f81])).
fof(f81,plain,(
  ! [X0,X1,X2,X3,X4,X5] : s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2)))))),
  inference(flattening,[],[f80])).
fof(f80,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2)))))),
  inference(rectify,[],[f7])).
fof(f7,axiom,(
  ! [X6,X7] : ! [X14,X10,X11,X12] : s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X14))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X11),s(fun(X6,X7),X14)))))),
  file('thm.combin.UPD_SAME_KEY_UNWIND','thm.combin.UPDATE_EQ')).
fof(f1353,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK3)))) ) | $spl318),
  inference(cnf_transformation,[],[f1353_D])).
fof(f1353_D,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK3)))) ) <=> ~$spl318),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl318])])).
fof(f1352,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK3)))) ) | ($spl4 | $spl36)),
  inference(forward_demodulation,[],[f1326,f265])).
fof(f1326,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK3))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2)))))) ) | ($spl4 | $spl36)),
  inference(superposition,[],[f265,f233])).
fof(f233,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK3))) | $spl4),
  inference(cnf_transformation,[],[f233_D])).
fof(f233_D,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK3))) <=> ~$spl4),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl4])])).
fof(f142,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK3)))),
  inference(cnf_transformation,[],[f101])).
fof(f6679,plain,(
  $false | ($spl4 | $spl318 | $spl1219)),
  inference(subsumption_resolution,[],[f6615,f4324])).
fof(f4324,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) | $spl1219),
  inference(cnf_transformation,[],[f4324_D])).
fof(f4324_D,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) <=> ~$spl1219),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1219])])).
fof(f6615,plain,(
  s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) | ($spl4 | $spl318)),
  inference(superposition,[],[f1353,f233])).
fof(f274,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) | s(X1,X5) = s(X1,X6) | s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))) ) | $spl54),
  inference(cnf_transformation,[],[f274_D])).
fof(f274_D,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) | s(X1,X5) = s(X1,X6) | s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))) ) <=> ~$spl54),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl54])])).
fof(f220,plain,(
  ( ! [X6,X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) | s(X1,X5) = s(X1,X6) | s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f141])).
fof(f141,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) | (s(X0,X3) = s(X0,X4) & s(X1,X5) = s(X1,X6)) | (s(X0,X3) != s(X0,X4) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))))) & (((s(X0,X3) != s(X0,X4) | s(X1,X5) != s(X1,X6)) & (s(X0,X3) = s(X0,X4) | s(fun(X0,X1),X2) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) | s(fun(X0,X1),X2) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))))) | s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))))),
  inference(flattening,[],[f140])).
fof(f140,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : ((s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) | ((s(X0,X3) = s(X0,X4) & s(X1,X5) = s(X1,X6)) | (s(X0,X3) != s(X0,X4) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))))) & (((s(X0,X3) != s(X0,X4) | s(X1,X5) != s(X1,X6)) & (s(X0,X3) = s(X0,X4) | s(fun(X0,X1),X2) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) | s(fun(X0,X1),X2) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))))) | s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2)))))),
  inference(nnf_transformation,[],[f89])).
fof(f89,plain,(
  ! [X0,X1,X2,X3,X4,X5,X6] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) <=> ((s(X0,X3) = s(X0,X4) & s(X1,X5) = s(X1,X6)) | (s(X0,X3) != s(X0,X4) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))))))),
  inference(flattening,[],[f88])).
fof(f88,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5,X6] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))) <=> ((s(X0,X3) = s(X0,X4) & s(X1,X5) = s(X1,X6)) | (~s(X0,X3) = s(X0,X4) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) & s(fun(X0,X1),X2) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X4),s(X1,X6),s(fun(X0,X1),X2))))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6,X7] : ! [X14,X10,X11,X12,X15] : (s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X14))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X11),s(X7,X15),s(fun(X6,X7),X14))) <=> ((s(X6,X10) = s(X6,X11) & s(X7,X12) = s(X7,X15)) | (~s(X6,X10) = s(X6,X11) & s(fun(X6,X7),X14) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X14))) & s(fun(X6,X7),X14) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X11),s(X7,X15),s(fun(X6,X7),X14))))))),
  file('thm.combin.UPD_SAME_KEY_UNWIND','thm.combin.UPD|49||49|_SAME_BASE')).
fof(f4326,plain,(
  ( ! [X0,X1] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,X0),s(sK1,X1),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X1)) ) | $spl1220),
  inference(cnf_transformation,[],[f4326_D])).
fof(f4326_D,plain,(
  ( ! [X0,X1] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,X0),s(sK1,X1),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X1)) ) <=> ~$spl1220),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1220])])).
fof(f5541,plain,(
  ( ! [X12,X13] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,X12),s(sK1,X13),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X13)) ) | ($spl54 | $spl911 | $spl1218)),
  inference(subsumption_resolution,[],[f4352,f3091])).
fof(f3091,plain,(
  s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) | $spl911),
  inference(cnf_transformation,[],[f3091_D])).
fof(f3091_D,plain,(
  s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2))) <=> ~$spl911),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl911])])).
fof(f4352,plain,(
  ( ! [X12,X13] : (s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK5),s(fun(sK0,sK1),sK2))) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,X12),s(sK1,X13),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X13) | s(fun(sK0,sK1),sK2) = s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,sK6),s(fun(sK0,sK1),sK2)))) ) | ($spl54 | $spl1218)),
  inference(superposition,[],[f274,f4325])).
fof(f267,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) | s(X1,X4) = s(X1,X5)) ) | $spl40),
  inference(cnf_transformation,[],[f267_D])).
fof(f267_D,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) | s(X1,X4) = s(X1,X5)) ) <=> ~$spl40),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl40])])).
fof(f209,plain,(
  ( ! [X4,X2,X0,X5,X3,X1] : (s(X1,X4) = s(X1,X5) | s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2)))) )),
  inference(cnf_transformation,[],[f136])).
fof(f136,plain,(
  ! [X0,X1,X2,X3,X4,X5] : ((s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) != s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) | s(X1,X4) = s(X1,X5)) & (s(X1,X4) != s(X1,X5) | s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2)))))),
  inference(nnf_transformation,[],[f83])).
fof(f83,plain,(
  ! [X0,X1,X2,X3,X4,X5] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) <=> s(X1,X4) = s(X1,X5))),
  inference(flattening,[],[f82])).
fof(f82,plain,(
  ! [X0,X1] : ! [X2,X3,X4,X5] : (s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X4),s(fun(X0,X1),X2))) = s(fun(X0,X1),'const.combin.UPDATE_3'(s(X0,X3),s(X1,X5),s(fun(X0,X1),X2))) <=> s(X1,X4) = s(X1,X5))),
  inference(rectify,[],[f8])).
fof(f8,axiom,(
  ! [X6,X7] : ! [X14,X10,X11,X12] : (s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X11),s(fun(X6,X7),X14))) = s(fun(X6,X7),'const.combin.UPDATE_3'(s(X6,X10),s(X7,X12),s(fun(X6,X7),X14))) <=> s(X7,X11) = s(X7,X12))),
  file('thm.combin.UPD_SAME_KEY_UNWIND','thm.combin.UPD|49||49|_SAME_KEY_AND_BASE')).
fof(f3103,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X0)) ) | $spl922),
  inference(cnf_transformation,[],[f3103_D])).
fof(f3103_D,plain,(
  ( ! [X0] : (s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X0),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X0)) ) <=> ~$spl922),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl922])])).
fof(f4103,plain,(
  ( ! [X2] : (s(fun(sK0,sK1),sK2) != s(fun(sK0,sK1),'const.combin.UPDATE_3'(s(sK0,sK4),s(sK1,X2),s(fun(sK0,sK1),sK2))) | s(sK1,sK6) = s(sK1,X2)) ) | ($spl40 | $spl910)),
  inference(superposition,[],[f267,f3092])).
% SZS output end Proof for thm.combin
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 110
% Passive clauses: 908
% Generated clauses: 6798
% Final active clauses: 80
% Final passive clauses: 666
% Input formulas: 37
% Initial clauses: 81
% 
% Duplicate literals: 51
% Trivial inequalities: 90
% Fw subsumption resolutions: 254
% Fw demodulations: 1117
% Bw demodulations: 139
% Condensations: 60
% Global subsumptions: 14
% 
% Simple tautologies: 84
% Equational tautologies: 15
% Forward subsumptions: 2836
% Bw demodulations to eq. taut.: 2
% 
% Binary resolution: 70
% Factoring: 1
% Forward superposition: 1339
% Backward superposition: 2389
% Self superposition: 65
% Equality factoring: 8
% Equality resolution: 24
% 
% Split clauses: 15
% Split components: 31
% SAT solver clauses: 1397
% SAT solver unit clauses: 112
% SAT solver binary clauses: 59
% SAT solver learnt clauses: 32
% SAT solver learnt literals: 4
% 
% Sat splits: 15
% Sat splitting refutations: 16
% 
% TWLsolver clauses: 1298
% TWLsolver calls for satisfiability: 420
% 
% Memory used [KB]: 9594
% Time elapsed: 0.398 s
% ------------------------------
% ------------------------------
% Success in time 1.02 s
