Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 300 next slice time: 5
dis+11_7_3 on thm.option
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.option
% SZS output start Proof for thm.option
fof(f170,plain,(
  $false),
  inference(sat_splitting_refutation,[],[f169,f68,f107,f105,f127,f69,f108,f106])).
fof(f106,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) | $spl1),
  inference(cnf_transformation,[],[f106_D])).
fof(f106_D,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) <=> ~$spl1),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl1])])).
fof(f108,plain,(
  p(s(bool,sK0)) | $spl2),
  inference(cnf_transformation,[],[f108_D])).
fof(f108_D,plain,(
  p(s(bool,sK0)) <=> ~$spl2),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl2])])).
fof(f69,plain,(
  p(s(bool,sK0)) | s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0)))),
  inference(cnf_transformation,[],[f56])).
fof(f56,plain,(
  (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) | ~p(s(bool,sK0))) & (s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) | p(s(bool,sK0)))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0])],[f55])).
fof(f55,plain,(
  ? [X0] : ((s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X0))) | ~p(s(bool,X0))) & (s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X0))) | p(s(bool,X0))))),
  inference(nnf_transformation,[],[f50])).
fof(f50,plain,(
  ? [X0] : (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X0))) <~> ~p(s(bool,X0)))),
  inference(ennf_transformation,[],[f25])).
fof(f25,plain,(
  ~! [X0] : (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X0))) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f24])).
fof(f24,plain,(
  ~! [X0] : (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X0))) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X6))) <=> ~p(s(bool,X6)))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : (s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,X6))) <=> ~p(s(bool,X6)))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.option.OPTION_GUARD_EQ_THM|split|1')).
fof(f127,plain,(
  $false | ($spl1 | $spl3)),
  inference(subsumption_resolution,[],[f72,f126])).
fof(f126,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') != s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'F_0'))) | ($spl1 | $spl3)),
  inference(forward_demodulation,[],[f106,f117])).
fof(f117,plain,(
  s(bool,'F_0') = s(bool,sK0) | $spl3),
  inference(resolution,[],[f87,f107])).
fof(f87,plain,(
  ( ! [X0] : (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f61])).
fof(f61,plain,(
  ! [X0] : ((s(bool,'F_0') != s(bool,X0) | ~p(s(bool,X0))) & (p(s(bool,X0)) | s(bool,'F_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f34])).
fof(f34,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(flattening,[],[f33])).
fof(f33,plain,(
  ! [X0] : (s(bool,'F_0') = s(bool,X0) <=> ~p(s(bool,X0)))),
  inference(rectify,[],[f19])).
fof(f19,axiom,(
  ! [X7] : (s(bool,'F_0') = s(bool,X7) <=> ~p(s(bool,X7)))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.bool.EQ_CLAUSES|split|3')).
fof(f72,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'F_0')))),
  inference(cnf_transformation,[],[f23])).
fof(f23,axiom,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'F_0')))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.option.OPTION_GUARD_def|split|1')).
fof(f105,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) | $spl0),
  inference(cnf_transformation,[],[f105_D])).
fof(f105_D,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0))) <=> ~$spl0),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl0])])).
fof(f107,plain,(
  ~p(s(bool,sK0)) | $spl3),
  inference(cnf_transformation,[],[f107_D])).
fof(f107_D,plain,(
  ~p(s(bool,sK0)) <=> ~$spl3),
  introduced(sat_splitting_component,[new_symbols(naming,[$spl3])])).
fof(f68,plain,(
  ~p(s(bool,sK0)) | s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,sK0)))),
  inference(cnf_transformation,[],[f56])).
fof(f169,plain,(
  $false | ($spl0 | $spl2)),
  inference(subsumption_resolution,[],[f168,f94])).
fof(f94,plain,(
  ( ! [X0,X1] : (s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))) )),
  inference(cnf_transformation,[],[f42])).
fof(f42,plain,(
  ! [X0,X1] : s('type.option.option'(X0),'const.option.NONE_0') != s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(flattening,[],[f41])).
fof(f41,plain,(
  ! [X0] : ! [X1] : ~s('type.option.option'(X0),'const.option.NONE_0') = s('type.option.option'(X0),'const.option.SOME_1'(s(X0,X1)))),
  inference(rectify,[],[f21])).
fof(f21,axiom,(
  ! [X10] : ! [X11] : ~s('type.option.option'(X10),'const.option.NONE_0') = s('type.option.option'(X10),'const.option.SOME_1'(s(X10,X11)))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.option.NOT_NONE_SOME')).
fof(f168,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0'))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f73,f140])).
fof(f140,plain,(
  s('type.option.option'('type.one.one'),'const.option.NONE_0') = s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'T_0'))) | ($spl0 | $spl2)),
  inference(forward_demodulation,[],[f105,f129])).
fof(f129,plain,(
  s(bool,'T_0') = s(bool,sK0) | $spl2),
  inference(resolution,[],[f108,f83])).
fof(f83,plain,(
  ( ! [X0] : (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)) )),
  inference(cnf_transformation,[],[f59])).
fof(f59,plain,(
  ! [X0] : ((s(bool,'T_0') != s(bool,X0) | p(s(bool,X0))) & (~p(s(bool,X0)) | s(bool,'T_0') = s(bool,X0)))),
  inference(nnf_transformation,[],[f31])).
fof(f31,plain,(
  ! [X0] : (s(bool,'T_0') = s(bool,X0) <=> p(s(bool,X0)))),
  inference(rectify,[],[f16])).
fof(f16,axiom,(
  ! [X7] : (s(bool,'T_0') = s(bool,X7) <=> p(s(bool,X7)))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.bool.EQ_CLAUSES|split|0')).
fof(f73,plain,(
  s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'T_0'))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))),
  inference(cnf_transformation,[],[f22])).
fof(f22,axiom,(
  s('type.option.option'('type.one.one'),'const.option.OPTION_GUARD_1'(s(bool,'T_0'))) = s('type.option.option'('type.one.one'),'const.option.SOME_1'(s('type.one.one','const.one.one_0')))),
  file('thm.option.OPTION_GUARD_EQ_THM|split|1','thm.option.OPTION_GUARD_def|split|0')).
% SZS output end Proof for thm.option
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 17
% Passive clauses: 36
% Generated clauses: 99
% Final active clauses: 12
% Final passive clauses: 7
% Input formulas: 22
% Initial clauses: 36
% 
% Duplicate literals: 1
% Trivial inequalities: 3
% Fw subsumption resolutions: 3
% Fw demodulations: 5
% Bw demodulations: 3
% 
% Simple tautologies: 10
% Equational tautologies: 4
% Forward subsumptions: 36
% 
% Binary resolution: 8
% Forward superposition: 4
% Backward superposition: 24
% Self superposition: 2
% Equality factoring: 2
% Equality resolution: 1
% 
% Split clauses: 7
% Split components: 14
% SAT solver clauses: 15
% SAT solver unit clauses: 5
% SAT solver binary clauses: 9
% SAT solver learnt clauses: 2
% SAT solver learnt literals: 1
% 
% Sat splits: 7
% Sat splitting refutations: 2
% 
% TWLsolver clauses: 13
% TWLsolver calls for satisfiability: 4
% 
% Memory used [KB]: 639
% Time elapsed: 0.014 s
% ------------------------------
% ------------------------------
% Success in time 0.016 s
