Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 149 next slice time: 5
dis+11_7_3 on thm.list
% (110371)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 377
% Passive clauses: 5290
% Generated clauses: 40993
% Final active clauses: 221
% Final passive clauses: 3370
% Input formulas: 69
% Initial clauses: 134
% 
% Duplicate literals: 871
% Trivial inequalities: 446
% Fw subsumption resolutions: 2488
% Fw demodulations: 6744
% Bw demodulations: 66
% 
% Simple tautologies: 404
% Equational tautologies: 52
% Forward subsumptions: 23873
% Fw demodulations to eq. taut.: 31
% Bw demodulations to eq. taut.: 1
% 
% Binary resolution: 355
% Factoring: 1
% Forward superposition: 14029
% Backward superposition: 14775
% Self superposition: 301
% Equality factoring: 100
% Equality resolution: 40
% 
% Split clauses: 611
% Split components: 1257
% SAT solver clauses: 1254
% SAT solver unit clauses: 18
% SAT solver binary clauses: 204
% 
% Sat splits: 611
% Sat splitting refutations: 46
% 
% TWLsolver clauses: 1237
% TWLsolver calls for satisfiability: 275
% 
% Memory used [KB]: 26865
% Time elapsed: 0.600 s
% ------------------------------
% ------------------------------
% remaining time: 144 next slice time: 6
lrs-11_2_cond=on:fde=unused:gs=on:nwc=3:stl=30:sdd=off:sfr=on:ssfp=100000:ssfq=1.4:smm=sco:ssnc=all_4 on thm.list
% (110393)Time limit reached!
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Time limit
% Termination phase: Saturation

% Active clauses: 293
% Passive clauses: 2227
% Generated clauses: 32524
% Final active clauses: 64
% Final passive clauses: 309
% Input formulas: 69
% Initial clauses: 134
% 
% Duplicate literals: 258
% Trivial inequalities: 87
% Fw subsumption resolutions: 1727
% Fw demodulations: 7308
% Bw demodulations: 1621
% Condensations: 360
% Global subsumptions: 8
% 
% Simple tautologies: 119
% Equational tautologies: 22
% Forward subsumptions: 15196
% Fw demodulations to eq. taut.: 67
% Bw demodulations to eq. taut.: 47
% 
% Binary resolution: 283
% Factoring: 2
% Forward superposition: 6486
% Backward superposition: 5831
% Self superposition: 156
% Equality factoring: 30
% Equality resolution: 8
% 
% Split clauses: 98
% Split components: 196
% SAT solver clauses: 3287
% SAT solver unit clauses: 162
% SAT solver binary clauses: 117
% SAT solver learnt clauses: 21
% SAT solver learnt literals: 12
% 
% Sat splits: 98
% Sat splitting refutations: 253
% 
% TWLsolver clauses: 3250
% TWLsolver calls for satisfiability: 689
% 
% Memory used [KB]: 16375
% Time elapsed: 0.700 s
% ------------------------------
% ------------------------------
% remaining time: 136 next slice time: 103
lrs+11_2_br=off:cond=on:fde=none:gs=on:gsaa=full_model:lwlo=on:nwc=2:sas=minisat:stl=30:ssfp=100000:ssfq=1.4:smm=sco:ssnc=none:sp=occurrence:urr=on_98 on thm.list
% Refutation found. Thanks to Tanya!
% SZS status Theorem for thm.list
% SZS output start Proof for thm.list
fof(f10015,plain,(
  $false),
  inference(trivial_inequality_removal,[],[f10014])).
fof(f10014,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3)))),
  inference(forward_demodulation,[],[f10005,f2331])).
fof(f2331,plain,(
  ( ! [X1] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X1))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X1)))))) )),
  inference(superposition,[],[f332,f435])).
fof(f435,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(forward_demodulation,[],[f433,f394])).
fof(f394,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f246,f237])).
fof(f237,plain,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  inference(cnf_transformation,[],[f42])).
fof(f42,axiom,(
  s('type.num.num','const.arithmetic.ZERO_0') = s('type.num.num','const.num.|48|_0')),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.ALT_ZERO')).
fof(f246,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f80])).
fof(f80,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f38])).
fof(f38,axiom,(
  ! [X27] : s('type.num.num',X27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.ADD_|48|')).
fof(f433,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(backward_demodulation,[],[f332,f398])).
fof(f398,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))))))) )),
  inference(forward_demodulation,[],[f250,f237])).
fof(f250,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))) )),
  inference(cnf_transformation,[],[f84])).
fof(f84,plain,(
  ! [X0] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X0))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X0),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  inference(rectify,[],[f40])).
fof(f40,axiom,(
  ! [X8] : s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X8),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.num.|48|_0')))))))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.BIT|49|')).
fof(f332,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))) )),
  inference(cnf_transformation,[],[f140])).
fof(f140,plain,(
  ! [X0,X1] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num',X0))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X0)))))),
  inference(rectify,[],[f36])).
fof(f36,axiom,(
  ! [X8,X27] : s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num',X8))))) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X27),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8)))))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.ADD_CLAUSES|split|3')).
fof(f10005,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3)))),
  inference(superposition,[],[f9405,f323])).
fof(f323,plain,(
  ( ! [X2,X0,X3,X1] : (s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))) )),
  inference(cnf_transformation,[],[f134])).
fof(f134,plain,(
  ! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f133])).
fof(f133,plain,(
  ! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.num.SUC_1'(s('type.num.num',X2))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num',X2),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num',X2))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f9])).
fof(f9,axiom,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num',X8),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num',X8))),s('type.list.list'(X6),X9)))))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.list.GENLIST_AUX|split|1')).
fof(f9405,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK2))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.+_2'(s('type.num.num',sK2),s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3)))))),
  inference(backward_demodulation,[],[f9300,f388])).
fof(f388,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),sK3)))))),
  inference(forward_demodulation,[],[f387,f240])).
fof(f240,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f74])).
fof(f74,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X0)))),
  inference(rectify,[],[f41])).
fof(f41,axiom,(
  ! [X18] : s('type.num.num',X18) = s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num',X18)))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.NUMERAL_DEF')).
fof(f387,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),sK3)))))),
  inference(backward_demodulation,[],[f240,f234])).
fof(f234,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(sK0),sK3)))))),
  inference(cnf_transformation,[],[f172])).
fof(f172,plain,(
  s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.list.list'(sK0),sK3))) != s('type.list.list'(sK0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(sK0),'const.list.CONS_2'(s(sK0,happ(s(fun('type.num.num',sK0),sK1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',sK2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(sK0),sK3)))))),
  inference(skolemisation,[status(esa),new_symbols(skolem,[sK0,sK1,sK2,sK3])],[f154])).
fof(f154,plain,(
  ? [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) != s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(X0),X3)))))),
  inference(ennf_transformation,[],[f72])).
fof(f72,plain,(
  ~! [X0,X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(X0),X3)))))),
  inference(flattening,[],[f71])).
fof(f71,plain,(
  ~! [X0] : ! [X1,X2,X3] : s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.list.list'(X0),X3))) = s('type.list.list'(X0),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X0),'const.list.CONS_2'(s(X0,happ(s(fun('type.num.num',X0),X1),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(X0),X3)))))),
  inference(rectify,[],[f6])).
fof(f6,negated_conjecture,(
  ~! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(X6),X9)))))),
  inference(negated_conjecture,[],[f5])).
fof(f5,conjecture,(
  ! [X6] : ! [X7,X8,X9] : s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.list.list'(X6),X9))) = s('type.list.list'(X6),'const.list.GENLIST_AUX_3'(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))),s('type.list.list'(X6),'const.list.CONS_2'(s(X6,happ(s(fun('type.num.num',X6),X7),s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X8))))),s('type.num.num','const.arithmetic.NUMERAL_1'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))))))))),s('type.list.list'(X6),X9)))))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.list.GENLIST_AUX_compute|split|1')).
fof(f9300,plain,(
  ( ! [X2] : (s('type.num.num','const.arithmetic.+_2'(s('type.num.num',X2),s('type.num.num',X2))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num',X2))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f2222,f2331])).
fof(f2222,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(forward_demodulation,[],[f2190,f391])).
fof(f391,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0')))) )),
  inference(forward_demodulation,[],[f243,f237])).
fof(f243,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))) )),
  inference(cnf_transformation,[],[f77])).
fof(f77,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.num.|48|_0')))),
  inference(rectify,[],[f27])).
fof(f27,axiom,(
  ! [X27] : s('type.num.num',X27) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X27),s('type.num.num','const.num.|48|_0')))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.SUB_|48||split|1')).
fof(f2190,plain,(
  ( ! [X0] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0')))))) )),
  inference(superposition,[],[f331,f1175])).
fof(f1175,plain,(
  s('type.num.num','const.arithmetic.BIT|49|_1'(s('type.num.num','const.arithmetic.ZERO_0'))) = s('type.num.num','const.num.SUC_1'(s('type.num.num','const.arithmetic.ZERO_0')))),
  inference(superposition,[],[f435,f392])).
fof(f392,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.arithmetic.ZERO_0'),s('type.num.num',X0)))) )),
  inference(forward_demodulation,[],[f244,f237])).
fof(f244,plain,(
  ( ! [X0] : (s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))) )),
  inference(cnf_transformation,[],[f78])).
fof(f78,plain,(
  ! [X0] : s('type.num.num',X0) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X0)))),
  inference(rectify,[],[f35])).
fof(f35,axiom,(
  ! [X27] : s('type.num.num',X27) = s('type.num.num','const.arithmetic.+_2'(s('type.num.num','const.num.|48|_0'),s('type.num.num',X27)))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.ADD_CLAUSES|split|0')).
fof(f331,plain,(
  ( ! [X0,X1] : (s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))) )),
  inference(cnf_transformation,[],[f139])).
fof(f139,plain,(
  ! [X0,X1] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X0),s('type.num.num',X1))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X0))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X1)))))),
  inference(rectify,[],[f34])).
fof(f34,axiom,(
  ! [X8,X27] : s('type.num.num','const.arithmetic.-_2'(s('type.num.num',X8),s('type.num.num',X27))) = s('type.num.num','const.arithmetic.-_2'(s('type.num.num','const.num.SUC_1'(s('type.num.num',X8))),s('type.num.num','const.num.SUC_1'(s('type.num.num',X27)))))),
  file('thm.list.GENLIST_AUX_compute|split|1','thm.arithmetic.SUB_MONO_EQ')).
% SZS output end Proof for thm.list
% ------------------------------
% Version: Vampire 4.0 CASC-25 Entry
% Termination reason: Refutation

% Active clauses: 161
% Passive clauses: 918
% Generated clauses: 9754
% Final active clauses: 132
% Final passive clauses: 619
% Input formulas: 69
% Initial clauses: 134
% 
% Duplicate literals: 11
% Trivial inequalities: 17
% Fw subsumption resolutions: 231
% Fw demodulations: 2649
% Bw demodulations: 162
% Condensations: 24
% 
% Simple tautologies: 49
% Equational tautologies: 28
% Forward subsumptions: 5795
% Fw demodulations to eq. taut.: 16
% 
% Unit resulting resolution: 634
% Factoring: 1
% Forward superposition: 2962
% Backward superposition: 2860
% Self superposition: 52
% Equality factoring: 4
% Equality resolution: 5
% 
% Split clauses: 13
% Split components: 26
% SAT solver clauses: 947
% SAT solver unit clauses: 392
% SAT solver binary clauses: 424
% 
% Sat splits: 13
% Sat splitting refutations: 1
% 
% Memory used [KB]: 11129
% Time elapsed: 0.260 s
% ------------------------------
% ------------------------------
% Success in time 1.58 s
